  I0505 18:15:33.515270      20 e2e.go:117] Starting e2e run "20cfd802-f832-4d04-b523-418a0c03c4ba" on Ginkgo node 1
  May  5 18:15:33.538: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1714932933 - will randomize all specs

Will run 380 of 7389 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:77
  May  5 18:15:33.647: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 18:15:33.648: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  May  5 18:15:33.663: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  May  5 18:15:33.664: INFO: e2e test version: v1.28.9
  May  5 18:15:33.665: INFO: kube-apiserver version: v1.28.9
  May  5 18:15:33.665: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 18:15:33.666: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.019 seconds]
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:556
  STEP: Creating a kubernetes client @ 05/05/24 18:15:33.799
  May  5 18:15:33.799: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename ingress @ 05/05/24 18:15:33.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:15:33.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:15:33.813
  STEP: getting /apis @ 05/05/24 18:15:33.817
  STEP: getting /apis/networking.k8s.io @ 05/05/24 18:15:33.819
  STEP: getting /apis/networking.k8s.iov1 @ 05/05/24 18:15:33.819
  STEP: creating @ 05/05/24 18:15:33.82
  STEP: getting @ 05/05/24 18:15:33.825
  STEP: listing @ 05/05/24 18:15:33.826
  STEP: watching @ 05/05/24 18:15:33.827
  May  5 18:15:33.827: INFO: starting watch
  STEP: cluster-wide listing @ 05/05/24 18:15:33.828
  STEP: cluster-wide watching @ 05/05/24 18:15:33.829
  May  5 18:15:33.829: INFO: starting watch
  STEP: patching @ 05/05/24 18:15:33.829
  STEP: updating @ 05/05/24 18:15:33.832
  May  5 18:15:33.836: INFO: waiting for watch events with expected annotations
  May  5 18:15:33.836: INFO: saw patched and updated annotations
  STEP: patching /status @ 05/05/24 18:15:33.836
  STEP: updating /status @ 05/05/24 18:15:33.839
  STEP: get /status @ 05/05/24 18:15:33.842
  STEP: deleting @ 05/05/24 18:15:33.843
  STEP: deleting a collection @ 05/05/24 18:15:33.846
  May  5 18:15:33.849: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-1170" for this suite. @ 05/05/24 18:15:33.851
• [0.056 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 05/05/24 18:15:33.855
  May  5 18:15:33.855: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename daemonsets @ 05/05/24 18:15:33.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:15:33.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:15:33.864
  May  5 18:15:33.873: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 05/05/24 18:15:33.875
  May  5 18:15:33.876: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  5 18:15:33.877: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 05/05/24 18:15:33.877
  May  5 18:15:33.891: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  5 18:15:33.891: INFO: Node worker00 is running 0 daemon pod, expected 1
  May  5 18:15:34.896: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  5 18:15:34.896: INFO: Node worker00 is running 0 daemon pod, expected 1
  May  5 18:15:35.893: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  5 18:15:35.893: INFO: Node worker00 is running 0 daemon pod, expected 1
  May  5 18:15:36.894: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  5 18:15:36.894: INFO: Node worker00 is running 0 daemon pod, expected 1
  May  5 18:15:37.894: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  5 18:15:37.894: INFO: Node worker00 is running 0 daemon pod, expected 1
  May  5 18:15:38.893: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  5 18:15:38.893: INFO: Node worker00 is running 0 daemon pod, expected 1
  May  5 18:15:39.895: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  5 18:15:39.895: INFO: Node worker00 is running 0 daemon pod, expected 1
  May  5 18:15:40.895: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  5 18:15:40.895: INFO: Node worker00 is running 0 daemon pod, expected 1
  May  5 18:15:41.898: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  5 18:15:41.898: INFO: Node worker00 is running 0 daemon pod, expected 1
  May  5 18:15:42.897: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  5 18:15:42.897: INFO: Node worker00 is running 0 daemon pod, expected 1
  May  5 18:15:43.894: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  5 18:15:43.894: INFO: Node worker00 is running 0 daemon pod, expected 1
  May  5 18:15:44.894: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  5 18:15:44.894: INFO: Node worker00 is running 0 daemon pod, expected 1
  May  5 18:15:45.893: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  5 18:15:45.893: INFO: Node worker00 is running 0 daemon pod, expected 1
  May  5 18:15:46.894: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May  5 18:15:46.894: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 05/05/24 18:15:46.896
  May  5 18:15:46.909: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May  5 18:15:46.909: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  May  5 18:15:47.914: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  5 18:15:47.914: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 05/05/24 18:15:47.914
  May  5 18:15:47.922: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  5 18:15:47.922: INFO: Node worker00 is running 0 daemon pod, expected 1
  May  5 18:15:48.925: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  5 18:15:48.925: INFO: Node worker00 is running 0 daemon pod, expected 1
  May  5 18:15:49.925: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  5 18:15:49.925: INFO: Node worker00 is running 0 daemon pod, expected 1
  May  5 18:15:50.925: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May  5 18:15:50.925: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/05/24 18:15:50.929
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5354, will wait for the garbage collector to delete the pods @ 05/05/24 18:15:50.929
  May  5 18:15:50.986: INFO: Deleting DaemonSet.extensions daemon-set took: 3.697256ms
  May  5 18:15:51.087: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.895198ms
  May  5 18:15:53.991: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  5 18:15:53.991: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May  5 18:15:53.995: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"2707"},"items":null}

  May  5 18:15:53.998: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"2707"},"items":null}

  May  5 18:15:54.011: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5354" for this suite. @ 05/05/24 18:15:54.013
• [20.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 05/05/24 18:15:54.017
  May  5 18:15:54.017: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename secrets @ 05/05/24 18:15:54.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:15:54.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:15:54.031
  STEP: Creating secret with name secret-test-fa3a30d7-33ed-4969-aaae-fbe18e946514 @ 05/05/24 18:15:54.032
  STEP: Creating a pod to test consume secrets @ 05/05/24 18:15:54.036
  STEP: Saw pod success @ 05/05/24 18:16:04.078
  May  5 18:16:04.080: INFO: Trying to get logs from node worker01 pod pod-secrets-94eb515f-d4b0-45a5-bb15-52071d7b4356 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/05/24 18:16:04.098
  May  5 18:16:04.105: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9148" for this suite. @ 05/05/24 18:16:04.107
• [10.093 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods  [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 05/05/24 18:16:04.11
  May  5 18:16:04.110: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename services @ 05/05/24 18:16:04.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:16:04.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:16:04.121
  STEP: creating service multi-endpoint-test in namespace services-4561 @ 05/05/24 18:16:04.123
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4561 to expose endpoints map[] @ 05/05/24 18:16:04.131
  May  5 18:16:04.134: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  May  5 18:16:05.138: INFO: successfully validated that service multi-endpoint-test in namespace services-4561 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4561 @ 05/05/24 18:16:05.138
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4561 to expose endpoints map[pod1:[100]] @ 05/05/24 18:16:07.162
  May  5 18:16:07.166: INFO: successfully validated that service multi-endpoint-test in namespace services-4561 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-4561 @ 05/05/24 18:16:07.166
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4561 to expose endpoints map[pod1:[100] pod2:[101]] @ 05/05/24 18:16:15.197
  May  5 18:16:15.202: INFO: successfully validated that service multi-endpoint-test in namespace services-4561 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 05/05/24 18:16:15.202
  May  5 18:16:15.202: INFO: Creating new exec pod
  May  5 18:16:18.222: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-4561 exec execpodsx7dw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  May  5 18:16:18.309: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  May  5 18:16:18.309: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  5 18:16:18.309: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-4561 exec execpodsx7dw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.93 80'
  May  5 18:16:18.391: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.93 80\nConnection to 10.32.0.93 80 port [tcp/http] succeeded!\n"
  May  5 18:16:18.391: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  5 18:16:18.391: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-4561 exec execpodsx7dw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  May  5 18:16:18.469: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  May  5 18:16:18.469: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  5 18:16:18.469: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-4561 exec execpodsx7dw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.93 81'
  May  5 18:16:18.556: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.93 81\nConnection to 10.32.0.93 81 port [tcp/*] succeeded!\n"
  May  5 18:16:18.556: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4561 @ 05/05/24 18:16:18.556
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4561 to expose endpoints map[pod2:[101]] @ 05/05/24 18:16:18.571
  May  5 18:16:18.582: INFO: successfully validated that service multi-endpoint-test in namespace services-4561 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-4561 @ 05/05/24 18:16:18.582
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4561 to expose endpoints map[] @ 05/05/24 18:16:18.594
  May  5 18:16:18.612: INFO: successfully validated that service multi-endpoint-test in namespace services-4561 exposes endpoints map[]
  May  5 18:16:18.612: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4561" for this suite. @ 05/05/24 18:16:18.64
• [14.538 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1027
  STEP: Creating a kubernetes client @ 05/05/24 18:16:18.65
  May  5 18:16:18.650: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename kubectl @ 05/05/24 18:16:18.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:16:18.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:16:18.666
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/05/24 18:16:18.671
  May  5 18:16:18.671: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-3237 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  May  5 18:16:18.812: INFO: stderr: ""
  May  5 18:16:18.812: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 05/05/24 18:16:18.812
  May  5 18:16:18.812: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-3237 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
  May  5 18:16:18.885: INFO: stderr: ""
  May  5 18:16:18.885: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/05/24 18:16:18.885
  May  5 18:16:18.887: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-3237 delete pods e2e-test-httpd-pod'
  May  5 18:16:20.041: INFO: stderr: ""
  May  5 18:16:20.041: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  May  5 18:16:20.041: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3237" for this suite. @ 05/05/24 18:16:20.042
• [1.396 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 05/05/24 18:16:20.047
  May  5 18:16:20.047: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename proxy @ 05/05/24 18:16:20.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:16:20.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:16:20.058
  STEP: starting an echo server on multiple ports @ 05/05/24 18:16:20.066
  STEP: creating replication controller proxy-service-tbqqr in namespace proxy-9314 @ 05/05/24 18:16:20.066
  I0505 18:16:20.077647      20 runners.go:197] Created replication controller with name: proxy-service-tbqqr, namespace: proxy-9314, replica count: 1
  I0505 18:16:21.130064      20 runners.go:197] proxy-service-tbqqr Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0505 18:16:22.131403      20 runners.go:197] proxy-service-tbqqr Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May  5 18:16:22.135: INFO: setup took 2.074965697s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 05/05/24 18:16:22.135
  May  5 18:16:22.143: INFO: (0) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 7.369053ms)
  May  5 18:16:22.143: INFO: (0) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 8.080025ms)
  May  5 18:16:22.143: INFO: (0) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/rewriteme">test</a> (200; 7.905128ms)
  May  5 18:16:22.143: INFO: (0) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 7.870504ms)
  May  5 18:16:22.145: INFO: (0) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">... (200; 9.388722ms)
  May  5 18:16:22.145: INFO: (0) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 10.032568ms)
  May  5 18:16:22.145: INFO: (0) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname1/proxy/: foo (200; 9.410892ms)
  May  5 18:16:22.145: INFO: (0) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname2/proxy/: bar (200; 9.457411ms)
  May  5 18:16:22.145: INFO: (0) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">test<... (200; 9.423247ms)
  May  5 18:16:22.147: INFO: (0) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname2/proxy/: bar (200; 11.0996ms)
  May  5 18:16:22.148: INFO: (0) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/tlsrewritem... (200; 12.826972ms)
  May  5 18:16:22.148: INFO: (0) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname1/proxy/: foo (200; 12.66598ms)
  May  5 18:16:22.149: INFO: (0) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname2/proxy/: tls qux (200; 13.414991ms)
  May  5 18:16:22.149: INFO: (0) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:462/proxy/: tls qux (200; 13.266589ms)
  May  5 18:16:22.150: INFO: (0) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:460/proxy/: tls baz (200; 14.539885ms)
  May  5 18:16:22.151: INFO: (0) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname1/proxy/: tls baz (200; 15.314854ms)
  May  5 18:16:22.156: INFO: (1) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:460/proxy/: tls baz (200; 4.890708ms)
  May  5 18:16:22.156: INFO: (1) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname2/proxy/: bar (200; 4.980795ms)
  May  5 18:16:22.156: INFO: (1) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname2/proxy/: bar (200; 4.74568ms)
  May  5 18:16:22.156: INFO: (1) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 4.819005ms)
  May  5 18:16:22.156: INFO: (1) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 4.765212ms)
  May  5 18:16:22.156: INFO: (1) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">... (200; 4.867398ms)
  May  5 18:16:22.156: INFO: (1) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname1/proxy/: tls baz (200; 4.634269ms)
  May  5 18:16:22.156: INFO: (1) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname1/proxy/: foo (200; 4.889708ms)
  May  5 18:16:22.157: INFO: (1) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 5.392654ms)
  May  5 18:16:22.157: INFO: (1) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 5.391031ms)
  May  5 18:16:22.157: INFO: (1) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">test<... (200; 5.473346ms)
  May  5 18:16:22.157: INFO: (1) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname1/proxy/: foo (200; 5.467365ms)
  May  5 18:16:22.158: INFO: (1) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/rewriteme">test</a> (200; 5.890131ms)
  May  5 18:16:22.159: INFO: (1) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:462/proxy/: tls qux (200; 7.418655ms)
  May  5 18:16:22.159: INFO: (1) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/tlsrewritem... (200; 7.014969ms)
  May  5 18:16:22.159: INFO: (1) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname2/proxy/: tls qux (200; 7.248101ms)
  May  5 18:16:22.164: INFO: (2) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">test<... (200; 4.71499ms)
  May  5 18:16:22.164: INFO: (2) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/tlsrewritem... (200; 4.588641ms)
  May  5 18:16:22.164: INFO: (2) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 4.692035ms)
  May  5 18:16:22.164: INFO: (2) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 4.668463ms)
  May  5 18:16:22.164: INFO: (2) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:462/proxy/: tls qux (200; 4.634424ms)
  May  5 18:16:22.164: INFO: (2) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/rewriteme">test</a> (200; 4.716609ms)
  May  5 18:16:22.164: INFO: (2) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 4.71668ms)
  May  5 18:16:22.164: INFO: (2) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:460/proxy/: tls baz (200; 4.703358ms)
  May  5 18:16:22.165: INFO: (2) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 5.787684ms)
  May  5 18:16:22.165: INFO: (2) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">... (200; 5.971487ms)
  May  5 18:16:22.165: INFO: (2) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname1/proxy/: foo (200; 6.309983ms)
  May  5 18:16:22.166: INFO: (2) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname2/proxy/: bar (200; 6.35785ms)
  May  5 18:16:22.166: INFO: (2) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname1/proxy/: foo (200; 6.484752ms)
  May  5 18:16:22.168: INFO: (2) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname2/proxy/: tls qux (200; 8.579821ms)
  May  5 18:16:22.168: INFO: (2) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname1/proxy/: tls baz (200; 8.947613ms)
  May  5 18:16:22.168: INFO: (2) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname2/proxy/: bar (200; 8.9386ms)
  May  5 18:16:22.174: INFO: (3) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 5.767701ms)
  May  5 18:16:22.174: INFO: (3) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 5.969683ms)
  May  5 18:16:22.174: INFO: (3) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname1/proxy/: foo (200; 6.005806ms)
  May  5 18:16:22.174: INFO: (3) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 5.972078ms)
  May  5 18:16:22.174: INFO: (3) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">... (200; 5.901679ms)
  May  5 18:16:22.174: INFO: (3) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">test<... (200; 5.99246ms)
  May  5 18:16:22.174: INFO: (3) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname2/proxy/: tls qux (200; 6.036502ms)
  May  5 18:16:22.174: INFO: (3) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/rewriteme">test</a> (200; 5.924597ms)
  May  5 18:16:22.174: INFO: (3) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname2/proxy/: bar (200; 6.102918ms)
  May  5 18:16:22.174: INFO: (3) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname1/proxy/: foo (200; 5.943575ms)
  May  5 18:16:22.175: INFO: (3) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:462/proxy/: tls qux (200; 6.608903ms)
  May  5 18:16:22.178: INFO: (3) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/tlsrewritem... (200; 9.104774ms)
  May  5 18:16:22.178: INFO: (3) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:460/proxy/: tls baz (200; 9.09453ms)
  May  5 18:16:22.178: INFO: (3) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname2/proxy/: bar (200; 9.390912ms)
  May  5 18:16:22.178: INFO: (3) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 9.275849ms)
  May  5 18:16:22.178: INFO: (3) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname1/proxy/: tls baz (200; 8.839911ms)
  May  5 18:16:22.182: INFO: (4) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:462/proxy/: tls qux (200; 3.708312ms)
  May  5 18:16:22.182: INFO: (4) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 3.919208ms)
  May  5 18:16:22.182: INFO: (4) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 3.84883ms)
  May  5 18:16:22.182: INFO: (4) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">test<... (200; 3.726627ms)
  May  5 18:16:22.181: INFO: (4) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:460/proxy/: tls baz (200; 3.63467ms)
  May  5 18:16:22.182: INFO: (4) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/tlsrewritem... (200; 3.793805ms)
  May  5 18:16:22.182: INFO: (4) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 3.907762ms)
  May  5 18:16:22.183: INFO: (4) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname1/proxy/: tls baz (200; 5.621413ms)
  May  5 18:16:22.183: INFO: (4) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname2/proxy/: tls qux (200; 5.590304ms)
  May  5 18:16:22.183: INFO: (4) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/rewriteme">test</a> (200; 5.651141ms)
  May  5 18:16:22.183: INFO: (4) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname1/proxy/: foo (200; 5.620423ms)
  May  5 18:16:22.183: INFO: (4) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">... (200; 5.80535ms)
  May  5 18:16:22.183: INFO: (4) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname1/proxy/: foo (200; 5.611167ms)
  May  5 18:16:22.183: INFO: (4) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname2/proxy/: bar (200; 5.681968ms)
  May  5 18:16:22.183: INFO: (4) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname2/proxy/: bar (200; 5.626553ms)
  May  5 18:16:22.183: INFO: (4) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 5.844965ms)
  May  5 18:16:22.187: INFO: (5) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:462/proxy/: tls qux (200; 3.397453ms)
  May  5 18:16:22.188: INFO: (5) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 4.439743ms)
  May  5 18:16:22.189: INFO: (5) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 5.539647ms)
  May  5 18:16:22.189: INFO: (5) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">test<... (200; 5.57019ms)
  May  5 18:16:22.190: INFO: (5) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname1/proxy/: foo (200; 6.848002ms)
  May  5 18:16:22.190: INFO: (5) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname2/proxy/: tls qux (200; 6.896212ms)
  May  5 18:16:22.191: INFO: (5) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:460/proxy/: tls baz (200; 6.823171ms)
  May  5 18:16:22.191: INFO: (5) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 6.834283ms)
  May  5 18:16:22.191: INFO: (5) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname1/proxy/: tls baz (200; 6.880129ms)
  May  5 18:16:22.191: INFO: (5) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">... (200; 6.958032ms)
  May  5 18:16:22.191: INFO: (5) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/rewriteme">test</a> (200; 6.995971ms)
  May  5 18:16:22.191: INFO: (5) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/tlsrewritem... (200; 7.22591ms)
  May  5 18:16:22.193: INFO: (5) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname1/proxy/: foo (200; 9.212724ms)
  May  5 18:16:22.193: INFO: (5) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 9.356779ms)
  May  5 18:16:22.194: INFO: (5) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname2/proxy/: bar (200; 10.42546ms)
  May  5 18:16:22.194: INFO: (5) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname2/proxy/: bar (200; 10.536499ms)
  May  5 18:16:22.198: INFO: (6) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 3.41105ms)
  May  5 18:16:22.199: INFO: (6) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname2/proxy/: bar (200; 3.944454ms)
  May  5 18:16:22.199: INFO: (6) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/tlsrewritem... (200; 4.413652ms)
  May  5 18:16:22.199: INFO: (6) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 4.81361ms)
  May  5 18:16:22.201: INFO: (6) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname2/proxy/: bar (200; 6.120912ms)
  May  5 18:16:22.201: INFO: (6) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 5.971872ms)
  May  5 18:16:22.201: INFO: (6) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/rewriteme">test</a> (200; 6.013417ms)
  May  5 18:16:22.201: INFO: (6) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:462/proxy/: tls qux (200; 6.099809ms)
  May  5 18:16:22.201: INFO: (6) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">... (200; 6.58303ms)
  May  5 18:16:22.202: INFO: (6) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:460/proxy/: tls baz (200; 6.736269ms)
  May  5 18:16:22.202: INFO: (6) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname2/proxy/: tls qux (200; 6.850049ms)
  May  5 18:16:22.203: INFO: (6) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 8.137985ms)
  May  5 18:16:22.203: INFO: (6) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname1/proxy/: tls baz (200; 8.214423ms)
  May  5 18:16:22.203: INFO: (6) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">test<... (200; 8.251152ms)
  May  5 18:16:22.203: INFO: (6) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname1/proxy/: foo (200; 8.332806ms)
  May  5 18:16:22.204: INFO: (6) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname1/proxy/: foo (200; 9.324253ms)
  May  5 18:16:22.209: INFO: (7) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:460/proxy/: tls baz (200; 4.449776ms)
  May  5 18:16:22.209: INFO: (7) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 5.122929ms)
  May  5 18:16:22.209: INFO: (7) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 4.578037ms)
  May  5 18:16:22.212: INFO: (7) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 7.702553ms)
  May  5 18:16:22.212: INFO: (7) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">test<... (200; 7.568319ms)
  May  5 18:16:22.212: INFO: (7) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 7.545078ms)
  May  5 18:16:22.212: INFO: (7) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname2/proxy/: bar (200; 7.650415ms)
  May  5 18:16:22.212: INFO: (7) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/tlsrewritem... (200; 7.691787ms)
  May  5 18:16:22.212: INFO: (7) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname1/proxy/: foo (200; 7.616564ms)
  May  5 18:16:22.212: INFO: (7) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">... (200; 7.612309ms)
  May  5 18:16:22.212: INFO: (7) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname1/proxy/: tls baz (200; 7.731073ms)
  May  5 18:16:22.212: INFO: (7) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:462/proxy/: tls qux (200; 7.694548ms)
  May  5 18:16:22.212: INFO: (7) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname2/proxy/: bar (200; 7.660616ms)
  May  5 18:16:22.212: INFO: (7) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname1/proxy/: foo (200; 7.840718ms)
  May  5 18:16:22.212: INFO: (7) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname2/proxy/: tls qux (200; 7.923345ms)
  May  5 18:16:22.213: INFO: (7) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/rewriteme">test</a> (200; 8.428886ms)
  May  5 18:16:22.219: INFO: (8) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname2/proxy/: bar (200; 5.295433ms)
  May  5 18:16:22.219: INFO: (8) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 5.296617ms)
  May  5 18:16:22.219: INFO: (8) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 5.486716ms)
  May  5 18:16:22.219: INFO: (8) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname1/proxy/: foo (200; 5.467677ms)
  May  5 18:16:22.219: INFO: (8) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 5.354568ms)
  May  5 18:16:22.219: INFO: (8) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/rewriteme">test</a> (200; 5.372102ms)
  May  5 18:16:22.219: INFO: (8) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:462/proxy/: tls qux (200; 5.442996ms)
  May  5 18:16:22.219: INFO: (8) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname2/proxy/: tls qux (200; 5.40936ms)
  May  5 18:16:22.219: INFO: (8) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 5.399709ms)
  May  5 18:16:22.219: INFO: (8) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname1/proxy/: foo (200; 5.764714ms)
  May  5 18:16:22.219: INFO: (8) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/tlsrewritem... (200; 5.471275ms)
  May  5 18:16:22.219: INFO: (8) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname1/proxy/: tls baz (200; 5.426731ms)
  May  5 18:16:22.219: INFO: (8) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:460/proxy/: tls baz (200; 5.440058ms)
  May  5 18:16:22.219: INFO: (8) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname2/proxy/: bar (200; 5.438886ms)
  May  5 18:16:22.219: INFO: (8) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">... (200; 5.408981ms)
  May  5 18:16:22.219: INFO: (8) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">test<... (200; 5.409618ms)
  May  5 18:16:22.225: INFO: (9) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 5.665816ms)
  May  5 18:16:22.225: INFO: (9) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:462/proxy/: tls qux (200; 5.374267ms)
  May  5 18:16:22.225: INFO: (9) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/tlsrewritem... (200; 5.809461ms)
  May  5 18:16:22.225: INFO: (9) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">test<... (200; 5.959125ms)
  May  5 18:16:22.226: INFO: (9) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 6.181286ms)
  May  5 18:16:22.226: INFO: (9) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">... (200; 5.526348ms)
  May  5 18:16:22.226: INFO: (9) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:460/proxy/: tls baz (200; 6.031216ms)
  May  5 18:16:22.226: INFO: (9) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/rewriteme">test</a> (200; 5.761885ms)
  May  5 18:16:22.226: INFO: (9) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 6.158897ms)
  May  5 18:16:22.229: INFO: (9) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname2/proxy/: bar (200; 9.420829ms)
  May  5 18:16:22.230: INFO: (9) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname1/proxy/: tls baz (200; 9.416862ms)
  May  5 18:16:22.230: INFO: (9) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 10.199853ms)
  May  5 18:16:22.230: INFO: (9) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname2/proxy/: bar (200; 9.996046ms)
  May  5 18:16:22.230: INFO: (9) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname1/proxy/: foo (200; 10.405903ms)
  May  5 18:16:22.230: INFO: (9) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname1/proxy/: foo (200; 10.079952ms)
  May  5 18:16:22.230: INFO: (9) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname2/proxy/: tls qux (200; 10.764275ms)
  May  5 18:16:22.234: INFO: (10) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 3.756761ms)
  May  5 18:16:22.234: INFO: (10) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/rewriteme">test</a> (200; 3.699245ms)
  May  5 18:16:22.234: INFO: (10) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 3.785125ms)
  May  5 18:16:22.236: INFO: (10) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">test<... (200; 5.932115ms)
  May  5 18:16:22.237: INFO: (10) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:462/proxy/: tls qux (200; 6.889278ms)
  May  5 18:16:22.237: INFO: (10) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname2/proxy/: bar (200; 6.994273ms)
  May  5 18:16:22.237: INFO: (10) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/tlsrewritem... (200; 6.905798ms)
  May  5 18:16:22.237: INFO: (10) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 6.975681ms)
  May  5 18:16:22.237: INFO: (10) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname1/proxy/: foo (200; 7.170422ms)
  May  5 18:16:22.237: INFO: (10) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">... (200; 7.032509ms)
  May  5 18:16:22.237: INFO: (10) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:460/proxy/: tls baz (200; 6.9903ms)
  May  5 18:16:22.237: INFO: (10) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname1/proxy/: foo (200; 7.092126ms)
  May  5 18:16:22.237: INFO: (10) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 7.22422ms)
  May  5 18:16:22.240: INFO: (10) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname2/proxy/: tls qux (200; 9.157966ms)
  May  5 18:16:22.240: INFO: (10) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname2/proxy/: bar (200; 9.17467ms)
  May  5 18:16:22.240: INFO: (10) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname1/proxy/: tls baz (200; 9.218186ms)
  May  5 18:16:22.246: INFO: (11) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname1/proxy/: foo (200; 6.190955ms)
  May  5 18:16:22.246: INFO: (11) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 6.113771ms)
  May  5 18:16:22.246: INFO: (11) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 6.054705ms)
  May  5 18:16:22.246: INFO: (11) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname1/proxy/: foo (200; 6.007144ms)
  May  5 18:16:22.246: INFO: (11) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/tlsrewritem... (200; 6.304501ms)
  May  5 18:16:22.246: INFO: (11) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">... (200; 6.211869ms)
  May  5 18:16:22.246: INFO: (11) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">test<... (200; 5.983001ms)
  May  5 18:16:22.246: INFO: (11) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:462/proxy/: tls qux (200; 6.05106ms)
  May  5 18:16:22.246: INFO: (11) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/rewriteme">test</a> (200; 6.405661ms)
  May  5 18:16:22.246: INFO: (11) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname2/proxy/: bar (200; 6.206351ms)
  May  5 18:16:22.246: INFO: (11) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 6.19202ms)
  May  5 18:16:22.246: INFO: (11) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname1/proxy/: tls baz (200; 6.349649ms)
  May  5 18:16:22.246: INFO: (11) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:460/proxy/: tls baz (200; 6.396361ms)
  May  5 18:16:22.247: INFO: (11) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname2/proxy/: bar (200; 6.782492ms)
  May  5 18:16:22.247: INFO: (11) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 6.947624ms)
  May  5 18:16:22.247: INFO: (11) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname2/proxy/: tls qux (200; 6.821858ms)
  May  5 18:16:22.253: INFO: (12) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 4.767937ms)
  May  5 18:16:22.253: INFO: (12) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:460/proxy/: tls baz (200; 5.245635ms)
  May  5 18:16:22.253: INFO: (12) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">test<... (200; 5.156584ms)
  May  5 18:16:22.253: INFO: (12) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 5.287812ms)
  May  5 18:16:22.253: INFO: (12) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/rewriteme">test</a> (200; 5.124453ms)
  May  5 18:16:22.253: INFO: (12) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">... (200; 5.104893ms)
  May  5 18:16:22.253: INFO: (12) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 4.986277ms)
  May  5 18:16:22.253: INFO: (12) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 5.588647ms)
  May  5 18:16:22.253: INFO: (12) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/tlsrewritem... (200; 5.548915ms)
  May  5 18:16:22.253: INFO: (12) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:462/proxy/: tls qux (200; 5.354306ms)
  May  5 18:16:22.256: INFO: (12) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname1/proxy/: foo (200; 8.254007ms)
  May  5 18:16:22.256: INFO: (12) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname2/proxy/: tls qux (200; 7.619919ms)
  May  5 18:16:22.256: INFO: (12) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname1/proxy/: foo (200; 7.942663ms)
  May  5 18:16:22.256: INFO: (12) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname2/proxy/: bar (200; 7.866159ms)
  May  5 18:16:22.256: INFO: (12) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname2/proxy/: bar (200; 7.935725ms)
  May  5 18:16:22.257: INFO: (12) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname1/proxy/: tls baz (200; 9.111087ms)
  May  5 18:16:22.261: INFO: (13) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 3.518548ms)
  May  5 18:16:22.261: INFO: (13) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 3.673253ms)
  May  5 18:16:22.261: INFO: (13) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">... (200; 3.598821ms)
  May  5 18:16:22.261: INFO: (13) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/tlsrewritem... (200; 3.586644ms)
  May  5 18:16:22.261: INFO: (13) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 3.864898ms)
  May  5 18:16:22.261: INFO: (13) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 3.958394ms)
  May  5 18:16:22.261: INFO: (13) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/rewriteme">test</a> (200; 4.370774ms)
  May  5 18:16:22.262: INFO: (13) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">test<... (200; 4.821208ms)
  May  5 18:16:22.263: INFO: (13) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:462/proxy/: tls qux (200; 6.237233ms)
  May  5 18:16:22.263: INFO: (13) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:460/proxy/: tls baz (200; 5.99257ms)
  May  5 18:16:22.263: INFO: (13) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname2/proxy/: bar (200; 5.900661ms)
  May  5 18:16:22.263: INFO: (13) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname2/proxy/: bar (200; 6.173025ms)
  May  5 18:16:22.263: INFO: (13) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname1/proxy/: foo (200; 6.263206ms)
  May  5 18:16:22.263: INFO: (13) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname1/proxy/: tls baz (200; 6.341653ms)
  May  5 18:16:22.265: INFO: (13) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname1/proxy/: foo (200; 7.748722ms)
  May  5 18:16:22.265: INFO: (13) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname2/proxy/: tls qux (200; 8.325095ms)
  May  5 18:16:22.270: INFO: (14) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:460/proxy/: tls baz (200; 4.693715ms)
  May  5 18:16:22.271: INFO: (14) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/tlsrewritem... (200; 4.653879ms)
  May  5 18:16:22.271: INFO: (14) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname1/proxy/: tls baz (200; 4.981414ms)
  May  5 18:16:22.270: INFO: (14) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname2/proxy/: bar (200; 4.585742ms)
  May  5 18:16:22.271: INFO: (14) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 5.093682ms)
  May  5 18:16:22.271: INFO: (14) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 4.772296ms)
  May  5 18:16:22.271: INFO: (14) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname2/proxy/: bar (200; 4.741202ms)
  May  5 18:16:22.271: INFO: (14) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">test<... (200; 4.618053ms)
  May  5 18:16:22.271: INFO: (14) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">... (200; 4.91103ms)
  May  5 18:16:22.271: INFO: (14) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:462/proxy/: tls qux (200; 4.740914ms)
  May  5 18:16:22.271: INFO: (14) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 5.14459ms)
  May  5 18:16:22.271: INFO: (14) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/rewriteme">test</a> (200; 5.035604ms)
  May  5 18:16:22.271: INFO: (14) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 4.9135ms)
  May  5 18:16:22.271: INFO: (14) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname2/proxy/: tls qux (200; 4.821596ms)
  May  5 18:16:22.271: INFO: (14) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname1/proxy/: foo (200; 4.779843ms)
  May  5 18:16:22.271: INFO: (14) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname1/proxy/: foo (200; 5.302328ms)
  May  5 18:16:22.275: INFO: (15) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">test<... (200; 3.557487ms)
  May  5 18:16:22.278: INFO: (15) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 6.367637ms)
  May  5 18:16:22.278: INFO: (15) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname2/proxy/: bar (200; 6.740948ms)
  May  5 18:16:22.278: INFO: (15) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname2/proxy/: tls qux (200; 7.141018ms)
  May  5 18:16:22.278: INFO: (15) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:462/proxy/: tls qux (200; 6.526138ms)
  May  5 18:16:22.278: INFO: (15) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 6.734039ms)
  May  5 18:16:22.278: INFO: (15) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 6.717461ms)
  May  5 18:16:22.279: INFO: (15) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/tlsrewritem... (200; 6.553571ms)
  May  5 18:16:22.279: INFO: (15) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/rewriteme">test</a> (200; 6.73582ms)
  May  5 18:16:22.279: INFO: (15) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:460/proxy/: tls baz (200; 6.949354ms)
  May  5 18:16:22.279: INFO: (15) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname1/proxy/: foo (200; 7.166001ms)
  May  5 18:16:22.278: INFO: (15) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname1/proxy/: foo (200; 6.330765ms)
  May  5 18:16:22.279: INFO: (15) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 7.251931ms)
  May  5 18:16:22.279: INFO: (15) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">... (200; 6.886244ms)
  May  5 18:16:22.279: INFO: (15) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname2/proxy/: bar (200; 6.978528ms)
  May  5 18:16:22.280: INFO: (15) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname1/proxy/: tls baz (200; 7.95334ms)
  May  5 18:16:22.285: INFO: (16) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/tlsrewritem... (200; 5.334107ms)
  May  5 18:16:22.285: INFO: (16) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 5.207404ms)
  May  5 18:16:22.285: INFO: (16) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">test<... (200; 5.182725ms)
  May  5 18:16:22.285: INFO: (16) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">... (200; 5.508452ms)
  May  5 18:16:22.287: INFO: (16) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/rewriteme">test</a> (200; 6.959086ms)
  May  5 18:16:22.288: INFO: (16) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 7.524826ms)
  May  5 18:16:22.288: INFO: (16) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname1/proxy/: foo (200; 7.66988ms)
  May  5 18:16:22.288: INFO: (16) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname2/proxy/: bar (200; 7.676861ms)
  May  5 18:16:22.288: INFO: (16) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname1/proxy/: foo (200; 7.951475ms)
  May  5 18:16:22.288: INFO: (16) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 8.162144ms)
  May  5 18:16:22.288: INFO: (16) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:460/proxy/: tls baz (200; 8.225265ms)
  May  5 18:16:22.288: INFO: (16) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname1/proxy/: tls baz (200; 8.2173ms)
  May  5 18:16:22.288: INFO: (16) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 8.06905ms)
  May  5 18:16:22.288: INFO: (16) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname2/proxy/: tls qux (200; 8.108912ms)
  May  5 18:16:22.289: INFO: (16) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:462/proxy/: tls qux (200; 8.611114ms)
  May  5 18:16:22.289: INFO: (16) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname2/proxy/: bar (200; 8.999331ms)
  May  5 18:16:22.295: INFO: (17) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 5.231629ms)
  May  5 18:16:22.295: INFO: (17) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 5.304959ms)
  May  5 18:16:22.296: INFO: (17) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 5.767928ms)
  May  5 18:16:22.300: INFO: (17) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/rewriteme">test</a> (200; 9.81239ms)
  May  5 18:16:22.300: INFO: (17) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:462/proxy/: tls qux (200; 9.935153ms)
  May  5 18:16:22.300: INFO: (17) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 10.095002ms)
  May  5 18:16:22.300: INFO: (17) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:460/proxy/: tls baz (200; 9.941747ms)
  May  5 18:16:22.300: INFO: (17) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">... (200; 10.188152ms)
  May  5 18:16:22.300: INFO: (17) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">test<... (200; 10.416104ms)
  May  5 18:16:22.300: INFO: (17) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname1/proxy/: foo (200; 10.403427ms)
  May  5 18:16:22.300: INFO: (17) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname2/proxy/: bar (200; 10.340699ms)
  May  5 18:16:22.300: INFO: (17) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname1/proxy/: tls baz (200; 10.119262ms)
  May  5 18:16:22.300: INFO: (17) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname2/proxy/: tls qux (200; 10.474318ms)
  May  5 18:16:22.300: INFO: (17) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname1/proxy/: foo (200; 10.176154ms)
  May  5 18:16:22.300: INFO: (17) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname2/proxy/: bar (200; 10.283451ms)
  May  5 18:16:22.301: INFO: (17) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/tlsrewritem... (200; 10.503146ms)
  May  5 18:16:22.306: INFO: (18) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">... (200; 4.702014ms)
  May  5 18:16:22.307: INFO: (18) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 5.546575ms)
  May  5 18:16:22.308: INFO: (18) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 5.930463ms)
  May  5 18:16:22.308: INFO: (18) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 5.929895ms)
  May  5 18:16:22.308: INFO: (18) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">test<... (200; 6.622126ms)
  May  5 18:16:22.308: INFO: (18) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:462/proxy/: tls qux (200; 6.14528ms)
  May  5 18:16:22.308: INFO: (18) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 6.352833ms)
  May  5 18:16:22.308: INFO: (18) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/tlsrewritem... (200; 6.283341ms)
  May  5 18:16:22.310: INFO: (18) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:460/proxy/: tls baz (200; 8.466875ms)
  May  5 18:16:22.310: INFO: (18) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname1/proxy/: foo (200; 8.43331ms)
  May  5 18:16:22.310: INFO: (18) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/rewriteme">test</a> (200; 8.487342ms)
  May  5 18:16:22.311: INFO: (18) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname2/proxy/: bar (200; 8.860404ms)
  May  5 18:16:22.311: INFO: (18) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname1/proxy/: tls baz (200; 9.232448ms)
  May  5 18:16:22.311: INFO: (18) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname2/proxy/: tls qux (200; 8.962037ms)
  May  5 18:16:22.311: INFO: (18) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname1/proxy/: foo (200; 9.19115ms)
  May  5 18:16:22.313: INFO: (18) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname2/proxy/: bar (200; 10.663529ms)
  May  5 18:16:22.317: INFO: (19) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">... (200; 4.121157ms)
  May  5 18:16:22.318: INFO: (19) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 4.76613ms)
  May  5 18:16:22.320: INFO: (19) /api/v1/namespaces/proxy-9314/pods/http:proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 7.277691ms)
  May  5 18:16:22.321: INFO: (19) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:160/proxy/: foo (200; 7.978435ms)
  May  5 18:16:22.321: INFO: (19) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:443/proxy/tlsrewritem... (200; 7.893839ms)
  May  5 18:16:22.321: INFO: (19) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:460/proxy/: tls baz (200; 7.916635ms)
  May  5 18:16:22.321: INFO: (19) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k/proxy/rewriteme">test</a> (200; 8.167277ms)
  May  5 18:16:22.321: INFO: (19) /api/v1/namespaces/proxy-9314/pods/https:proxy-service-tbqqr-ns48k:462/proxy/: tls qux (200; 8.589284ms)
  May  5 18:16:22.321: INFO: (19) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/: <a href="/api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:1080/proxy/rewriteme">test<... (200; 8.83395ms)
  May  5 18:16:22.321: INFO: (19) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname2/proxy/: tls qux (200; 8.631919ms)
  May  5 18:16:22.321: INFO: (19) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname1/proxy/: foo (200; 8.618165ms)
  May  5 18:16:22.322: INFO: (19) /api/v1/namespaces/proxy-9314/services/https:proxy-service-tbqqr:tlsportname1/proxy/: tls baz (200; 8.833496ms)
  May  5 18:16:22.322: INFO: (19) /api/v1/namespaces/proxy-9314/services/proxy-service-tbqqr:portname2/proxy/: bar (200; 8.903864ms)
  May  5 18:16:22.322: INFO: (19) /api/v1/namespaces/proxy-9314/pods/proxy-service-tbqqr-ns48k:162/proxy/: bar (200; 8.944621ms)
  May  5 18:16:22.322: INFO: (19) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname1/proxy/: foo (200; 8.910296ms)
  May  5 18:16:22.322: INFO: (19) /api/v1/namespaces/proxy-9314/services/http:proxy-service-tbqqr:portname2/proxy/: bar (200; 8.849785ms)
  May  5 18:16:22.322: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController proxy-service-tbqqr in namespace proxy-9314, will wait for the garbage collector to delete the pods @ 05/05/24 18:16:22.325
  May  5 18:16:22.393: INFO: Deleting ReplicationController proxy-service-tbqqr took: 15.085074ms
  May  5 18:16:22.494: INFO: Terminating ReplicationController proxy-service-tbqqr pods took: 100.943071ms
  STEP: Destroying namespace "proxy-9314" for this suite. @ 05/05/24 18:16:25.095
• [5.054 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:168
  STEP: Creating a kubernetes client @ 05/05/24 18:16:25.103
  May  5 18:16:25.103: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/05/24 18:16:25.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:16:25.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:16:25.115
  STEP: create the container to handle the HTTPGet hook request. @ 05/05/24 18:16:25.12
  STEP: create the pod with lifecycle hook @ 05/05/24 18:16:27.139
  STEP: check poststart hook @ 05/05/24 18:16:29.164
  STEP: delete the pod with lifecycle hook @ 05/05/24 18:16:29.169
  May  5 18:16:31.182: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3916" for this suite. @ 05/05/24 18:16:31.185
• [6.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 05/05/24 18:16:31.191
  May  5 18:16:31.192: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename var-expansion @ 05/05/24 18:16:31.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:16:31.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:16:31.203
  May  5 18:16:33.217: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May  5 18:16:33.220: INFO: Deleting pod "var-expansion-75b9a25b-8a0c-40b4-a859-67a37cbe6ef1" in namespace "var-expansion-8945"
  May  5 18:16:33.225: INFO: Wait up to 5m0s for pod "var-expansion-75b9a25b-8a0c-40b4-a859-67a37cbe6ef1" to be fully deleted
  STEP: Destroying namespace "var-expansion-8945" for this suite. @ 05/05/24 18:16:35.231
• [4.044 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 05/05/24 18:16:35.236
  May  5 18:16:35.236: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename container-probe @ 05/05/24 18:16:35.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:16:35.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:16:35.249
  May  5 18:16:57.320: INFO: Container started at 2024-05-05 18:16:35 +0000 UTC, pod became ready at 2024-05-05 18:16:55 +0000 UTC
  May  5 18:16:57.320: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3197" for this suite. @ 05/05/24 18:16:57.324
• [22.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 05/05/24 18:16:57.332
  May  5 18:16:57.333: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename pods @ 05/05/24 18:16:57.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:16:57.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:16:57.352
  STEP: creating a Pod with a static label @ 05/05/24 18:16:57.36
  STEP: watching for Pod to be ready @ 05/05/24 18:16:57.369
  May  5 18:16:57.371: INFO: observed Pod pod-test in namespace pods-8811 in phase Pending with labels: map[test-pod-static:true] & conditions []
  May  5 18:16:57.371: INFO: observed Pod pod-test in namespace pods-8811 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 18:16:57 +0000 UTC  }]
  May  5 18:16:57.380: INFO: observed Pod pod-test in namespace pods-8811 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-05-05 18:16:57 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 18:16:57 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-05 18:16:57 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-05 18:16:57 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 18:16:57 +0000 UTC  }]
  May  5 18:16:57.783: INFO: observed Pod pod-test in namespace pods-8811 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-05-05 18:16:57 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 18:16:57 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-05 18:16:57 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-05 18:16:57 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 18:16:57 +0000 UTC  }]
  May  5 18:16:58.184: INFO: Found Pod pod-test in namespace pods-8811 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 18:16:58 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 18:16:57 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 18:16:58 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 18:16:58 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 18:16:57 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 05/05/24 18:16:58.186
  STEP: getting the Pod and ensuring that it's patched @ 05/05/24 18:16:58.192
  STEP: replacing the Pod's status Ready condition to False @ 05/05/24 18:16:58.195
  STEP: check the Pod again to ensure its Ready conditions are False @ 05/05/24 18:16:58.203
  STEP: deleting the Pod via a Collection with a LabelSelector @ 05/05/24 18:16:58.203
  STEP: watching for the Pod to be deleted @ 05/05/24 18:16:58.21
  May  5 18:16:58.211: INFO: observed event type MODIFIED
  May  5 18:17:00.189: INFO: observed event type MODIFIED
  May  5 18:17:00.291: INFO: observed event type MODIFIED
  May  5 18:17:00.364: INFO: observed event type MODIFIED
  May  5 18:17:01.198: INFO: observed event type MODIFIED
  May  5 18:17:01.208: INFO: observed event type MODIFIED
  May  5 18:17:01.214: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8811" for this suite. @ 05/05/24 18:17:01.216
• [3.888 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:141
  STEP: Creating a kubernetes client @ 05/05/24 18:17:01.22
  May  5 18:17:01.220: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename crd-webhook @ 05/05/24 18:17:01.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:17:01.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:17:01.233
  STEP: Setting up server cert @ 05/05/24 18:17:01.236
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/05/24 18:17:01.403
  STEP: Deploying the custom resource conversion webhook pod @ 05/05/24 18:17:01.408
  STEP: Wait for the deployment to be ready @ 05/05/24 18:17:01.416
  May  5 18:17:01.424: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/05/24 18:17:03.436
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 18:17:03.443
  May  5 18:17:04.445: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  May  5 18:17:04.452: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Creating a v1 custom resource @ 05/05/24 18:17:07.012
  STEP: v2 custom resource should be converted @ 05/05/24 18:17:07.016
  May  5 18:17:07.020: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1261" for this suite. @ 05/05/24 18:17:07.57
• [6.355 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 05/05/24 18:17:07.587
  May  5 18:17:07.587: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename taint-multiple-pods @ 05/05/24 18:17:07.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:17:07.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:17:07.609
  May  5 18:17:07.611: INFO: Waiting up to 1m0s for all nodes to be ready
  May  5 18:18:07.638: INFO: Waiting for terminating namespaces to be deleted...
  May  5 18:18:07.640: INFO: Starting informer...
  STEP: Starting pods... @ 05/05/24 18:18:07.64
  May  5 18:18:07.867: INFO: Pod1 is running on worker01. Tainting Node
  May  5 18:18:10.101: INFO: Pod2 is running on worker01. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/05/24 18:18:10.101
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/05/24 18:18:10.113
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 05/05/24 18:18:10.126
  May  5 18:18:15.890: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  May  5 18:18:36.112: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  May  5 18:18:36.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/05/24 18:18:36.127
  STEP: Destroying namespace "taint-multiple-pods-9527" for this suite. @ 05/05/24 18:18:36.134
• [88.606 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 05/05/24 18:18:36.207
  May  5 18:18:36.207: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename downward-api @ 05/05/24 18:18:36.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:18:36.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:18:36.259
  STEP: Creating the pod @ 05/05/24 18:18:36.269
  May  5 18:18:40.907: INFO: Successfully updated pod "labelsupdate7ee4ac8a-b9d7-422f-947e-059ef996e4a6"
  May  5 18:18:42.943: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-591" for this suite. @ 05/05/24 18:18:42.949
• [6.763 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:129
  STEP: Creating a kubernetes client @ 05/05/24 18:18:42.971
  May  5 18:18:42.971: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename runtimeclass @ 05/05/24 18:18:42.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:18:43.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:18:43.016
  May  5 18:18:45.053: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1223" for this suite. @ 05/05/24 18:18:45.076
• [2.116 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 05/05/24 18:18:45.088
  May  5 18:18:45.088: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename webhook @ 05/05/24 18:18:45.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:18:45.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:18:45.111
  STEP: Setting up server cert @ 05/05/24 18:18:45.143
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 18:18:45.522
  STEP: Deploying the webhook pod @ 05/05/24 18:18:45.54
  STEP: Wait for the deployment to be ready @ 05/05/24 18:18:45.557
  May  5 18:18:45.569: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  May  5 18:18:47.580: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 5, 18, 18, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 18, 18, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 18, 18, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 18, 18, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 05/05/24 18:18:49.584
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 18:18:49.605
  May  5 18:18:50.605: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/05/24 18:18:50.698
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/05/24 18:18:50.745
  STEP: Deleting the collection of validation webhooks @ 05/05/24 18:18:50.777
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/05/24 18:18:50.836
  May  5 18:18:50.846: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2979" for this suite. @ 05/05/24 18:18:50.915
  STEP: Destroying namespace "webhook-markers-3396" for this suite. @ 05/05/24 18:18:50.935
• [5.857 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 05/05/24 18:18:50.951
  May  5 18:18:50.951: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename dns @ 05/05/24 18:18:50.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:18:50.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:18:50.977
  STEP: Creating a test headless service @ 05/05/24 18:18:50.983
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2523.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-2523.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2523.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2523.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2523.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-2523.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2523.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-2523.svc.cluster.local;sleep 1; done
   @ 05/05/24 18:18:51
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2523.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-2523.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2523.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-2523.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2523.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-2523.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2523.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-2523.svc.cluster.local;sleep 1; done
   @ 05/05/24 18:18:51
  STEP: creating a pod to probe DNS @ 05/05/24 18:18:51
  STEP: submitting the pod to kubernetes @ 05/05/24 18:18:51
  STEP: retrieving the pod @ 05/05/24 18:19:19.112
  STEP: looking for the results for each expected name from probers @ 05/05/24 18:19:19.118
  May  5 18:19:19.123: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-2523.svc.cluster.local from pod dns-2523/dns-test-dd0494d6-6f70-44ae-9b49-5723ed775309: the server could not find the requested resource (get pods dns-test-dd0494d6-6f70-44ae-9b49-5723ed775309)
  May  5 18:19:19.129: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2523.svc.cluster.local from pod dns-2523/dns-test-dd0494d6-6f70-44ae-9b49-5723ed775309: the server could not find the requested resource (get pods dns-test-dd0494d6-6f70-44ae-9b49-5723ed775309)
  May  5 18:19:19.133: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-2523.svc.cluster.local from pod dns-2523/dns-test-dd0494d6-6f70-44ae-9b49-5723ed775309: the server could not find the requested resource (get pods dns-test-dd0494d6-6f70-44ae-9b49-5723ed775309)
  May  5 18:19:19.138: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-2523.svc.cluster.local from pod dns-2523/dns-test-dd0494d6-6f70-44ae-9b49-5723ed775309: the server could not find the requested resource (get pods dns-test-dd0494d6-6f70-44ae-9b49-5723ed775309)
  May  5 18:19:19.145: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2523.svc.cluster.local from pod dns-2523/dns-test-dd0494d6-6f70-44ae-9b49-5723ed775309: the server could not find the requested resource (get pods dns-test-dd0494d6-6f70-44ae-9b49-5723ed775309)
  May  5 18:19:19.150: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2523.svc.cluster.local from pod dns-2523/dns-test-dd0494d6-6f70-44ae-9b49-5723ed775309: the server could not find the requested resource (get pods dns-test-dd0494d6-6f70-44ae-9b49-5723ed775309)
  May  5 18:19:19.155: INFO: Unable to read jessie_udp@dns-test-service-2.dns-2523.svc.cluster.local from pod dns-2523/dns-test-dd0494d6-6f70-44ae-9b49-5723ed775309: the server could not find the requested resource (get pods dns-test-dd0494d6-6f70-44ae-9b49-5723ed775309)
  May  5 18:19:19.159: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-2523.svc.cluster.local from pod dns-2523/dns-test-dd0494d6-6f70-44ae-9b49-5723ed775309: the server could not find the requested resource (get pods dns-test-dd0494d6-6f70-44ae-9b49-5723ed775309)
  May  5 18:19:19.159: INFO: Lookups using dns-2523/dns-test-dd0494d6-6f70-44ae-9b49-5723ed775309 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-2523.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2523.svc.cluster.local wheezy_udp@dns-test-service-2.dns-2523.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2523.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2523.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2523.svc.cluster.local jessie_udp@dns-test-service-2.dns-2523.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2523.svc.cluster.local]

  May  5 18:19:19.166: INFO: Pod client logs for webserver: 
  May  5 18:19:19.171: INFO: Pod client logs for querier: 
  May  5 18:19:19.176: INFO: Pod client logs for jessie-querier: 
  May  5 18:19:24.183: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-2523.svc.cluster.local from pod dns-2523/dns-test-dd0494d6-6f70-44ae-9b49-5723ed775309: the server could not find the requested resource (get pods dns-test-dd0494d6-6f70-44ae-9b49-5723ed775309)
  May  5 18:19:24.196: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2523.svc.cluster.local from pod dns-2523/dns-test-dd0494d6-6f70-44ae-9b49-5723ed775309: the server could not find the requested resource (get pods dns-test-dd0494d6-6f70-44ae-9b49-5723ed775309)
  May  5 18:19:24.203: INFO: Lookups using dns-2523/dns-test-dd0494d6-6f70-44ae-9b49-5723ed775309 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-2523.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2523.svc.cluster.local]

  May  5 18:19:24.207: INFO: Pod client logs for webserver: 
  May  5 18:19:24.212: INFO: Pod client logs for querier: 
  May  5 18:19:24.217: INFO: Pod client logs for jessie-querier: 
  May  5 18:19:29.224: INFO: DNS probes using dns-2523/dns-test-dd0494d6-6f70-44ae-9b49-5723ed775309 succeeded

  May  5 18:19:29.224: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/05/24 18:19:29.23
  STEP: deleting the test headless service @ 05/05/24 18:19:29.267
  STEP: Destroying namespace "dns-2523" for this suite. @ 05/05/24 18:19:29.297
• [38.366 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 05/05/24 18:19:29.326
  May  5 18:19:29.326: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename var-expansion @ 05/05/24 18:19:29.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:19:29.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:19:29.366
  May  5 18:19:31.400: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May  5 18:19:31.404: INFO: Deleting pod "var-expansion-2ca91ac8-1bed-4138-bf9d-dbe22bcaad99" in namespace "var-expansion-3843"
  May  5 18:19:31.415: INFO: Wait up to 5m0s for pod "var-expansion-2ca91ac8-1bed-4138-bf9d-dbe22bcaad99" to be fully deleted
  STEP: Destroying namespace "var-expansion-3843" for this suite. @ 05/05/24 18:19:33.427
• [4.107 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 05/05/24 18:19:33.432
  May  5 18:19:33.432: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename configmap @ 05/05/24 18:19:33.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:19:33.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:19:33.455
  STEP: Creating configMap with name configmap-test-volume-map-188bf19a-c144-448e-9023-802014bef47a @ 05/05/24 18:19:33.458
  STEP: Creating a pod to test consume configMaps @ 05/05/24 18:19:33.462
  STEP: Saw pod success @ 05/05/24 18:19:37.487
  May  5 18:19:37.491: INFO: Trying to get logs from node worker00 pod pod-configmaps-abcafa19-5276-4891-9480-1bc60c38a907 container agnhost-container: <nil>
  STEP: delete the pod @ 05/05/24 18:19:37.497
  May  5 18:19:37.520: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-174" for this suite. @ 05/05/24 18:19:37.523
• [4.096 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:61
  STEP: Creating a kubernetes client @ 05/05/24 18:19:37.53
  May  5 18:19:37.530: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename limitrange @ 05/05/24 18:19:37.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:19:37.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:19:37.551
  STEP: Creating a LimitRange @ 05/05/24 18:19:37.555
  STEP: Setting up watch @ 05/05/24 18:19:37.555
  STEP: Submitting a LimitRange @ 05/05/24 18:19:37.659
  STEP: Verifying LimitRange creation was observed @ 05/05/24 18:19:37.666
  STEP: Fetching the LimitRange to ensure it has proper values @ 05/05/24 18:19:37.667
  May  5 18:19:37.671: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  May  5 18:19:37.672: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 05/05/24 18:19:37.672
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 05/05/24 18:19:37.682
  May  5 18:19:37.688: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  May  5 18:19:37.688: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 05/05/24 18:19:37.688
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 05/05/24 18:19:37.696
  May  5 18:19:37.699: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  May  5 18:19:37.700: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 05/05/24 18:19:37.7
  STEP: Failing to create a Pod with more than max resources @ 05/05/24 18:19:37.703
  STEP: Updating a LimitRange @ 05/05/24 18:19:37.709
  STEP: Verifying LimitRange updating is effective @ 05/05/24 18:19:37.716
  STEP: Creating a Pod with less than former min resources @ 05/05/24 18:19:39.722
  STEP: Failing to create a Pod with more than max resources @ 05/05/24 18:19:39.733
  STEP: Deleting a LimitRange @ 05/05/24 18:19:39.737
  STEP: Verifying the LimitRange was deleted @ 05/05/24 18:19:39.75
  May  5 18:19:44.754: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 05/05/24 18:19:44.754
  May  5 18:19:44.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5490" for this suite. @ 05/05/24 18:19:44.778
• [7.257 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:176
  STEP: Creating a kubernetes client @ 05/05/24 18:19:44.789
  May  5 18:19:44.789: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename replicaset @ 05/05/24 18:19:44.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:19:44.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:19:44.812
  STEP: Create a Replicaset @ 05/05/24 18:19:44.82
  STEP: Verify that the required pods have come up. @ 05/05/24 18:19:44.824
  May  5 18:19:44.828: INFO: Pod name sample-pod: Found 0 pods out of 1
  May  5 18:19:49.831: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/05/24 18:19:49.832
  STEP: Getting /status @ 05/05/24 18:19:49.832
  May  5 18:19:49.836: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 05/05/24 18:19:49.836
  May  5 18:19:49.845: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 05/05/24 18:19:49.845
  May  5 18:19:49.846: INFO: Observed &ReplicaSet event: ADDED
  May  5 18:19:49.846: INFO: Observed &ReplicaSet event: MODIFIED
  May  5 18:19:49.846: INFO: Observed &ReplicaSet event: MODIFIED
  May  5 18:19:49.846: INFO: Observed &ReplicaSet event: MODIFIED
  May  5 18:19:49.846: INFO: Found replicaset test-rs in namespace replicaset-4024 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  May  5 18:19:49.846: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 05/05/24 18:19:49.846
  May  5 18:19:49.846: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  May  5 18:19:49.853: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 05/05/24 18:19:49.853
  May  5 18:19:49.855: INFO: Observed &ReplicaSet event: ADDED
  May  5 18:19:49.855: INFO: Observed &ReplicaSet event: MODIFIED
  May  5 18:19:49.855: INFO: Observed &ReplicaSet event: MODIFIED
  May  5 18:19:49.856: INFO: Observed &ReplicaSet event: MODIFIED
  May  5 18:19:49.856: INFO: Observed replicaset test-rs in namespace replicaset-4024 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May  5 18:19:49.856: INFO: Observed &ReplicaSet event: MODIFIED
  May  5 18:19:49.856: INFO: Found replicaset test-rs in namespace replicaset-4024 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  May  5 18:19:49.856: INFO: Replicaset test-rs has a patched status
  May  5 18:19:49.856: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4024" for this suite. @ 05/05/24 18:19:49.858
• [5.079 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1481
  STEP: Creating a kubernetes client @ 05/05/24 18:19:49.87
  May  5 18:19:49.870: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename kubectl @ 05/05/24 18:19:49.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:19:49.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:19:49.886
  STEP: creating Agnhost RC @ 05/05/24 18:19:49.888
  May  5 18:19:49.888: INFO: namespace kubectl-3495
  May  5 18:19:49.888: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-3495 create -f -'
  May  5 18:19:50.655: INFO: stderr: ""
  May  5 18:19:50.655: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/05/24 18:19:50.655
  May  5 18:19:51.661: INFO: Selector matched 1 pods for map[app:agnhost]
  May  5 18:19:51.661: INFO: Found 0 / 1
  May  5 18:19:52.660: INFO: Selector matched 1 pods for map[app:agnhost]
  May  5 18:19:52.660: INFO: Found 1 / 1
  May  5 18:19:52.660: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  May  5 18:19:52.663: INFO: Selector matched 1 pods for map[app:agnhost]
  May  5 18:19:52.663: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  May  5 18:19:52.663: INFO: wait on agnhost-primary startup in kubectl-3495 
  May  5 18:19:52.664: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-3495 logs agnhost-primary-vznqt agnhost-primary'
  May  5 18:19:52.747: INFO: stderr: ""
  May  5 18:19:52.747: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 05/05/24 18:19:52.747
  May  5 18:19:52.747: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-3495 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  May  5 18:19:52.831: INFO: stderr: ""
  May  5 18:19:52.832: INFO: stdout: "service/rm2 exposed\n"
  May  5 18:19:52.838: INFO: Service rm2 in namespace kubectl-3495 found.
  STEP: exposing service @ 05/05/24 18:19:54.846
  May  5 18:19:54.846: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-3495 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  May  5 18:19:54.937: INFO: stderr: ""
  May  5 18:19:54.937: INFO: stdout: "service/rm3 exposed\n"
  May  5 18:19:54.941: INFO: Service rm3 in namespace kubectl-3495 found.
  May  5 18:19:56.953: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3495" for this suite. @ 05/05/24 18:19:56.959
• [7.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:232
  STEP: Creating a kubernetes client @ 05/05/24 18:19:56.972
  May  5 18:19:56.972: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename resourcequota @ 05/05/24 18:19:56.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:19:57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:19:57.005
  STEP: Counting existing ResourceQuota @ 05/05/24 18:19:57.01
  STEP: Creating a ResourceQuota @ 05/05/24 18:20:02.02
  STEP: Ensuring resource quota status is calculated @ 05/05/24 18:20:02.026
  STEP: Creating a Pod that fits quota @ 05/05/24 18:20:04.029
  STEP: Ensuring ResourceQuota status captures the pod usage @ 05/05/24 18:20:04.042
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 05/05/24 18:20:06.049
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 05/05/24 18:20:06.053
  STEP: Ensuring a pod cannot update its resource requirements @ 05/05/24 18:20:06.056
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 05/05/24 18:20:06.061
  STEP: Deleting the pod @ 05/05/24 18:20:08.065
  STEP: Ensuring resource quota status released the pod usage @ 05/05/24 18:20:08.079
  May  5 18:20:10.087: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5605" for this suite. @ 05/05/24 18:20:10.092
• [13.126 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:161
  STEP: Creating a kubernetes client @ 05/05/24 18:20:10.099
  May  5 18:20:10.099: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename resourcequota @ 05/05/24 18:20:10.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:20:10.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:20:10.118
  STEP: Discovering how many secrets are in namespace by default @ 05/05/24 18:20:10.12
  STEP: Counting existing ResourceQuota @ 05/05/24 18:20:15.123
  STEP: Creating a ResourceQuota @ 05/05/24 18:20:20.126
  STEP: Ensuring resource quota status is calculated @ 05/05/24 18:20:20.13
  STEP: Creating a Secret @ 05/05/24 18:20:22.134
  STEP: Ensuring resource quota status captures secret creation @ 05/05/24 18:20:22.141
  STEP: Deleting a secret @ 05/05/24 18:20:24.147
  STEP: Ensuring resource quota status released usage @ 05/05/24 18:20:24.152
  May  5 18:20:26.159: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6173" for this suite. @ 05/05/24 18:20:26.162
• [16.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 05/05/24 18:20:26.169
  May  5 18:20:26.169: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename downward-api @ 05/05/24 18:20:26.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:20:26.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:20:26.191
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 18:20:26.194
  STEP: Saw pod success @ 05/05/24 18:20:30.217
  May  5 18:20:30.221: INFO: Trying to get logs from node worker01 pod downwardapi-volume-d2545fa9-02ec-4a6a-b56f-5a1c6ab94b33 container client-container: <nil>
  STEP: delete the pod @ 05/05/24 18:20:30.227
  May  5 18:20:30.242: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6849" for this suite. @ 05/05/24 18:20:30.246
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:97
  STEP: Creating a kubernetes client @ 05/05/24 18:20:30.256
  May  5 18:20:30.256: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename emptydir @ 05/05/24 18:20:30.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:20:30.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:20:30.279
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/05/24 18:20:30.282
  STEP: Saw pod success @ 05/05/24 18:20:34.306
  May  5 18:20:34.310: INFO: Trying to get logs from node worker00 pod pod-741cdcb1-e353-47be-8dee-e0d012f1fec7 container test-container: <nil>
  STEP: delete the pod @ 05/05/24 18:20:34.317
  May  5 18:20:34.348: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1968" for this suite. @ 05/05/24 18:20:34.353
• [4.105 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 05/05/24 18:20:34.362
  May  5 18:20:34.362: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename field-validation @ 05/05/24 18:20:34.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:20:34.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:20:34.397
  May  5 18:20:34.406: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  W0505 18:20:34.409704      20 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000efd970 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0505 18:20:36.978504      20 warnings.go:70] unknown field "alpha"
  W0505 18:20:36.978528      20 warnings.go:70] unknown field "beta"
  W0505 18:20:36.978534      20 warnings.go:70] unknown field "delta"
  W0505 18:20:36.978540      20 warnings.go:70] unknown field "epsilon"
  W0505 18:20:36.978546      20 warnings.go:70] unknown field "gamma"
  May  5 18:20:37.506: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7360" for this suite. @ 05/05/24 18:20:37.516
• [3.172 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 05/05/24 18:20:37.535
  May  5 18:20:37.535: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename container-runtime @ 05/05/24 18:20:37.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:20:37.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:20:37.549
  STEP: create the container @ 05/05/24 18:20:37.552
  W0505 18:20:37.559941      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/05/24 18:20:37.56
  STEP: get the container status @ 05/05/24 18:20:41.612
  STEP: the container should be terminated @ 05/05/24 18:20:41.617
  STEP: the termination message should be set @ 05/05/24 18:20:41.617
  May  5 18:20:41.617: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 05/05/24 18:20:41.617
  May  5 18:20:41.629: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1609" for this suite. @ 05/05/24 18:20:41.633
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 05/05/24 18:20:41.641
  May  5 18:20:41.641: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename containers @ 05/05/24 18:20:41.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:20:41.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:20:41.66
  STEP: Creating a pod to test override arguments @ 05/05/24 18:20:41.663
  STEP: Saw pod success @ 05/05/24 18:20:45.686
  May  5 18:20:45.689: INFO: Trying to get logs from node worker00 pod client-containers-0b306370-4617-43c4-aa70-6db743e4cf24 container agnhost-container: <nil>
  STEP: delete the pod @ 05/05/24 18:20:45.695
  May  5 18:20:45.718: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4615" for this suite. @ 05/05/24 18:20:45.726
• [4.110 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 05/05/24 18:20:45.752
  May  5 18:20:45.752: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename container-probe @ 05/05/24 18:20:45.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:20:45.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:20:45.765
  May  5 18:21:45.776: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1033" for this suite. @ 05/05/24 18:21:45.78
• [60.035 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 05/05/24 18:21:45.789
  May  5 18:21:45.789: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename container-probe @ 05/05/24 18:21:45.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:21:45.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:21:45.815
  STEP: Creating pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713 @ 05/05/24 18:21:45.821
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/05/24 18:21:47.849
  May  5 18:21:47.853: INFO: Initial restart count of pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e is 0
  May  5 18:21:47.857: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:21:49.861: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:21:51.865: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:21:53.870: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:21:55.875: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:21:57.880: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:21:59.886: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:22:01.894: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:22:03.899: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:22:05.906: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:22:07.911: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:22:09.915: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:22:11.921: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:22:13.926: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:22:15.930: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:22:17.940: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:22:19.948: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:22:21.955: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:22:23.961: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:22:25.969: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:22:27.974: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:22:29.980: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:22:31.984: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:22:33.991: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:22:35.998: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:22:38.003: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:22:40.007: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:22:42.016: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:22:44.020: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:22:46.024: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:22:48.030: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:22:50.034: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:22:52.041: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:22:54.048: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:22:56.052: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:22:58.056: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:23:00.063: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:23:02.067: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:23:04.069: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:23:06.076: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:23:08.083: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:23:10.088: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:23:12.097: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:23:14.103: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:23:16.148: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:23:18.154: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:23:20.158: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:23:22.166: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:23:24.171: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:23:26.176: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:23:28.179: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:23:30.186: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:23:32.192: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:23:34.195: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:23:36.201: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:23:38.209: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:23:40.212: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:23:42.219: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:23:44.224: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:23:46.228: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:23:48.231: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:23:50.236: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:23:52.241: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:23:54.245: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:23:56.248: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:23:58.252: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:24:00.256: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:24:02.264: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:24:04.270: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:24:06.273: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:24:08.282: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:24:10.285: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:24:12.291: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:24:14.294: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:24:16.302: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:24:18.307: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:24:20.311: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:24:22.315: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:24:24.317: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:24:26.321: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:24:28.332: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:24:30.336: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:24:32.339: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:24:34.341: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:24:36.344: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:24:38.346: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:24:40.354: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:24:42.364: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:24:44.375: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:24:46.381: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:24:48.387: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:24:50.389: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:24:52.394: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:24:54.399: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:24:56.406: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:24:58.410: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:25:00.415: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:25:02.424: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:25:04.429: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:25:06.433: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:25:08.440: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:25:10.444: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:25:12.455: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:25:14.457: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:25:16.464: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:25:18.468: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:25:20.477: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:25:22.482: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:25:24.486: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:25:26.489: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:25:28.495: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:25:30.500: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:25:32.507: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:25:34.511: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:25:36.516: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:25:38.522: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:25:40.527: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:25:42.530: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:25:44.535: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:25:46.540: INFO: Get pod test-grpc-5441581f-379b-4f05-8f84-c8a6ffa4ba7e in namespace container-probe-5713
  May  5 18:25:48.543: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/05/24 18:25:48.546
  STEP: Destroying namespace "container-probe-5713" for this suite. @ 05/05/24 18:25:48.57
• [242.802 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:176
  STEP: Creating a kubernetes client @ 05/05/24 18:25:48.593
  May  5 18:25:48.594: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename podtemplate @ 05/05/24 18:25:48.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:25:48.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:25:48.623
  STEP: Create a pod template @ 05/05/24 18:25:48.627
  STEP: Replace a pod template @ 05/05/24 18:25:48.633
  May  5 18:25:48.640: INFO: Found updated podtemplate annotation: "true"

  May  5 18:25:48.640: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-858" for this suite. @ 05/05/24 18:25:48.647
• [0.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 05/05/24 18:25:48.656
  May  5 18:25:48.656: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename projected @ 05/05/24 18:25:48.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:25:48.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:25:48.681
  STEP: Creating configMap with name projected-configmap-test-volume-map-8444ed2c-1897-4347-9fac-a91611afb066 @ 05/05/24 18:25:48.686
  STEP: Creating a pod to test consume configMaps @ 05/05/24 18:25:48.693
  STEP: Saw pod success @ 05/05/24 18:25:52.722
  May  5 18:25:52.725: INFO: Trying to get logs from node worker01 pod pod-projected-configmaps-c9267699-ecb7-4cc2-b2d4-fa8955ffc929 container agnhost-container: <nil>
  STEP: delete the pod @ 05/05/24 18:25:52.739
  May  5 18:25:52.750: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7445" for this suite. @ 05/05/24 18:25:52.753
• [4.102 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:165
  STEP: Creating a kubernetes client @ 05/05/24 18:25:52.758
  May  5 18:25:52.758: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename replicaset @ 05/05/24 18:25:52.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:25:52.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:25:52.774
  STEP: Create a ReplicaSet @ 05/05/24 18:25:52.776
  STEP: Verify that the required pods have come up @ 05/05/24 18:25:52.782
  May  5 18:25:52.785: INFO: Pod name sample-pod: Found 0 pods out of 3
  May  5 18:25:57.790: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 05/05/24 18:25:57.79
  May  5 18:26:03.818: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 05/05/24 18:26:03.818
  STEP: DeleteCollection of the ReplicaSets @ 05/05/24 18:26:03.822
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 05/05/24 18:26:03.826
  May  5 18:26:03.830: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4114" for this suite. @ 05/05/24 18:26:03.833
• [11.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1575
  STEP: Creating a kubernetes client @ 05/05/24 18:26:03.841
  May  5 18:26:03.841: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename kubectl @ 05/05/24 18:26:03.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:26:03.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:26:03.876
  STEP: creating the pod @ 05/05/24 18:26:03.878
  May  5 18:26:03.878: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-2529 create -f -'
  May  5 18:26:04.067: INFO: stderr: ""
  May  5 18:26:04.067: INFO: stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 05/05/24 18:26:06.076
  May  5 18:26:06.076: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-2529 label pods pause testing-label=testing-label-value'
  May  5 18:26:06.177: INFO: stderr: ""
  May  5 18:26:06.178: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 05/05/24 18:26:06.178
  May  5 18:26:06.179: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-2529 get pod pause -L testing-label'
  May  5 18:26:06.287: INFO: stderr: ""
  May  5 18:26:06.287: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 05/05/24 18:26:06.287
  May  5 18:26:06.287: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-2529 label pods pause testing-label-'
  May  5 18:26:06.397: INFO: stderr: ""
  May  5 18:26:06.397: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 05/05/24 18:26:06.397
  May  5 18:26:06.397: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-2529 get pod pause -L testing-label'
  May  5 18:26:06.473: INFO: stderr: ""
  May  5 18:26:06.474: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 05/05/24 18:26:06.474
  May  5 18:26:06.474: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-2529 delete --grace-period=0 --force -f -'
  May  5 18:26:06.556: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May  5 18:26:06.556: INFO: stdout: "pod \"pause\" force deleted\n"
  May  5 18:26:06.556: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-2529 get rc,svc -l name=pause --no-headers'
  May  5 18:26:06.632: INFO: stderr: "No resources found in kubectl-2529 namespace.\n"
  May  5 18:26:06.632: INFO: stdout: ""
  May  5 18:26:06.632: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-2529 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  May  5 18:26:06.700: INFO: stderr: ""
  May  5 18:26:06.700: INFO: stdout: ""
  May  5 18:26:06.701: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2529" for this suite. @ 05/05/24 18:26:06.706
• [2.869 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:154
  STEP: Creating a kubernetes client @ 05/05/24 18:26:06.713
  May  5 18:26:06.713: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename secrets @ 05/05/24 18:26:06.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:26:06.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:26:06.732
  STEP: creating a secret @ 05/05/24 18:26:06.738
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 05/05/24 18:26:06.745
  STEP: patching the secret @ 05/05/24 18:26:06.748
  STEP: deleting the secret using a LabelSelector @ 05/05/24 18:26:06.755
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 05/05/24 18:26:06.761
  May  5 18:26:06.764: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7826" for this suite. @ 05/05/24 18:26:06.767
• [0.060 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 05/05/24 18:26:06.773
  May  5 18:26:06.773: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename daemonsets @ 05/05/24 18:26:06.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:26:06.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:26:06.838
  STEP: Creating simple DaemonSet "daemon-set" @ 05/05/24 18:26:06.856
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/05/24 18:26:06.861
  May  5 18:26:06.869: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  5 18:26:06.869: INFO: Node worker00 is running 0 daemon pod, expected 1
  May  5 18:26:07.875: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  5 18:26:07.875: INFO: Node worker00 is running 0 daemon pod, expected 1
  May  5 18:26:08.874: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  May  5 18:26:08.874: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 05/05/24 18:26:08.875
  STEP: DeleteCollection of the DaemonSets @ 05/05/24 18:26:08.877
  STEP: Verify that ReplicaSets have been deleted @ 05/05/24 18:26:08.88
  May  5 18:26:08.892: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"6703"},"items":null}

  May  5 18:26:08.895: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"6704"},"items":[{"metadata":{"name":"daemon-set-fzgc4","generateName":"daemon-set-","namespace":"daemonsets-309","uid":"247d0d08-2e93-4c0e-bfa8-9706b8381cba","resourceVersion":"6701","creationTimestamp":"2024-05-05T18:26:06Z","deletionTimestamp":"2024-05-05T18:26:38Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"df85e6f328bc46b19716cc55524238e53b41c876c093fd99c9a52998eb8ae830","cni.projectcalico.org/podIP":"10.200.5.35/32","cni.projectcalico.org/podIPs":"10.200.5.35/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"1d254e7c-aad7-4aba-8fe0-ba40297c5387","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-05T18:26:06Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1d254e7c-aad7-4aba-8fe0-ba40297c5387\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-05-05T18:26:07Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-05T18:26:07Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.5.35\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-w8ndh","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-w8ndh","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"worker01","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["worker01"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-05T18:26:07Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-05T18:26:06Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-05T18:26:07Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-05T18:26:07Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-05T18:26:06Z"}],"hostIP":"192.168.58.101","hostIPs":[{"ip":"192.168.58.101"}],"podIP":"10.200.5.35","podIPs":[{"ip":"10.200.5.35"}],"startTime":"2024-05-05T18:26:06Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-05T18:26:07Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://bbe311a1490f6d9b3eaad165f0cb2b3fa5abdc8c62e79d1fc3b178530d1c31e7","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-p4pqd","generateName":"daemon-set-","namespace":"daemonsets-309","uid":"8a3f39d8-ba9b-440c-9247-90eaf32b67a7","resourceVersion":"6704","creationTimestamp":"2024-05-05T18:26:06Z","deletionTimestamp":"2024-05-05T18:26:38Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"afb56117268101046a2f5c95cd2495f2f08fdd1b8c97032b81272cee7ed2ec3d","cni.projectcalico.org/podIP":"10.200.131.155/32","cni.projectcalico.org/podIPs":"10.200.131.155/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"1d254e7c-aad7-4aba-8fe0-ba40297c5387","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-05T18:26:06Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1d254e7c-aad7-4aba-8fe0-ba40297c5387\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-05-05T18:26:07Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-05T18:26:08Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.131.155\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-pd79v","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-pd79v","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"worker00","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["worker00"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-05T18:26:08Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-05T18:26:06Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-05T18:26:08Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-05T18:26:08Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-05T18:26:06Z"}],"hostIP":"192.168.58.100","hostIPs":[{"ip":"192.168.58.100"}],"podIP":"10.200.131.155","podIPs":[{"ip":"10.200.131.155"}],"startTime":"2024-05-05T18:26:06Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-05T18:26:07Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://07a18ccd25ad27228e907ad6f55e2421ea1f8b7822fcbbb04a022da23306c796","started":true}],"qosClass":"BestEffort"}}]}

  May  5 18:26:08.902: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-309" for this suite. @ 05/05/24 18:26:08.905
• [2.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 05/05/24 18:26:08.912
  May  5 18:26:08.912: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename dns @ 05/05/24 18:26:08.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:26:08.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:26:08.927
  STEP: Creating a test headless service @ 05/05/24 18:26:08.929
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2544 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-2544;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2544 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-2544;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2544.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-2544.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2544.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-2544.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2544.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-2544.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2544.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-2544.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2544.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-2544.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2544.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-2544.svc;check="$$(dig +notcp +noall +answer +search 100.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.100_udp@PTR;check="$$(dig +tcp +noall +answer +search 100.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.100_tcp@PTR;sleep 1; done
   @ 05/05/24 18:26:08.944
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2544 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2544;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2544 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2544;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2544.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2544.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2544.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2544.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2544.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-2544.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2544.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-2544.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2544.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-2544.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2544.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-2544.svc;check="$$(dig +notcp +noall +answer +search 100.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.100_udp@PTR;check="$$(dig +tcp +noall +answer +search 100.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.100_tcp@PTR;sleep 1; done
   @ 05/05/24 18:26:08.944
  STEP: creating a pod to probe DNS @ 05/05/24 18:26:08.944
  STEP: submitting the pod to kubernetes @ 05/05/24 18:26:08.944
  STEP: retrieving the pod @ 05/05/24 18:26:10.961
  STEP: looking for the results for each expected name from probers @ 05/05/24 18:26:10.962
  May  5 18:26:10.964: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:10.967: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:10.969: INFO: Unable to read wheezy_udp@dns-test-service.dns-2544 from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:10.972: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2544 from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:10.975: INFO: Unable to read wheezy_udp@dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:10.979: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:10.981: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:10.985: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:10.988: INFO: Unable to read wheezy_udp@_http._tcp.test-service-2.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:10.991: INFO: Unable to read wheezy_tcp@_http._tcp.test-service-2.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:10.993: INFO: Unable to read 10.32.0.100_udp@PTR from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:10.996: INFO: Unable to read 10.32.0.100_tcp@PTR from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:10.999: INFO: Unable to read jessie_udp@dns-test-service from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:11.001: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:11.004: INFO: Unable to read jessie_udp@dns-test-service.dns-2544 from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:11.006: INFO: Unable to read jessie_tcp@dns-test-service.dns-2544 from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:11.009: INFO: Unable to read jessie_udp@dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:11.011: INFO: Unable to read jessie_tcp@dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:11.015: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:11.021: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:11.025: INFO: Unable to read jessie_udp@_http._tcp.test-service-2.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:11.028: INFO: Unable to read jessie_tcp@_http._tcp.test-service-2.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:11.031: INFO: Unable to read 10.32.0.100_udp@PTR from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:11.034: INFO: Unable to read 10.32.0.100_tcp@PTR from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:11.034: INFO: Lookups using dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-2544 wheezy_tcp@dns-test-service.dns-2544 wheezy_udp@dns-test-service.dns-2544.svc wheezy_tcp@dns-test-service.dns-2544.svc wheezy_udp@_http._tcp.dns-test-service.dns-2544.svc wheezy_tcp@_http._tcp.dns-test-service.dns-2544.svc wheezy_udp@_http._tcp.test-service-2.dns-2544.svc wheezy_tcp@_http._tcp.test-service-2.dns-2544.svc 10.32.0.100_udp@PTR 10.32.0.100_tcp@PTR jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-2544 jessie_tcp@dns-test-service.dns-2544 jessie_udp@dns-test-service.dns-2544.svc jessie_tcp@dns-test-service.dns-2544.svc jessie_udp@_http._tcp.dns-test-service.dns-2544.svc jessie_tcp@_http._tcp.dns-test-service.dns-2544.svc jessie_udp@_http._tcp.test-service-2.dns-2544.svc jessie_tcp@_http._tcp.test-service-2.dns-2544.svc 10.32.0.100_udp@PTR 10.32.0.100_tcp@PTR]

  May  5 18:26:11.038: INFO: Pod client logs for webserver: 
  May  5 18:26:11.042: INFO: Pod client logs for querier: 
  May  5 18:26:11.045: INFO: Pod client logs for jessie-querier: 
  May  5 18:26:16.056: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:16.062: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:16.066: INFO: Unable to read wheezy_udp@dns-test-service.dns-2544 from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:16.071: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2544 from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:16.078: INFO: Unable to read wheezy_udp@dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:16.082: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:16.087: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:16.091: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:16.094: INFO: Unable to read wheezy_udp@_http._tcp.test-service-2.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:16.097: INFO: Unable to read wheezy_tcp@_http._tcp.test-service-2.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:16.100: INFO: Unable to read 10.32.0.100_udp@PTR from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:16.104: INFO: Unable to read 10.32.0.100_tcp@PTR from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:16.107: INFO: Unable to read jessie_udp@dns-test-service from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:16.110: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:16.113: INFO: Unable to read jessie_udp@dns-test-service.dns-2544 from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:16.116: INFO: Unable to read jessie_tcp@dns-test-service.dns-2544 from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:16.120: INFO: Unable to read jessie_udp@dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:16.124: INFO: Unable to read jessie_tcp@dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:16.128: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:16.130: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:16.133: INFO: Unable to read jessie_udp@_http._tcp.test-service-2.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:16.136: INFO: Unable to read jessie_tcp@_http._tcp.test-service-2.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:16.139: INFO: Unable to read 10.32.0.100_udp@PTR from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:16.142: INFO: Unable to read 10.32.0.100_tcp@PTR from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:16.142: INFO: Lookups using dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-2544 wheezy_tcp@dns-test-service.dns-2544 wheezy_udp@dns-test-service.dns-2544.svc wheezy_tcp@dns-test-service.dns-2544.svc wheezy_udp@_http._tcp.dns-test-service.dns-2544.svc wheezy_tcp@_http._tcp.dns-test-service.dns-2544.svc wheezy_udp@_http._tcp.test-service-2.dns-2544.svc wheezy_tcp@_http._tcp.test-service-2.dns-2544.svc 10.32.0.100_udp@PTR 10.32.0.100_tcp@PTR jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-2544 jessie_tcp@dns-test-service.dns-2544 jessie_udp@dns-test-service.dns-2544.svc jessie_tcp@dns-test-service.dns-2544.svc jessie_udp@_http._tcp.dns-test-service.dns-2544.svc jessie_tcp@_http._tcp.dns-test-service.dns-2544.svc jessie_udp@_http._tcp.test-service-2.dns-2544.svc jessie_tcp@_http._tcp.test-service-2.dns-2544.svc 10.32.0.100_udp@PTR 10.32.0.100_tcp@PTR]

  May  5 18:26:16.147: INFO: Pod client logs for webserver: 
  May  5 18:26:16.151: INFO: Pod client logs for querier: 
  May  5 18:26:16.156: INFO: Pod client logs for jessie-querier: 
  May  5 18:26:21.055: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:21.057: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:21.069: INFO: Unable to read wheezy_udp@dns-test-service.dns-2544 from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:21.072: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2544 from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:21.074: INFO: Unable to read wheezy_udp@dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:21.077: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:21.080: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:21.084: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:21.088: INFO: Unable to read wheezy_udp@_http._tcp.test-service-2.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:21.091: INFO: Unable to read wheezy_tcp@_http._tcp.test-service-2.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:21.097: INFO: Unable to read 10.32.0.100_udp@PTR from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:21.100: INFO: Unable to read 10.32.0.100_tcp@PTR from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:21.103: INFO: Unable to read jessie_udp@dns-test-service from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:21.107: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:21.110: INFO: Unable to read jessie_udp@dns-test-service.dns-2544 from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:21.114: INFO: Unable to read jessie_tcp@dns-test-service.dns-2544 from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:21.119: INFO: Unable to read jessie_udp@dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:21.124: INFO: Unable to read jessie_tcp@dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:21.128: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:21.132: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:21.135: INFO: Unable to read jessie_udp@_http._tcp.test-service-2.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:21.138: INFO: Unable to read jessie_tcp@_http._tcp.test-service-2.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:21.140: INFO: Unable to read 10.32.0.100_udp@PTR from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:21.143: INFO: Unable to read 10.32.0.100_tcp@PTR from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:21.143: INFO: Lookups using dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-2544 wheezy_tcp@dns-test-service.dns-2544 wheezy_udp@dns-test-service.dns-2544.svc wheezy_tcp@dns-test-service.dns-2544.svc wheezy_udp@_http._tcp.dns-test-service.dns-2544.svc wheezy_tcp@_http._tcp.dns-test-service.dns-2544.svc wheezy_udp@_http._tcp.test-service-2.dns-2544.svc wheezy_tcp@_http._tcp.test-service-2.dns-2544.svc 10.32.0.100_udp@PTR 10.32.0.100_tcp@PTR jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-2544 jessie_tcp@dns-test-service.dns-2544 jessie_udp@dns-test-service.dns-2544.svc jessie_tcp@dns-test-service.dns-2544.svc jessie_udp@_http._tcp.dns-test-service.dns-2544.svc jessie_tcp@_http._tcp.dns-test-service.dns-2544.svc jessie_udp@_http._tcp.test-service-2.dns-2544.svc jessie_tcp@_http._tcp.test-service-2.dns-2544.svc 10.32.0.100_udp@PTR 10.32.0.100_tcp@PTR]

  May  5 18:26:21.148: INFO: Pod client logs for webserver: 
  May  5 18:26:21.152: INFO: Pod client logs for querier: 
  May  5 18:26:21.157: INFO: Pod client logs for jessie-querier: 
  May  5 18:26:26.054: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:26.059: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:26.063: INFO: Unable to read wheezy_udp@dns-test-service.dns-2544 from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:26.069: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2544 from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:26.072: INFO: Unable to read wheezy_udp@dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:26.074: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:26.091: INFO: Unable to read jessie_udp@dns-test-service from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:26.093: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:26.095: INFO: Unable to read jessie_udp@dns-test-service.dns-2544 from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:26.098: INFO: Unable to read jessie_tcp@dns-test-service.dns-2544 from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:26.099: INFO: Unable to read jessie_udp@dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:26.101: INFO: Unable to read jessie_tcp@dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:26.116: INFO: Lookups using dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-2544 wheezy_tcp@dns-test-service.dns-2544 wheezy_udp@dns-test-service.dns-2544.svc wheezy_tcp@dns-test-service.dns-2544.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-2544 jessie_tcp@dns-test-service.dns-2544 jessie_udp@dns-test-service.dns-2544.svc jessie_tcp@dns-test-service.dns-2544.svc]

  May  5 18:26:26.120: INFO: Pod client logs for webserver: 
  May  5 18:26:26.123: INFO: Pod client logs for querier: 
  May  5 18:26:26.126: INFO: Pod client logs for jessie-querier: 
  May  5 18:26:31.050: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:31.052: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:31.054: INFO: Unable to read wheezy_udp@dns-test-service.dns-2544 from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:31.059: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2544 from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:31.062: INFO: Unable to read wheezy_udp@dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:31.067: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:31.097: INFO: Unable to read jessie_udp@dns-test-service from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:31.100: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:31.103: INFO: Unable to read jessie_udp@dns-test-service.dns-2544 from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:31.107: INFO: Unable to read jessie_tcp@dns-test-service.dns-2544 from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:31.109: INFO: Unable to read jessie_udp@dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:31.113: INFO: Unable to read jessie_tcp@dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:31.131: INFO: Lookups using dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-2544 wheezy_tcp@dns-test-service.dns-2544 wheezy_udp@dns-test-service.dns-2544.svc wheezy_tcp@dns-test-service.dns-2544.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-2544 jessie_tcp@dns-test-service.dns-2544 jessie_udp@dns-test-service.dns-2544.svc jessie_tcp@dns-test-service.dns-2544.svc]

  May  5 18:26:31.136: INFO: Pod client logs for webserver: 
  May  5 18:26:31.141: INFO: Pod client logs for querier: 
  May  5 18:26:31.145: INFO: Pod client logs for jessie-querier: 
  May  5 18:26:36.050: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:36.057: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:36.062: INFO: Unable to read wheezy_udp@dns-test-service.dns-2544 from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:36.064: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2544 from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:36.067: INFO: Unable to read wheezy_udp@dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:36.069: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:36.090: INFO: Unable to read jessie_udp@dns-test-service from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:36.094: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:36.097: INFO: Unable to read jessie_udp@dns-test-service.dns-2544 from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:36.099: INFO: Unable to read jessie_tcp@dns-test-service.dns-2544 from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:36.102: INFO: Unable to read jessie_udp@dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:36.104: INFO: Unable to read jessie_tcp@dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:36.119: INFO: Lookups using dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-2544 wheezy_tcp@dns-test-service.dns-2544 wheezy_udp@dns-test-service.dns-2544.svc wheezy_tcp@dns-test-service.dns-2544.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-2544 jessie_tcp@dns-test-service.dns-2544 jessie_udp@dns-test-service.dns-2544.svc jessie_tcp@dns-test-service.dns-2544.svc]

  May  5 18:26:36.124: INFO: Pod client logs for webserver: 
  May  5 18:26:36.130: INFO: Pod client logs for querier: 
  May  5 18:26:36.136: INFO: Pod client logs for jessie-querier: 
  May  5 18:26:41.049: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:41.052: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:41.057: INFO: Unable to read wheezy_udp@dns-test-service.dns-2544 from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:41.060: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2544 from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:41.063: INFO: Unable to read wheezy_udp@dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:41.066: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:41.083: INFO: Unable to read jessie_udp@dns-test-service from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:41.089: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:41.092: INFO: Unable to read jessie_udp@dns-test-service.dns-2544 from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:41.097: INFO: Unable to read jessie_tcp@dns-test-service.dns-2544 from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:41.100: INFO: Unable to read jessie_udp@dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:41.104: INFO: Unable to read jessie_tcp@dns-test-service.dns-2544.svc from pod dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1: the server could not find the requested resource (get pods dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1)
  May  5 18:26:41.127: INFO: Lookups using dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-2544 wheezy_tcp@dns-test-service.dns-2544 wheezy_udp@dns-test-service.dns-2544.svc wheezy_tcp@dns-test-service.dns-2544.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-2544 jessie_tcp@dns-test-service.dns-2544 jessie_udp@dns-test-service.dns-2544.svc jessie_tcp@dns-test-service.dns-2544.svc]

  May  5 18:26:41.132: INFO: Pod client logs for webserver: 
  May  5 18:26:41.138: INFO: Pod client logs for querier: 
  May  5 18:26:41.142: INFO: Pod client logs for jessie-querier: 
  May  5 18:26:46.143: INFO: DNS probes using dns-2544/dns-test-ba80d1a2-d125-409a-bfb6-d4fd20cd69f1 succeeded

  May  5 18:26:46.143: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/05/24 18:26:46.146
  STEP: deleting the test service @ 05/05/24 18:26:46.187
  STEP: deleting the test headless service @ 05/05/24 18:26:46.217
  STEP: Destroying namespace "dns-2544" for this suite. @ 05/05/24 18:26:46.232
• [37.330 seconds]
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:396
  STEP: Creating a kubernetes client @ 05/05/24 18:26:46.242
  May  5 18:26:46.242: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename kubectl @ 05/05/24 18:26:46.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:26:46.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:26:46.307
  STEP: creating all guestbook components @ 05/05/24 18:26:46.31
  May  5 18:26:46.310: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  May  5 18:26:46.311: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-4776 create -f -'
  May  5 18:26:46.525: INFO: stderr: ""
  May  5 18:26:46.525: INFO: stdout: "service/agnhost-replica created\n"
  May  5 18:26:46.525: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  May  5 18:26:46.526: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-4776 create -f -'
  May  5 18:26:46.748: INFO: stderr: ""
  May  5 18:26:46.748: INFO: stdout: "service/agnhost-primary created\n"
  May  5 18:26:46.749: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  May  5 18:26:46.749: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-4776 create -f -'
  May  5 18:26:46.993: INFO: stderr: ""
  May  5 18:26:46.993: INFO: stdout: "service/frontend created\n"
  May  5 18:26:46.993: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  May  5 18:26:46.994: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-4776 create -f -'
  May  5 18:26:47.306: INFO: stderr: ""
  May  5 18:26:47.306: INFO: stdout: "deployment.apps/frontend created\n"
  May  5 18:26:47.306: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  May  5 18:26:47.306: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-4776 create -f -'
  May  5 18:26:47.647: INFO: stderr: ""
  May  5 18:26:47.647: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  May  5 18:26:47.648: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  May  5 18:26:47.648: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-4776 create -f -'
  May  5 18:26:48.075: INFO: stderr: ""
  May  5 18:26:48.076: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 05/05/24 18:26:48.076
  May  5 18:26:48.076: INFO: Waiting for all frontend pods to be Running.
  May  5 18:26:53.127: INFO: Waiting for frontend to serve content.
  May  5 18:26:53.137: INFO: Trying to add a new entry to the guestbook.
  May  5 18:26:53.156: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 05/05/24 18:26:53.165
  May  5 18:26:53.165: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-4776 delete --grace-period=0 --force -f -'
  May  5 18:26:53.217: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May  5 18:26:53.217: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 05/05/24 18:26:53.218
  May  5 18:26:53.218: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-4776 delete --grace-period=0 --force -f -'
  May  5 18:26:53.267: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May  5 18:26:53.267: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/05/24 18:26:53.267
  May  5 18:26:53.268: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-4776 delete --grace-period=0 --force -f -'
  May  5 18:26:53.325: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May  5 18:26:53.325: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/05/24 18:26:53.325
  May  5 18:26:53.325: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-4776 delete --grace-period=0 --force -f -'
  May  5 18:26:53.376: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May  5 18:26:53.376: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/05/24 18:26:53.376
  May  5 18:26:53.376: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-4776 delete --grace-period=0 --force -f -'
  May  5 18:26:53.473: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May  5 18:26:53.473: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/05/24 18:26:53.473
  May  5 18:26:53.473: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-4776 delete --grace-period=0 --force -f -'
  May  5 18:26:53.568: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May  5 18:26:53.568: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  May  5 18:26:53.569: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4776" for this suite. @ 05/05/24 18:26:53.577
• [7.359 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 05/05/24 18:26:53.601
  May  5 18:26:53.601: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename configmap @ 05/05/24 18:26:53.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:26:53.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:26:53.652
  STEP: Creating configMap with name configmap-test-volume-bb80a5bb-a1cf-469d-937b-9fc552adb5c7 @ 05/05/24 18:26:53.682
  STEP: Creating a pod to test consume configMaps @ 05/05/24 18:26:53.697
  STEP: Saw pod success @ 05/05/24 18:26:57.746
  May  5 18:26:57.748: INFO: Trying to get logs from node worker01 pod pod-configmaps-2c732df2-8fc3-4a87-852c-b391a6a81bba container agnhost-container: <nil>
  STEP: delete the pod @ 05/05/24 18:26:57.751
  May  5 18:26:57.761: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2619" for this suite. @ 05/05/24 18:26:57.764
• [4.166 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:808
  STEP: Creating a kubernetes client @ 05/05/24 18:26:57.769
  May  5 18:26:57.769: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename svcaccounts @ 05/05/24 18:26:57.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:26:57.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:26:57.782
  STEP: Creating ServiceAccount "e2e-sa-vz2ld"  @ 05/05/24 18:26:57.785
  May  5 18:26:57.788: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-vz2ld"  @ 05/05/24 18:26:57.788
  May  5 18:26:57.795: INFO: AutomountServiceAccountToken: true
  May  5 18:26:57.795: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2569" for this suite. @ 05/05/24 18:26:57.798
• [0.033 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:451
  STEP: Creating a kubernetes client @ 05/05/24 18:26:57.802
  May  5 18:26:57.803: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename resourcequota @ 05/05/24 18:26:57.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:26:57.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:26:57.817
  STEP: Counting existing ResourceQuota @ 05/05/24 18:26:57.819
  STEP: Creating a ResourceQuota @ 05/05/24 18:27:02.821
  STEP: Ensuring resource quota status is calculated @ 05/05/24 18:27:02.824
  STEP: Creating a ReplicaSet @ 05/05/24 18:27:04.83
  STEP: Ensuring resource quota status captures replicaset creation @ 05/05/24 18:27:04.851
  STEP: Deleting a ReplicaSet @ 05/05/24 18:27:06.854
  STEP: Ensuring resource quota status released usage @ 05/05/24 18:27:06.86
  May  5 18:27:08.868: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2781" for this suite. @ 05/05/24 18:27:08.872
• [11.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 05/05/24 18:27:08.888
  May  5 18:27:08.888: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename container-probe @ 05/05/24 18:27:08.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:27:08.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:27:08.902
  STEP: Creating pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231 @ 05/05/24 18:27:08.904
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/05/24 18:27:10.915
  May  5 18:27:10.917: INFO: Initial restart count of pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 is 0
  May  5 18:27:10.919: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:27:12.930: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:27:14.938: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:27:16.941: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:27:18.944: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:27:20.950: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:27:22.954: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:27:24.957: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:27:26.964: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:27:28.970: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:27:30.976: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:27:32.981: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:27:34.986: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:27:36.991: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:27:38.997: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:27:41.003: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:27:43.008: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:27:45.013: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:27:47.016: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:27:49.024: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:27:51.027: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:27:53.033: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:27:55.038: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:27:57.042: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:27:59.045: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:28:01.049: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:28:03.053: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:28:05.061: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:28:07.064: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:28:09.071: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:28:11.075: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:28:13.082: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:28:15.090: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:28:17.093: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:28:19.102: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:28:21.107: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:28:23.115: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:28:25.123: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:28:27.127: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:28:29.129: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:28:31.135: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:28:33.139: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:28:35.144: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:28:37.149: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:28:39.156: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:28:41.164: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:28:43.170: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:28:45.176: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:28:47.184: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:28:49.189: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:28:51.193: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:28:53.197: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:28:55.200: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:28:57.203: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:28:59.209: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:29:01.226: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:29:03.231: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:29:05.236: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:29:07.240: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:29:09.244: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:29:11.256: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:29:13.264: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:29:15.268: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:29:17.274: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:29:19.277: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:29:21.283: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:29:23.289: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:29:25.295: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:29:27.299: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:29:29.303: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:29:31.309: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:29:33.314: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:29:35.318: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:29:37.327: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:29:39.333: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:29:41.336: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:29:43.339: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:29:45.341: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:29:47.346: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:29:49.353: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:29:51.358: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:29:53.366: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:29:55.372: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:29:57.381: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:29:59.388: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:30:01.395: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:30:03.399: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:30:05.403: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:30:07.405: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:30:09.410: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:30:11.414: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:30:13.419: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:30:15.422: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:30:17.432: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:30:19.434: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:30:21.437: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:30:23.446: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:30:25.452: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:30:27.459: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:30:29.467: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:30:31.474: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:30:33.479: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:30:35.484: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:30:37.488: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:30:39.491: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:30:41.494: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:30:43.499: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:30:45.503: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:30:47.509: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:30:49.513: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:30:51.520: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:30:53.526: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:30:55.533: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:30:57.536: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:30:59.551: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:31:01.557: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:31:03.560: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:31:05.563: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:31:07.570: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:31:09.573: INFO: Get pod busybox-877d0186-1d97-4263-85b6-c0e3ea89e0a5 in namespace container-probe-4231
  May  5 18:31:11.574: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/05/24 18:31:11.58
  STEP: Destroying namespace "container-probe-4231" for this suite. @ 05/05/24 18:31:11.598
• [242.718 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 05/05/24 18:31:11.606
  May  5 18:31:11.606: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename subpath @ 05/05/24 18:31:11.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:31:11.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:31:11.622
  STEP: Setting up data @ 05/05/24 18:31:11.625
  STEP: Creating pod pod-subpath-test-secret-t6sl @ 05/05/24 18:31:11.634
  STEP: Creating a pod to test atomic-volume-subpath @ 05/05/24 18:31:11.634
  STEP: Saw pod success @ 05/05/24 18:31:35.717
  May  5 18:31:35.721: INFO: Trying to get logs from node worker01 pod pod-subpath-test-secret-t6sl container test-container-subpath-secret-t6sl: <nil>
  STEP: delete the pod @ 05/05/24 18:31:35.73
  STEP: Deleting pod pod-subpath-test-secret-t6sl @ 05/05/24 18:31:35.743
  May  5 18:31:35.743: INFO: Deleting pod "pod-subpath-test-secret-t6sl" in namespace "subpath-2177"
  May  5 18:31:35.745: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2177" for this suite. @ 05/05/24 18:31:35.747
• [24.146 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:124
  STEP: Creating a kubernetes client @ 05/05/24 18:31:35.753
  May  5 18:31:35.753: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename controllerrevisions @ 05/05/24 18:31:35.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:31:35.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:31:35.771
  STEP: Creating DaemonSet "e2e-zm89c-daemon-set" @ 05/05/24 18:31:35.779
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/05/24 18:31:35.783
  May  5 18:31:35.790: INFO: Number of nodes with available pods controlled by daemonset e2e-zm89c-daemon-set: 0
  May  5 18:31:35.790: INFO: Node worker00 is running 0 daemon pod, expected 1
  May  5 18:31:36.795: INFO: Number of nodes with available pods controlled by daemonset e2e-zm89c-daemon-set: 1
  May  5 18:31:36.795: INFO: Node worker01 is running 0 daemon pod, expected 1
  May  5 18:31:37.801: INFO: Number of nodes with available pods controlled by daemonset e2e-zm89c-daemon-set: 2
  May  5 18:31:37.801: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset e2e-zm89c-daemon-set
  STEP: Confirm DaemonSet "e2e-zm89c-daemon-set" successfully created with "daemonset-name=e2e-zm89c-daemon-set" label @ 05/05/24 18:31:37.805
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-zm89c-daemon-set" @ 05/05/24 18:31:37.81
  May  5 18:31:37.813: INFO: Located ControllerRevision: "e2e-zm89c-daemon-set-c8fbdcc44"
  STEP: Patching ControllerRevision "e2e-zm89c-daemon-set-c8fbdcc44" @ 05/05/24 18:31:37.814
  May  5 18:31:37.819: INFO: e2e-zm89c-daemon-set-c8fbdcc44 has been patched
  STEP: Create a new ControllerRevision @ 05/05/24 18:31:37.819
  May  5 18:31:37.824: INFO: Created ControllerRevision: e2e-zm89c-daemon-set-5486f6fdf4
  STEP: Confirm that there are two ControllerRevisions @ 05/05/24 18:31:37.824
  May  5 18:31:37.824: INFO: Requesting list of ControllerRevisions to confirm quantity
  May  5 18:31:37.827: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-zm89c-daemon-set-c8fbdcc44" @ 05/05/24 18:31:37.827
  STEP: Confirm that there is only one ControllerRevision @ 05/05/24 18:31:37.832
  May  5 18:31:37.832: INFO: Requesting list of ControllerRevisions to confirm quantity
  May  5 18:31:37.835: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-zm89c-daemon-set-5486f6fdf4" @ 05/05/24 18:31:37.837
  May  5 18:31:37.843: INFO: e2e-zm89c-daemon-set-5486f6fdf4 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 05/05/24 18:31:37.843
  W0505 18:31:37.848273      20 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 05/05/24 18:31:37.848
  May  5 18:31:37.848: INFO: Requesting list of ControllerRevisions to confirm quantity
  May  5 18:31:38.851: INFO: Requesting list of ControllerRevisions to confirm quantity
  May  5 18:31:38.853: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-zm89c-daemon-set-5486f6fdf4=updated" @ 05/05/24 18:31:38.854
  STEP: Confirm that there is only one ControllerRevision @ 05/05/24 18:31:38.859
  May  5 18:31:38.859: INFO: Requesting list of ControllerRevisions to confirm quantity
  May  5 18:31:38.862: INFO: Found 1 ControllerRevisions
  May  5 18:31:38.865: INFO: ControllerRevision "e2e-zm89c-daemon-set-d478d866c" has revision 3
  STEP: Deleting DaemonSet "e2e-zm89c-daemon-set" @ 05/05/24 18:31:38.869
  STEP: deleting DaemonSet.extensions e2e-zm89c-daemon-set in namespace controllerrevisions-6113, will wait for the garbage collector to delete the pods @ 05/05/24 18:31:38.869
  May  5 18:31:38.930: INFO: Deleting DaemonSet.extensions e2e-zm89c-daemon-set took: 4.056311ms
  May  5 18:31:39.031: INFO: Terminating DaemonSet.extensions e2e-zm89c-daemon-set pods took: 100.982797ms
  May  5 18:31:40.338: INFO: Number of nodes with available pods controlled by daemonset e2e-zm89c-daemon-set: 0
  May  5 18:31:40.338: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-zm89c-daemon-set
  May  5 18:31:40.341: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"8422"},"items":null}

  May  5 18:31:40.344: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"8422"},"items":null}

  May  5 18:31:40.353: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-6113" for this suite. @ 05/05/24 18:31:40.356
• [4.609 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:143
  STEP: Creating a kubernetes client @ 05/05/24 18:31:40.363
  May  5 18:31:40.363: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename replicaset @ 05/05/24 18:31:40.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:31:40.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:31:40.381
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 05/05/24 18:31:40.385
  May  5 18:31:40.392: INFO: Pod name sample-pod: Found 0 pods out of 1
  May  5 18:31:45.395: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/05/24 18:31:45.395
  STEP: getting scale subresource @ 05/05/24 18:31:45.395
  STEP: updating a scale subresource @ 05/05/24 18:31:45.397
  STEP: verifying the replicaset Spec.Replicas was modified @ 05/05/24 18:31:45.402
  STEP: Patch a scale subresource @ 05/05/24 18:31:45.408
  May  5 18:31:45.419: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4066" for this suite. @ 05/05/24 18:31:45.423
• [5.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1781
  STEP: Creating a kubernetes client @ 05/05/24 18:31:45.436
  May  5 18:31:45.436: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename kubectl @ 05/05/24 18:31:45.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:31:45.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:31:45.455
  STEP: starting the proxy server @ 05/05/24 18:31:45.459
  May  5 18:31:45.459: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-3638 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 05/05/24 18:31:45.508
  May  5 18:31:45.516: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3638" for this suite. @ 05/05/24 18:31:45.519
• [0.090 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for services  [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 05/05/24 18:31:45.528
  May  5 18:31:45.528: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename dns @ 05/05/24 18:31:45.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:31:45.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:31:45.552
  STEP: Creating a test headless service @ 05/05/24 18:31:45.555
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6739.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-6739.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6739.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-6739.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6739.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6739.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6739.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-6739.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6739.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-6739.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 185.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.185_udp@PTR;check="$$(dig +tcp +noall +answer +search 185.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.185_tcp@PTR;sleep 1; done
   @ 05/05/24 18:31:45.575
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6739.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6739.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6739.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6739.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6739.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6739.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6739.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-6739.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6739.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-6739.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 185.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.185_udp@PTR;check="$$(dig +tcp +noall +answer +search 185.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.185_tcp@PTR;sleep 1; done
   @ 05/05/24 18:31:45.576
  STEP: creating a pod to probe DNS @ 05/05/24 18:31:45.576
  STEP: submitting the pod to kubernetes @ 05/05/24 18:31:45.577
  STEP: retrieving the pod @ 05/05/24 18:31:47.602
  STEP: looking for the results for each expected name from probers @ 05/05/24 18:31:47.604
  May  5 18:31:47.610: INFO: Unable to read wheezy_udp@dns-test-service.dns-6739.svc.cluster.local from pod dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1: the server could not find the requested resource (get pods dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1)
  May  5 18:31:47.613: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6739.svc.cluster.local from pod dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1: the server could not find the requested resource (get pods dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1)
  May  5 18:31:47.616: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local from pod dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1: the server could not find the requested resource (get pods dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1)
  May  5 18:31:47.619: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local from pod dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1: the server could not find the requested resource (get pods dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1)
  May  5 18:31:47.632: INFO: Unable to read jessie_udp@dns-test-service.dns-6739.svc.cluster.local from pod dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1: the server could not find the requested resource (get pods dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1)
  May  5 18:31:47.634: INFO: Unable to read jessie_tcp@dns-test-service.dns-6739.svc.cluster.local from pod dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1: the server could not find the requested resource (get pods dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1)
  May  5 18:31:47.637: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local from pod dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1: the server could not find the requested resource (get pods dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1)
  May  5 18:31:47.640: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local from pod dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1: the server could not find the requested resource (get pods dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1)
  May  5 18:31:47.652: INFO: Lookups using dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1 failed for: [wheezy_udp@dns-test-service.dns-6739.svc.cluster.local wheezy_tcp@dns-test-service.dns-6739.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local jessie_udp@dns-test-service.dns-6739.svc.cluster.local jessie_tcp@dns-test-service.dns-6739.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local]

  May  5 18:31:47.660: INFO: Pod client logs for webserver: 
  May  5 18:31:47.665: INFO: Pod client logs for querier: 
  May  5 18:31:47.670: INFO: Pod client logs for jessie-querier: 
  May  5 18:31:52.683: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local from pod dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1: the server could not find the requested resource (get pods dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1)
  May  5 18:31:52.685: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local from pod dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1: the server could not find the requested resource (get pods dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1)
  May  5 18:31:52.699: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local from pod dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1: the server could not find the requested resource (get pods dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1)
  May  5 18:31:52.702: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local from pod dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1: the server could not find the requested resource (get pods dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1)
  May  5 18:31:52.709: INFO: Lookups using dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1 failed for: [wheezy_udp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local]

  May  5 18:31:52.712: INFO: Pod client logs for webserver: 
  May  5 18:31:52.716: INFO: Pod client logs for querier: 
  May  5 18:31:52.720: INFO: Pod client logs for jessie-querier: 
  May  5 18:31:57.683: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local from pod dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1: the server could not find the requested resource (get pods dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1)
  May  5 18:31:57.684: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local from pod dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1: the server could not find the requested resource (get pods dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1)
  May  5 18:31:57.700: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local from pod dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1: the server could not find the requested resource (get pods dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1)
  May  5 18:31:57.703: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local from pod dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1: the server could not find the requested resource (get pods dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1)
  May  5 18:31:57.713: INFO: Lookups using dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1 failed for: [wheezy_udp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local]

  May  5 18:31:57.718: INFO: Pod client logs for webserver: 
  May  5 18:31:57.722: INFO: Pod client logs for querier: 
  May  5 18:31:57.726: INFO: Pod client logs for jessie-querier: 
  May  5 18:32:02.685: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local from pod dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1: the server could not find the requested resource (get pods dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1)
  May  5 18:32:02.689: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local from pod dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1: the server could not find the requested resource (get pods dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1)
  May  5 18:32:02.710: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local from pod dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1: the server could not find the requested resource (get pods dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1)
  May  5 18:32:02.713: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local from pod dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1: the server could not find the requested resource (get pods dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1)
  May  5 18:32:02.730: INFO: Lookups using dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1 failed for: [wheezy_udp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local]

  May  5 18:32:02.737: INFO: Pod client logs for webserver: 
  May  5 18:32:02.744: INFO: Pod client logs for querier: 
  May  5 18:32:02.750: INFO: Pod client logs for jessie-querier: 
  May  5 18:32:07.685: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local from pod dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1: the server could not find the requested resource (get pods dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1)
  May  5 18:32:07.689: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local from pod dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1: the server could not find the requested resource (get pods dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1)
  May  5 18:32:07.708: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local from pod dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1: the server could not find the requested resource (get pods dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1)
  May  5 18:32:07.710: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local from pod dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1: the server could not find the requested resource (get pods dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1)
  May  5 18:32:07.721: INFO: Lookups using dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1 failed for: [wheezy_udp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local]

  May  5 18:32:07.726: INFO: Pod client logs for webserver: 
  May  5 18:32:07.733: INFO: Pod client logs for querier: 
  May  5 18:32:07.739: INFO: Pod client logs for jessie-querier: 
  May  5 18:32:12.687: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local from pod dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1: the server could not find the requested resource (get pods dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1)
  May  5 18:32:12.690: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local from pod dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1: the server could not find the requested resource (get pods dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1)
  May  5 18:32:12.707: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local from pod dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1: the server could not find the requested resource (get pods dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1)
  May  5 18:32:12.711: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local from pod dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1: the server could not find the requested resource (get pods dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1)
  May  5 18:32:12.721: INFO: Lookups using dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1 failed for: [wheezy_udp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6739.svc.cluster.local]

  May  5 18:32:12.726: INFO: Pod client logs for webserver: 
  May  5 18:32:12.731: INFO: Pod client logs for querier: 
  May  5 18:32:12.737: INFO: Pod client logs for jessie-querier: 
  May  5 18:32:17.709: INFO: DNS probes using dns-6739/dns-test-e683b64b-6b10-44e1-858f-90f90524a4e1 succeeded

  May  5 18:32:17.709: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/05/24 18:32:17.712
  STEP: deleting the test service @ 05/05/24 18:32:17.747
  STEP: deleting the test headless service @ 05/05/24 18:32:17.769
  STEP: Destroying namespace "dns-6739" for this suite. @ 05/05/24 18:32:17.787
• [32.267 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:68
  STEP: Creating a kubernetes client @ 05/05/24 18:32:17.795
  May  5 18:32:17.795: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename endpointslice @ 05/05/24 18:32:17.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:32:17.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:32:17.811
  May  5 18:32:17.819: INFO: Endpoints addresses: [192.168.58.100] , ports: [6443]
  May  5 18:32:17.819: INFO: EndpointSlices addresses: [192.168.58.100] , ports: [6443]
  May  5 18:32:17.819: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9083" for this suite. @ 05/05/24 18:32:17.823
• [0.033 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 05/05/24 18:32:17.829
  May  5 18:32:17.829: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename pods @ 05/05/24 18:32:17.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:32:17.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:32:17.843
  STEP: Create set of pods @ 05/05/24 18:32:17.846
  May  5 18:32:17.855: INFO: created test-pod-1
  May  5 18:32:17.864: INFO: created test-pod-2
  May  5 18:32:17.873: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 05/05/24 18:32:17.873
  STEP: waiting for all pods to be deleted @ 05/05/24 18:32:19.916
  May  5 18:32:19.917: INFO: Pod quantity 3 is different from expected quantity 0
  May  5 18:32:20.921: INFO: Pod quantity 3 is different from expected quantity 0
  May  5 18:32:21.923: INFO: Pod quantity 3 is different from expected quantity 0
  May  5 18:32:22.921: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2903" for this suite. @ 05/05/24 18:32:22.924
• [5.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 05/05/24 18:32:22.933
  May  5 18:32:22.934: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename container-probe @ 05/05/24 18:32:22.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:32:22.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:32:22.952
  STEP: Creating pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540 @ 05/05/24 18:32:22.954
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/05/24 18:32:24.976
  May  5 18:32:24.979: INFO: Initial restart count of pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 is 0
  May  5 18:32:24.981: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:32:26.985: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:32:28.991: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:32:30.994: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:32:32.998: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:32:35.006: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:32:37.010: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:32:39.012: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:32:41.019: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:32:43.025: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:32:45.029: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:32:47.031: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:32:49.039: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:32:51.044: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:32:53.048: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:32:55.051: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:32:57.056: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:32:59.058: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:33:01.061: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:33:03.066: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:33:05.069: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:33:07.072: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:33:09.077: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:33:11.082: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:33:13.087: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:33:15.092: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:33:17.094: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:33:19.097: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:33:21.103: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:33:23.107: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:33:25.111: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:33:27.114: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:33:29.116: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:33:31.123: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:33:33.126: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:33:35.132: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:33:37.135: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:33:39.145: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:33:41.150: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:33:43.153: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:33:45.157: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:33:47.161: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:33:49.167: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:33:51.176: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:33:53.179: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:33:55.183: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:33:57.186: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:33:59.190: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:34:01.193: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:34:03.199: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:34:05.203: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:34:07.208: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:34:09.211: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:34:11.214: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:34:13.217: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:34:15.223: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:34:17.274: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:34:19.281: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:34:21.286: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:34:23.291: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:34:25.295: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:34:27.298: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:34:29.303: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:34:31.309: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:34:33.314: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:34:35.317: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:34:37.326: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:34:39.328: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:34:41.332: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:34:43.336: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:34:45.338: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:34:47.344: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:34:49.351: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:34:51.355: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:34:53.365: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:34:55.367: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:34:57.370: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:34:59.379: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:35:01.380: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:35:03.387: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:35:05.391: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:35:07.397: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:35:09.401: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:35:11.405: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:35:13.410: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:35:15.416: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:35:17.421: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:35:19.427: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:35:21.435: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:35:23.437: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:35:25.445: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:35:27.448: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:35:29.453: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:35:31.456: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:35:33.462: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:35:35.468: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:35:37.473: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:35:39.477: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:35:41.485: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:35:43.491: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:35:45.497: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:35:47.504: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:35:49.517: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:35:51.524: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:35:53.531: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:35:55.535: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:35:57.541: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:35:59.545: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:36:01.552: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:36:03.556: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:36:05.563: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:36:07.573: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:36:09.577: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:36:11.581: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:36:13.589: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:36:15.591: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:36:17.594: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:36:19.598: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:36:21.601: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:36:23.604: INFO: Get pod liveness-572b54c3-9ba0-47ab-abfd-7d27be749c69 in namespace container-probe-1540
  May  5 18:36:25.604: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/05/24 18:36:25.612
  STEP: Destroying namespace "container-probe-1540" for this suite. @ 05/05/24 18:36:25.627
• [242.710 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 05/05/24 18:36:25.644
  May  5 18:36:25.644: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename var-expansion @ 05/05/24 18:36:25.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:36:25.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:36:25.665
  STEP: creating the pod @ 05/05/24 18:36:25.668
  STEP: waiting for pod running @ 05/05/24 18:36:25.676
  STEP: creating a file in subpath @ 05/05/24 18:36:27.685
  May  5 18:36:27.689: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-6041 PodName:var-expansion-a0aae8d0-57e0-45b0-87cd-8f5f4e1254fc ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  5 18:36:27.689: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 18:36:27.690: INFO: ExecWithOptions: Clientset creation
  May  5 18:36:27.690: INFO: ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/var-expansion-6041/pods/var-expansion-a0aae8d0-57e0-45b0-87cd-8f5f4e1254fc/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 05/05/24 18:36:27.739
  May  5 18:36:27.741: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-6041 PodName:var-expansion-a0aae8d0-57e0-45b0-87cd-8f5f4e1254fc ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  5 18:36:27.741: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 18:36:27.741: INFO: ExecWithOptions: Clientset creation
  May  5 18:36:27.741: INFO: ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/var-expansion-6041/pods/var-expansion-a0aae8d0-57e0-45b0-87cd-8f5f4e1254fc/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 05/05/24 18:36:27.787
  May  5 18:36:28.301: INFO: Successfully updated pod "var-expansion-a0aae8d0-57e0-45b0-87cd-8f5f4e1254fc"
  STEP: waiting for annotated pod running @ 05/05/24 18:36:28.302
  STEP: deleting the pod gracefully @ 05/05/24 18:36:28.304
  May  5 18:36:28.304: INFO: Deleting pod "var-expansion-a0aae8d0-57e0-45b0-87cd-8f5f4e1254fc" in namespace "var-expansion-6041"
  May  5 18:36:28.308: INFO: Wait up to 5m0s for pod "var-expansion-a0aae8d0-57e0-45b0-87cd-8f5f4e1254fc" to be fully deleted
  May  5 18:37:02.394: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6041" for this suite. @ 05/05/24 18:37:02.398
• [36.772 seconds]
------------------------------
S
------------------------------
[sig-network] Services should serve a basic endpoint from pods  [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 05/05/24 18:37:02.416
  May  5 18:37:02.416: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename services @ 05/05/24 18:37:02.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:37:02.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:37:02.438
  STEP: creating service endpoint-test2 in namespace services-9201 @ 05/05/24 18:37:02.447
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9201 to expose endpoints map[] @ 05/05/24 18:37:02.462
  May  5 18:37:02.478: INFO: successfully validated that service endpoint-test2 in namespace services-9201 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-9201 @ 05/05/24 18:37:02.479
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9201 to expose endpoints map[pod1:[80]] @ 05/05/24 18:37:04.509
  May  5 18:37:04.521: INFO: successfully validated that service endpoint-test2 in namespace services-9201 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 05/05/24 18:37:04.521
  May  5 18:37:04.521: INFO: Creating new exec pod
  May  5 18:37:07.540: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-9201 exec execpodkm2jc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  May  5 18:37:07.925: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  May  5 18:37:07.926: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  5 18:37:07.926: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-9201 exec execpodkm2jc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.242 80'
  May  5 18:37:08.177: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.242 80\nConnection to 10.32.0.242 80 port [tcp/http] succeeded!\n"
  May  5 18:37:08.177: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-9201 @ 05/05/24 18:37:08.177
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9201 to expose endpoints map[pod1:[80] pod2:[80]] @ 05/05/24 18:37:10.202
  May  5 18:37:10.210: INFO: successfully validated that service endpoint-test2 in namespace services-9201 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 05/05/24 18:37:10.21
  May  5 18:37:11.211: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-9201 exec execpodkm2jc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  May  5 18:37:11.346: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  May  5 18:37:11.346: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  5 18:37:11.346: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-9201 exec execpodkm2jc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.242 80'
  May  5 18:37:11.497: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.242 80\nConnection to 10.32.0.242 80 port [tcp/http] succeeded!\n"
  May  5 18:37:11.497: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-9201 @ 05/05/24 18:37:11.497
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9201 to expose endpoints map[pod2:[80]] @ 05/05/24 18:37:11.53
  May  5 18:37:11.558: INFO: successfully validated that service endpoint-test2 in namespace services-9201 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 05/05/24 18:37:11.559
  May  5 18:37:12.560: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-9201 exec execpodkm2jc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  May  5 18:37:12.706: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  May  5 18:37:12.706: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  5 18:37:12.706: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-9201 exec execpodkm2jc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.242 80'
  May  5 18:37:12.858: INFO: stderr: "+ + nc -v -t -w 2 10.32.0.242 80\necho hostName\nConnection to 10.32.0.242 80 port [tcp/http] succeeded!\n"
  May  5 18:37:12.858: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-9201 @ 05/05/24 18:37:12.858
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9201 to expose endpoints map[] @ 05/05/24 18:37:12.873
  May  5 18:37:12.897: INFO: successfully validated that service endpoint-test2 in namespace services-9201 exposes endpoints map[]
  May  5 18:37:12.898: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9201" for this suite. @ 05/05/24 18:37:12.93
• [10.525 seconds]
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 05/05/24 18:37:12.942
  May  5 18:37:12.942: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename container-probe @ 05/05/24 18:37:12.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:37:12.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:37:12.971
  STEP: Creating pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707 @ 05/05/24 18:37:12.975
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/05/24 18:37:14.995
  May  5 18:37:14.998: INFO: Initial restart count of pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd is 0
  May  5 18:37:15.002: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:37:17.008: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:37:19.013: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:37:21.021: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:37:23.030: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:37:25.034: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:37:27.041: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:37:29.049: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:37:31.057: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:37:33.068: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:37:35.073: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:37:37.077: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:37:39.083: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:37:41.085: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:37:43.092: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:37:45.100: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:37:47.104: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:37:49.110: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:37:51.119: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:37:53.128: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:37:55.139: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:37:57.144: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:37:59.152: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:38:01.156: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:38:03.162: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:38:05.169: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:38:07.176: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:38:09.182: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:38:11.187: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:38:13.189: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:38:15.194: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:38:17.202: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:38:19.206: INFO: Get pod test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd in namespace container-probe-6707
  May  5 18:38:19.206: INFO: Restart count of pod container-probe-6707/test-grpc-947ed510-b8d4-438f-80af-965f9762cfbd is now 1 (1m4.208058425s elapsed)
  May  5 18:38:19.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/05/24 18:38:19.21
  STEP: Destroying namespace "container-probe-6707" for this suite. @ 05/05/24 18:38:19.231
• [66.307 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:640
  STEP: Creating a kubernetes client @ 05/05/24 18:38:19.251
  May  5 18:38:19.251: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename statefulset @ 05/05/24 18:38:19.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:38:19.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:38:19.276
  STEP: Creating service test in namespace statefulset-1060 @ 05/05/24 18:38:19.279
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 05/05/24 18:38:19.287
  STEP: Creating stateful set ss in namespace statefulset-1060 @ 05/05/24 18:38:19.297
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-1060 @ 05/05/24 18:38:19.305
  May  5 18:38:19.308: INFO: Found 0 stateful pods, waiting for 1
  May  5 18:38:29.313: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 05/05/24 18:38:29.313
  May  5 18:38:29.319: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=statefulset-1060 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May  5 18:38:29.493: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May  5 18:38:29.493: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May  5 18:38:29.493: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May  5 18:38:29.497: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  May  5 18:38:39.503: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  May  5 18:38:39.503: INFO: Waiting for statefulset status.readyReplicas updated to 0
  May  5 18:38:39.521: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999348s
  May  5 18:38:40.527: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.995365523s
  May  5 18:38:41.531: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.988654105s
  May  5 18:38:42.536: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.984941939s
  May  5 18:38:43.540: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.981089116s
  May  5 18:38:44.543: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.975995559s
  May  5 18:38:45.549: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.973086847s
  May  5 18:38:46.554: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.967890137s
  May  5 18:38:47.561: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.962138359s
  May  5 18:38:48.567: INFO: Verifying statefulset ss doesn't scale past 1 for another 955.153886ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-1060 @ 05/05/24 18:38:49.568
  May  5 18:38:49.571: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=statefulset-1060 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May  5 18:38:49.658: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May  5 18:38:49.658: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May  5 18:38:49.658: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May  5 18:38:49.660: INFO: Found 1 stateful pods, waiting for 3
  May  5 18:38:59.663: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  May  5 18:38:59.663: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  May  5 18:38:59.663: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 05/05/24 18:38:59.663
  STEP: Scale down will halt with unhealthy stateful pod @ 05/05/24 18:38:59.663
  May  5 18:38:59.669: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=statefulset-1060 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May  5 18:38:59.786: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May  5 18:38:59.786: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May  5 18:38:59.786: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May  5 18:38:59.786: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=statefulset-1060 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May  5 18:38:59.949: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May  5 18:38:59.949: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May  5 18:38:59.949: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May  5 18:38:59.949: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=statefulset-1060 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May  5 18:39:00.106: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May  5 18:39:00.106: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May  5 18:39:00.106: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May  5 18:39:00.106: INFO: Waiting for statefulset status.readyReplicas updated to 0
  May  5 18:39:00.111: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  May  5 18:39:10.117: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  May  5 18:39:10.117: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  May  5 18:39:10.117: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  May  5 18:39:10.122: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999886s
  May  5 18:39:11.128: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.997832844s
  May  5 18:39:12.138: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.988675958s
  May  5 18:39:13.147: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.980438502s
  May  5 18:39:14.158: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.966288604s
  May  5 18:39:15.164: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.961949531s
  May  5 18:39:16.171: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.955270293s
  May  5 18:39:17.178: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.947020832s
  May  5 18:39:18.183: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.940367407s
  May  5 18:39:19.189: INFO: Verifying statefulset ss doesn't scale past 3 for another 937.114511ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-1060 @ 05/05/24 18:39:20.19
  May  5 18:39:20.199: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=statefulset-1060 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May  5 18:39:20.307: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May  5 18:39:20.307: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May  5 18:39:20.307: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May  5 18:39:20.307: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=statefulset-1060 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May  5 18:39:20.400: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May  5 18:39:20.400: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May  5 18:39:20.400: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May  5 18:39:20.400: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=statefulset-1060 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May  5 18:39:20.486: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May  5 18:39:20.487: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May  5 18:39:20.487: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May  5 18:39:20.487: INFO: Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 05/05/24 18:39:30.503
  May  5 18:39:30.503: INFO: Deleting all statefulset in ns statefulset-1060
  May  5 18:39:30.506: INFO: Scaling statefulset ss to 0
  May  5 18:39:30.513: INFO: Waiting for statefulset status.replicas updated to 0
  May  5 18:39:30.515: INFO: Deleting statefulset ss
  May  5 18:39:30.530: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1060" for this suite. @ 05/05/24 18:39:30.535
• [71.288 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 05/05/24 18:39:30.539
  May  5 18:39:30.539: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename pods @ 05/05/24 18:39:30.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:39:30.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:39:30.555
  May  5 18:39:30.558: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: creating the pod @ 05/05/24 18:39:30.559
  STEP: submitting the pod to kubernetes @ 05/05/24 18:39:30.559
  May  5 18:39:32.639: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9680" for this suite. @ 05/05/24 18:39:32.643
• [2.108 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:167
  STEP: Creating a kubernetes client @ 05/05/24 18:39:32.649
  May  5 18:39:32.649: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename downward-api @ 05/05/24 18:39:32.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:39:32.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:39:32.671
  STEP: Creating a pod to test downward api env vars @ 05/05/24 18:39:32.674
  STEP: Saw pod success @ 05/05/24 18:39:36.694
  May  5 18:39:36.697: INFO: Trying to get logs from node worker01 pod downward-api-3c65f90b-3d7c-4240-87b5-791966717496 container dapi-container: <nil>
  STEP: delete the pod @ 05/05/24 18:39:36.707
  May  5 18:39:36.731: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8274" for this suite. @ 05/05/24 18:39:36.734
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 05/05/24 18:39:36.738
  May  5 18:39:36.738: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename watch @ 05/05/24 18:39:36.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:39:36.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:39:36.751
  STEP: creating a watch on configmaps with label A @ 05/05/24 18:39:36.754
  STEP: creating a watch on configmaps with label B @ 05/05/24 18:39:36.755
  STEP: creating a watch on configmaps with label A or B @ 05/05/24 18:39:36.756
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 05/05/24 18:39:36.757
  May  5 18:39:36.759: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2612  b28ba38c-e5d2-4844-9f83-e4f0cc246910 10822 0 2024-05-05 18:39:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-05 18:39:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May  5 18:39:36.759: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2612  b28ba38c-e5d2-4844-9f83-e4f0cc246910 10822 0 2024-05-05 18:39:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-05 18:39:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 05/05/24 18:39:36.76
  May  5 18:39:36.766: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2612  b28ba38c-e5d2-4844-9f83-e4f0cc246910 10823 0 2024-05-05 18:39:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-05 18:39:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  May  5 18:39:36.766: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2612  b28ba38c-e5d2-4844-9f83-e4f0cc246910 10823 0 2024-05-05 18:39:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-05 18:39:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 05/05/24 18:39:36.766
  May  5 18:39:36.772: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2612  b28ba38c-e5d2-4844-9f83-e4f0cc246910 10824 0 2024-05-05 18:39:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-05 18:39:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May  5 18:39:36.773: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2612  b28ba38c-e5d2-4844-9f83-e4f0cc246910 10824 0 2024-05-05 18:39:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-05 18:39:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 05/05/24 18:39:36.773
  May  5 18:39:36.779: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2612  b28ba38c-e5d2-4844-9f83-e4f0cc246910 10825 0 2024-05-05 18:39:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-05 18:39:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May  5 18:39:36.782: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2612  b28ba38c-e5d2-4844-9f83-e4f0cc246910 10825 0 2024-05-05 18:39:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-05 18:39:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 05/05/24 18:39:36.782
  May  5 18:39:36.786: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2612  d787640b-9a45-485b-ba38-71dbf56ae2a0 10826 0 2024-05-05 18:39:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-05 18:39:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May  5 18:39:36.786: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2612  d787640b-9a45-485b-ba38-71dbf56ae2a0 10826 0 2024-05-05 18:39:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-05 18:39:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 05/05/24 18:39:46.788
  May  5 18:39:46.807: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2612  d787640b-9a45-485b-ba38-71dbf56ae2a0 10879 0 2024-05-05 18:39:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-05 18:39:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May  5 18:39:46.807: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2612  d787640b-9a45-485b-ba38-71dbf56ae2a0 10879 0 2024-05-05 18:39:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-05 18:39:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May  5 18:39:56.808: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2612" for this suite. @ 05/05/24 18:39:56.811
• [20.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 05/05/24 18:39:56.821
  May  5 18:39:56.821: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename downward-api @ 05/05/24 18:39:56.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:39:56.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:39:56.843
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 18:39:56.845
  STEP: Saw pod success @ 05/05/24 18:40:00.869
  May  5 18:40:00.876: INFO: Trying to get logs from node worker01 pod downwardapi-volume-4e53ff41-8007-4da5-824b-138d50fdf930 container client-container: <nil>
  STEP: delete the pod @ 05/05/24 18:40:00.884
  May  5 18:40:00.894: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2505" for this suite. @ 05/05/24 18:40:00.897
• [4.081 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:320
  STEP: Creating a kubernetes client @ 05/05/24 18:40:00.902
  May  5 18:40:00.902: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename statefulset @ 05/05/24 18:40:00.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:40:00.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:40:00.917
  STEP: Creating service test in namespace statefulset-9496 @ 05/05/24 18:40:00.92
  STEP: Creating a new StatefulSet @ 05/05/24 18:40:00.925
  May  5 18:40:00.935: INFO: Found 0 stateful pods, waiting for 3
  May  5 18:40:10.938: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  May  5 18:40:10.938: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  May  5 18:40:10.938: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  May  5 18:40:10.943: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=statefulset-9496 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May  5 18:40:11.038: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May  5 18:40:11.038: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May  5 18:40:11.038: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/05/24 18:40:21.051
  May  5 18:40:21.083: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 05/05/24 18:40:21.083
  STEP: Updating Pods in reverse ordinal order @ 05/05/24 18:40:31.1
  May  5 18:40:31.103: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=statefulset-9496 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May  5 18:40:31.190: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May  5 18:40:31.190: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May  5 18:40:31.190: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May  5 18:40:41.206: INFO: Waiting for StatefulSet statefulset-9496/ss2 to complete update
  May  5 18:40:41.206: INFO: Waiting for Pod statefulset-9496/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  May  5 18:40:41.206: INFO: Waiting for Pod statefulset-9496/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  May  5 18:40:51.212: INFO: Waiting for StatefulSet statefulset-9496/ss2 to complete update
  May  5 18:40:51.212: INFO: Waiting for Pod statefulset-9496/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Rolling back to a previous revision @ 05/05/24 18:41:01.212
  May  5 18:41:01.212: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=statefulset-9496 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May  5 18:41:01.328: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May  5 18:41:01.328: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May  5 18:41:01.328: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May  5 18:41:11.359: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 05/05/24 18:41:21.372
  May  5 18:41:21.375: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=statefulset-9496 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May  5 18:41:21.454: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May  5 18:41:21.454: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May  5 18:41:21.454: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May  5 18:41:31.470: INFO: Deleting all statefulset in ns statefulset-9496
  May  5 18:41:31.472: INFO: Scaling statefulset ss2 to 0
  May  5 18:41:41.483: INFO: Waiting for statefulset status.replicas updated to 0
  May  5 18:41:41.485: INFO: Deleting statefulset ss2
  May  5 18:41:41.493: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9496" for this suite. @ 05/05/24 18:41:41.499
• [100.603 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 05/05/24 18:41:41.505
  May  5 18:41:41.505: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename container-probe @ 05/05/24 18:41:41.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:41:41.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:41:41.52
  STEP: Creating pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328 @ 05/05/24 18:41:41.523
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/05/24 18:41:43.536
  May  5 18:41:43.538: INFO: Initial restart count of pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 is 0
  May  5 18:41:43.541: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:41:45.546: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:41:47.550: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:41:49.551: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:41:51.554: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:41:53.558: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:41:55.563: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:41:57.569: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:41:59.572: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:42:01.580: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:42:03.582: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:42:05.588: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:42:07.594: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:42:09.597: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:42:11.601: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:42:13.605: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:42:15.608: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:42:17.614: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:42:19.617: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:42:21.626: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:42:23.632: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:42:25.637: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:42:27.641: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:42:29.645: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:42:31.651: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:42:33.656: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:42:35.661: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:42:37.663: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:42:39.669: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:42:41.673: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:42:43.676: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:42:45.690: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:42:47.697: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:42:49.700: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:42:51.702: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:42:53.704: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:42:55.706: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:42:57.710: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:42:59.713: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:43:01.717: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:43:03.720: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:43:05.725: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:43:07.728: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:43:09.731: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:43:11.736: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:43:13.741: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:43:15.745: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:43:17.748: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:43:19.753: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:43:21.759: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:43:23.765: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:43:25.771: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:43:27.774: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:43:29.777: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:43:31.782: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:43:33.787: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:43:35.791: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:43:37.797: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:43:39.801: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:43:41.809: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:43:43.814: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:43:45.818: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:43:47.821: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:43:49.826: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:43:51.831: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:43:53.834: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:43:55.838: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:43:57.849: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:43:59.855: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:44:01.873: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:44:03.880: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:44:05.884: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:44:07.891: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:44:09.899: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:44:11.907: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:44:13.910: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:44:15.915: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:44:17.919: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:44:19.924: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:44:21.930: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:44:23.934: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:44:25.939: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:44:27.944: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:44:29.949: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:44:31.955: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:44:33.958: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:44:35.965: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:44:37.968: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:44:39.978: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:44:41.983: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:44:43.987: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:44:45.993: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:44:47.999: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:44:50.004: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:44:52.009: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:44:54.012: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:44:56.018: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:44:58.024: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:45:00.032: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:45:02.036: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:45:04.044: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:45:06.049: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:45:08.053: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:45:10.070: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:45:12.075: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:45:14.079: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:45:16.086: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:45:18.088: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:45:20.092: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:45:22.105: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:45:24.112: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:45:26.119: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:45:28.125: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:45:30.132: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:45:32.139: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:45:34.145: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:45:36.147: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:45:38.154: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:45:40.159: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:45:42.163: INFO: Get pod test-webserver-63425bec-458c-4b36-9834-71fa77e1fc17 in namespace container-probe-4328
  May  5 18:45:44.163: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/05/24 18:45:44.17
  STEP: Destroying namespace "container-probe-4328" for this suite. @ 05/05/24 18:45:44.199
• [242.703 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 05/05/24 18:45:44.21
  May  5 18:45:44.210: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename pods @ 05/05/24 18:45:44.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:45:44.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:45:44.232
  STEP: creating the pod @ 05/05/24 18:45:44.235
  STEP: submitting the pod to kubernetes @ 05/05/24 18:45:44.235
  W0505 18:45:44.241539      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 05/05/24 18:45:46.253
  STEP: updating the pod @ 05/05/24 18:45:46.256
  May  5 18:45:46.772: INFO: Successfully updated pod "pod-update-activedeadlineseconds-d5654773-0c0e-4975-a317-9be262d61803"
  May  5 18:45:50.789: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8908" for this suite. @ 05/05/24 18:45:50.795
• [6.590 seconds]
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:430
  STEP: Creating a kubernetes client @ 05/05/24 18:45:50.8
  May  5 18:45:50.800: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename job @ 05/05/24 18:45:50.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:45:50.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:45:50.813
  STEP: Creating a job @ 05/05/24 18:45:50.816
  STEP: Ensuring job reaches completions @ 05/05/24 18:45:50.819
  May  5 18:45:58.824: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9424" for this suite. @ 05/05/24 18:45:58.828
• [8.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 05/05/24 18:45:58.835
  May  5 18:45:58.835: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename projected @ 05/05/24 18:45:58.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:45:58.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:45:58.854
  STEP: Creating configMap with name projected-configmap-test-volume-b61da3ca-dd8c-4d4e-b537-47a95208d318 @ 05/05/24 18:45:58.858
  STEP: Creating a pod to test consume configMaps @ 05/05/24 18:45:58.862
  STEP: Saw pod success @ 05/05/24 18:46:00.881
  May  5 18:46:00.885: INFO: Trying to get logs from node worker00 pod pod-projected-configmaps-8eb42397-eac1-4e19-9f07-5b1e2a89f234 container agnhost-container: <nil>
  STEP: delete the pod @ 05/05/24 18:46:00.89
  May  5 18:46:00.909: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5173" for this suite. @ 05/05/24 18:46:00.911
• [2.079 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 05/05/24 18:46:00.916
  May  5 18:46:00.916: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename var-expansion @ 05/05/24 18:46:00.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:46:00.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:46:00.928
  STEP: Creating a pod to test env composition @ 05/05/24 18:46:00.93
  STEP: Saw pod success @ 05/05/24 18:46:04.948
  May  5 18:46:04.950: INFO: Trying to get logs from node worker00 pod var-expansion-f9d8425a-23ce-4779-b08d-d9ce37c171a4 container dapi-container: <nil>
  STEP: delete the pod @ 05/05/24 18:46:04.954
  May  5 18:46:04.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1305" for this suite. @ 05/05/24 18:46:04.979
• [4.066 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:167
  STEP: Creating a kubernetes client @ 05/05/24 18:46:04.982
  May  5 18:46:04.982: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename emptydir @ 05/05/24 18:46:04.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:46:04.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:46:04.993
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/05/24 18:46:04.996
  STEP: Saw pod success @ 05/05/24 18:46:09.011
  May  5 18:46:09.015: INFO: Trying to get logs from node worker00 pod pod-44d73632-69d5-431f-aa49-089bd9daaf1e container test-container: <nil>
  STEP: delete the pod @ 05/05/24 18:46:09.02
  May  5 18:46:09.043: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6502" for this suite. @ 05/05/24 18:46:09.045
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 05/05/24 18:46:09.05
  May  5 18:46:09.050: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename job @ 05/05/24 18:46:09.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:46:09.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:46:09.066
  STEP: Creating a job @ 05/05/24 18:46:09.068
  STEP: Ensuring active pods == parallelism @ 05/05/24 18:46:09.071
  STEP: delete a job @ 05/05/24 18:46:11.077
  STEP: deleting Job.batch foo in namespace job-7119, will wait for the garbage collector to delete the pods @ 05/05/24 18:46:11.077
  May  5 18:46:11.140: INFO: Deleting Job.batch foo took: 5.790889ms
  May  5 18:46:11.242: INFO: Terminating Job.batch foo pods took: 101.67306ms
  STEP: Ensuring job was deleted @ 05/05/24 18:46:43.745
  May  5 18:46:43.749: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7119" for this suite. @ 05/05/24 18:46:43.753
• [34.708 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:424
  STEP: Creating a kubernetes client @ 05/05/24 18:46:43.759
  May  5 18:46:43.759: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename replication-controller @ 05/05/24 18:46:43.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:46:43.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:46:43.771
  STEP: Creating ReplicationController "e2e-rc-5bgtf" @ 05/05/24 18:46:43.774
  May  5 18:46:43.778: INFO: Get Replication Controller "e2e-rc-5bgtf" to confirm replicas
  May  5 18:46:44.783: INFO: Get Replication Controller "e2e-rc-5bgtf" to confirm replicas
  May  5 18:46:44.788: INFO: Found 1 replicas for "e2e-rc-5bgtf" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-5bgtf" @ 05/05/24 18:46:44.788
  STEP: Updating a scale subresource @ 05/05/24 18:46:44.791
  STEP: Verifying replicas where modified for replication controller "e2e-rc-5bgtf" @ 05/05/24 18:46:44.795
  May  5 18:46:44.795: INFO: Get Replication Controller "e2e-rc-5bgtf" to confirm replicas
  May  5 18:46:45.801: INFO: Get Replication Controller "e2e-rc-5bgtf" to confirm replicas
  May  5 18:46:45.804: INFO: Found 2 replicas for "e2e-rc-5bgtf" replication controller
  May  5 18:46:45.804: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9980" for this suite. @ 05/05/24 18:46:45.807
• [2.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 05/05/24 18:46:45.813
  May  5 18:46:45.813: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename pods @ 05/05/24 18:46:45.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:46:45.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:46:45.824
  STEP: Create a pod @ 05/05/24 18:46:45.826
  STEP: patching /status @ 05/05/24 18:46:47.84
  May  5 18:46:47.860: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  May  5 18:46:47.860: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9210" for this suite. @ 05/05/24 18:46:47.866
• [2.058 seconds]
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:157
  STEP: Creating a kubernetes client @ 05/05/24 18:46:47.871
  May  5 18:46:47.871: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename emptydir @ 05/05/24 18:46:47.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:46:47.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:46:47.886
  STEP: Creating a pod to test emptydir volume type on node default medium @ 05/05/24 18:46:47.888
  STEP: Saw pod success @ 05/05/24 18:46:51.905
  May  5 18:46:51.907: INFO: Trying to get logs from node worker01 pod pod-e6d0223c-5eee-4f39-8f01-497f403754d7 container test-container: <nil>
  STEP: delete the pod @ 05/05/24 18:46:51.924
  May  5 18:46:51.937: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2699" for this suite. @ 05/05/24 18:46:51.94
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 05/05/24 18:46:51.945
  May  5 18:46:51.945: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename projected @ 05/05/24 18:46:51.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:46:51.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:46:51.956
  STEP: Creating configMap with name projected-configmap-test-volume-2f6b7aa4-64f5-43b4-a354-7a7bdb9dbe94 @ 05/05/24 18:46:51.959
  STEP: Creating a pod to test consume configMaps @ 05/05/24 18:46:51.962
  STEP: Saw pod success @ 05/05/24 18:46:55.984
  May  5 18:46:55.988: INFO: Trying to get logs from node worker01 pod pod-projected-configmaps-dc351af4-1bf8-42c5-9021-22dc1d7f6355 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 05/05/24 18:46:55.996
  May  5 18:46:56.013: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5495" for this suite. @ 05/05/24 18:46:56.017
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3142
  STEP: Creating a kubernetes client @ 05/05/24 18:46:56.024
  May  5 18:46:56.024: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename services @ 05/05/24 18:46:56.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:46:56.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:46:56.042
  STEP: creating an Endpoint @ 05/05/24 18:46:56.045
  STEP: waiting for available Endpoint @ 05/05/24 18:46:56.048
  STEP: listing all Endpoints @ 05/05/24 18:46:56.05
  STEP: updating the Endpoint @ 05/05/24 18:46:56.052
  STEP: fetching the Endpoint @ 05/05/24 18:46:56.057
  STEP: patching the Endpoint @ 05/05/24 18:46:56.06
  STEP: fetching the Endpoint @ 05/05/24 18:46:56.065
  STEP: deleting the Endpoint by Collection @ 05/05/24 18:46:56.067
  STEP: waiting for Endpoint deletion @ 05/05/24 18:46:56.071
  STEP: fetching the Endpoint @ 05/05/24 18:46:56.073
  May  5 18:46:56.076: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3918" for this suite. @ 05/05/24 18:46:56.078
• [0.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 05/05/24 18:46:56.084
  May  5 18:46:56.084: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/05/24 18:46:56.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:46:56.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:46:56.101
  May  5 18:46:56.103: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/05/24 18:46:57.471
  May  5 18:46:57.471: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=crd-publish-openapi-8950 --namespace=crd-publish-openapi-8950 create -f -'
  May  5 18:46:59.905: INFO: stderr: ""
  May  5 18:46:59.905: INFO: stdout: "e2e-test-crd-publish-openapi-3831-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  May  5 18:46:59.905: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=crd-publish-openapi-8950 --namespace=crd-publish-openapi-8950 delete e2e-test-crd-publish-openapi-3831-crds test-cr'
  May  5 18:46:59.952: INFO: stderr: ""
  May  5 18:46:59.952: INFO: stdout: "e2e-test-crd-publish-openapi-3831-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  May  5 18:46:59.952: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=crd-publish-openapi-8950 --namespace=crd-publish-openapi-8950 apply -f -'
  May  5 18:47:00.062: INFO: stderr: ""
  May  5 18:47:00.062: INFO: stdout: "e2e-test-crd-publish-openapi-3831-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  May  5 18:47:00.062: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=crd-publish-openapi-8950 --namespace=crd-publish-openapi-8950 delete e2e-test-crd-publish-openapi-3831-crds test-cr'
  May  5 18:47:00.107: INFO: stderr: ""
  May  5 18:47:00.107: INFO: stdout: "e2e-test-crd-publish-openapi-3831-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 05/05/24 18:47:00.107
  May  5 18:47:00.108: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=crd-publish-openapi-8950 explain e2e-test-crd-publish-openapi-3831-crds'
  May  5 18:47:00.216: INFO: stderr: ""
  May  5 18:47:00.216: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-3831-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  May  5 18:47:01.428: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8950" for this suite. @ 05/05/24 18:47:01.432
• [5.362 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 05/05/24 18:47:01.447
  May  5 18:47:01.447: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename projected @ 05/05/24 18:47:01.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:47:01.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:47:01.461
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 18:47:01.465
  STEP: Saw pod success @ 05/05/24 18:47:05.486
  May  5 18:47:05.492: INFO: Trying to get logs from node worker01 pod downwardapi-volume-8b023d49-8195-412b-822b-1120a1305613 container client-container: <nil>
  STEP: delete the pod @ 05/05/24 18:47:05.504
  May  5 18:47:05.533: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2822" for this suite. @ 05/05/24 18:47:05.538
• [4.098 seconds]
------------------------------
SS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 05/05/24 18:47:05.546
  May  5 18:47:05.546: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 05/05/24 18:47:05.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:47:05.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:47:05.571
  STEP: Setting up the test @ 05/05/24 18:47:05.575
  STEP: Creating hostNetwork=false pod @ 05/05/24 18:47:05.575
  STEP: Creating hostNetwork=true pod @ 05/05/24 18:47:07.606
  STEP: Running the test @ 05/05/24 18:47:09.619
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 05/05/24 18:47:09.619
  May  5 18:47:09.619: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2960 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  5 18:47:09.619: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 18:47:09.619: INFO: ExecWithOptions: Clientset creation
  May  5 18:47:09.619: INFO: ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2960/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  May  5 18:47:09.668: INFO: Exec stderr: ""
  May  5 18:47:09.668: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2960 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  5 18:47:09.668: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 18:47:09.668: INFO: ExecWithOptions: Clientset creation
  May  5 18:47:09.668: INFO: ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2960/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  May  5 18:47:09.715: INFO: Exec stderr: ""
  May  5 18:47:09.715: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2960 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  5 18:47:09.715: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 18:47:09.716: INFO: ExecWithOptions: Clientset creation
  May  5 18:47:09.716: INFO: ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2960/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  May  5 18:47:09.776: INFO: Exec stderr: ""
  May  5 18:47:09.776: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2960 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  5 18:47:09.776: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 18:47:09.777: INFO: ExecWithOptions: Clientset creation
  May  5 18:47:09.777: INFO: ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2960/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  May  5 18:47:09.850: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 05/05/24 18:47:09.85
  May  5 18:47:09.851: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2960 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  5 18:47:09.851: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 18:47:09.852: INFO: ExecWithOptions: Clientset creation
  May  5 18:47:09.852: INFO: ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2960/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  May  5 18:47:09.927: INFO: Exec stderr: ""
  May  5 18:47:09.927: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2960 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  5 18:47:09.927: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 18:47:09.929: INFO: ExecWithOptions: Clientset creation
  May  5 18:47:09.929: INFO: ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2960/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  May  5 18:47:10.005: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 05/05/24 18:47:10.005
  May  5 18:47:10.005: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2960 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  5 18:47:10.005: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 18:47:10.008: INFO: ExecWithOptions: Clientset creation
  May  5 18:47:10.008: INFO: ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2960/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  May  5 18:47:10.082: INFO: Exec stderr: ""
  May  5 18:47:10.083: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2960 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  5 18:47:10.083: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 18:47:10.084: INFO: ExecWithOptions: Clientset creation
  May  5 18:47:10.084: INFO: ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2960/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  May  5 18:47:10.163: INFO: Exec stderr: ""
  May  5 18:47:10.163: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2960 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  5 18:47:10.163: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 18:47:10.165: INFO: ExecWithOptions: Clientset creation
  May  5 18:47:10.166: INFO: ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2960/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  May  5 18:47:10.231: INFO: Exec stderr: ""
  May  5 18:47:10.231: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2960 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  5 18:47:10.231: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 18:47:10.233: INFO: ExecWithOptions: Clientset creation
  May  5 18:47:10.234: INFO: ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2960/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  May  5 18:47:10.299: INFO: Exec stderr: ""
  May  5 18:47:10.299: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-2960" for this suite. @ 05/05/24 18:47:10.307
• [4.777 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 05/05/24 18:47:10.324
  May  5 18:47:10.324: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename deployment @ 05/05/24 18:47:10.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:47:10.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:47:10.354
  May  5 18:47:10.358: INFO: Creating simple deployment test-new-deployment
  May  5 18:47:10.374: INFO: deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 05/05/24 18:47:12.388
  STEP: updating a scale subresource @ 05/05/24 18:47:12.39
  STEP: verifying the deployment Spec.Replicas was modified @ 05/05/24 18:47:12.404
  STEP: Patch a scale subresource @ 05/05/24 18:47:12.408
  May  5 18:47:12.419: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3687",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "55e65180-0dc4-4467-8a22-c200c3e3c966",
      ResourceVersion: (string) (len=5) "13625",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850531630,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850531630,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850531631,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850531631,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850531631,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850531631,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850531630,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May  5 18:47:12.445: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3687",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b212ba9-146f-4e35-88ba-89a2e89c3aa2",
      ResourceVersion: (string) (len=5) "13632",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850531630,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "55e65180-0dc4-4467-8a22-c200c3e3c966",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850531632,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 35 65 36 35 31  38 30 2d 30 64 63 34 2d  |\"55e65180-0dc4-|
              00000120  34 34 36 37 2d 38 61 32  32 2d 63 32 30 30 63 33  |4467-8a22-c200c3|
              00000130  65 33 63 39 36 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e3c966\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850531632,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May  5 18:47:12.465: INFO: Pod "test-new-deployment-557759b7c7-24nmq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-24nmq",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3687",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a9b24f4c-342a-44de-b568-04936118c234",
      ResourceVersion: (string) (len=5) "13617",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850531630,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c846b47726dbbde5b2bb8847387b4f7bf9c1eab5acb26059c6c1dd038587135f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.14/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.14/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6b212ba9-146f-4e35-88ba-89a2e89c3aa2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850531630,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850531630,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  32 31 32 62 61 39 2d 31  |d\":\"6b212ba9-1|
              00000090  34 36 66 2d 34 65 33 35  2d 38 38 62 61 2d 38 39  |46f-4e35-88ba-89|
              000000a0  61 32 65 38 39 63 33 61  61 32 5c 22 7d 22 3a 7b  |a2e89c3aa2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850531631,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 31  34 5c 22 7d 22 3a 7b 22  |.200.5.14\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lzct6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lzct6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850531631,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850531630,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850531631,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850531631,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850531630,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.14",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.14"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850531630,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850531630,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1c31f3efa0e160c8b5d001849108389f4256951f156b2e3ec17a9ed6c92c129e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 18:47:12.474: INFO: Pod "test-new-deployment-557759b7c7-xmdsh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-xmdsh",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3687",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aea16e98-0efd-409f-9347-0064a75ea3f5",
      ResourceVersion: (string) (len=5) "13633",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850531632,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6b212ba9-146f-4e35-88ba-89a2e89c3aa2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850531632,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  32 31 32 62 61 39 2d 31  |d\":\"6b212ba9-1|
              00000090  34 36 66 2d 34 65 33 35  2d 38 38 62 61 2d 38 39  |46f-4e35-88ba-89|
              000000a0  61 32 65 38 39 63 33 61  61 32 5c 22 7d 22 3a 7b  |a2e89c3aa2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850531632,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vv92h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vv92h",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850531632,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850531632,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850531632,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850531632,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850531632,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850531632,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 18:47:12.481: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3687" for this suite. @ 05/05/24 18:47:12.492
• [2.189 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 05/05/24 18:47:12.518
  May  5 18:47:12.518: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename endpointslicemirroring @ 05/05/24 18:47:12.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:47:12.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:47:12.554
  STEP: mirroring a new custom Endpoint @ 05/05/24 18:47:12.567
  May  5 18:47:12.582: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 05/05/24 18:47:14.585
  May  5 18:47:14.590: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 05/05/24 18:47:16.597
  May  5 18:47:16.604: INFO: Waiting for 0 EndpointSlices to exist, got 1
  May  5 18:47:18.609: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-8464" for this suite. @ 05/05/24 18:47:18.623
• [6.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 05/05/24 18:47:18.628
  May  5 18:47:18.628: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename projected @ 05/05/24 18:47:18.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:47:18.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:47:18.644
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 18:47:18.646
  STEP: Saw pod success @ 05/05/24 18:47:22.661
  May  5 18:47:22.663: INFO: Trying to get logs from node worker01 pod downwardapi-volume-bd989760-9747-4d06-8241-d059bee7b133 container client-container: <nil>
  STEP: delete the pod @ 05/05/24 18:47:22.668
  May  5 18:47:22.678: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6113" for this suite. @ 05/05/24 18:47:22.683
• [4.061 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:266
  STEP: Creating a kubernetes client @ 05/05/24 18:47:22.689
  May  5 18:47:22.689: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename ingressclass @ 05/05/24 18:47:22.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:47:22.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:47:22.706
  STEP: getting /apis @ 05/05/24 18:47:22.707
  STEP: getting /apis/networking.k8s.io @ 05/05/24 18:47:22.711
  STEP: getting /apis/networking.k8s.iov1 @ 05/05/24 18:47:22.712
  STEP: creating @ 05/05/24 18:47:22.713
  STEP: getting @ 05/05/24 18:47:22.723
  STEP: listing @ 05/05/24 18:47:22.726
  STEP: watching @ 05/05/24 18:47:22.728
  May  5 18:47:22.728: INFO: starting watch
  STEP: patching @ 05/05/24 18:47:22.729
  STEP: updating @ 05/05/24 18:47:22.733
  May  5 18:47:22.737: INFO: waiting for watch events with expected annotations
  May  5 18:47:22.737: INFO: saw patched and updated annotations
  STEP: deleting @ 05/05/24 18:47:22.738
  STEP: deleting a collection @ 05/05/24 18:47:22.746
  May  5 18:47:22.754: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-2218" for this suite. @ 05/05/24 18:47:22.757
• [0.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 05/05/24 18:47:22.764
  May  5 18:47:22.764: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename pods @ 05/05/24 18:47:22.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:47:22.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:47:22.78
  STEP: creating the pod @ 05/05/24 18:47:22.782
  STEP: submitting the pod to kubernetes @ 05/05/24 18:47:22.782
  STEP: verifying QOS class is set on the pod @ 05/05/24 18:47:22.787
  May  5 18:47:22.789: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1036" for this suite. @ 05/05/24 18:47:22.795
• [0.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 05/05/24 18:47:22.805
  May  5 18:47:22.807: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename field-validation @ 05/05/24 18:47:22.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:47:22.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:47:22.824
  STEP: apply creating a deployment @ 05/05/24 18:47:22.826
  May  5 18:47:22.828: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3584" for this suite. @ 05/05/24 18:47:22.843
• [0.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:175
  STEP: Creating a kubernetes client @ 05/05/24 18:47:22.851
  May  5 18:47:22.851: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename events @ 05/05/24 18:47:22.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:47:22.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:47:22.871
  STEP: Create set of events @ 05/05/24 18:47:22.874
  May  5 18:47:22.878: INFO: created test-event-1
  May  5 18:47:22.882: INFO: created test-event-2
  May  5 18:47:22.886: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 05/05/24 18:47:22.886
  STEP: delete collection of events @ 05/05/24 18:47:22.889
  May  5 18:47:22.889: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/05/24 18:47:22.904
  May  5 18:47:22.904: INFO: requesting list of events to confirm quantity
  May  5 18:47:22.907: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9471" for this suite. @ 05/05/24 18:47:22.911
• [0.065 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3326
  STEP: Creating a kubernetes client @ 05/05/24 18:47:22.917
  May  5 18:47:22.917: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename services @ 05/05/24 18:47:22.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:47:22.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:47:22.94
  STEP: creating a Service @ 05/05/24 18:47:22.946
  STEP: watching for the Service to be added @ 05/05/24 18:47:22.954
  May  5 18:47:22.956: INFO: Found Service test-service-9x4rq in namespace services-2632 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
  May  5 18:47:22.956: INFO: Service test-service-9x4rq created
  STEP: Getting /status @ 05/05/24 18:47:22.956
  May  5 18:47:22.961: INFO: Service test-service-9x4rq has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 05/05/24 18:47:22.961
  STEP: watching for the Service to be patched @ 05/05/24 18:47:22.968
  May  5 18:47:22.972: INFO: observed Service test-service-9x4rq in namespace services-2632 with annotations: map[] & LoadBalancer: {[]}
  May  5 18:47:22.972: INFO: Found Service test-service-9x4rq in namespace services-2632 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
  May  5 18:47:22.973: INFO: Service test-service-9x4rq has service status patched
  STEP: updating the ServiceStatus @ 05/05/24 18:47:22.973
  May  5 18:47:22.989: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 05/05/24 18:47:22.989
  May  5 18:47:22.996: INFO: Observed Service test-service-9x4rq in namespace services-2632 with annotations: map[] & Conditions: {[]}
  May  5 18:47:22.996: INFO: Observed event: &Service{ObjectMeta:{test-service-9x4rq  services-2632  e0c41d99-a0b0-496e-b1d0-202072054125 13829 0 2024-05-05 18:47:22 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-05-05 18:47:22 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-05-05 18:47:22 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.32.0.238,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.32.0.238],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  May  5 18:47:22.996: INFO: Found Service test-service-9x4rq in namespace services-2632 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  May  5 18:47:22.996: INFO: Service test-service-9x4rq has service status updated
  STEP: patching the service @ 05/05/24 18:47:22.996
  STEP: watching for the Service to be patched @ 05/05/24 18:47:23.013
  May  5 18:47:23.014: INFO: observed Service test-service-9x4rq in namespace services-2632 with labels: map[test-service-static:true]
  May  5 18:47:23.015: INFO: observed Service test-service-9x4rq in namespace services-2632 with labels: map[test-service-static:true]
  May  5 18:47:23.015: INFO: observed Service test-service-9x4rq in namespace services-2632 with labels: map[test-service-static:true]
  May  5 18:47:23.015: INFO: observed Service test-service-9x4rq in namespace services-2632 with labels: map[test-service-static:true]
  May  5 18:47:23.015: INFO: Found Service test-service-9x4rq in namespace services-2632 with labels: map[test-service:patched test-service-static:true]
  May  5 18:47:23.015: INFO: Service test-service-9x4rq patched
  STEP: deleting the service @ 05/05/24 18:47:23.015
  STEP: watching for the Service to be deleted @ 05/05/24 18:47:23.027
  May  5 18:47:23.030: INFO: Observed event: ADDED
  May  5 18:47:23.030: INFO: Observed event: MODIFIED
  May  5 18:47:23.030: INFO: Observed event: MODIFIED
  May  5 18:47:23.030: INFO: Observed event: MODIFIED
  May  5 18:47:23.030: INFO: Observed event: MODIFIED
  May  5 18:47:23.030: INFO: Found Service test-service-9x4rq in namespace services-2632 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  May  5 18:47:23.031: INFO: Service test-service-9x4rq deleted
  May  5 18:47:23.031: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2632" for this suite. @ 05/05/24 18:47:23.038
• [0.128 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 05/05/24 18:47:23.047
  May  5 18:47:23.047: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename webhook @ 05/05/24 18:47:23.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:47:23.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:47:23.068
  STEP: Setting up server cert @ 05/05/24 18:47:23.092
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 18:47:23.333
  STEP: Deploying the webhook pod @ 05/05/24 18:47:23.347
  STEP: Wait for the deployment to be ready @ 05/05/24 18:47:23.353
  May  5 18:47:23.359: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/05/24 18:47:25.366
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 18:47:25.381
  May  5 18:47:26.382: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 05/05/24 18:47:26.392
  STEP: Creating a custom resource definition that should be denied by the webhook @ 05/05/24 18:47:26.415
  May  5 18:47:26.415: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 18:47:26.424: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3738" for this suite. @ 05/05/24 18:47:26.458
  STEP: Destroying namespace "webhook-markers-9520" for this suite. @ 05/05/24 18:47:26.464
• [3.424 seconds]
------------------------------
S
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:45
  STEP: Creating a kubernetes client @ 05/05/24 18:47:26.47
  May  5 18:47:26.470: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename configmap @ 05/05/24 18:47:26.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:47:26.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:47:26.487
  STEP: Creating configMap configmap-3806/configmap-test-2a3e4670-d33b-45c0-9f4f-75a9f2973f56 @ 05/05/24 18:47:26.489
  STEP: Creating a pod to test consume configMaps @ 05/05/24 18:47:26.491
  STEP: Saw pod success @ 05/05/24 18:47:28.509
  May  5 18:47:28.514: INFO: Trying to get logs from node worker01 pod pod-configmaps-b674cc63-9dc3-458b-a046-d18cf6e83c02 container env-test: <nil>
  STEP: delete the pod @ 05/05/24 18:47:28.524
  May  5 18:47:28.541: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3806" for this suite. @ 05/05/24 18:47:28.545
• [2.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:122
  STEP: Creating a kubernetes client @ 05/05/24 18:47:28.562
  May  5 18:47:28.564: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename podtemplate @ 05/05/24 18:47:28.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:47:28.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:47:28.588
  STEP: Create set of pod templates @ 05/05/24 18:47:28.591
  May  5 18:47:28.596: INFO: created test-podtemplate-1
  May  5 18:47:28.604: INFO: created test-podtemplate-2
  May  5 18:47:28.611: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 05/05/24 18:47:28.611
  STEP: delete collection of pod templates @ 05/05/24 18:47:28.615
  May  5 18:47:28.615: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 05/05/24 18:47:28.63
  May  5 18:47:28.630: INFO: requesting list of pod templates to confirm quantity
  May  5 18:47:28.633: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3989" for this suite. @ 05/05/24 18:47:28.637
• [0.084 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 05/05/24 18:47:28.647
  May  5 18:47:28.648: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename projected @ 05/05/24 18:47:28.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:47:28.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:47:28.668
  STEP: Creating the pod @ 05/05/24 18:47:28.672
  May  5 18:47:31.215: INFO: Successfully updated pod "labelsupdatee1dac0ec-123f-4540-869d-900ca48125ce"
  May  5 18:47:35.249: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1369" for this suite. @ 05/05/24 18:47:35.253
• [6.611 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 05/05/24 18:47:35.258
  May  5 18:47:35.258: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename init-container @ 05/05/24 18:47:35.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:47:35.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:47:35.281
  STEP: creating the pod @ 05/05/24 18:47:35.287
  May  5 18:47:35.288: INFO: PodSpec: initContainers in spec.initContainers
  May  5 18:47:40.040: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5278" for this suite. @ 05/05/24 18:47:40.05
• [4.796 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 05/05/24 18:47:40.055
  May  5 18:47:40.055: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename sched-preemption @ 05/05/24 18:47:40.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:47:40.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:47:40.073
  May  5 18:47:40.082: INFO: Waiting up to 1m0s for all nodes to be ready
  May  5 18:48:40.105: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/05/24 18:48:40.106
  May  5 18:48:40.106: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/05/24 18:48:40.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:48:40.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:48:40.125
  May  5 18:48:40.139: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  May  5 18:48:40.142: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  May  5 18:48:40.158: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May  5 18:48:40.166: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-250" for this suite. @ 05/05/24 18:48:40.191
  STEP: Destroying namespace "sched-preemption-6302" for this suite. @ 05/05/24 18:48:40.198
• [60.147 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 05/05/24 18:48:40.204
  May  5 18:48:40.204: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename dns @ 05/05/24 18:48:40.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:48:40.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:48:40.221
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 05/05/24 18:48:40.224
  May  5 18:48:40.232: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-9022  8d42314c-ffa8-4306-ba5e-1ff3f7a91796 14360 0 2024-05-05 18:48:40 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-05-05 18:48:40 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-99hqh,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-99hqh,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 05/05/24 18:48:42.248
  May  5 18:48:42.248: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-9022 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  5 18:48:42.248: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 18:48:42.250: INFO: ExecWithOptions: Clientset creation
  May  5 18:48:42.250: INFO: ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/dns-9022/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 05/05/24 18:48:42.314
  May  5 18:48:42.314: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-9022 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  5 18:48:42.314: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 18:48:42.314: INFO: ExecWithOptions: Clientset creation
  May  5 18:48:42.314: INFO: ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/dns-9022/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May  5 18:48:42.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May  5 18:48:42.377: INFO: Deleting pod test-dns-nameservers...
  STEP: Destroying namespace "dns-9022" for this suite. @ 05/05/24 18:48:42.387
• [2.188 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 05/05/24 18:48:42.395
  May  5 18:48:42.395: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename services @ 05/05/24 18:48:42.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:48:42.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:48:42.414
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-2153 @ 05/05/24 18:48:42.417
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/05/24 18:48:42.426
  STEP: creating service externalsvc in namespace services-2153 @ 05/05/24 18:48:42.426
  STEP: creating replication controller externalsvc in namespace services-2153 @ 05/05/24 18:48:42.438
  I0505 18:48:42.445425      20 runners.go:197] Created replication controller with name: externalsvc, namespace: services-2153, replica count: 2
  I0505 18:48:45.510636      20 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 05/05/24 18:48:45.517
  May  5 18:48:45.542: INFO: Creating new exec pod
  May  5 18:48:47.567: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-2153 exec execpodtxhhc -- /bin/sh -x -c nslookup nodeport-service.services-2153.svc.cluster.local'
  May  5 18:48:47.676: INFO: stderr: "+ nslookup nodeport-service.services-2153.svc.cluster.local\n"
  May  5 18:48:47.676: INFO: stdout: "Server:\t\t10.32.0.10\nAddress:\t10.32.0.10#53\n\nnodeport-service.services-2153.svc.cluster.local\tcanonical name = externalsvc.services-2153.svc.cluster.local.\nName:\texternalsvc.services-2153.svc.cluster.local\nAddress: 10.32.0.227\n\n"
  May  5 18:48:47.676: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-2153, will wait for the garbage collector to delete the pods @ 05/05/24 18:48:47.678
  May  5 18:48:47.738: INFO: Deleting ReplicationController externalsvc took: 4.975298ms
  May  5 18:48:47.839: INFO: Terminating ReplicationController externalsvc pods took: 100.732945ms
  May  5 18:48:50.652: INFO: Cleaning up the NodePort to ExternalName test service
  STEP: Destroying namespace "services-2153" for this suite. @ 05/05/24 18:48:50.661
• [8.270 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 05/05/24 18:48:50.666
  May  5 18:48:50.666: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename cronjob @ 05/05/24 18:48:50.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:48:50.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:48:50.677
  STEP: Creating a ForbidConcurrent cronjob @ 05/05/24 18:48:50.678
  STEP: Ensuring a job is scheduled @ 05/05/24 18:48:50.681
  STEP: Ensuring exactly one is scheduled @ 05/05/24 18:49:00.687
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/05/24 18:49:00.691
  STEP: Ensuring no more jobs are scheduled @ 05/05/24 18:49:00.693
  STEP: Removing cronjob @ 05/05/24 18:54:00.698
  May  5 18:54:00.702: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5882" for this suite. @ 05/05/24 18:54:00.704
• [310.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 05/05/24 18:54:00.712
  May  5 18:54:00.712: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename projected @ 05/05/24 18:54:00.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:54:00.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:54:00.73
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 18:54:00.733
  STEP: Saw pod success @ 05/05/24 18:54:04.749
  May  5 18:54:04.752: INFO: Trying to get logs from node worker00 pod downwardapi-volume-6ee0723e-060c-4272-948d-54933e63cfeb container client-container: <nil>
  STEP: delete the pod @ 05/05/24 18:54:04.761
  May  5 18:54:04.780: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4294" for this suite. @ 05/05/24 18:54:04.782
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:398
  STEP: Creating a kubernetes client @ 05/05/24 18:54:04.787
  May  5 18:54:04.787: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename namespaces @ 05/05/24 18:54:04.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:54:04.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:54:04.796
  STEP: Creating namespace "e2e-ns-cdltf" @ 05/05/24 18:54:04.797
  May  5 18:54:04.802: INFO: Namespace "e2e-ns-cdltf-1558" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-cdltf-1558" @ 05/05/24 18:54:04.802
  May  5 18:54:04.806: INFO: Namespace "e2e-ns-cdltf-1558" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-cdltf-1558" @ 05/05/24 18:54:04.806
  May  5 18:54:04.809: INFO: Namespace "e2e-ns-cdltf-1558" has []v1.FinalizerName{"kubernetes"}
  May  5 18:54:04.809: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6225" for this suite. @ 05/05/24 18:54:04.811
  STEP: Destroying namespace "e2e-ns-cdltf-1558" for this suite. @ 05/05/24 18:54:04.814
• [0.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 05/05/24 18:54:04.816
  May  5 18:54:04.816: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename downward-api @ 05/05/24 18:54:04.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:54:04.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:54:04.825
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 18:54:04.826
  STEP: Saw pod success @ 05/05/24 18:54:08.846
  May  5 18:54:08.849: INFO: Trying to get logs from node worker01 pod downwardapi-volume-76701289-fd2d-413b-b092-8cfc1c6480c9 container client-container: <nil>
  STEP: delete the pod @ 05/05/24 18:54:08.86
  May  5 18:54:08.884: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4143" for this suite. @ 05/05/24 18:54:08.887
• [4.074 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1741
  STEP: Creating a kubernetes client @ 05/05/24 18:54:08.891
  May  5 18:54:08.891: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename kubectl @ 05/05/24 18:54:08.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:54:08.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:54:08.901
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/05/24 18:54:08.903
  May  5 18:54:08.903: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-8052 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  May  5 18:54:08.941: INFO: stderr: ""
  May  5 18:54:08.941: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 05/05/24 18:54:08.942
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/05/24 18:54:13.993
  May  5 18:54:13.993: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-8052 get pod e2e-test-httpd-pod -o json'
  May  5 18:54:14.042: INFO: stderr: ""
  May  5 18:54:14.042: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"0161a6fab81d38960985f850b0a2c0db7affebc20af79143b1a901199ac45671\",\n            \"cni.projectcalico.org/podIP\": \"10.200.131.181/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.200.131.181/32\"\n        },\n        \"creationTimestamp\": \"2024-05-05T18:54:08Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-8052\",\n        \"resourceVersion\": \"15798\",\n        \"uid\": \"d9db9522-47bf-46d9-a227-7a5370a79815\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-rmlfh\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"worker00\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-rmlfh\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-05T18:54:10Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-05T18:54:08Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-05T18:54:10Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-05T18:54:10Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-05T18:54:08Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://d225fba3e38f5544ccd4ac67a6b117dc6e3110d9c6ab140e6d97ad7346c49f6c\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-05-05T18:54:09Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"192.168.58.100\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.58.100\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.200.131.181\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.200.131.181\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-05-05T18:54:08Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 05/05/24 18:54:14.042
  May  5 18:54:14.042: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-8052 replace -f -'
  May  5 18:54:14.328: INFO: stderr: ""
  May  5 18:54:14.328: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 @ 05/05/24 18:54:14.328
  May  5 18:54:14.330: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-8052 delete pods e2e-test-httpd-pod'
  May  5 18:54:15.716: INFO: stderr: ""
  May  5 18:54:15.716: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  May  5 18:54:15.716: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8052" for this suite. @ 05/05/24 18:54:15.718
• [6.830 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:243
  STEP: Creating a kubernetes client @ 05/05/24 18:54:15.721
  May  5 18:54:15.721: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename namespaces @ 05/05/24 18:54:15.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:54:15.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:54:15.729
  STEP: Creating a test namespace @ 05/05/24 18:54:15.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:54:15.737
  STEP: Creating a pod in the namespace @ 05/05/24 18:54:15.739
  STEP: Waiting for the pod to have running status @ 05/05/24 18:54:15.742
  STEP: Deleting the namespace @ 05/05/24 18:54:17.747
  STEP: Waiting for the namespace to be removed. @ 05/05/24 18:54:17.76
  STEP: Recreating the namespace @ 05/05/24 18:54:28.765
  STEP: Verifying there are no pods in the namespace @ 05/05/24 18:54:28.777
  May  5 18:54:28.779: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9543" for this suite. @ 05/05/24 18:54:28.781
  STEP: Destroying namespace "nsdeletetest-6482" for this suite. @ 05/05/24 18:54:28.782
  May  5 18:54:28.784: INFO: Namespace nsdeletetest-6482 was already deleted
  STEP: Destroying namespace "nsdeletetest-2476" for this suite. @ 05/05/24 18:54:28.784
• [13.065 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 05/05/24 18:54:28.787
  May  5 18:54:28.787: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename webhook @ 05/05/24 18:54:28.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:54:28.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:54:28.797
  STEP: Setting up server cert @ 05/05/24 18:54:28.805
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 18:54:29.043
  STEP: Deploying the webhook pod @ 05/05/24 18:54:29.048
  STEP: Wait for the deployment to be ready @ 05/05/24 18:54:29.053
  May  5 18:54:29.057: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/05/24 18:54:31.062
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 18:54:31.067
  May  5 18:54:32.068: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 05/05/24 18:54:32.071
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 05/05/24 18:54:32.072
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 05/05/24 18:54:32.072
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 05/05/24 18:54:32.072
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 05/05/24 18:54:32.073
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/05/24 18:54:32.073
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/05/24 18:54:32.074
  May  5 18:54:32.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1976" for this suite. @ 05/05/24 18:54:32.101
  STEP: Destroying namespace "webhook-markers-5252" for this suite. @ 05/05/24 18:54:32.104
• [3.322 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 05/05/24 18:54:32.11
  May  5 18:54:32.110: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename watch @ 05/05/24 18:54:32.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:54:32.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:54:32.125
  STEP: creating a new configmap @ 05/05/24 18:54:32.127
  STEP: modifying the configmap once @ 05/05/24 18:54:32.131
  STEP: modifying the configmap a second time @ 05/05/24 18:54:32.136
  STEP: deleting the configmap @ 05/05/24 18:54:32.139
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 05/05/24 18:54:32.144
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 05/05/24 18:54:32.147
  May  5 18:54:32.147: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3711  cf92b001-927e-4c52-a854-d5dd75022963 15999 0 2024-05-05 18:54:32 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-05-05 18:54:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May  5 18:54:32.147: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3711  cf92b001-927e-4c52-a854-d5dd75022963 16000 0 2024-05-05 18:54:32 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-05-05 18:54:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May  5 18:54:32.147: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3711" for this suite. @ 05/05/24 18:54:32.15
• [0.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:76
  STEP: Creating a kubernetes client @ 05/05/24 18:54:32.158
  May  5 18:54:32.159: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename resourcequota @ 05/05/24 18:54:32.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:54:32.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:54:32.168
  STEP: Counting existing ResourceQuota @ 05/05/24 18:54:32.17
  STEP: Creating a ResourceQuota @ 05/05/24 18:54:37.172
  STEP: Ensuring resource quota status is calculated @ 05/05/24 18:54:37.175
  May  5 18:54:39.186: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6842" for this suite. @ 05/05/24 18:54:39.19
• [7.047 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 05/05/24 18:54:39.205
  May  5 18:54:39.205: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename secrets @ 05/05/24 18:54:39.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:54:39.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:54:39.218
  STEP: Creating secret with name secret-test-map-841cd742-ef55-4b53-8ac6-cfbd533c3018 @ 05/05/24 18:54:39.219
  STEP: Creating a pod to test consume secrets @ 05/05/24 18:54:39.222
  STEP: Saw pod success @ 05/05/24 18:54:41.232
  May  5 18:54:41.236: INFO: Trying to get logs from node worker00 pod pod-secrets-42c32af5-e6cc-4d45-9a6e-3e5944d5aa05 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/05/24 18:54:41.24
  May  5 18:54:41.258: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2571" for this suite. @ 05/05/24 18:54:41.26
• [2.057 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 05/05/24 18:54:41.263
  May  5 18:54:41.263: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename deployment @ 05/05/24 18:54:41.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:54:41.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:54:41.274
  May  5 18:54:41.280: INFO: Pod name rollover-pod: Found 0 pods out of 1
  May  5 18:54:46.284: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/05/24 18:54:46.284
  May  5 18:54:46.284: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  May  5 18:54:48.290: INFO: Creating deployment "test-rollover-deployment"
  May  5 18:54:48.296: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  May  5 18:54:50.304: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  May  5 18:54:50.310: INFO: Ensure that both replica sets have 1 created replica
  May  5 18:54:50.313: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  May  5 18:54:50.317: INFO: Updating deployment test-rollover-deployment
  May  5 18:54:50.317: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  May  5 18:54:52.324: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  May  5 18:54:52.329: INFO: Make sure deployment "test-rollover-deployment" is complete
  May  5 18:54:52.332: INFO: all replica sets need to contain the pod-template-hash label
  May  5 18:54:52.332: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 18, 54, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 18, 54, 48, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 18, 54, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 18, 54, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  5 18:54:54.343: INFO: all replica sets need to contain the pod-template-hash label
  May  5 18:54:54.343: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 18, 54, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 18, 54, 48, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 18, 54, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 18, 54, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  5 18:54:56.343: INFO: all replica sets need to contain the pod-template-hash label
  May  5 18:54:56.343: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 18, 54, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 18, 54, 48, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 18, 54, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 18, 54, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  5 18:54:58.346: INFO: all replica sets need to contain the pod-template-hash label
  May  5 18:54:58.346: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 18, 54, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 18, 54, 48, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 18, 54, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 18, 54, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  5 18:55:00.341: INFO: all replica sets need to contain the pod-template-hash label
  May  5 18:55:00.341: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 18, 54, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 18, 54, 48, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 18, 54, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 18, 54, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  5 18:55:02.341: INFO: 
  May  5 18:55:02.341: INFO: Ensure that both old replica sets have no replicas
  May  5 18:55:02.346: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1384",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "022cac4c-c7fe-4379-ae26-bab6e049a66d",
      ResourceVersion: (string) (len=5) "16266",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850532088,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532101,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532088,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532088,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532101,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532088,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-68774655d5\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May  5 18:55:02.349: INFO: New ReplicaSet "test-rollover-deployment-68774655d5" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-68774655d5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1384",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d89aa94c-9656-47f1-9aa4-f7e7e9780045",
      ResourceVersion: (string) (len=5) "16256",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850532090,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "022cac4c-c7fe-4379-ae26-bab6e049a66d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 32 32 63 61 63  34 63 2d 63 37 66 65 2d  |\"022cac4c-c7fe-|
              00000120  34 33 37 39 2d 61 65 32  36 2d 62 61 62 36 65 30  |4379-ae26-bab6e0|
              00000130  34 39 61 36 36 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |49a66d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532101,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May  5 18:55:02.352: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  May  5 18:55:02.352: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1384",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "edd1a2c6-ef56-4506-ad2e-5aa0d03933bf",
      ResourceVersion: (string) (len=5) "16265",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850532081,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "022cac4c-c7fe-4379-ae26-bab6e049a66d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532101,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  30 32 32 63 61 63 34 63  2d 63 37 66 65 2d 34 33  |022cac4c-c7fe-43|
              000000c0  37 39 2d 61 65 32 36 2d  62 61 62 36 65 30 34 39  |79-ae26-bab6e049|
              000000d0  61 36 36 64 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |a66d\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532101,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May  5 18:55:02.358: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1384",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "40b86111-fd6c-496b-a954-68bef6479616",
      ResourceVersion: (string) (len=5) "16201",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850532088,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "022cac4c-c7fe-4379-ae26-bab6e049a66d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 32 32 63 61 63  34 63 2d 63 37 66 65 2d  |\"022cac4c-c7fe-|
              00000120  34 33 37 39 2d 61 65 32  36 2d 62 61 62 36 65 30  |4379-ae26-bab6e0|
              00000130  34 39 61 36 36 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |49a66d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May  5 18:55:02.366: INFO: Pod "test-rollover-deployment-68774655d5-nd48n" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-68774655d5-nd48n",
      GenerateName: (string) (len=36) "test-rollover-deployment-68774655d5-",
      Namespace: (string) (len=15) "deployment-1384",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7c9f175d-2dac-4bea-b969-f16c4277e15f",
      ResourceVersion: (string) (len=5) "16215",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850532090,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f033d17d69a9df252ce72bdcd08616903620a5398497b2a2be99cb6d95728f9f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.26/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.26/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-68774655d5",
          UID: (types.UID) (len=36) "d89aa94c-9656-47f1-9aa4-f7e7e9780045",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 38  39 61 61 39 34 63 2d 39  |d\":\"d89aa94c-9|
              00000090  36 35 36 2d 34 37 66 31  2d 39 61 61 34 2d 66 37  |656-47f1-9aa4-f7|
              000000a0  65 37 65 39 37 38 30 30  34 35 5c 22 7d 22 3a 7b  |e7e9780045\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 32  36 5c 22 7d 22 3a 7b 22  |.200.5.26\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w6wdl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w6wdl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.26",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.26"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850532090,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850532090,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://9224011b2a9a4efe8a62196e7b9099563d97a6deafb0114471c9ab79281ecb4d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 18:55:02.369: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1384" for this suite. @ 05/05/24 18:55:02.372
• [21.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 05/05/24 18:55:02.392
  May  5 18:55:02.392: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/05/24 18:55:02.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:55:02.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:55:02.403
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 05/05/24 18:55:02.404
  May  5 18:55:02.405: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 05/05/24 18:55:07.215
  May  5 18:55:07.215: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 18:55:08.403: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 18:55:13.224: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4103" for this suite. @ 05/05/24 18:55:13.229
• [10.844 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 05/05/24 18:55:13.236
  May  5 18:55:13.236: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename sched-preemption @ 05/05/24 18:55:13.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:55:13.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:55:13.247
  May  5 18:55:13.255: INFO: Waiting up to 1m0s for all nodes to be ready
  May  5 18:56:13.288: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/05/24 18:56:13.29
  May  5 18:56:13.303: INFO: Created pod: pod0-0-sched-preemption-low-priority
  May  5 18:56:13.310: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  May  5 18:56:13.333: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  May  5 18:56:13.344: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/05/24 18:56:13.345
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 05/05/24 18:56:15.363
  May  5 18:56:19.399: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1968" for this suite. @ 05/05/24 18:56:19.427
• [66.196 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 05/05/24 18:56:19.433
  May  5 18:56:19.433: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename secrets @ 05/05/24 18:56:19.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:56:19.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:56:19.446
  STEP: Creating secret with name secret-test-map-d339e874-8055-4d89-ae32-2854b6a11fcf @ 05/05/24 18:56:19.448
  STEP: Creating a pod to test consume secrets @ 05/05/24 18:56:19.451
  STEP: Saw pod success @ 05/05/24 18:56:23.468
  May  5 18:56:23.472: INFO: Trying to get logs from node worker01 pod pod-secrets-43d611ee-6d28-4fe3-91c6-31941d55ec6b container secret-volume-test: <nil>
  STEP: delete the pod @ 05/05/24 18:56:23.484
  May  5 18:56:23.506: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7791" for this suite. @ 05/05/24 18:56:23.509
• [4.082 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 05/05/24 18:56:23.515
  May  5 18:56:23.515: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename field-validation @ 05/05/24 18:56:23.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:56:23.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:56:23.526
  STEP: apply creating a deployment @ 05/05/24 18:56:23.527
  May  5 18:56:23.528: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9399" for this suite. @ 05/05/24 18:56:23.535
• [0.026 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 05/05/24 18:56:23.541
  May  5 18:56:23.541: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename var-expansion @ 05/05/24 18:56:23.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:56:23.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:56:23.558
  STEP: Creating a pod to test substitution in container's args @ 05/05/24 18:56:23.56
  STEP: Saw pod success @ 05/05/24 18:56:27.579
  May  5 18:56:27.582: INFO: Trying to get logs from node worker01 pod var-expansion-188a0a0f-6920-4a00-b3bf-42cd931cbd83 container dapi-container: <nil>
  STEP: delete the pod @ 05/05/24 18:56:27.589
  May  5 18:56:27.610: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6753" for this suite. @ 05/05/24 18:56:27.612
• [4.073 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:46
  STEP: Creating a kubernetes client @ 05/05/24 18:56:27.617
  May  5 18:56:27.617: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename secrets @ 05/05/24 18:56:27.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:56:27.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:56:27.633
  STEP: Creating secret with name secret-test-e00999d8-0b9b-4a89-8818-37171b3b5d15 @ 05/05/24 18:56:27.635
  STEP: Creating a pod to test consume secrets @ 05/05/24 18:56:27.639
  STEP: Saw pod success @ 05/05/24 18:56:31.665
  May  5 18:56:31.667: INFO: Trying to get logs from node worker01 pod pod-secrets-3072efb7-3dfb-4796-8f13-ae1c6c0b721b container secret-env-test: <nil>
  STEP: delete the pod @ 05/05/24 18:56:31.673
  May  5 18:56:31.682: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5657" for this suite. @ 05/05/24 18:56:31.684
• [4.072 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1806
  STEP: Creating a kubernetes client @ 05/05/24 18:56:31.689
  May  5 18:56:31.689: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename kubectl @ 05/05/24 18:56:31.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:56:31.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:56:31.705
  STEP: Starting the proxy @ 05/05/24 18:56:31.706
  May  5 18:56:31.706: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-4696 proxy --unix-socket=/tmp/kubectl-proxy-unix2579731353/test'
  STEP: retrieving proxy /api/ output @ 05/05/24 18:56:31.739
  May  5 18:56:31.739: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4696" for this suite. @ 05/05/24 18:56:31.743
• [0.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 05/05/24 18:56:31.749
  May  5 18:56:31.749: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename var-expansion @ 05/05/24 18:56:31.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:56:31.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:56:31.768
  STEP: Creating a pod to test substitution in volume subpath @ 05/05/24 18:56:31.771
  STEP: Saw pod success @ 05/05/24 18:56:33.781
  May  5 18:56:33.784: INFO: Trying to get logs from node worker00 pod var-expansion-93053a68-fb91-4f80-ab7b-11457e8d59b5 container dapi-container: <nil>
  STEP: delete the pod @ 05/05/24 18:56:33.789
  May  5 18:56:33.799: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-700" for this suite. @ 05/05/24 18:56:33.802
• [2.057 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 05/05/24 18:56:33.806
  May  5 18:56:33.806: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename container-probe @ 05/05/24 18:56:33.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:56:33.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:56:33.825
  STEP: Creating pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487 @ 05/05/24 18:56:33.827
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/05/24 18:56:35.837
  May  5 18:56:35.841: INFO: Initial restart count of pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e is 0
  May  5 18:56:35.844: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:56:37.852: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:56:39.859: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:56:41.865: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:56:43.869: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:56:45.875: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:56:47.881: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:56:49.886: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:56:51.889: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:56:53.892: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:56:55.900: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:56:55.900: INFO: Restart count of pod container-probe-8487/liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e is now 1 (20.059183999s elapsed)
  May  5 18:56:57.905: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:56:59.910: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:57:01.917: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:57:03.925: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:57:05.928: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:57:07.934: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:57:09.940: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:57:11.945: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:57:13.950: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:57:15.958: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:57:15.958: INFO: Restart count of pod container-probe-8487/liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e is now 2 (40.116712954s elapsed)
  May  5 18:57:17.965: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:57:19.972: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:57:21.981: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:57:23.987: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:57:25.995: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:57:27.998: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:57:30.003: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:57:32.009: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:57:34.013: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:57:36.015: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:57:36.015: INFO: Restart count of pod container-probe-8487/liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e is now 3 (1m0.174160803s elapsed)
  May  5 18:57:38.021: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:57:40.023: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:57:42.029: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:57:44.037: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:57:46.043: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:57:48.050: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:57:50.056: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:57:52.062: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:57:54.069: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:57:56.071: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:57:56.071: INFO: Restart count of pod container-probe-8487/liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e is now 4 (1m20.229640286s elapsed)
  May  5 18:57:58.077: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:58:00.084: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:58:02.087: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:58:04.092: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:58:06.098: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:58:08.105: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:58:10.108: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:58:12.112: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:58:14.118: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:58:16.120: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:58:18.123: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:58:20.130: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:58:22.141: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:58:24.148: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:58:26.158: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:58:28.163: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:58:30.171: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:58:32.180: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:58:34.186: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:58:36.192: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:58:38.197: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:58:40.203: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:58:42.205: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:58:44.208: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:58:46.217: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:58:48.221: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:58:50.227: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:58:52.231: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:58:54.237: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:58:56.244: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:58:58.247: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:59:00.253: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:59:02.262: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:59:04.268: INFO: Get pod liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e in namespace container-probe-8487
  May  5 18:59:04.268: INFO: Restart count of pod container-probe-8487/liveness-4d8f96d3-acb4-4391-8152-6574ea186a5e is now 5 (2m28.426642442s elapsed)
  May  5 18:59:04.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/05/24 18:59:04.277
  STEP: Destroying namespace "container-probe-8487" for this suite. @ 05/05/24 18:59:04.293
• [150.496 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:169
  STEP: Creating a kubernetes client @ 05/05/24 18:59:04.302
  May  5 18:59:04.302: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename configmap @ 05/05/24 18:59:04.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:59:04.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:59:04.332
  STEP: creating a ConfigMap @ 05/05/24 18:59:04.335
  STEP: fetching the ConfigMap @ 05/05/24 18:59:04.339
  STEP: patching the ConfigMap @ 05/05/24 18:59:04.342
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 05/05/24 18:59:04.345
  STEP: deleting the ConfigMap by collection with a label selector @ 05/05/24 18:59:04.347
  STEP: listing all ConfigMaps in test namespace @ 05/05/24 18:59:04.352
  May  5 18:59:04.354: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9777" for this suite. @ 05/05/24 18:59:04.357
• [0.061 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 05/05/24 18:59:04.363
  May  5 18:59:04.363: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename dns @ 05/05/24 18:59:04.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:59:04.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:59:04.376
  STEP: Creating a test externalName service @ 05/05/24 18:59:04.379
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1124.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-1124.svc.cluster.local; sleep 1; done
   @ 05/05/24 18:59:04.383
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1124.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1124.svc.cluster.local; sleep 1; done
   @ 05/05/24 18:59:04.383
  STEP: creating a pod to probe DNS @ 05/05/24 18:59:04.383
  STEP: submitting the pod to kubernetes @ 05/05/24 18:59:04.383
  STEP: retrieving the pod @ 05/05/24 18:59:06.397
  STEP: looking for the results for each expected name from probers @ 05/05/24 18:59:06.399
  May  5 18:59:06.405: INFO: DNS probes using dns-test-4d184aab-018d-4144-bba8-bc5d23f279b9 succeeded

  STEP: changing the externalName to bar.example.com @ 05/05/24 18:59:06.405
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1124.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-1124.svc.cluster.local; sleep 1; done
   @ 05/05/24 18:59:06.409
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1124.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1124.svc.cluster.local; sleep 1; done
   @ 05/05/24 18:59:06.409
  STEP: creating a second pod to probe DNS @ 05/05/24 18:59:06.409
  STEP: submitting the pod to kubernetes @ 05/05/24 18:59:06.409
  STEP: retrieving the pod @ 05/05/24 18:59:08.424
  STEP: looking for the results for each expected name from probers @ 05/05/24 18:59:08.428
  May  5 18:59:08.437: INFO: File wheezy_udp@dns-test-service-3.dns-1124.svc.cluster.local from pod  dns-1124/dns-test-538e6664-e4e3-4eae-a9dc-210a99cff133 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  May  5 18:59:08.442: INFO: File jessie_udp@dns-test-service-3.dns-1124.svc.cluster.local from pod  dns-1124/dns-test-538e6664-e4e3-4eae-a9dc-210a99cff133 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  May  5 18:59:08.442: INFO: Lookups using dns-1124/dns-test-538e6664-e4e3-4eae-a9dc-210a99cff133 failed for: [wheezy_udp@dns-test-service-3.dns-1124.svc.cluster.local jessie_udp@dns-test-service-3.dns-1124.svc.cluster.local]

  May  5 18:59:08.460: INFO: Pod client logs for webserver: 
  May  5 18:59:08.463: INFO: Pod client logs for querier: 
  May  5 18:59:08.468: INFO: Pod client logs for jessie-querier: 
  May  5 18:59:13.474: INFO: File wheezy_udp@dns-test-service-3.dns-1124.svc.cluster.local from pod  dns-1124/dns-test-538e6664-e4e3-4eae-a9dc-210a99cff133 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  May  5 18:59:13.478: INFO: File jessie_udp@dns-test-service-3.dns-1124.svc.cluster.local from pod  dns-1124/dns-test-538e6664-e4e3-4eae-a9dc-210a99cff133 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  May  5 18:59:13.478: INFO: Lookups using dns-1124/dns-test-538e6664-e4e3-4eae-a9dc-210a99cff133 failed for: [wheezy_udp@dns-test-service-3.dns-1124.svc.cluster.local jessie_udp@dns-test-service-3.dns-1124.svc.cluster.local]

  May  5 18:59:13.486: INFO: Pod client logs for webserver: 
  May  5 18:59:13.491: INFO: Pod client logs for querier: 
  May  5 18:59:13.499: INFO: Pod client logs for jessie-querier: 
  May  5 18:59:18.476: INFO: File wheezy_udp@dns-test-service-3.dns-1124.svc.cluster.local from pod  dns-1124/dns-test-538e6664-e4e3-4eae-a9dc-210a99cff133 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  May  5 18:59:18.488: INFO: File jessie_udp@dns-test-service-3.dns-1124.svc.cluster.local from pod  dns-1124/dns-test-538e6664-e4e3-4eae-a9dc-210a99cff133 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  May  5 18:59:18.488: INFO: Lookups using dns-1124/dns-test-538e6664-e4e3-4eae-a9dc-210a99cff133 failed for: [wheezy_udp@dns-test-service-3.dns-1124.svc.cluster.local jessie_udp@dns-test-service-3.dns-1124.svc.cluster.local]

  May  5 18:59:18.494: INFO: Pod client logs for webserver: 
  May  5 18:59:18.499: INFO: Pod client logs for querier: 
  May  5 18:59:18.502: INFO: Pod client logs for jessie-querier: 
  May  5 18:59:23.480: INFO: File wheezy_udp@dns-test-service-3.dns-1124.svc.cluster.local from pod  dns-1124/dns-test-538e6664-e4e3-4eae-a9dc-210a99cff133 contains '' instead of 'bar.example.com.'
  May  5 18:59:23.487: INFO: File jessie_udp@dns-test-service-3.dns-1124.svc.cluster.local from pod  dns-1124/dns-test-538e6664-e4e3-4eae-a9dc-210a99cff133 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  May  5 18:59:23.487: INFO: Lookups using dns-1124/dns-test-538e6664-e4e3-4eae-a9dc-210a99cff133 failed for: [wheezy_udp@dns-test-service-3.dns-1124.svc.cluster.local jessie_udp@dns-test-service-3.dns-1124.svc.cluster.local]

  May  5 18:59:23.495: INFO: Pod client logs for webserver: 
  May  5 18:59:23.501: INFO: Pod client logs for querier: 
  May  5 18:59:23.505: INFO: Pod client logs for jessie-querier: 
  May  5 18:59:28.475: INFO: File wheezy_udp@dns-test-service-3.dns-1124.svc.cluster.local from pod  dns-1124/dns-test-538e6664-e4e3-4eae-a9dc-210a99cff133 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  May  5 18:59:28.480: INFO: File jessie_udp@dns-test-service-3.dns-1124.svc.cluster.local from pod  dns-1124/dns-test-538e6664-e4e3-4eae-a9dc-210a99cff133 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  May  5 18:59:28.480: INFO: Lookups using dns-1124/dns-test-538e6664-e4e3-4eae-a9dc-210a99cff133 failed for: [wheezy_udp@dns-test-service-3.dns-1124.svc.cluster.local jessie_udp@dns-test-service-3.dns-1124.svc.cluster.local]

  May  5 18:59:28.489: INFO: Pod client logs for webserver: 
  May  5 18:59:28.496: INFO: Pod client logs for querier: 
  May  5 18:59:28.501: INFO: Pod client logs for jessie-querier: 
  May  5 18:59:33.472: INFO: File wheezy_udp@dns-test-service-3.dns-1124.svc.cluster.local from pod  dns-1124/dns-test-538e6664-e4e3-4eae-a9dc-210a99cff133 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  May  5 18:59:33.474: INFO: File jessie_udp@dns-test-service-3.dns-1124.svc.cluster.local from pod  dns-1124/dns-test-538e6664-e4e3-4eae-a9dc-210a99cff133 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  May  5 18:59:33.474: INFO: Lookups using dns-1124/dns-test-538e6664-e4e3-4eae-a9dc-210a99cff133 failed for: [wheezy_udp@dns-test-service-3.dns-1124.svc.cluster.local jessie_udp@dns-test-service-3.dns-1124.svc.cluster.local]

  May  5 18:59:33.478: INFO: Pod client logs for webserver: 
  May  5 18:59:33.482: INFO: Pod client logs for querier: 
  May  5 18:59:33.485: INFO: Pod client logs for jessie-querier: 
  May  5 18:59:38.483: INFO: DNS probes using dns-test-538e6664-e4e3-4eae-a9dc-210a99cff133 succeeded

  STEP: changing the service to type=ClusterIP @ 05/05/24 18:59:38.483
  W0505 18:59:38.512184      20 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1124.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-1124.svc.cluster.local; sleep 1; done
   @ 05/05/24 18:59:38.512
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1124.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-1124.svc.cluster.local; sleep 1; done
   @ 05/05/24 18:59:38.512
  STEP: creating a third pod to probe DNS @ 05/05/24 18:59:38.512
  STEP: submitting the pod to kubernetes @ 05/05/24 18:59:38.517
  STEP: retrieving the pod @ 05/05/24 18:59:40.535
  STEP: looking for the results for each expected name from probers @ 05/05/24 18:59:40.539
  May  5 18:59:40.554: INFO: DNS probes using dns-test-f0ab053a-9dc0-4ea0-8d5e-c12a3cf0d82c succeeded

  May  5 18:59:40.554: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/05/24 18:59:40.557
  STEP: deleting the pod @ 05/05/24 18:59:40.565
  STEP: deleting the pod @ 05/05/24 18:59:40.578
  STEP: deleting the test externalName service @ 05/05/24 18:59:40.59
  STEP: Destroying namespace "dns-1124" for this suite. @ 05/05/24 18:59:40.608
• [36.257 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:95
  STEP: Creating a kubernetes client @ 05/05/24 18:59:40.62
  May  5 18:59:40.620: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename secrets @ 05/05/24 18:59:40.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:59:40.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:59:40.636
  STEP: creating secret secrets-1336/secret-test-3ac6251d-14cb-4376-af72-7f784214adee @ 05/05/24 18:59:40.639
  STEP: Creating a pod to test consume secrets @ 05/05/24 18:59:40.644
  STEP: Saw pod success @ 05/05/24 18:59:44.666
  May  5 18:59:44.669: INFO: Trying to get logs from node worker01 pod pod-configmaps-8b709f6c-e418-4557-97e5-db3e77f86c49 container env-test: <nil>
  STEP: delete the pod @ 05/05/24 18:59:44.675
  May  5 18:59:44.692: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1336" for this suite. @ 05/05/24 18:59:44.696
• [4.081 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 05/05/24 18:59:44.703
  May  5 18:59:44.703: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename kubectl-logs @ 05/05/24 18:59:44.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:59:44.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:59:44.727
  STEP: creating an pod @ 05/05/24 18:59:44.731
  May  5 18:59:44.731: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-logs-1559 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  May  5 18:59:44.820: INFO: stderr: ""
  May  5 18:59:44.820: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 05/05/24 18:59:44.82
  May  5 18:59:44.823: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  May  5 18:59:46.836: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 05/05/24 18:59:46.836
  May  5 18:59:46.836: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-logs-1559 logs logs-generator logs-generator'
  May  5 18:59:46.893: INFO: stderr: ""
  May  5 18:59:46.894: INFO: stdout: "I0505 18:59:45.448532       1 logs_generator.go:76] 0 GET /api/v1/namespaces/default/pods/77d 436\nI0505 18:59:45.649218       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/q99 267\nI0505 18:59:45.850307       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/mlck 252\nI0505 18:59:46.049029       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/qnl 260\nI0505 18:59:46.249351       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/4xn 228\nI0505 18:59:46.449059       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/css 223\nI0505 18:59:46.649812       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/svz 373\nI0505 18:59:46.849178       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/lj5 240\n"
  May  5 18:59:48.894: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-logs-1559 logs logs-generator logs-generator'
  May  5 18:59:48.943: INFO: stderr: ""
  May  5 18:59:48.943: INFO: stdout: "I0505 18:59:45.448532       1 logs_generator.go:76] 0 GET /api/v1/namespaces/default/pods/77d 436\nI0505 18:59:45.649218       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/q99 267\nI0505 18:59:45.850307       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/mlck 252\nI0505 18:59:46.049029       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/qnl 260\nI0505 18:59:46.249351       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/4xn 228\nI0505 18:59:46.449059       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/css 223\nI0505 18:59:46.649812       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/svz 373\nI0505 18:59:46.849178       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/lj5 240\nI0505 18:59:47.048887       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/vdd 449\nI0505 18:59:47.249470       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/pxgl 550\nI0505 18:59:47.449876       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/9hr 417\nI0505 18:59:47.652712       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/kube-system/pods/4rb 365\nI0505 18:59:47.850252       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/ns/pods/w94 439\nI0505 18:59:48.048790       1 logs_generator.go:76] 13 GET /api/v1/namespaces/ns/pods/b79 313\nI0505 18:59:48.255122       1 logs_generator.go:76] 14 POST /api/v1/namespaces/default/pods/67th 476\nI0505 18:59:48.453493       1 logs_generator.go:76] 15 POST /api/v1/namespaces/kube-system/pods/q98k 325\nI0505 18:59:48.649135       1 logs_generator.go:76] 16 GET /api/v1/namespaces/kube-system/pods/hps8 381\nI0505 18:59:48.849136       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/g49n 405\n"
  STEP: limiting log lines @ 05/05/24 18:59:48.943
  May  5 18:59:48.943: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-logs-1559 logs logs-generator logs-generator --tail=1'
  May  5 18:59:48.986: INFO: stderr: ""
  May  5 18:59:48.986: INFO: stdout: "I0505 18:59:48.849136       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/g49n 405\n"
  May  5 18:59:48.986: INFO: got output "I0505 18:59:48.849136       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/g49n 405\n"
  STEP: limiting log bytes @ 05/05/24 18:59:48.986
  May  5 18:59:48.986: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-logs-1559 logs logs-generator logs-generator --limit-bytes=1'
  May  5 18:59:49.029: INFO: stderr: ""
  May  5 18:59:49.029: INFO: stdout: "I"
  May  5 18:59:49.029: INFO: got output "I"
  STEP: exposing timestamps @ 05/05/24 18:59:49.029
  May  5 18:59:49.029: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-logs-1559 logs logs-generator logs-generator --tail=1 --timestamps'
  May  5 18:59:49.074: INFO: stderr: ""
  May  5 18:59:49.074: INFO: stdout: "2024-05-05T18:59:49.048758626Z I0505 18:59:49.048659       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/9x2 539\n"
  May  5 18:59:49.074: INFO: got output "2024-05-05T18:59:49.048758626Z I0505 18:59:49.048659       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/9x2 539\n"
  STEP: restricting to a time range @ 05/05/24 18:59:49.074
  May  5 18:59:51.576: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-logs-1559 logs logs-generator logs-generator --since=1s'
  May  5 18:59:51.627: INFO: stderr: ""
  May  5 18:59:51.627: INFO: stdout: "I0505 18:59:50.849951       1 logs_generator.go:76] 27 POST /api/v1/namespaces/kube-system/pods/wp2c 278\nI0505 18:59:51.049668       1 logs_generator.go:76] 28 GET /api/v1/namespaces/kube-system/pods/28t 413\nI0505 18:59:51.249925       1 logs_generator.go:76] 29 PUT /api/v1/namespaces/default/pods/s2f 580\nI0505 18:59:51.449625       1 logs_generator.go:76] 30 PUT /api/v1/namespaces/kube-system/pods/gwrl 379\nI0505 18:59:51.650467       1 logs_generator.go:76] 31 GET /api/v1/namespaces/default/pods/4tv 562\n"
  May  5 18:59:51.627: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-logs-1559 logs logs-generator logs-generator --since=24h'
  May  5 18:59:51.675: INFO: stderr: ""
  May  5 18:59:51.675: INFO: stdout: "I0505 18:59:45.448532       1 logs_generator.go:76] 0 GET /api/v1/namespaces/default/pods/77d 436\nI0505 18:59:45.649218       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/q99 267\nI0505 18:59:45.850307       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/mlck 252\nI0505 18:59:46.049029       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/qnl 260\nI0505 18:59:46.249351       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/4xn 228\nI0505 18:59:46.449059       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/css 223\nI0505 18:59:46.649812       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/svz 373\nI0505 18:59:46.849178       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/lj5 240\nI0505 18:59:47.048887       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/vdd 449\nI0505 18:59:47.249470       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/pxgl 550\nI0505 18:59:47.449876       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/9hr 417\nI0505 18:59:47.652712       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/kube-system/pods/4rb 365\nI0505 18:59:47.850252       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/ns/pods/w94 439\nI0505 18:59:48.048790       1 logs_generator.go:76] 13 GET /api/v1/namespaces/ns/pods/b79 313\nI0505 18:59:48.255122       1 logs_generator.go:76] 14 POST /api/v1/namespaces/default/pods/67th 476\nI0505 18:59:48.453493       1 logs_generator.go:76] 15 POST /api/v1/namespaces/kube-system/pods/q98k 325\nI0505 18:59:48.649135       1 logs_generator.go:76] 16 GET /api/v1/namespaces/kube-system/pods/hps8 381\nI0505 18:59:48.849136       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/g49n 405\nI0505 18:59:49.048659       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/9x2 539\nI0505 18:59:49.249265       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/4qf 248\nI0505 18:59:49.448674       1 logs_generator.go:76] 20 POST /api/v1/namespaces/kube-system/pods/l2j 524\nI0505 18:59:49.649718       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/default/pods/cjcl 266\nI0505 18:59:49.849768       1 logs_generator.go:76] 22 POST /api/v1/namespaces/kube-system/pods/r4sp 421\nI0505 18:59:50.049046       1 logs_generator.go:76] 23 GET /api/v1/namespaces/ns/pods/th6f 361\nI0505 18:59:50.250320       1 logs_generator.go:76] 24 GET /api/v1/namespaces/default/pods/klbx 479\nI0505 18:59:50.448713       1 logs_generator.go:76] 25 POST /api/v1/namespaces/kube-system/pods/j5vj 291\nI0505 18:59:50.648661       1 logs_generator.go:76] 26 PUT /api/v1/namespaces/default/pods/v4cm 451\nI0505 18:59:50.849951       1 logs_generator.go:76] 27 POST /api/v1/namespaces/kube-system/pods/wp2c 278\nI0505 18:59:51.049668       1 logs_generator.go:76] 28 GET /api/v1/namespaces/kube-system/pods/28t 413\nI0505 18:59:51.249925       1 logs_generator.go:76] 29 PUT /api/v1/namespaces/default/pods/s2f 580\nI0505 18:59:51.449625       1 logs_generator.go:76] 30 PUT /api/v1/namespaces/kube-system/pods/gwrl 379\nI0505 18:59:51.650467       1 logs_generator.go:76] 31 GET /api/v1/namespaces/default/pods/4tv 562\n"
  May  5 18:59:51.675: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-logs-1559 delete pod logs-generator'
  May  5 18:59:52.669: INFO: stderr: ""
  May  5 18:59:52.669: INFO: stdout: "pod \"logs-generator\" deleted\n"
  May  5 18:59:52.669: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-1559" for this suite. @ 05/05/24 18:59:52.672
• [7.973 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 05/05/24 18:59:52.677
  May  5 18:59:52.677: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename pods @ 05/05/24 18:59:52.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:59:52.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:59:52.692
  STEP: Saw pod success @ 05/05/24 18:59:58.756
  May  5 18:59:58.759: INFO: Trying to get logs from node worker01 pod client-envvars-00cd3b79-128f-47f7-8e11-546b28e8829c container env3cont: <nil>
  STEP: delete the pod @ 05/05/24 18:59:58.764
  May  5 18:59:58.785: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2041" for this suite. @ 05/05/24 18:59:58.787
• [6.113 seconds]
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:161
  STEP: Creating a kubernetes client @ 05/05/24 18:59:58.79
  May  5 18:59:58.790: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename svcaccounts @ 05/05/24 18:59:58.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:59:58.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:59:58.8
  May  5 18:59:58.812: INFO: created pod pod-service-account-defaultsa
  May  5 18:59:58.812: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  May  5 18:59:58.817: INFO: created pod pod-service-account-mountsa
  May  5 18:59:58.817: INFO: pod pod-service-account-mountsa service account token volume mount: true
  May  5 18:59:58.823: INFO: created pod pod-service-account-nomountsa
  May  5 18:59:58.823: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  May  5 18:59:58.832: INFO: created pod pod-service-account-defaultsa-mountspec
  May  5 18:59:58.832: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  May  5 18:59:58.844: INFO: created pod pod-service-account-mountsa-mountspec
  May  5 18:59:58.844: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  May  5 18:59:58.854: INFO: created pod pod-service-account-nomountsa-mountspec
  May  5 18:59:58.854: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  May  5 18:59:58.860: INFO: created pod pod-service-account-defaultsa-nomountspec
  May  5 18:59:58.861: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  May  5 18:59:58.872: INFO: created pod pod-service-account-mountsa-nomountspec
  May  5 18:59:58.872: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  May  5 18:59:58.885: INFO: created pod pod-service-account-nomountsa-nomountspec
  May  5 18:59:58.885: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  May  5 18:59:58.885: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4119" for this suite. @ 05/05/24 18:59:58.895
• [0.114 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 05/05/24 18:59:58.905
  May  5 18:59:58.905: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename projected @ 05/05/24 18:59:58.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 18:59:58.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 18:59:58.923
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 18:59:58.927
  STEP: Saw pod success @ 05/05/24 19:00:00.954
  May  5 19:00:00.958: INFO: Trying to get logs from node worker01 pod downwardapi-volume-07c22ca3-5989-40c2-93ba-214dbbf0b4bf container client-container: <nil>
  STEP: delete the pod @ 05/05/24 19:00:00.968
  May  5 19:00:00.978: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8174" for this suite. @ 05/05/24 19:00:00.98
• [2.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:347
  STEP: Creating a kubernetes client @ 05/05/24 19:00:00.984
  May  5 19:00:00.984: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename security-context-test @ 05/05/24 19:00:00.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:00:00.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:00:00.995
  May  5 19:00:03.010: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4723" for this suite. @ 05/05/24 19:00:03.016
• [2.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 05/05/24 19:00:03.03
  May  5 19:00:03.030: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename projected @ 05/05/24 19:00:03.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:00:03.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:00:03.047
  STEP: Creating projection with secret that has name projected-secret-test-5acc85ef-8a35-4ab8-82a1-7235a090977c @ 05/05/24 19:00:03.05
  STEP: Creating a pod to test consume secrets @ 05/05/24 19:00:03.057
  STEP: Saw pod success @ 05/05/24 19:00:05.075
  May  5 19:00:05.079: INFO: Trying to get logs from node worker01 pod pod-projected-secrets-b69b6828-58ae-41d2-bf54-60ffe3be62bb container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/05/24 19:00:05.085
  May  5 19:00:05.100: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7942" for this suite. @ 05/05/24 19:00:05.103
• [2.078 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1030
  STEP: Creating a kubernetes client @ 05/05/24 19:00:05.11
  May  5 19:00:05.110: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename statefulset @ 05/05/24 19:00:05.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:00:05.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:00:05.13
  STEP: Creating service test in namespace statefulset-2244 @ 05/05/24 19:00:05.133
  STEP: Creating statefulset ss in namespace statefulset-2244 @ 05/05/24 19:00:05.141
  May  5 19:00:05.157: INFO: Found 0 stateful pods, waiting for 1
  May  5 19:00:15.161: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 05/05/24 19:00:15.166
  STEP: Getting /status @ 05/05/24 19:00:15.177
  May  5 19:00:15.182: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 05/05/24 19:00:15.183
  May  5 19:00:15.192: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 05/05/24 19:00:15.192
  May  5 19:00:15.193: INFO: Observed &StatefulSet event: ADDED
  May  5 19:00:15.194: INFO: Found Statefulset ss in namespace statefulset-2244 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May  5 19:00:15.194: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 05/05/24 19:00:15.194
  May  5 19:00:15.194: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  May  5 19:00:15.201: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 05/05/24 19:00:15.201
  May  5 19:00:15.202: INFO: Observed &StatefulSet event: ADDED
  May  5 19:00:15.202: INFO: Observed Statefulset ss in namespace statefulset-2244 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May  5 19:00:15.202: INFO: Observed &StatefulSet event: MODIFIED
  May  5 19:00:15.202: INFO: Found Statefulset ss in namespace statefulset-2244 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  May  5 19:00:15.202: INFO: Deleting all statefulset in ns statefulset-2244
  May  5 19:00:15.204: INFO: Scaling statefulset ss to 0
  May  5 19:00:25.216: INFO: Waiting for statefulset status.replicas updated to 0
  May  5 19:00:25.220: INFO: Deleting statefulset ss
  May  5 19:00:25.227: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2244" for this suite. @ 05/05/24 19:00:25.229
• [20.125 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 05/05/24 19:00:25.235
  May  5 19:00:25.235: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/05/24 19:00:25.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:00:25.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:00:25.256
  STEP: Creating two CSIDrivers @ 05/05/24 19:00:25.261
  STEP: Getting "inline-driver-abf44339-a936-459b-a357-207be7959526" & "inline-driver-35c45ed7-e7cf-463d-b5ef-c466a05edc9b" @ 05/05/24 19:00:25.283
  STEP: Patching the CSIDriver "inline-driver-35c45ed7-e7cf-463d-b5ef-c466a05edc9b" @ 05/05/24 19:00:25.288
  STEP: Updating the CSIDriver "inline-driver-35c45ed7-e7cf-463d-b5ef-c466a05edc9b" @ 05/05/24 19:00:25.295
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-9299" @ 05/05/24 19:00:25.318
  STEP: Deleting CSIDriver "inline-driver-abf44339-a936-459b-a357-207be7959526" @ 05/05/24 19:00:25.336
  STEP: Confirm deletion of CSIDriver "inline-driver-abf44339-a936-459b-a357-207be7959526" @ 05/05/24 19:00:25.366
  STEP: Deleting CSIDriver "inline-driver-35c45ed7-e7cf-463d-b5ef-c466a05edc9b" via DeleteCollection @ 05/05/24 19:00:25.368
  STEP: Confirm deletion of CSIDriver "inline-driver-35c45ed7-e7cf-463d-b5ef-c466a05edc9b" @ 05/05/24 19:00:25.372
  May  5 19:00:25.373: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-9299" for this suite. @ 05/05/24 19:00:25.376
• [0.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 05/05/24 19:00:25.381
  May  5 19:00:25.381: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/05/24 19:00:25.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:00:25.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:00:25.395
  STEP: creating @ 05/05/24 19:00:25.397
  STEP: getting @ 05/05/24 19:00:25.409
  STEP: listing in namespace @ 05/05/24 19:00:25.412
  STEP: patching @ 05/05/24 19:00:25.415
  STEP: deleting @ 05/05/24 19:00:25.421
  May  5 19:00:25.430: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-2106" for this suite. @ 05/05/24 19:00:25.433
• [0.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 05/05/24 19:00:25.439
  May  5 19:00:25.439: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename var-expansion @ 05/05/24 19:00:25.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:00:25.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:00:25.451
  STEP: creating the pod with failed condition @ 05/05/24 19:00:25.453
  STEP: updating the pod @ 05/05/24 19:02:25.461
  May  5 19:02:25.982: INFO: Successfully updated pod "var-expansion-b1441ace-85fa-46c8-8fca-f2ff99511163"
  STEP: waiting for pod running @ 05/05/24 19:02:25.982
  STEP: deleting the pod gracefully @ 05/05/24 19:02:27.99
  May  5 19:02:27.990: INFO: Deleting pod "var-expansion-b1441ace-85fa-46c8-8fca-f2ff99511163" in namespace "var-expansion-2431"
  May  5 19:02:27.997: INFO: Wait up to 5m0s for pod "var-expansion-b1441ace-85fa-46c8-8fca-f2ff99511163" to be fully deleted
  May  5 19:03:00.084: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2431" for this suite. @ 05/05/24 19:03:00.087
• [154.652 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 05/05/24 19:03:00.092
  May  5 19:03:00.092: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename daemonsets @ 05/05/24 19:03:00.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:03:00.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:03:00.104
  STEP: Creating simple DaemonSet "daemon-set" @ 05/05/24 19:03:00.114
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/05/24 19:03:00.119
  May  5 19:03:00.124: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  5 19:03:00.124: INFO: Node worker00 is running 0 daemon pod, expected 1
  May  5 19:03:01.134: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May  5 19:03:01.135: INFO: Node worker01 is running 0 daemon pod, expected 1
  May  5 19:03:02.141: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  May  5 19:03:02.141: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 05/05/24 19:03:02.144
  May  5 19:03:02.146: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 05/05/24 19:03:02.146
  May  5 19:03:02.162: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 05/05/24 19:03:02.162
  May  5 19:03:02.163: INFO: Observed &DaemonSet event: ADDED
  May  5 19:03:02.163: INFO: Observed &DaemonSet event: MODIFIED
  May  5 19:03:02.163: INFO: Observed &DaemonSet event: MODIFIED
  May  5 19:03:02.164: INFO: Observed &DaemonSet event: MODIFIED
  May  5 19:03:02.164: INFO: Found daemon set daemon-set in namespace daemonsets-5805 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  May  5 19:03:02.164: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 05/05/24 19:03:02.164
  STEP: watching for the daemon set status to be patched @ 05/05/24 19:03:02.167
  May  5 19:03:02.170: INFO: Observed &DaemonSet event: ADDED
  May  5 19:03:02.170: INFO: Observed &DaemonSet event: MODIFIED
  May  5 19:03:02.170: INFO: Observed &DaemonSet event: MODIFIED
  May  5 19:03:02.170: INFO: Observed &DaemonSet event: MODIFIED
  May  5 19:03:02.170: INFO: Observed daemon set daemon-set in namespace daemonsets-5805 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  May  5 19:03:02.170: INFO: Observed &DaemonSet event: MODIFIED
  May  5 19:03:02.170: INFO: Found daemon set daemon-set in namespace daemonsets-5805 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  May  5 19:03:02.171: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 05/05/24 19:03:02.174
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5805, will wait for the garbage collector to delete the pods @ 05/05/24 19:03:02.174
  May  5 19:03:02.235: INFO: Deleting DaemonSet.extensions daemon-set took: 8.344787ms
  May  5 19:03:02.339: INFO: Terminating DaemonSet.extensions daemon-set pods took: 104.206547ms
  May  5 19:03:04.644: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  5 19:03:04.644: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May  5 19:03:04.647: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"19080"},"items":null}

  May  5 19:03:04.650: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"19080"},"items":null}

  May  5 19:03:04.655: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5805" for this suite. @ 05/05/24 19:03:04.659
• [4.571 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 05/05/24 19:03:04.663
  May  5 19:03:04.663: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename secrets @ 05/05/24 19:03:04.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:03:04.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:03:04.677
  STEP: Creating secret with name secret-test-3a68a234-270b-4f45-ac2a-49cf914b6d55 @ 05/05/24 19:03:04.679
  STEP: Creating a pod to test consume secrets @ 05/05/24 19:03:04.683
  STEP: Saw pod success @ 05/05/24 19:03:08.702
  May  5 19:03:08.706: INFO: Trying to get logs from node worker00 pod pod-secrets-c6956cc4-4d4e-45ef-91cb-b2f26741826d container secret-volume-test: <nil>
  STEP: delete the pod @ 05/05/24 19:03:08.711
  May  5 19:03:08.720: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2760" for this suite. @ 05/05/24 19:03:08.722
• [4.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 05/05/24 19:03:08.727
  May  5 19:03:08.727: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename subpath @ 05/05/24 19:03:08.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:03:08.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:03:08.738
  STEP: Setting up data @ 05/05/24 19:03:08.74
  STEP: Creating pod pod-subpath-test-configmap-8glc @ 05/05/24 19:03:08.747
  STEP: Creating a pod to test atomic-volume-subpath @ 05/05/24 19:03:08.747
  STEP: Saw pod success @ 05/05/24 19:03:32.814
  May  5 19:03:32.817: INFO: Trying to get logs from node worker01 pod pod-subpath-test-configmap-8glc container test-container-subpath-configmap-8glc: <nil>
  STEP: delete the pod @ 05/05/24 19:03:32.83
  STEP: Deleting pod pod-subpath-test-configmap-8glc @ 05/05/24 19:03:32.842
  May  5 19:03:32.842: INFO: Deleting pod "pod-subpath-test-configmap-8glc" in namespace "subpath-7690"
  May  5 19:03:32.844: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7690" for this suite. @ 05/05/24 19:03:32.847
• [24.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:693
  STEP: Creating a kubernetes client @ 05/05/24 19:03:32.855
  May  5 19:03:32.855: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename resourcequota @ 05/05/24 19:03:32.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:03:32.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:03:32.871
  STEP: Creating a ResourceQuota with terminating scope @ 05/05/24 19:03:32.877
  STEP: Ensuring ResourceQuota status is calculated @ 05/05/24 19:03:32.883
  STEP: Creating a ResourceQuota with not terminating scope @ 05/05/24 19:03:34.885
  STEP: Ensuring ResourceQuota status is calculated @ 05/05/24 19:03:34.89
  STEP: Creating a long running pod @ 05/05/24 19:03:36.894
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 05/05/24 19:03:36.907
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 05/05/24 19:03:38.909
  STEP: Deleting the pod @ 05/05/24 19:03:40.914
  STEP: Ensuring resource quota status released the pod usage @ 05/05/24 19:03:40.922
  STEP: Creating a terminating pod @ 05/05/24 19:03:42.928
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 05/05/24 19:03:42.942
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 05/05/24 19:03:44.947
  STEP: Deleting the pod @ 05/05/24 19:03:46.95
  STEP: Ensuring resource quota status released the pod usage @ 05/05/24 19:03:46.956
  May  5 19:03:48.962: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9506" for this suite. @ 05/05/24 19:03:48.965
• [16.121 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 05/05/24 19:03:48.976
  May  5 19:03:48.976: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename projected @ 05/05/24 19:03:48.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:03:48.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:03:48.987
  STEP: Creating secret with name s-test-opt-del-31123567-68b3-488f-979c-6aec752cdc84 @ 05/05/24 19:03:48.992
  STEP: Creating secret with name s-test-opt-upd-0bae13d8-a2f6-4c1e-b5e2-c8db494beb78 @ 05/05/24 19:03:48.995
  STEP: Creating the pod @ 05/05/24 19:03:48.997
  STEP: Deleting secret s-test-opt-del-31123567-68b3-488f-979c-6aec752cdc84 @ 05/05/24 19:03:51.023
  STEP: Updating secret s-test-opt-upd-0bae13d8-a2f6-4c1e-b5e2-c8db494beb78 @ 05/05/24 19:03:51.026
  STEP: Creating secret with name s-test-opt-create-a4a12635-7e66-42ec-9af1-cdb6c669a5b2 @ 05/05/24 19:03:51.029
  STEP: waiting to observe update in volume @ 05/05/24 19:03:51.031
  May  5 19:05:13.460: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5499" for this suite. @ 05/05/24 19:05:13.462
• [84.498 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:137
  STEP: Creating a kubernetes client @ 05/05/24 19:05:13.475
  May  5 19:05:13.475: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename emptydir @ 05/05/24 19:05:13.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:05:13.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:05:13.486
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/05/24 19:05:13.489
  STEP: Saw pod success @ 05/05/24 19:05:17.504
  May  5 19:05:17.505: INFO: Trying to get logs from node worker00 pod pod-68a3eda3-7504-4457-bba4-7e7371ba614d container test-container: <nil>
  STEP: delete the pod @ 05/05/24 19:05:17.507
  May  5 19:05:17.515: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9628" for this suite. @ 05/05/24 19:05:17.517
• [4.048 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 05/05/24 19:05:17.523
  May  5 19:05:17.523: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename configmap @ 05/05/24 19:05:17.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:05:17.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:05:17.534
  STEP: Creating configMap with name configmap-test-volume-map-97fc0fb7-34f2-4d3a-9165-ef0641a3a034 @ 05/05/24 19:05:17.536
  STEP: Creating a pod to test consume configMaps @ 05/05/24 19:05:17.539
  STEP: Saw pod success @ 05/05/24 19:05:21.555
  May  5 19:05:21.558: INFO: Trying to get logs from node worker00 pod pod-configmaps-ad9607fc-5ba7-493d-a729-a04deee3127e container agnhost-container: <nil>
  STEP: delete the pod @ 05/05/24 19:05:21.562
  May  5 19:05:21.571: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1351" for this suite. @ 05/05/24 19:05:21.573
• [4.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 05/05/24 19:05:21.58
  May  5 19:05:21.580: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename watch @ 05/05/24 19:05:21.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:05:21.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:05:21.593
  STEP: creating a watch on configmaps with a certain label @ 05/05/24 19:05:21.594
  STEP: creating a new configmap @ 05/05/24 19:05:21.595
  STEP: modifying the configmap once @ 05/05/24 19:05:21.597
  STEP: changing the label value of the configmap @ 05/05/24 19:05:21.601
  STEP: Expecting to observe a delete notification for the watched object @ 05/05/24 19:05:21.606
  May  5 19:05:21.606: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-310  4de17fd5-b819-4417-bd25-43bab67680e1 19784 0 2024-05-05 19:05:21 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-05 19:05:21 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May  5 19:05:21.606: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-310  4de17fd5-b819-4417-bd25-43bab67680e1 19785 0 2024-05-05 19:05:21 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-05 19:05:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  May  5 19:05:21.606: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-310  4de17fd5-b819-4417-bd25-43bab67680e1 19786 0 2024-05-05 19:05:21 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-05 19:05:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 05/05/24 19:05:21.606
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 05/05/24 19:05:21.611
  STEP: changing the label value of the configmap back @ 05/05/24 19:05:31.614
  STEP: modifying the configmap a third time @ 05/05/24 19:05:31.633
  STEP: deleting the configmap @ 05/05/24 19:05:31.64
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 05/05/24 19:05:31.643
  May  5 19:05:31.643: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-310  4de17fd5-b819-4417-bd25-43bab67680e1 19842 0 2024-05-05 19:05:21 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-05 19:05:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May  5 19:05:31.644: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-310  4de17fd5-b819-4417-bd25-43bab67680e1 19843 0 2024-05-05 19:05:21 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-05 19:05:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  May  5 19:05:31.644: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-310  4de17fd5-b819-4417-bd25-43bab67680e1 19844 0 2024-05-05 19:05:21 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-05 19:05:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  May  5 19:05:31.644: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-310" for this suite. @ 05/05/24 19:05:31.646
• [10.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:57
  STEP: Creating a kubernetes client @ 05/05/24 19:05:31.651
  May  5 19:05:31.651: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename events @ 05/05/24 19:05:31.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:05:31.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:05:31.666
  STEP: creating a test event @ 05/05/24 19:05:31.669
  STEP: listing all events in all namespaces @ 05/05/24 19:05:31.672
  STEP: patching the test event @ 05/05/24 19:05:31.679
  STEP: fetching the test event @ 05/05/24 19:05:31.683
  STEP: updating the test event @ 05/05/24 19:05:31.686
  STEP: getting the test event @ 05/05/24 19:05:31.692
  STEP: deleting the test event @ 05/05/24 19:05:31.694
  STEP: listing all events in all namespaces @ 05/05/24 19:05:31.697
  May  5 19:05:31.708: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4131" for this suite. @ 05/05/24 19:05:31.71
• [0.064 seconds]
------------------------------
[sig-network] DNS should provide DNS for the cluster  [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 05/05/24 19:05:31.715
  May  5 19:05:31.715: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename dns @ 05/05/24 19:05:31.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:05:31.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:05:31.729
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/05/24 19:05:31.734
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/05/24 19:05:31.734
  STEP: creating a pod to probe DNS @ 05/05/24 19:05:31.734
  STEP: submitting the pod to kubernetes @ 05/05/24 19:05:31.734
  STEP: retrieving the pod @ 05/05/24 19:05:33.748
  STEP: looking for the results for each expected name from probers @ 05/05/24 19:05:33.752
  May  5 19:05:33.765: INFO: DNS probes using dns-4373/dns-test-1d86eac2-2164-4d9a-86e0-13ea7f876f3f succeeded

  May  5 19:05:33.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/05/24 19:05:33.767
  STEP: Destroying namespace "dns-4373" for this suite. @ 05/05/24 19:05:33.772
• [2.065 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:817
  STEP: Creating a kubernetes client @ 05/05/24 19:05:33.78
  May  5 19:05:33.780: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename gc @ 05/05/24 19:05:33.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:05:33.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:05:33.797
  May  5 19:05:33.823: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"67f97fad-7658-4912-af60-63938473a25c", Controller:(*bool)(0xc003feffd6), BlockOwnerDeletion:(*bool)(0xc003feffd7)}}
  May  5 19:05:33.827: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"b6277d69-63bb-4f32-9903-7b51164155da", Controller:(*bool)(0xc0026a622e), BlockOwnerDeletion:(*bool)(0xc0026a622f)}}
  May  5 19:05:33.835: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"4bd9ba79-f4c3-4751-b43b-13bd139a93db", Controller:(*bool)(0xc0026a645a), BlockOwnerDeletion:(*bool)(0xc0026a645b)}}
  May  5 19:05:38.844: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6185" for this suite. @ 05/05/24 19:05:38.846
• [5.073 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 05/05/24 19:05:38.854
  May  5 19:05:38.854: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename webhook @ 05/05/24 19:05:38.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:05:38.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:05:38.865
  STEP: Setting up server cert @ 05/05/24 19:05:38.879
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 19:05:39.024
  STEP: Deploying the webhook pod @ 05/05/24 19:05:39.029
  STEP: Wait for the deployment to be ready @ 05/05/24 19:05:39.038
  May  5 19:05:39.041: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/05/24 19:05:41.051
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 19:05:41.07
  May  5 19:05:42.070: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  May  5 19:05:42.076: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4215-crds.webhook.example.com via the AdmissionRegistration API @ 05/05/24 19:05:42.584
  STEP: Creating a custom resource while v1 is storage version @ 05/05/24 19:05:42.595
  STEP: Patching Custom Resource Definition to set v2 as storage @ 05/05/24 19:05:44.616
  STEP: Patching the custom resource while v2 is storage version @ 05/05/24 19:05:44.619
  May  5 19:05:44.638: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4181" for this suite. @ 05/05/24 19:05:45.181
  STEP: Destroying namespace "webhook-markers-5360" for this suite. @ 05/05/24 19:05:45.197
• [6.348 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 05/05/24 19:05:45.206
  May  5 19:05:45.206: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename projected @ 05/05/24 19:05:45.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:05:45.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:05:45.217
  STEP: Creating projection with secret that has name projected-secret-test-135fdd8a-8c5c-4810-9ca6-150c746363dd @ 05/05/24 19:05:45.22
  STEP: Creating a pod to test consume secrets @ 05/05/24 19:05:45.223
  STEP: Saw pod success @ 05/05/24 19:05:49.24
  May  5 19:05:49.244: INFO: Trying to get logs from node worker00 pod pod-projected-secrets-6ef15855-c053-4182-9814-602af2687e4c container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/05/24 19:05:49.249
  May  5 19:05:49.269: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1294" for this suite. @ 05/05/24 19:05:49.271
• [4.068 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 05/05/24 19:05:49.274
  May  5 19:05:49.274: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/05/24 19:05:49.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:05:49.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:05:49.286
  May  5 19:05:49.287: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/05/24 19:05:50.455
  May  5 19:05:50.455: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=crd-publish-openapi-5765 --namespace=crd-publish-openapi-5765 create -f -'
  May  5 19:05:52.754: INFO: stderr: ""
  May  5 19:05:52.754: INFO: stdout: "e2e-test-crd-publish-openapi-8712-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  May  5 19:05:52.754: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=crd-publish-openapi-5765 --namespace=crd-publish-openapi-5765 delete e2e-test-crd-publish-openapi-8712-crds test-cr'
  May  5 19:05:52.802: INFO: stderr: ""
  May  5 19:05:52.802: INFO: stdout: "e2e-test-crd-publish-openapi-8712-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  May  5 19:05:52.802: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=crd-publish-openapi-5765 --namespace=crd-publish-openapi-5765 apply -f -'
  May  5 19:05:52.913: INFO: stderr: ""
  May  5 19:05:52.913: INFO: stdout: "e2e-test-crd-publish-openapi-8712-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  May  5 19:05:52.914: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=crd-publish-openapi-5765 --namespace=crd-publish-openapi-5765 delete e2e-test-crd-publish-openapi-8712-crds test-cr'
  May  5 19:05:52.954: INFO: stderr: ""
  May  5 19:05:52.954: INFO: stdout: "e2e-test-crd-publish-openapi-8712-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/05/24 19:05:52.954
  May  5 19:05:52.954: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=crd-publish-openapi-5765 explain e2e-test-crd-publish-openapi-8712-crds'
  May  5 19:05:53.052: INFO: stderr: ""
  May  5 19:05:53.052: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-8712-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  May  5 19:05:54.225: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5765" for this suite. @ 05/05/24 19:05:54.228
• [4.966 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 05/05/24 19:05:54.241
  May  5 19:05:54.241: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename container-runtime @ 05/05/24 19:05:54.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:05:54.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:05:54.252
  STEP: create the container @ 05/05/24 19:05:54.254
  W0505 19:05:54.260974      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/05/24 19:05:54.261
  STEP: get the container status @ 05/05/24 19:05:57.278
  STEP: the container should be terminated @ 05/05/24 19:05:57.282
  STEP: the termination message should be set @ 05/05/24 19:05:57.282
  May  5 19:05:57.282: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/05/24 19:05:57.282
  May  5 19:05:57.291: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8275" for this suite. @ 05/05/24 19:05:57.295
• [3.058 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 05/05/24 19:05:57.3
  May  5 19:05:57.300: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename downward-api @ 05/05/24 19:05:57.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:05:57.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:05:57.314
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 19:05:57.316
  STEP: Saw pod success @ 05/05/24 19:06:01.332
  May  5 19:06:01.334: INFO: Trying to get logs from node worker01 pod downwardapi-volume-18670a02-d3ac-480b-ab5a-6f0f9fa31fea container client-container: <nil>
  STEP: delete the pod @ 05/05/24 19:06:01.338
  May  5 19:06:01.355: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4687" for this suite. @ 05/05/24 19:06:01.356
• [4.059 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 05/05/24 19:06:01.361
  May  5 19:06:01.361: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename deployment @ 05/05/24 19:06:01.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:06:01.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:06:01.374
  May  5 19:06:01.381: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  May  5 19:06:06.389: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/05/24 19:06:06.389
  May  5 19:06:06.389: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 05/05/24 19:06:06.4
  May  5 19:06:08.413: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1069",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7e3d9d5c-727a-441b-9ae3-177e3a8f38e9",
      ResourceVersion: (string) (len=5) "20308",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850532766,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=76) "ReplicaSet \"test-cleanup-deployment-7bc75bbdf6\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May  5 19:06:08.416: INFO: New ReplicaSet "test-cleanup-deployment-7bc75bbdf6" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1069",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b8287af3-e22f-4c14-9097-31934b53c27e",
      ResourceVersion: (string) (len=5) "20298",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850532766,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "7e3d9d5c-727a-441b-9ae3-177e3a8f38e9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 65 33 64 39 64  35 63 2d 37 32 37 61 2d  |\"7e3d9d5c-727a-|
              00000120  34 34 31 62 2d 39 61 65  33 2d 31 37 37 65 33 61  |441b-9ae3-177e3a|
              00000130  38 66 33 38 65 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8f38e9\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May  5 19:06:08.419: INFO: Pod "test-cleanup-deployment-7bc75bbdf6-q2hgz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-7bc75bbdf6-q2hgz",
      GenerateName: (string) (len=35) "test-cleanup-deployment-7bc75bbdf6-",
      Namespace: (string) (len=15) "deployment-1069",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "75c848c6-2c20-4eb5-a99a-47d8ba2fffae",
      ResourceVersion: (string) (len=5) "20297",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850532766,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "2b86c0f4c79ecff3102ab4ffad05c8b56bf32284b20c9d2e3fddc067de252849",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.55/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.55/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
          UID: (types.UID) (len=36) "b8287af3-e22f-4c14-9097-31934b53c27e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 38  32 38 37 61 66 33 2d 65  |d\":\"b8287af3-e|
              00000090  32 32 66 2d 34 63 31 34  2d 39 30 39 37 2d 33 31  |22f-4c14-9097-31|
              000000a0  39 33 34 62 35 33 63 32  37 65 5c 22 7d 22 3a 7b  |934b53c27e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 35  35 5c 22 7d 22 3a 7b 22  |.200.5.55\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mrwkt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mrwkt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850532766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.55",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.55"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850532766,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850532767,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://aefff56e592d313809258785cd8cd22c5415312e03a6c79f0efd8fb520fd1ac4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:06:08.421: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1069" for this suite. @ 05/05/24 19:06:08.427
• [7.073 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3117
  STEP: Creating a kubernetes client @ 05/05/24 19:06:08.435
  May  5 19:06:08.435: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename services @ 05/05/24 19:06:08.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:06:08.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:06:08.454
  STEP: fetching services @ 05/05/24 19:06:08.457
  May  5 19:06:08.459: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5825" for this suite. @ 05/05/24 19:06:08.463
• [0.032 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:187
  STEP: Creating a kubernetes client @ 05/05/24 19:06:08.467
  May  5 19:06:08.467: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename emptydir @ 05/05/24 19:06:08.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:06:08.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:06:08.477
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/05/24 19:06:08.479
  STEP: Saw pod success @ 05/05/24 19:06:12.5
  May  5 19:06:12.505: INFO: Trying to get logs from node worker00 pod pod-db01589c-5503-4127-b716-23c8b7f7ab61 container test-container: <nil>
  STEP: delete the pod @ 05/05/24 19:06:12.509
  May  5 19:06:12.519: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-766" for this suite. @ 05/05/24 19:06:12.52
• [4.057 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:87
  STEP: Creating a kubernetes client @ 05/05/24 19:06:12.524
  May  5 19:06:12.524: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename emptydir @ 05/05/24 19:06:12.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:06:12.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:06:12.536
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 05/05/24 19:06:12.539
  STEP: Saw pod success @ 05/05/24 19:06:16.555
  May  5 19:06:16.561: INFO: Trying to get logs from node worker00 pod pod-7bb5f4f5-cac5-43bf-a150-75a58013a9ba container test-container: <nil>
  STEP: delete the pod @ 05/05/24 19:06:16.568
  May  5 19:06:16.578: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3164" for this suite. @ 05/05/24 19:06:16.58
• [4.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 05/05/24 19:06:16.587
  May  5 19:06:16.587: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename cronjob @ 05/05/24 19:06:16.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:06:16.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:06:16.6
  STEP: Creating a cronjob @ 05/05/24 19:06:16.601
  STEP: Ensuring more than one job is running at a time @ 05/05/24 19:06:16.604
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 05/05/24 19:08:00.607
  STEP: Removing cronjob @ 05/05/24 19:08:00.608
  May  5 19:08:00.612: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7673" for this suite. @ 05/05/24 19:08:00.614
• [104.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 05/05/24 19:08:00.622
  May  5 19:08:00.622: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename hostport @ 05/05/24 19:08:00.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:08:00.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:08:00.651
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 05/05/24 19:08:00.658
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.58.101 on the node which pod1 resides and expect scheduled @ 05/05/24 19:08:02.679
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.58.101 but use UDP protocol on the node which pod2 resides @ 05/05/24 19:08:06.718
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 05/05/24 19:08:12.761
  May  5 19:08:12.761: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.58.101 http://127.0.0.1:54323/hostname] Namespace:hostport-3859 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  5 19:08:12.761: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 19:08:12.762: INFO: ExecWithOptions: Clientset creation
  May  5 19:08:12.762: INFO: ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/hostport-3859/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.58.101+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.58.101, port: 54323 @ 05/05/24 19:08:12.812
  May  5 19:08:12.812: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.58.101:54323/hostname] Namespace:hostport-3859 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  5 19:08:12.812: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 19:08:12.813: INFO: ExecWithOptions: Clientset creation
  May  5 19:08:12.813: INFO: ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/hostport-3859/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.58.101%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.58.101, port: 54323 UDP @ 05/05/24 19:08:12.852
  May  5 19:08:12.852: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.58.101 54323] Namespace:hostport-3859 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  5 19:08:12.853: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 19:08:12.855: INFO: ExecWithOptions: Clientset creation
  May  5 19:08:12.855: INFO: ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/hostport-3859/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.58.101+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  May  5 19:08:17.915: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-3859" for this suite. @ 05/05/24 19:08:17.92
• [17.316 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:95
  STEP: Creating a kubernetes client @ 05/05/24 19:08:17.939
  May  5 19:08:17.939: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename pod-network-test @ 05/05/24 19:08:17.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:08:17.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:08:17.953
  STEP: Performing setup for networking test in namespace pod-network-test-5571 @ 05/05/24 19:08:17.957
  STEP: creating a selector @ 05/05/24 19:08:17.957
  STEP: Creating the service pods in kubernetes @ 05/05/24 19:08:17.957
  May  5 19:08:17.957: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/05/24 19:08:30.029
  May  5 19:08:32.048: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  May  5 19:08:32.048: INFO: Breadth first check of 10.200.131.150 on host 192.168.58.100...
  May  5 19:08:32.050: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.200.5.60:9080/dial?request=hostname&protocol=udp&host=10.200.131.150&port=8081&tries=1'] Namespace:pod-network-test-5571 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  5 19:08:32.050: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 19:08:32.050: INFO: ExecWithOptions: Clientset creation
  May  5 19:08:32.050: INFO: ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/pod-network-test-5571/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.200.5.60%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.200.131.150%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May  5 19:08:32.099: INFO: Waiting for responses: map[]
  May  5 19:08:32.099: INFO: reached 10.200.131.150 after 0/1 tries
  May  5 19:08:32.099: INFO: Breadth first check of 10.200.5.59 on host 192.168.58.101...
  May  5 19:08:32.101: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.200.5.60:9080/dial?request=hostname&protocol=udp&host=10.200.5.59&port=8081&tries=1'] Namespace:pod-network-test-5571 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  5 19:08:32.101: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 19:08:32.101: INFO: ExecWithOptions: Clientset creation
  May  5 19:08:32.101: INFO: ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/pod-network-test-5571/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.200.5.60%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.200.5.59%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May  5 19:08:32.145: INFO: Waiting for responses: map[]
  May  5 19:08:32.145: INFO: reached 10.200.5.59 after 0/1 tries
  May  5 19:08:32.145: INFO: Going to retry 0 out of 2 pods....
  May  5 19:08:32.145: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5571" for this suite. @ 05/05/24 19:08:32.148
• [14.214 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 05/05/24 19:08:32.157
  May  5 19:08:32.157: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename webhook @ 05/05/24 19:08:32.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:08:32.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:08:32.172
  STEP: Setting up server cert @ 05/05/24 19:08:32.191
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 19:08:32.536
  STEP: Deploying the webhook pod @ 05/05/24 19:08:32.543
  STEP: Wait for the deployment to be ready @ 05/05/24 19:08:32.548
  May  5 19:08:32.556: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/05/24 19:08:34.561
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 19:08:34.577
  May  5 19:08:35.578: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/05/24 19:08:35.631
  STEP: Creating a configMap that should be mutated @ 05/05/24 19:08:35.639
  STEP: Deleting the collection of validation webhooks @ 05/05/24 19:08:35.657
  STEP: Creating a configMap that should not be mutated @ 05/05/24 19:08:35.678
  May  5 19:08:35.683: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8402" for this suite. @ 05/05/24 19:08:35.714
  STEP: Destroying namespace "webhook-markers-8000" for this suite. @ 05/05/24 19:08:35.72
• [3.569 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:513
  STEP: Creating a kubernetes client @ 05/05/24 19:08:35.727
  May  5 19:08:35.727: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename job @ 05/05/24 19:08:35.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:08:35.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:08:35.744
  STEP: Creating a job @ 05/05/24 19:08:35.747
  STEP: Ensuring active pods == parallelism @ 05/05/24 19:08:35.75
  STEP: Orphaning one of the Job's Pods @ 05/05/24 19:08:37.757
  May  5 19:08:38.281: INFO: Successfully updated pod "adopt-release-b4sz4"
  STEP: Checking that the Job readopts the Pod @ 05/05/24 19:08:38.281
  STEP: Removing the labels from the Job's Pod @ 05/05/24 19:08:40.293
  May  5 19:08:40.801: INFO: Successfully updated pod "adopt-release-b4sz4"
  STEP: Checking that the Job releases the Pod @ 05/05/24 19:08:40.801
  May  5 19:08:42.813: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3463" for this suite. @ 05/05/24 19:08:42.82
• [7.100 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:486
  STEP: Creating a kubernetes client @ 05/05/24 19:08:42.827
  May  5 19:08:42.827: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename security-context-test @ 05/05/24 19:08:42.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:08:42.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:08:42.843
  May  5 19:08:46.862: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6761" for this suite. @ 05/05/24 19:08:46.865
• [4.051 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 05/05/24 19:08:46.879
  May  5 19:08:46.879: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename projected @ 05/05/24 19:08:46.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:08:46.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:08:46.894
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 19:08:46.897
  STEP: Saw pod success @ 05/05/24 19:08:50.92
  May  5 19:08:50.922: INFO: Trying to get logs from node worker00 pod downwardapi-volume-7aee6626-5a17-4836-85c1-ccffdb062cbe container client-container: <nil>
  STEP: delete the pod @ 05/05/24 19:08:50.928
  May  5 19:08:50.937: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1228" for this suite. @ 05/05/24 19:08:50.94
• [4.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:117
  STEP: Creating a kubernetes client @ 05/05/24 19:08:50.944
  May  5 19:08:50.944: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename emptydir @ 05/05/24 19:08:50.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:08:50.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:08:50.958
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/05/24 19:08:50.96
  STEP: Saw pod success @ 05/05/24 19:08:54.979
  May  5 19:08:54.984: INFO: Trying to get logs from node worker00 pod pod-917ca169-6859-44f3-b4e7-28170e2294f2 container test-container: <nil>
  STEP: delete the pod @ 05/05/24 19:08:54.988
  May  5 19:08:55.014: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4950" for this suite. @ 05/05/24 19:08:55.016
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 05/05/24 19:08:55.02
  May  5 19:08:55.020: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename crd-watch @ 05/05/24 19:08:55.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:08:55.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:08:55.033
  May  5 19:08:55.035: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Creating first CR  @ 05/05/24 19:08:57.569
  May  5 19:08:57.571: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-05T19:08:57Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-05T19:08:57Z]] name:name1 resourceVersion:21510 uid:ca5d9eb8-fdc2-40b8-ae8b-4c5ce0091bc3] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 05/05/24 19:09:07.575
  May  5 19:09:07.579: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-05T19:09:07Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-05T19:09:07Z]] name:name2 resourceVersion:21554 uid:6a0beedb-90dc-40ad-9ced-3dd2c9fe3a85] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 05/05/24 19:09:17.581
  May  5 19:09:17.586: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-05T19:08:57Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-05T19:09:17Z]] name:name1 resourceVersion:21590 uid:ca5d9eb8-fdc2-40b8-ae8b-4c5ce0091bc3] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 05/05/24 19:09:27.591
  May  5 19:09:27.597: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-05T19:09:07Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-05T19:09:27Z]] name:name2 resourceVersion:21652 uid:6a0beedb-90dc-40ad-9ced-3dd2c9fe3a85] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 05/05/24 19:09:37.6
  May  5 19:09:37.606: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-05T19:08:57Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-05T19:09:17Z]] name:name1 resourceVersion:21688 uid:ca5d9eb8-fdc2-40b8-ae8b-4c5ce0091bc3] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 05/05/24 19:09:47.61
  May  5 19:09:47.622: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-05T19:09:07Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-05T19:09:27Z]] name:name2 resourceVersion:21722 uid:6a0beedb-90dc-40ad-9ced-3dd2c9fe3a85] num:map[num1:9223372036854775807 num2:1000000]]}
  May  5 19:09:58.131: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-2450" for this suite. @ 05/05/24 19:09:58.133
• [63.119 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:647
  STEP: Creating a kubernetes client @ 05/05/24 19:09:58.14
  May  5 19:09:58.140: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename svcaccounts @ 05/05/24 19:09:58.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:09:58.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:09:58.164
  STEP: creating a ServiceAccount @ 05/05/24 19:09:58.167
  STEP: watching for the ServiceAccount to be added @ 05/05/24 19:09:58.173
  STEP: patching the ServiceAccount @ 05/05/24 19:09:58.175
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 05/05/24 19:09:58.181
  STEP: deleting the ServiceAccount @ 05/05/24 19:09:58.185
  May  5 19:09:58.196: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2987" for this suite. @ 05/05/24 19:09:58.203
• [0.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:355
  STEP: Creating a kubernetes client @ 05/05/24 19:09:58.214
  May  5 19:09:58.214: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename endpointslice @ 05/05/24 19:09:58.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:09:58.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:09:58.24
  STEP: getting /apis @ 05/05/24 19:09:58.245
  STEP: getting /apis/discovery.k8s.io @ 05/05/24 19:09:58.25
  STEP: getting /apis/discovery.k8s.iov1 @ 05/05/24 19:09:58.252
  STEP: creating @ 05/05/24 19:09:58.254
  STEP: getting @ 05/05/24 19:09:58.273
  STEP: listing @ 05/05/24 19:09:58.279
  STEP: watching @ 05/05/24 19:09:58.284
  May  5 19:09:58.284: INFO: starting watch
  STEP: cluster-wide listing @ 05/05/24 19:09:58.286
  STEP: cluster-wide watching @ 05/05/24 19:09:58.292
  May  5 19:09:58.292: INFO: starting watch
  STEP: patching @ 05/05/24 19:09:58.295
  STEP: updating @ 05/05/24 19:09:58.303
  May  5 19:09:58.317: INFO: waiting for watch events with expected annotations
  May  5 19:09:58.317: INFO: saw patched and updated annotations
  STEP: deleting @ 05/05/24 19:09:58.317
  STEP: deleting a collection @ 05/05/24 19:09:58.332
  May  5 19:09:58.349: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4901" for this suite. @ 05/05/24 19:09:58.357
• [0.153 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 05/05/24 19:09:58.367
  May  5 19:09:58.367: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename webhook @ 05/05/24 19:09:58.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:09:58.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:09:58.393
  STEP: Setting up server cert @ 05/05/24 19:09:58.428
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 19:09:58.623
  STEP: Deploying the webhook pod @ 05/05/24 19:09:58.641
  STEP: Wait for the deployment to be ready @ 05/05/24 19:09:58.655
  May  5 19:09:58.666: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/05/24 19:10:00.672
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 19:10:00.694
  May  5 19:10:01.694: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/05/24 19:10:01.698
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/05/24 19:10:01.706
  STEP: Creating a dummy validating-webhook-configuration object @ 05/05/24 19:10:01.716
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 05/05/24 19:10:01.722
  STEP: Creating a dummy mutating-webhook-configuration object @ 05/05/24 19:10:01.726
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 05/05/24 19:10:01.734
  May  5 19:10:01.738: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4931" for this suite. @ 05/05/24 19:10:01.78
  STEP: Destroying namespace "webhook-markers-7926" for this suite. @ 05/05/24 19:10:01.787
• [3.431 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 05/05/24 19:10:01.798
  May  5 19:10:01.798: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename downward-api @ 05/05/24 19:10:01.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:10:01.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:10:01.815
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 19:10:01.818
  STEP: Saw pod success @ 05/05/24 19:10:03.835
  May  5 19:10:03.837: INFO: Trying to get logs from node worker00 pod downwardapi-volume-b659d371-f9ad-4aa3-b224-5eb5b2da1b44 container client-container: <nil>
  STEP: delete the pod @ 05/05/24 19:10:03.84
  May  5 19:10:03.854: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6406" for this suite. @ 05/05/24 19:10:03.856
• [2.064 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 05/05/24 19:10:03.862
  May  5 19:10:03.862: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename projected @ 05/05/24 19:10:03.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:10:03.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:10:03.882
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 19:10:03.884
  STEP: Saw pod success @ 05/05/24 19:10:07.905
  May  5 19:10:07.907: INFO: Trying to get logs from node worker00 pod downwardapi-volume-e975337c-2d5e-4ee8-b816-6cf3fdb571cb container client-container: <nil>
  STEP: delete the pod @ 05/05/24 19:10:07.91
  May  5 19:10:07.924: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8357" for this suite. @ 05/05/24 19:10:07.928
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:84
  STEP: Creating a kubernetes client @ 05/05/24 19:10:07.933
  May  5 19:10:07.933: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename pod-network-test @ 05/05/24 19:10:07.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:10:07.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:10:07.949
  STEP: Performing setup for networking test in namespace pod-network-test-1517 @ 05/05/24 19:10:07.952
  STEP: creating a selector @ 05/05/24 19:10:07.952
  STEP: Creating the service pods in kubernetes @ 05/05/24 19:10:07.952
  May  5 19:10:07.952: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/05/24 19:10:20.019
  May  5 19:10:22.039: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  May  5 19:10:22.039: INFO: Breadth first check of 10.200.131.156 on host 192.168.58.100...
  May  5 19:10:22.041: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.200.5.9:9080/dial?request=hostname&protocol=http&host=10.200.131.156&port=8083&tries=1'] Namespace:pod-network-test-1517 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  5 19:10:22.041: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 19:10:22.042: INFO: ExecWithOptions: Clientset creation
  May  5 19:10:22.042: INFO: ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/pod-network-test-1517/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.200.5.9%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.200.131.156%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May  5 19:10:22.092: INFO: Waiting for responses: map[]
  May  5 19:10:22.092: INFO: reached 10.200.131.156 after 0/1 tries
  May  5 19:10:22.092: INFO: Breadth first check of 10.200.5.8 on host 192.168.58.101...
  May  5 19:10:22.094: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.200.5.9:9080/dial?request=hostname&protocol=http&host=10.200.5.8&port=8083&tries=1'] Namespace:pod-network-test-1517 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  5 19:10:22.094: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 19:10:22.094: INFO: ExecWithOptions: Clientset creation
  May  5 19:10:22.094: INFO: ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/pod-network-test-1517/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.200.5.9%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.200.5.8%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May  5 19:10:22.132: INFO: Waiting for responses: map[]
  May  5 19:10:22.132: INFO: reached 10.200.5.8 after 0/1 tries
  May  5 19:10:22.132: INFO: Going to retry 0 out of 2 pods....
  May  5 19:10:22.132: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1517" for this suite. @ 05/05/24 19:10:22.135
• [14.217 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 05/05/24 19:10:22.15
  May  5 19:10:22.150: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename configmap @ 05/05/24 19:10:22.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:10:22.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:10:22.165
  STEP: Creating configMap with name configmap-test-volume-f5dc1d83-15a1-4a77-80c8-94c44cd09df5 @ 05/05/24 19:10:22.167
  STEP: Creating a pod to test consume configMaps @ 05/05/24 19:10:22.171
  STEP: Saw pod success @ 05/05/24 19:10:26.185
  May  5 19:10:26.189: INFO: Trying to get logs from node worker01 pod pod-configmaps-ef73c829-a6ee-4c14-9181-ac1c88ee87ec container configmap-volume-test: <nil>
  STEP: delete the pod @ 05/05/24 19:10:26.2
  May  5 19:10:26.221: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3142" for this suite. @ 05/05/24 19:10:26.223
• [4.077 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 05/05/24 19:10:26.227
  May  5 19:10:26.227: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename pods @ 05/05/24 19:10:26.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:10:26.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:10:26.242
  STEP: creating the pod @ 05/05/24 19:10:26.245
  STEP: setting up watch @ 05/05/24 19:10:26.245
  STEP: submitting the pod to kubernetes @ 05/05/24 19:10:26.35
  STEP: verifying the pod is in kubernetes @ 05/05/24 19:10:26.355
  STEP: verifying pod creation was observed @ 05/05/24 19:10:26.357
  STEP: deleting the pod gracefully @ 05/05/24 19:10:28.371
  STEP: verifying pod deletion was observed @ 05/05/24 19:10:28.388
  May  5 19:10:30.561: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6015" for this suite. @ 05/05/24 19:10:30.565
• [4.341 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:53
  STEP: Creating a kubernetes client @ 05/05/24 19:10:30.57
  May  5 19:10:30.570: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename podtemplate @ 05/05/24 19:10:30.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:10:30.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:10:30.584
  May  5 19:10:30.596: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5520" for this suite. @ 05/05/24 19:10:30.599
• [0.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 05/05/24 19:10:30.603
  May  5 19:10:30.603: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename webhook @ 05/05/24 19:10:30.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:10:30.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:10:30.616
  STEP: Setting up server cert @ 05/05/24 19:10:30.633
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 19:10:30.982
  STEP: Deploying the webhook pod @ 05/05/24 19:10:30.996
  STEP: Wait for the deployment to be ready @ 05/05/24 19:10:31.002
  May  5 19:10:31.010: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/05/24 19:10:33.014
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 19:10:33.03
  May  5 19:10:34.032: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/05/24 19:10:34.035
  STEP: create a pod @ 05/05/24 19:10:34.044
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 05/05/24 19:10:36.06
  May  5 19:10:36.061: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=webhook-7736 attach --namespace=webhook-7736 to-be-attached-pod -i -c=container1'
  May  5 19:10:36.119: INFO: rc: 1
  May  5 19:10:36.119: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7736" for this suite. @ 05/05/24 19:10:36.153
  STEP: Destroying namespace "webhook-markers-4528" for this suite. @ 05/05/24 19:10:36.174
• [5.577 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:269
  STEP: Creating a kubernetes client @ 05/05/24 19:10:36.182
  May  5 19:10:36.182: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/05/24 19:10:36.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:10:36.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:10:36.198
  May  5 19:10:36.199: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 19:10:39.373: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-146" for this suite. @ 05/05/24 19:10:39.378
• [3.211 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:887
  STEP: Creating a kubernetes client @ 05/05/24 19:10:39.394
  May  5 19:10:39.394: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename resourcequota @ 05/05/24 19:10:39.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:10:39.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:10:39.41
  STEP: Creating a ResourceQuota @ 05/05/24 19:10:39.414
  STEP: Getting a ResourceQuota @ 05/05/24 19:10:39.417
  STEP: Updating a ResourceQuota @ 05/05/24 19:10:39.42
  STEP: Verifying a ResourceQuota was modified @ 05/05/24 19:10:39.427
  STEP: Deleting a ResourceQuota @ 05/05/24 19:10:39.43
  STEP: Verifying the deleted ResourceQuota @ 05/05/24 19:10:39.435
  May  5 19:10:39.436: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3215" for this suite. @ 05/05/24 19:10:39.439
• [0.049 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:331
  STEP: Creating a kubernetes client @ 05/05/24 19:10:39.443
  May  5 19:10:39.443: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename statefulset @ 05/05/24 19:10:39.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:10:39.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:10:39.456
  STEP: Creating service test in namespace statefulset-197 @ 05/05/24 19:10:39.458
  STEP: Creating a new StatefulSet @ 05/05/24 19:10:39.461
  May  5 19:10:39.468: INFO: Found 0 stateful pods, waiting for 3
  May  5 19:10:49.471: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  May  5 19:10:49.471: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  May  5 19:10:49.471: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/05/24 19:10:49.476
  May  5 19:10:49.501: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 05/05/24 19:10:49.501
  STEP: Not applying an update when the partition is greater than the number of replicas @ 05/05/24 19:10:59.517
  STEP: Performing a canary update @ 05/05/24 19:10:59.517
  May  5 19:10:59.547: INFO: Updating stateful set ss2
  May  5 19:10:59.555: INFO: Waiting for Pod statefulset-197/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 05/05/24 19:11:09.562
  May  5 19:11:09.618: INFO: Found 2 stateful pods, waiting for 3
  May  5 19:11:19.620: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  May  5 19:11:19.620: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  May  5 19:11:19.620: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 05/05/24 19:11:19.623
  May  5 19:11:19.640: INFO: Updating stateful set ss2
  May  5 19:11:19.644: INFO: Waiting for Pod statefulset-197/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  May  5 19:11:29.673: INFO: Updating stateful set ss2
  May  5 19:11:29.678: INFO: Waiting for StatefulSet statefulset-197/ss2 to complete update
  May  5 19:11:29.678: INFO: Waiting for Pod statefulset-197/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  May  5 19:11:39.689: INFO: Deleting all statefulset in ns statefulset-197
  May  5 19:11:39.691: INFO: Scaling statefulset ss2 to 0
  May  5 19:11:49.711: INFO: Waiting for statefulset status.replicas updated to 0
  May  5 19:11:49.713: INFO: Deleting statefulset ss2
  May  5 19:11:49.728: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-197" for this suite. @ 05/05/24 19:11:49.733
• [70.297 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 05/05/24 19:11:49.74
  May  5 19:11:49.740: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename projected @ 05/05/24 19:11:49.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:11:49.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:11:49.752
  STEP: Creating configMap with name cm-test-opt-del-3bcbecb1-908a-410c-93e3-32f2e10ca796 @ 05/05/24 19:11:49.757
  STEP: Creating configMap with name cm-test-opt-upd-36df3895-9ce9-4221-bb02-f7edfc6d2cb4 @ 05/05/24 19:11:49.76
  STEP: Creating the pod @ 05/05/24 19:11:49.766
  STEP: Deleting configmap cm-test-opt-del-3bcbecb1-908a-410c-93e3-32f2e10ca796 @ 05/05/24 19:11:51.788
  STEP: Updating configmap cm-test-opt-upd-36df3895-9ce9-4221-bb02-f7edfc6d2cb4 @ 05/05/24 19:11:51.791
  STEP: Creating configMap with name cm-test-opt-create-d35f5770-a01a-4bd3-99da-237fa2a09ce5 @ 05/05/24 19:11:51.794
  STEP: waiting to observe update in volume @ 05/05/24 19:11:51.797
  May  5 19:11:53.823: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9550" for this suite. @ 05/05/24 19:11:53.827
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:111
  STEP: Creating a kubernetes client @ 05/05/24 19:11:53.834
  May  5 19:11:53.834: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename replicaset @ 05/05/24 19:11:53.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:11:53.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:11:53.848
  May  5 19:11:53.850: INFO: Creating ReplicaSet my-hostname-basic-2cdbc07b-3cfa-4f82-b1aa-e850f1d45045
  May  5 19:11:53.855: INFO: Pod name my-hostname-basic-2cdbc07b-3cfa-4f82-b1aa-e850f1d45045: Found 0 pods out of 1
  May  5 19:11:58.858: INFO: Pod name my-hostname-basic-2cdbc07b-3cfa-4f82-b1aa-e850f1d45045: Found 1 pods out of 1
  May  5 19:11:58.858: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-2cdbc07b-3cfa-4f82-b1aa-e850f1d45045" is running
  May  5 19:11:58.860: INFO: Pod "my-hostname-basic-2cdbc07b-3cfa-4f82-b1aa-e850f1d45045-v8nhw" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-05 19:11:55 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-05 19:11:53 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-05 19:11:55 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-05 19:11:55 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-05 19:11:53 +0000 UTC Reason: Message:}])
  May  5 19:11:58.860: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/05/24 19:11:58.86
  May  5 19:11:58.864: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5097" for this suite. @ 05/05/24 19:11:58.867
• [5.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:227
  STEP: Creating a kubernetes client @ 05/05/24 19:11:58.881
  May  5 19:11:58.881: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename emptydir @ 05/05/24 19:11:58.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:11:58.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:11:58.902
  STEP: Creating Pod @ 05/05/24 19:11:58.905
  STEP: Reading file content from the nginx-container @ 05/05/24 19:12:00.928
  May  5 19:12:00.928: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-803 PodName:pod-sharedvolume-41f8e064-2580-426c-b24a-55d45742d17d ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  5 19:12:00.928: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 19:12:00.929: INFO: ExecWithOptions: Clientset creation
  May  5 19:12:00.929: INFO: ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/emptydir-803/pods/pod-sharedvolume-41f8e064-2580-426c-b24a-55d45742d17d/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  May  5 19:12:00.976: INFO: Exec stderr: ""
  May  5 19:12:00.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-803" for this suite. @ 05/05/24 19:12:00.979
• [2.112 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2187
  STEP: Creating a kubernetes client @ 05/05/24 19:12:00.994
  May  5 19:12:00.994: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename services @ 05/05/24 19:12:00.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:12:01.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:12:01.005
  STEP: creating service in namespace services-5955 @ 05/05/24 19:12:01.007
  STEP: creating service affinity-clusterip-transition in namespace services-5955 @ 05/05/24 19:12:01.007
  STEP: creating replication controller affinity-clusterip-transition in namespace services-5955 @ 05/05/24 19:12:01.016
  I0505 19:12:01.025279      20 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-5955, replica count: 3
  I0505 19:12:04.076224      20 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May  5 19:12:04.078: INFO: Creating new exec pod
  May  5 19:12:07.086: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-5955 exec execpod-affinityztkdx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  May  5 19:12:07.170: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  May  5 19:12:07.170: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  5 19:12:07.171: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-5955 exec execpod-affinityztkdx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.63 80'
  May  5 19:12:07.239: INFO: stderr: "+ nc -v -t -w 2 10.32.0.63 80\n+ echo hostName\nConnection to 10.32.0.63 80 port [tcp/http] succeeded!\n"
  May  5 19:12:07.239: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  5 19:12:07.243: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-5955 exec execpod-affinityztkdx -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.32.0.63:80/ ; done'
  May  5 19:12:07.359: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.63:80/\n"
  May  5 19:12:07.359: INFO: stdout: "\naffinity-clusterip-transition-qlwtz\naffinity-clusterip-transition-f74rn\naffinity-clusterip-transition-qlwtz\naffinity-clusterip-transition-qlwtz\naffinity-clusterip-transition-qlwtz\naffinity-clusterip-transition-jg5rr\naffinity-clusterip-transition-qlwtz\naffinity-clusterip-transition-jg5rr\naffinity-clusterip-transition-qlwtz\naffinity-clusterip-transition-f74rn\naffinity-clusterip-transition-jg5rr\naffinity-clusterip-transition-qlwtz\naffinity-clusterip-transition-qlwtz\naffinity-clusterip-transition-jg5rr\naffinity-clusterip-transition-qlwtz\naffinity-clusterip-transition-qlwtz"
  May  5 19:12:07.359: INFO: Received response from host: affinity-clusterip-transition-qlwtz
  May  5 19:12:07.359: INFO: Received response from host: affinity-clusterip-transition-f74rn
  May  5 19:12:07.359: INFO: Received response from host: affinity-clusterip-transition-qlwtz
  May  5 19:12:07.359: INFO: Received response from host: affinity-clusterip-transition-qlwtz
  May  5 19:12:07.359: INFO: Received response from host: affinity-clusterip-transition-qlwtz
  May  5 19:12:07.359: INFO: Received response from host: affinity-clusterip-transition-jg5rr
  May  5 19:12:07.359: INFO: Received response from host: affinity-clusterip-transition-qlwtz
  May  5 19:12:07.359: INFO: Received response from host: affinity-clusterip-transition-jg5rr
  May  5 19:12:07.359: INFO: Received response from host: affinity-clusterip-transition-qlwtz
  May  5 19:12:07.359: INFO: Received response from host: affinity-clusterip-transition-f74rn
  May  5 19:12:07.359: INFO: Received response from host: affinity-clusterip-transition-jg5rr
  May  5 19:12:07.359: INFO: Received response from host: affinity-clusterip-transition-qlwtz
  May  5 19:12:07.359: INFO: Received response from host: affinity-clusterip-transition-qlwtz
  May  5 19:12:07.359: INFO: Received response from host: affinity-clusterip-transition-jg5rr
  May  5 19:12:07.359: INFO: Received response from host: affinity-clusterip-transition-qlwtz
  May  5 19:12:07.359: INFO: Received response from host: affinity-clusterip-transition-qlwtz
  May  5 19:12:07.366: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-5955 exec execpod-affinityztkdx -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.32.0.63:80/ ; done'
  May  5 19:12:07.483: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.63:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.63:80/\n"
  May  5 19:12:07.483: INFO: stdout: "\naffinity-clusterip-transition-qlwtz\naffinity-clusterip-transition-qlwtz\naffinity-clusterip-transition-qlwtz\naffinity-clusterip-transition-qlwtz\naffinity-clusterip-transition-qlwtz\naffinity-clusterip-transition-qlwtz\naffinity-clusterip-transition-qlwtz\naffinity-clusterip-transition-qlwtz\naffinity-clusterip-transition-qlwtz\naffinity-clusterip-transition-qlwtz\naffinity-clusterip-transition-qlwtz\naffinity-clusterip-transition-qlwtz\naffinity-clusterip-transition-qlwtz\naffinity-clusterip-transition-qlwtz\naffinity-clusterip-transition-qlwtz\naffinity-clusterip-transition-qlwtz"
  May  5 19:12:07.483: INFO: Received response from host: affinity-clusterip-transition-qlwtz
  May  5 19:12:07.483: INFO: Received response from host: affinity-clusterip-transition-qlwtz
  May  5 19:12:07.483: INFO: Received response from host: affinity-clusterip-transition-qlwtz
  May  5 19:12:07.483: INFO: Received response from host: affinity-clusterip-transition-qlwtz
  May  5 19:12:07.483: INFO: Received response from host: affinity-clusterip-transition-qlwtz
  May  5 19:12:07.483: INFO: Received response from host: affinity-clusterip-transition-qlwtz
  May  5 19:12:07.483: INFO: Received response from host: affinity-clusterip-transition-qlwtz
  May  5 19:12:07.483: INFO: Received response from host: affinity-clusterip-transition-qlwtz
  May  5 19:12:07.483: INFO: Received response from host: affinity-clusterip-transition-qlwtz
  May  5 19:12:07.483: INFO: Received response from host: affinity-clusterip-transition-qlwtz
  May  5 19:12:07.483: INFO: Received response from host: affinity-clusterip-transition-qlwtz
  May  5 19:12:07.483: INFO: Received response from host: affinity-clusterip-transition-qlwtz
  May  5 19:12:07.483: INFO: Received response from host: affinity-clusterip-transition-qlwtz
  May  5 19:12:07.483: INFO: Received response from host: affinity-clusterip-transition-qlwtz
  May  5 19:12:07.483: INFO: Received response from host: affinity-clusterip-transition-qlwtz
  May  5 19:12:07.483: INFO: Received response from host: affinity-clusterip-transition-qlwtz
  May  5 19:12:07.483: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May  5 19:12:07.486: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-5955, will wait for the garbage collector to delete the pods @ 05/05/24 19:12:07.496
  May  5 19:12:07.552: INFO: Deleting ReplicationController affinity-clusterip-transition took: 3.13524ms
  May  5 19:12:07.653: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.986067ms
  STEP: Destroying namespace "services-5955" for this suite. @ 05/05/24 19:12:10.373
• [9.382 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:77
  STEP: Creating a kubernetes client @ 05/05/24 19:12:10.376
  May  5 19:12:10.376: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename sysctl @ 05/05/24 19:12:10.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:12:10.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:12:10.388
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 05/05/24 19:12:10.39
  STEP: Watching for error events or started pod @ 05/05/24 19:12:10.396
  STEP: Waiting for pod completion @ 05/05/24 19:12:12.401
  STEP: Checking that the pod succeeded @ 05/05/24 19:12:12.404
  STEP: Getting logs from the pod @ 05/05/24 19:12:12.404
  STEP: Checking that the sysctl is actually updated @ 05/05/24 19:12:12.407
  May  5 19:12:12.407: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7241" for this suite. @ 05/05/24 19:12:12.409
• [2.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 05/05/24 19:12:12.413
  May  5 19:12:12.413: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename projected @ 05/05/24 19:12:12.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:12:12.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:12:12.431
  STEP: Creating projection with secret that has name projected-secret-test-map-f511424a-20d5-46ed-9552-745a4a2cec33 @ 05/05/24 19:12:12.434
  STEP: Creating a pod to test consume secrets @ 05/05/24 19:12:12.437
  STEP: Saw pod success @ 05/05/24 19:12:16.455
  May  5 19:12:16.460: INFO: Trying to get logs from node worker01 pod pod-projected-secrets-326b3a32-9135-463c-aae1-bc66d024acb5 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/05/24 19:12:16.465
  May  5 19:12:16.484: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6224" for this suite. @ 05/05/24 19:12:16.486
• [4.077 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:94
  STEP: Creating a kubernetes client @ 05/05/24 19:12:16.491
  May  5 19:12:16.491: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename replication-controller @ 05/05/24 19:12:16.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:12:16.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:12:16.503
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 05/05/24 19:12:16.505
  STEP: When a replication controller with a matching selector is created @ 05/05/24 19:12:18.534
  STEP: Then the orphan pod is adopted @ 05/05/24 19:12:18.541
  May  5 19:12:19.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-92" for this suite. @ 05/05/24 19:12:19.552
• [3.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 05/05/24 19:12:19.567
  May  5 19:12:19.567: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/05/24 19:12:19.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:12:19.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:12:19.583
  May  5 19:12:21.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Cleaning up the secret @ 05/05/24 19:12:21.602
  STEP: Cleaning up the configmap @ 05/05/24 19:12:21.605
  STEP: Cleaning up the pod @ 05/05/24 19:12:21.609
  STEP: Destroying namespace "emptydir-wrapper-8898" for this suite. @ 05/05/24 19:12:21.616
• [2.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:275
  STEP: Creating a kubernetes client @ 05/05/24 19:12:21.622
  May  5 19:12:21.622: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename svcaccounts @ 05/05/24 19:12:21.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:12:21.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:12:21.637
  STEP: Creating a pod to test service account token:  @ 05/05/24 19:12:21.638
  STEP: Saw pod success @ 05/05/24 19:12:25.656
  May  5 19:12:25.657: INFO: Trying to get logs from node worker01 pod test-pod-89b2acb5-4e03-4786-ba8d-f133856c8ded container agnhost-container: <nil>
  STEP: delete the pod @ 05/05/24 19:12:25.66
  May  5 19:12:25.678: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8307" for this suite. @ 05/05/24 19:12:25.68
• [4.061 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 05/05/24 19:12:25.684
  May  5 19:12:25.684: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename webhook @ 05/05/24 19:12:25.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:12:25.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:12:25.696
  STEP: Setting up server cert @ 05/05/24 19:12:25.707
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 19:12:25.976
  STEP: Deploying the webhook pod @ 05/05/24 19:12:25.991
  STEP: Wait for the deployment to be ready @ 05/05/24 19:12:25.999
  May  5 19:12:26.005: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  May  5 19:12:28.011: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 5, 19, 12, 26, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 12, 26, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 19, 12, 26, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 12, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 05/05/24 19:12:30.017
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 19:12:30.029
  May  5 19:12:31.030: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  May  5 19:12:31.038: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-230-crds.webhook.example.com via the AdmissionRegistration API @ 05/05/24 19:12:31.56
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/05/24 19:12:31.582
  May  5 19:12:33.602: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7753" for this suite. @ 05/05/24 19:12:34.147
  STEP: Destroying namespace "webhook-markers-7526" for this suite. @ 05/05/24 19:12:34.163
• [8.485 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:961
  STEP: Creating a kubernetes client @ 05/05/24 19:12:34.169
  May  5 19:12:34.169: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename statefulset @ 05/05/24 19:12:34.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:12:34.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:12:34.18
  STEP: Creating service test in namespace statefulset-8439 @ 05/05/24 19:12:34.183
  May  5 19:12:34.194: INFO: Found 0 stateful pods, waiting for 1
  May  5 19:12:44.199: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 05/05/24 19:12:44.207
  W0505 19:12:44.223511      20 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  May  5 19:12:44.231: INFO: Found 1 stateful pods, waiting for 2
  May  5 19:12:54.236: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  May  5 19:12:54.236: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 05/05/24 19:12:54.241
  STEP: Delete all of the StatefulSets @ 05/05/24 19:12:54.243
  STEP: Verify that StatefulSets have been deleted @ 05/05/24 19:12:54.257
  May  5 19:12:54.260: INFO: Deleting all statefulset in ns statefulset-8439
  May  5 19:12:54.270: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8439" for this suite. @ 05/05/24 19:12:54.274
• [20.114 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 05/05/24 19:12:54.289
  May  5 19:12:54.289: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename cronjob @ 05/05/24 19:12:54.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:12:54.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:12:54.303
  STEP: Creating a ReplaceConcurrent cronjob @ 05/05/24 19:12:54.306
  STEP: Ensuring a job is scheduled @ 05/05/24 19:12:54.31
  STEP: Ensuring exactly one is scheduled @ 05/05/24 19:13:00.315
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/05/24 19:13:00.319
  STEP: Ensuring the job is replaced with a new one @ 05/05/24 19:13:00.322
  STEP: Removing cronjob @ 05/05/24 19:14:00.328
  May  5 19:14:00.343: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3992" for this suite. @ 05/05/24 19:14:00.349
• [66.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 05/05/24 19:14:00.354
  May  5 19:14:00.354: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename secrets @ 05/05/24 19:14:00.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:14:00.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:14:00.374
  STEP: Creating secret with name secret-test-f2633420-744f-4ed7-b17c-010da3ce3fa6 @ 05/05/24 19:14:00.385
  STEP: Creating a pod to test consume secrets @ 05/05/24 19:14:00.388
  STEP: Saw pod success @ 05/05/24 19:14:04.403
  May  5 19:14:04.405: INFO: Trying to get logs from node worker01 pod pod-secrets-050ce62e-a1a9-45b3-b451-cc4646834e19 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/05/24 19:14:04.416
  May  5 19:14:04.429: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2596" for this suite. @ 05/05/24 19:14:04.432
  STEP: Destroying namespace "secret-namespace-8246" for this suite. @ 05/05/24 19:14:04.436
• [4.087 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:946
  STEP: Creating a kubernetes client @ 05/05/24 19:14:04.442
  May  5 19:14:04.442: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename resourcequota @ 05/05/24 19:14:04.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:14:04.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:14:04.456
  STEP: Creating a ResourceQuota @ 05/05/24 19:14:04.458
  STEP: Getting a ResourceQuota @ 05/05/24 19:14:04.461
  STEP: Listing all ResourceQuotas with LabelSelector @ 05/05/24 19:14:04.463
  STEP: Patching the ResourceQuota @ 05/05/24 19:14:04.466
  STEP: Deleting a Collection of ResourceQuotas @ 05/05/24 19:14:04.471
  STEP: Verifying the deleted ResourceQuota @ 05/05/24 19:14:04.478
  May  5 19:14:04.481: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4074" for this suite. @ 05/05/24 19:14:04.483
• [0.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:341
  STEP: Creating a kubernetes client @ 05/05/24 19:14:04.49
  May  5 19:14:04.490: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename kubectl @ 05/05/24 19:14:04.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:14:04.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:14:04.507
  STEP: creating a replication controller @ 05/05/24 19:14:04.509
  May  5 19:14:04.509: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-1962 create -f -'
  May  5 19:14:04.873: INFO: stderr: ""
  May  5 19:14:04.873: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/05/24 19:14:04.873
  May  5 19:14:04.873: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-1962 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May  5 19:14:04.926: INFO: stderr: ""
  May  5 19:14:04.926: INFO: stdout: "update-demo-nautilus-phdr5 update-demo-nautilus-rwjf5 "
  May  5 19:14:04.926: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-1962 get pods update-demo-nautilus-phdr5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May  5 19:14:04.963: INFO: stderr: ""
  May  5 19:14:04.963: INFO: stdout: ""
  May  5 19:14:04.963: INFO: update-demo-nautilus-phdr5 is created but not running
  May  5 19:14:09.965: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-1962 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May  5 19:14:10.016: INFO: stderr: ""
  May  5 19:14:10.016: INFO: stdout: "update-demo-nautilus-phdr5 update-demo-nautilus-rwjf5 "
  May  5 19:14:10.016: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-1962 get pods update-demo-nautilus-phdr5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May  5 19:14:10.057: INFO: stderr: ""
  May  5 19:14:10.057: INFO: stdout: ""
  May  5 19:14:10.057: INFO: update-demo-nautilus-phdr5 is created but not running
  May  5 19:14:15.057: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-1962 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May  5 19:14:15.098: INFO: stderr: ""
  May  5 19:14:15.098: INFO: stdout: "update-demo-nautilus-phdr5 update-demo-nautilus-rwjf5 "
  May  5 19:14:15.098: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-1962 get pods update-demo-nautilus-phdr5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May  5 19:14:15.134: INFO: stderr: ""
  May  5 19:14:15.134: INFO: stdout: "true"
  May  5 19:14:15.134: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-1962 get pods update-demo-nautilus-phdr5 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May  5 19:14:15.171: INFO: stderr: ""
  May  5 19:14:15.171: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May  5 19:14:15.171: INFO: validating pod update-demo-nautilus-phdr5
  May  5 19:14:15.173: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May  5 19:14:15.173: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May  5 19:14:15.173: INFO: update-demo-nautilus-phdr5 is verified up and running
  May  5 19:14:15.173: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-1962 get pods update-demo-nautilus-rwjf5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May  5 19:14:15.210: INFO: stderr: ""
  May  5 19:14:15.210: INFO: stdout: "true"
  May  5 19:14:15.210: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-1962 get pods update-demo-nautilus-rwjf5 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May  5 19:14:15.247: INFO: stderr: ""
  May  5 19:14:15.247: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May  5 19:14:15.247: INFO: validating pod update-demo-nautilus-rwjf5
  May  5 19:14:15.250: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May  5 19:14:15.250: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May  5 19:14:15.250: INFO: update-demo-nautilus-rwjf5 is verified up and running
  STEP: using delete to clean up resources @ 05/05/24 19:14:15.25
  May  5 19:14:15.250: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-1962 delete --grace-period=0 --force -f -'
  May  5 19:14:15.311: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May  5 19:14:15.311: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  May  5 19:14:15.311: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-1962 get rc,svc -l name=update-demo --no-headers'
  May  5 19:14:15.381: INFO: stderr: "No resources found in kubectl-1962 namespace.\n"
  May  5 19:14:15.382: INFO: stdout: ""
  May  5 19:14:15.382: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-1962 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  May  5 19:14:15.443: INFO: stderr: ""
  May  5 19:14:15.443: INFO: stdout: ""
  May  5 19:14:15.443: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1962" for this suite. @ 05/05/24 19:14:15.445
• [10.979 seconds]
------------------------------
S
------------------------------
[sig-node] Lease lease API should be available [Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:72
  STEP: Creating a kubernetes client @ 05/05/24 19:14:15.469
  May  5 19:14:15.469: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename lease-test @ 05/05/24 19:14:15.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:14:15.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:14:15.534
  May  5 19:14:15.564: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-6804" for this suite. @ 05/05/24 19:14:15.566
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:328
  STEP: Creating a kubernetes client @ 05/05/24 19:14:15.57
  May  5 19:14:15.570: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename resourcequota @ 05/05/24 19:14:15.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:14:15.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:14:15.584
  STEP: Counting existing ResourceQuota @ 05/05/24 19:14:32.59
  STEP: Creating a ResourceQuota @ 05/05/24 19:14:37.598
  STEP: Ensuring resource quota status is calculated @ 05/05/24 19:14:37.616
  STEP: Creating a ConfigMap @ 05/05/24 19:14:39.618
  STEP: Ensuring resource quota status captures configMap creation @ 05/05/24 19:14:39.626
  STEP: Deleting a ConfigMap @ 05/05/24 19:14:41.631
  STEP: Ensuring resource quota status released usage @ 05/05/24 19:14:41.644
  May  5 19:14:43.649: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6477" for this suite. @ 05/05/24 19:14:43.651
• [28.084 seconds]
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 05/05/24 19:14:43.654
  May  5 19:14:43.654: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename watch @ 05/05/24 19:14:43.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:14:43.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:14:43.666
  STEP: getting a starting resourceVersion @ 05/05/24 19:14:43.667
  STEP: starting a background goroutine to produce watch events @ 05/05/24 19:14:43.668
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 05/05/24 19:14:43.668
  May  5 19:14:46.459: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2763" for this suite. @ 05/05/24 19:14:46.508
• [2.907 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:156
  STEP: Creating a kubernetes client @ 05/05/24 19:14:46.562
  May  5 19:14:46.562: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename runtimeclass @ 05/05/24 19:14:46.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:14:46.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:14:46.575
  STEP: Deleting RuntimeClass runtimeclass-3596-delete-me @ 05/05/24 19:14:46.579
  STEP: Waiting for the RuntimeClass to disappear @ 05/05/24 19:14:46.581
  May  5 19:14:46.586: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3596" for this suite. @ 05/05/24 19:14:46.587
• [0.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 05/05/24 19:14:46.592
  May  5 19:14:46.592: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/05/24 19:14:46.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:14:46.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:14:46.602
  STEP: set up a multi version CRD @ 05/05/24 19:14:46.604
  May  5 19:14:46.604: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: rename a version @ 05/05/24 19:14:49.604
  STEP: check the new version name is served @ 05/05/24 19:14:49.62
  STEP: check the old version name is removed @ 05/05/24 19:14:50.304
  STEP: check the other version is not changed @ 05/05/24 19:14:50.907
  May  5 19:14:53.280: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7638" for this suite. @ 05/05/24 19:14:53.283
• [6.705 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 05/05/24 19:14:53.297
  May  5 19:14:53.297: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename disruption @ 05/05/24 19:14:53.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:14:53.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:14:53.306
  STEP: creating the pdb @ 05/05/24 19:14:53.308
  STEP: Waiting for the pdb to be processed @ 05/05/24 19:14:53.309
  STEP: updating the pdb @ 05/05/24 19:14:55.315
  STEP: Waiting for the pdb to be processed @ 05/05/24 19:14:55.328
  STEP: patching the pdb @ 05/05/24 19:14:57.336
  STEP: Waiting for the pdb to be processed @ 05/05/24 19:14:57.357
  STEP: Waiting for the pdb to be deleted @ 05/05/24 19:14:59.369
  May  5 19:14:59.372: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3092" for this suite. @ 05/05/24 19:14:59.374
• [6.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 05/05/24 19:14:59.378
  May  5 19:14:59.379: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename services @ 05/05/24 19:14:59.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:14:59.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:14:59.39
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-7359 @ 05/05/24 19:14:59.391
  STEP: changing the ExternalName service to type=ClusterIP @ 05/05/24 19:14:59.395
  STEP: creating replication controller externalname-service in namespace services-7359 @ 05/05/24 19:14:59.401
  I0505 19:14:59.409464      20 runners.go:197] Created replication controller with name: externalname-service, namespace: services-7359, replica count: 2
  I0505 19:15:02.460071      20 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May  5 19:15:02.460: INFO: Creating new exec pod
  May  5 19:15:05.478: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-7359 exec execpodfhlpl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  May  5 19:15:05.568: INFO: stderr: "+ echo+  hostName\nnc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  May  5 19:15:05.568: INFO: stdout: "externalname-service-b82sf"
  May  5 19:15:05.568: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-7359 exec execpodfhlpl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.146 80'
  May  5 19:15:05.646: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.146 80\nConnection to 10.32.0.146 80 port [tcp/http] succeeded!\n"
  May  5 19:15:05.646: INFO: stdout: "externalname-service-b82sf"
  May  5 19:15:05.646: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May  5 19:15:05.648: INFO: Cleaning up the ExternalName to ClusterIP test service
  STEP: Destroying namespace "services-7359" for this suite. @ 05/05/24 19:15:05.659
• [6.285 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:370
  STEP: Creating a kubernetes client @ 05/05/24 19:15:05.664
  May  5 19:15:05.664: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename namespaces @ 05/05/24 19:15:05.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:15:05.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:15:05.677
  STEP: Updating Namespace "namespaces-4465" @ 05/05/24 19:15:05.678
  May  5 19:15:05.683: INFO: Namespace "namespaces-4465" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"20cfd802-f832-4d04-b523-418a0c03c4ba", "kubernetes.io/metadata.name":"namespaces-4465", "namespaces-4465":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  May  5 19:15:05.683: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4465" for this suite. @ 05/05/24 19:15:05.686
• [0.024 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 05/05/24 19:15:05.689
  May  5 19:15:05.689: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename webhook @ 05/05/24 19:15:05.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:15:05.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:15:05.7
  STEP: Setting up server cert @ 05/05/24 19:15:05.711
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 19:15:05.949
  STEP: Deploying the webhook pod @ 05/05/24 19:15:05.953
  STEP: Wait for the deployment to be ready @ 05/05/24 19:15:05.958
  May  5 19:15:05.967: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/05/24 19:15:07.974
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 19:15:07.979
  May  5 19:15:08.983: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 05/05/24 19:15:08.986
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/05/24 19:15:09.005
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 05/05/24 19:15:09.01
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/05/24 19:15:09.014
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 05/05/24 19:15:09.018
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/05/24 19:15:09.02
  May  5 19:15:09.027: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5855" for this suite. @ 05/05/24 19:15:09.048
  STEP: Destroying namespace "webhook-markers-3117" for this suite. @ 05/05/24 19:15:09.052
• [3.371 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:268
  STEP: Creating a kubernetes client @ 05/05/24 19:15:09.06
  May  5 19:15:09.060: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename downward-api @ 05/05/24 19:15:09.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:15:09.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:15:09.072
  STEP: Creating a pod to test downward api env vars @ 05/05/24 19:15:09.073
  STEP: Saw pod success @ 05/05/24 19:15:13.084
  May  5 19:15:13.085: INFO: Trying to get logs from node worker00 pod downward-api-5258b6d1-2697-4dc9-af59-f6e5e5bcf594 container dapi-container: <nil>
  STEP: delete the pod @ 05/05/24 19:15:13.089
  May  5 19:15:13.097: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1088" for this suite. @ 05/05/24 19:15:13.098
• [4.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 05/05/24 19:15:13.102
  May  5 19:15:13.102: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename projected @ 05/05/24 19:15:13.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:15:13.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:15:13.112
  STEP: Creating configMap with name projected-configmap-test-volume-40d3fec8-1a55-4a9b-a4bf-e88155041ad1 @ 05/05/24 19:15:13.113
  STEP: Creating a pod to test consume configMaps @ 05/05/24 19:15:13.116
  STEP: Saw pod success @ 05/05/24 19:15:15.128
  May  5 19:15:15.131: INFO: Trying to get logs from node worker01 pod pod-projected-configmaps-53c1a75b-561c-4a50-9023-8a35867fe7aa container agnhost-container: <nil>
  STEP: delete the pod @ 05/05/24 19:15:15.136
  May  5 19:15:15.159: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3494" for this suite. @ 05/05/24 19:15:15.161
• [2.062 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 05/05/24 19:15:15.164
  May  5 19:15:15.164: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename projected @ 05/05/24 19:15:15.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:15:15.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:15:15.175
  STEP: Creating configMap with name projected-configmap-test-volume-0d0d9e73-0bb4-4783-938b-2858035a3ff8 @ 05/05/24 19:15:15.176
  STEP: Creating a pod to test consume configMaps @ 05/05/24 19:15:15.178
  STEP: Saw pod success @ 05/05/24 19:15:17.189
  May  5 19:15:17.192: INFO: Trying to get logs from node worker01 pod pod-projected-configmaps-e97d8858-98be-4bab-8b02-9968f74c36f5 container agnhost-container: <nil>
  STEP: delete the pod @ 05/05/24 19:15:17.201
  May  5 19:15:17.213: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4601" for this suite. @ 05/05/24 19:15:17.214
• [2.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:207
  STEP: Creating a kubernetes client @ 05/05/24 19:15:17.219
  May  5 19:15:17.220: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename emptydir @ 05/05/24 19:15:17.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:15:17.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:15:17.23
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/05/24 19:15:17.231
  STEP: Saw pod success @ 05/05/24 19:15:19.24
  May  5 19:15:19.242: INFO: Trying to get logs from node worker00 pod pod-a2ae8795-c3b3-42ca-9289-772a96e2b4e8 container test-container: <nil>
  STEP: delete the pod @ 05/05/24 19:15:19.244
  May  5 19:15:19.253: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4571" for this suite. @ 05/05/24 19:15:19.255
• [2.040 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 05/05/24 19:15:19.259
  May  5 19:15:19.259: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/05/24 19:15:19.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:15:19.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:15:19.269
  May  5 19:15:19.271: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 05/05/24 19:15:20.433
  May  5 19:15:20.433: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=crd-publish-openapi-603 --namespace=crd-publish-openapi-603 create -f -'
  May  5 19:15:22.729: INFO: stderr: ""
  May  5 19:15:22.730: INFO: stdout: "e2e-test-crd-publish-openapi-4365-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  May  5 19:15:22.730: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=crd-publish-openapi-603 --namespace=crd-publish-openapi-603 delete e2e-test-crd-publish-openapi-4365-crds test-foo'
  May  5 19:15:22.776: INFO: stderr: ""
  May  5 19:15:22.776: INFO: stdout: "e2e-test-crd-publish-openapi-4365-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  May  5 19:15:22.776: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=crd-publish-openapi-603 --namespace=crd-publish-openapi-603 apply -f -'
  May  5 19:15:22.884: INFO: stderr: ""
  May  5 19:15:22.884: INFO: stdout: "e2e-test-crd-publish-openapi-4365-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  May  5 19:15:22.884: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=crd-publish-openapi-603 --namespace=crd-publish-openapi-603 delete e2e-test-crd-publish-openapi-4365-crds test-foo'
  May  5 19:15:22.923: INFO: stderr: ""
  May  5 19:15:22.923: INFO: stdout: "e2e-test-crd-publish-openapi-4365-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 05/05/24 19:15:22.923
  May  5 19:15:22.923: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=crd-publish-openapi-603 --namespace=crd-publish-openapi-603 create -f -'
  May  5 19:15:23.020: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 05/05/24 19:15:23.02
  May  5 19:15:23.020: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=crd-publish-openapi-603 --namespace=crd-publish-openapi-603 create -f -'
  May  5 19:15:23.128: INFO: rc: 1
  May  5 19:15:23.128: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=crd-publish-openapi-603 --namespace=crd-publish-openapi-603 apply -f -'
  May  5 19:15:23.225: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 05/05/24 19:15:23.225
  May  5 19:15:23.225: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=crd-publish-openapi-603 --namespace=crd-publish-openapi-603 create -f -'
  May  5 19:15:23.340: INFO: rc: 1
  May  5 19:15:23.340: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=crd-publish-openapi-603 --namespace=crd-publish-openapi-603 apply -f -'
  May  5 19:15:23.436: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 05/05/24 19:15:23.436
  May  5 19:15:23.437: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=crd-publish-openapi-603 explain e2e-test-crd-publish-openapi-4365-crds'
  May  5 19:15:23.534: INFO: stderr: ""
  May  5 19:15:23.534: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4365-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 05/05/24 19:15:23.534
  May  5 19:15:23.534: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=crd-publish-openapi-603 explain e2e-test-crd-publish-openapi-4365-crds.metadata'
  May  5 19:15:23.628: INFO: stderr: ""
  May  5 19:15:23.628: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4365-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  May  5 19:15:23.628: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=crd-publish-openapi-603 explain e2e-test-crd-publish-openapi-4365-crds.spec'
  May  5 19:15:23.719: INFO: stderr: ""
  May  5 19:15:23.719: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4365-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  May  5 19:15:23.719: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=crd-publish-openapi-603 explain e2e-test-crd-publish-openapi-4365-crds.spec.bars'
  May  5 19:15:23.821: INFO: stderr: ""
  May  5 19:15:23.821: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4365-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 05/05/24 19:15:23.821
  May  5 19:15:23.821: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=crd-publish-openapi-603 explain e2e-test-crd-publish-openapi-4365-crds.spec.bars2'
  May  5 19:15:23.930: INFO: rc: 1
  May  5 19:15:25.096: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-603" for this suite. @ 05/05/24 19:15:25.1
• [5.853 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 05/05/24 19:15:25.113
  May  5 19:15:25.113: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename disruption @ 05/05/24 19:15:25.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:15:25.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:15:25.124
  STEP: Creating a pdb that targets all three pods in a test replica set @ 05/05/24 19:15:25.125
  STEP: Waiting for the pdb to be processed @ 05/05/24 19:15:25.127
  STEP: First trying to evict a pod which shouldn't be evictable @ 05/05/24 19:15:27.137
  STEP: Waiting for all pods to be running @ 05/05/24 19:15:27.137
  May  5 19:15:27.139: INFO: pods: 0 < 3
  STEP: locating a running pod @ 05/05/24 19:15:29.148
  STEP: Updating the pdb to allow a pod to be evicted @ 05/05/24 19:15:29.156
  STEP: Waiting for the pdb to be processed @ 05/05/24 19:15:29.161
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/05/24 19:15:31.164
  STEP: Waiting for all pods to be running @ 05/05/24 19:15:31.164
  STEP: Waiting for the pdb to observed all healthy pods @ 05/05/24 19:15:31.165
  STEP: Patching the pdb to disallow a pod to be evicted @ 05/05/24 19:15:31.195
  STEP: Waiting for the pdb to be processed @ 05/05/24 19:15:31.213
  STEP: Waiting for all pods to be running @ 05/05/24 19:15:31.216
  May  5 19:15:31.219: INFO: running pods: 2 < 3
  STEP: locating a running pod @ 05/05/24 19:15:33.227
  STEP: Deleting the pdb to allow a pod to be evicted @ 05/05/24 19:15:33.236
  STEP: Waiting for the pdb to be deleted @ 05/05/24 19:15:33.241
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/05/24 19:15:33.243
  STEP: Waiting for all pods to be running @ 05/05/24 19:15:33.243
  May  5 19:15:33.255: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6465" for this suite. @ 05/05/24 19:15:33.259
• [8.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:164
  STEP: Creating a kubernetes client @ 05/05/24 19:15:33.282
  May  5 19:15:33.282: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename security-context @ 05/05/24 19:15:33.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:15:33.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:15:33.295
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/05/24 19:15:33.297
  STEP: Saw pod success @ 05/05/24 19:15:37.31
  May  5 19:15:37.315: INFO: Trying to get logs from node worker01 pod security-context-6d480d95-596c-440e-a45d-2cbf9c7093f6 container test-container: <nil>
  STEP: delete the pod @ 05/05/24 19:15:37.325
  May  5 19:15:37.337: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-9336" for this suite. @ 05/05/24 19:15:37.34
• [4.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:830
  STEP: Creating a kubernetes client @ 05/05/24 19:15:37.345
  May  5 19:15:37.345: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename kubectl @ 05/05/24 19:15:37.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:15:37.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:15:37.355
  STEP: validating api versions @ 05/05/24 19:15:37.356
  May  5 19:15:37.356: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-5926 api-versions'
  May  5 19:15:37.394: INFO: stderr: ""
  May  5 19:15:37.394: INFO: stdout: "admissionregistration.k8s.io/v1\nadmissionregistration.k8s.io/v1alpha1\nadmissionregistration.k8s.io/v1beta1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthentication.k8s.io/v1alpha1\nauthentication.k8s.io/v1beta1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\ninternal.apiserver.k8s.io/v1alpha1\nnetworking.k8s.io/v1\nnetworking.k8s.io/v1alpha1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nresource.k8s.io/v1alpha2\nscheduling.k8s.io/v1\nsnapshot.storage.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  May  5 19:15:37.394: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5926" for this suite. @ 05/05/24 19:15:37.396
• [0.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 05/05/24 19:15:37.399
  May  5 19:15:37.399: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename secrets @ 05/05/24 19:15:37.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:15:37.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:15:37.411
  STEP: Creating secret with name secret-test-5ab204ee-4014-46ef-a421-a577e4a4d3ea @ 05/05/24 19:15:37.413
  STEP: Creating a pod to test consume secrets @ 05/05/24 19:15:37.415
  STEP: Saw pod success @ 05/05/24 19:15:41.43
  May  5 19:15:41.433: INFO: Trying to get logs from node worker01 pod pod-secrets-5b122b1c-f044-48fb-9ca2-0814c1af776f container secret-volume-test: <nil>
  STEP: delete the pod @ 05/05/24 19:15:41.439
  May  5 19:15:41.459: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4688" for this suite. @ 05/05/24 19:15:41.461
• [4.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service  [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 05/05/24 19:15:41.465
  May  5 19:15:41.465: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename services @ 05/05/24 19:15:41.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:15:41.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:15:41.474
  May  5 19:15:41.477: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7654" for this suite. @ 05/05/24 19:15:41.479
• [0.016 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 05/05/24 19:15:41.482
  May  5 19:15:41.482: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename containers @ 05/05/24 19:15:41.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:15:41.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:15:41.492
  May  5 19:15:43.507: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1470" for this suite. @ 05/05/24 19:15:43.508
• [2.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:55
  STEP: Creating a kubernetes client @ 05/05/24 19:15:43.524
  May  5 19:15:43.524: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename runtimeclass @ 05/05/24 19:15:43.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:15:43.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:15:43.536
  May  5 19:15:43.541: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8642" for this suite. @ 05/05/24 19:15:43.542
• [0.021 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 05/05/24 19:15:43.546
  May  5 19:15:43.546: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename container-probe @ 05/05/24 19:15:43.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:15:43.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:15:43.557
  STEP: Creating pod liveness-6ee5454e-ff63-4087-b2db-95e2c67b3cf1 in namespace container-probe-5817 @ 05/05/24 19:15:43.558
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/05/24 19:15:45.579
  May  5 19:15:45.582: INFO: Initial restart count of pod liveness-6ee5454e-ff63-4087-b2db-95e2c67b3cf1 is 0
  May  5 19:15:45.585: INFO: Get pod liveness-6ee5454e-ff63-4087-b2db-95e2c67b3cf1 in namespace container-probe-5817
  May  5 19:15:47.590: INFO: Get pod liveness-6ee5454e-ff63-4087-b2db-95e2c67b3cf1 in namespace container-probe-5817
  May  5 19:15:49.592: INFO: Get pod liveness-6ee5454e-ff63-4087-b2db-95e2c67b3cf1 in namespace container-probe-5817
  May  5 19:15:51.596: INFO: Get pod liveness-6ee5454e-ff63-4087-b2db-95e2c67b3cf1 in namespace container-probe-5817
  May  5 19:15:53.601: INFO: Get pod liveness-6ee5454e-ff63-4087-b2db-95e2c67b3cf1 in namespace container-probe-5817
  May  5 19:15:55.607: INFO: Get pod liveness-6ee5454e-ff63-4087-b2db-95e2c67b3cf1 in namespace container-probe-5817
  May  5 19:15:57.612: INFO: Get pod liveness-6ee5454e-ff63-4087-b2db-95e2c67b3cf1 in namespace container-probe-5817
  May  5 19:15:59.617: INFO: Get pod liveness-6ee5454e-ff63-4087-b2db-95e2c67b3cf1 in namespace container-probe-5817
  May  5 19:16:01.619: INFO: Get pod liveness-6ee5454e-ff63-4087-b2db-95e2c67b3cf1 in namespace container-probe-5817
  May  5 19:16:03.626: INFO: Get pod liveness-6ee5454e-ff63-4087-b2db-95e2c67b3cf1 in namespace container-probe-5817
  May  5 19:16:05.632: INFO: Get pod liveness-6ee5454e-ff63-4087-b2db-95e2c67b3cf1 in namespace container-probe-5817
  May  5 19:16:05.632: INFO: Restart count of pod container-probe-5817/liveness-6ee5454e-ff63-4087-b2db-95e2c67b3cf1 is now 1 (20.049929563s elapsed)
  May  5 19:16:05.632: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/05/24 19:16:05.636
  STEP: Destroying namespace "container-probe-5817" for this suite. @ 05/05/24 19:16:05.66
• [22.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:713
  STEP: Creating a kubernetes client @ 05/05/24 19:16:05.67
  May  5 19:16:05.670: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename job @ 05/05/24 19:16:05.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:16:05.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:16:05.686
  STEP: Creating a suspended job @ 05/05/24 19:16:05.689
  STEP: Patching the Job @ 05/05/24 19:16:05.692
  STEP: Watching for Job to be patched @ 05/05/24 19:16:05.701
  May  5 19:16:05.703: INFO: Event ADDED observed for Job e2e-gdngh in namespace job-5229 with labels: map[e2e-job-label:e2e-gdngh] and annotations: map[]
  May  5 19:16:05.703: INFO: Event MODIFIED observed for Job e2e-gdngh in namespace job-5229 with labels: map[e2e-job-label:e2e-gdngh] and annotations: map[]
  May  5 19:16:05.703: INFO: Event MODIFIED found for Job e2e-gdngh in namespace job-5229 with labels: map[e2e-gdngh:patched e2e-job-label:e2e-gdngh] and annotations: map[]
  STEP: Updating the job @ 05/05/24 19:16:05.703
  STEP: Watching for Job to be updated @ 05/05/24 19:16:05.709
  May  5 19:16:05.712: INFO: Event MODIFIED found for Job e2e-gdngh in namespace job-5229 with labels: map[e2e-gdngh:patched e2e-job-label:e2e-gdngh] and annotations: map[updated:true]
  May  5 19:16:05.712: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 05/05/24 19:16:05.712
  May  5 19:16:05.714: INFO: Job: e2e-gdngh as labels: map[e2e-gdngh:patched e2e-job-label:e2e-gdngh]
  STEP: Waiting for job to complete @ 05/05/24 19:16:05.714
  STEP: Delete a job collection with a labelselector @ 05/05/24 19:16:13.72
  STEP: Watching for Job to be deleted @ 05/05/24 19:16:13.736
  May  5 19:16:13.738: INFO: Event MODIFIED observed for Job e2e-gdngh in namespace job-5229 with labels: map[e2e-gdngh:patched e2e-job-label:e2e-gdngh] and annotations: map[updated:true]
  May  5 19:16:13.738: INFO: Event MODIFIED observed for Job e2e-gdngh in namespace job-5229 with labels: map[e2e-gdngh:patched e2e-job-label:e2e-gdngh] and annotations: map[updated:true]
  May  5 19:16:13.738: INFO: Event MODIFIED observed for Job e2e-gdngh in namespace job-5229 with labels: map[e2e-gdngh:patched e2e-job-label:e2e-gdngh] and annotations: map[updated:true]
  May  5 19:16:13.738: INFO: Event MODIFIED observed for Job e2e-gdngh in namespace job-5229 with labels: map[e2e-gdngh:patched e2e-job-label:e2e-gdngh] and annotations: map[updated:true]
  May  5 19:16:13.738: INFO: Event MODIFIED observed for Job e2e-gdngh in namespace job-5229 with labels: map[e2e-gdngh:patched e2e-job-label:e2e-gdngh] and annotations: map[updated:true]
  May  5 19:16:13.739: INFO: Event MODIFIED observed for Job e2e-gdngh in namespace job-5229 with labels: map[e2e-gdngh:patched e2e-job-label:e2e-gdngh] and annotations: map[updated:true]
  May  5 19:16:13.739: INFO: Event MODIFIED observed for Job e2e-gdngh in namespace job-5229 with labels: map[e2e-gdngh:patched e2e-job-label:e2e-gdngh] and annotations: map[updated:true]
  May  5 19:16:13.739: INFO: Event MODIFIED observed for Job e2e-gdngh in namespace job-5229 with labels: map[e2e-gdngh:patched e2e-job-label:e2e-gdngh] and annotations: map[updated:true]
  May  5 19:16:13.739: INFO: Event MODIFIED observed for Job e2e-gdngh in namespace job-5229 with labels: map[e2e-gdngh:patched e2e-job-label:e2e-gdngh] and annotations: map[updated:true]
  May  5 19:16:13.739: INFO: Event DELETED found for Job e2e-gdngh in namespace job-5229 with labels: map[e2e-gdngh:patched e2e-job-label:e2e-gdngh] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 05/05/24 19:16:13.739
  May  5 19:16:13.741: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5229" for this suite. @ 05/05/24 19:16:13.745
• [8.084 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:996
  STEP: Creating a kubernetes client @ 05/05/24 19:16:13.755
  May  5 19:16:13.755: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename kubectl @ 05/05/24 19:16:13.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:16:13.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:16:13.773
  STEP: create deployment with httpd image @ 05/05/24 19:16:13.775
  May  5 19:16:13.775: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-7405 create -f -'
  May  5 19:16:14.041: INFO: stderr: ""
  May  5 19:16:14.041: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 05/05/24 19:16:14.041
  May  5 19:16:14.041: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-7405 diff -f -'
  May  5 19:16:14.163: INFO: rc: 1
  May  5 19:16:14.163: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-7405 delete -f -'
  May  5 19:16:14.201: INFO: stderr: ""
  May  5 19:16:14.201: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  May  5 19:16:14.202: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7405" for this suite. @ 05/05/24 19:16:14.203
• [0.451 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 05/05/24 19:16:14.207
  May  5 19:16:14.207: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/05/24 19:16:14.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:16:14.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:16:14.219
  STEP: set up a multi version CRD @ 05/05/24 19:16:14.22
  May  5 19:16:14.221: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: mark a version not serverd @ 05/05/24 19:16:17.247
  STEP: check the unserved version gets removed @ 05/05/24 19:16:17.256
  STEP: check the other version is not changed @ 05/05/24 19:16:17.917
  May  5 19:16:20.307: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3748" for this suite. @ 05/05/24 19:16:20.311
• [6.109 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:379
  STEP: Creating a kubernetes client @ 05/05/24 19:16:20.316
  May  5 19:16:20.316: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename gc @ 05/05/24 19:16:20.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:16:20.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:16:20.328
  STEP: create the rc @ 05/05/24 19:16:20.332
  W0505 19:16:20.336273      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 05/05/24 19:16:26.362
  STEP: wait for the rc to be deleted @ 05/05/24 19:16:26.379
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 05/05/24 19:16:31.391
  STEP: Gathering metrics @ 05/05/24 19:17:01.41
  May  5 19:17:01.483: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May  5 19:17:01.483: INFO: Deleting pod "simpletest.rc-26zmb" in namespace "gc-4387"
  May  5 19:17:01.491: INFO: Deleting pod "simpletest.rc-2hrw5" in namespace "gc-4387"
  May  5 19:17:01.503: INFO: Deleting pod "simpletest.rc-2qk5z" in namespace "gc-4387"
  May  5 19:17:01.514: INFO: Deleting pod "simpletest.rc-45l6c" in namespace "gc-4387"
  May  5 19:17:01.531: INFO: Deleting pod "simpletest.rc-47j8m" in namespace "gc-4387"
  May  5 19:17:01.543: INFO: Deleting pod "simpletest.rc-4gnld" in namespace "gc-4387"
  May  5 19:17:01.559: INFO: Deleting pod "simpletest.rc-4j87q" in namespace "gc-4387"
  May  5 19:17:01.595: INFO: Deleting pod "simpletest.rc-4jc49" in namespace "gc-4387"
  May  5 19:17:01.614: INFO: Deleting pod "simpletest.rc-4qkrm" in namespace "gc-4387"
  May  5 19:17:01.636: INFO: Deleting pod "simpletest.rc-4qpbv" in namespace "gc-4387"
  May  5 19:17:01.671: INFO: Deleting pod "simpletest.rc-4rkhq" in namespace "gc-4387"
  May  5 19:17:01.698: INFO: Deleting pod "simpletest.rc-5bp9c" in namespace "gc-4387"
  May  5 19:17:01.738: INFO: Deleting pod "simpletest.rc-5gl9v" in namespace "gc-4387"
  May  5 19:17:01.760: INFO: Deleting pod "simpletest.rc-5jswx" in namespace "gc-4387"
  May  5 19:17:01.777: INFO: Deleting pod "simpletest.rc-5qbs4" in namespace "gc-4387"
  May  5 19:17:01.805: INFO: Deleting pod "simpletest.rc-62c7f" in namespace "gc-4387"
  May  5 19:17:01.821: INFO: Deleting pod "simpletest.rc-679dh" in namespace "gc-4387"
  May  5 19:17:01.849: INFO: Deleting pod "simpletest.rc-68k48" in namespace "gc-4387"
  May  5 19:17:01.877: INFO: Deleting pod "simpletest.rc-6cvrk" in namespace "gc-4387"
  May  5 19:17:01.905: INFO: Deleting pod "simpletest.rc-6fmgs" in namespace "gc-4387"
  May  5 19:17:01.965: INFO: Deleting pod "simpletest.rc-6nv94" in namespace "gc-4387"
  May  5 19:17:02.019: INFO: Deleting pod "simpletest.rc-6rjs7" in namespace "gc-4387"
  May  5 19:17:02.079: INFO: Deleting pod "simpletest.rc-6vwtf" in namespace "gc-4387"
  May  5 19:17:02.143: INFO: Deleting pod "simpletest.rc-6x67v" in namespace "gc-4387"
  May  5 19:17:02.174: INFO: Deleting pod "simpletest.rc-72btm" in namespace "gc-4387"
  May  5 19:17:02.205: INFO: Deleting pod "simpletest.rc-749sh" in namespace "gc-4387"
  May  5 19:17:02.235: INFO: Deleting pod "simpletest.rc-77vm8" in namespace "gc-4387"
  May  5 19:17:02.300: INFO: Deleting pod "simpletest.rc-7wnc8" in namespace "gc-4387"
  May  5 19:17:02.347: INFO: Deleting pod "simpletest.rc-7xj7b" in namespace "gc-4387"
  May  5 19:17:02.394: INFO: Deleting pod "simpletest.rc-896sr" in namespace "gc-4387"
  May  5 19:17:02.420: INFO: Deleting pod "simpletest.rc-8jcwc" in namespace "gc-4387"
  May  5 19:17:02.474: INFO: Deleting pod "simpletest.rc-8p5hn" in namespace "gc-4387"
  May  5 19:17:02.515: INFO: Deleting pod "simpletest.rc-8rg9j" in namespace "gc-4387"
  May  5 19:17:02.553: INFO: Deleting pod "simpletest.rc-8smvg" in namespace "gc-4387"
  May  5 19:17:02.653: INFO: Deleting pod "simpletest.rc-94clp" in namespace "gc-4387"
  May  5 19:17:02.681: INFO: Deleting pod "simpletest.rc-9j7qm" in namespace "gc-4387"
  May  5 19:17:02.709: INFO: Deleting pod "simpletest.rc-9lgch" in namespace "gc-4387"
  May  5 19:17:02.754: INFO: Deleting pod "simpletest.rc-9qp97" in namespace "gc-4387"
  May  5 19:17:02.784: INFO: Deleting pod "simpletest.rc-9sjr4" in namespace "gc-4387"
  May  5 19:17:02.827: INFO: Deleting pod "simpletest.rc-b4ktj" in namespace "gc-4387"
  May  5 19:17:02.894: INFO: Deleting pod "simpletest.rc-bfxjj" in namespace "gc-4387"
  May  5 19:17:02.955: INFO: Deleting pod "simpletest.rc-bltbb" in namespace "gc-4387"
  May  5 19:17:03.018: INFO: Deleting pod "simpletest.rc-c62jh" in namespace "gc-4387"
  May  5 19:17:03.057: INFO: Deleting pod "simpletest.rc-cq5xk" in namespace "gc-4387"
  May  5 19:17:03.111: INFO: Deleting pod "simpletest.rc-d64z9" in namespace "gc-4387"
  May  5 19:17:03.150: INFO: Deleting pod "simpletest.rc-dfksf" in namespace "gc-4387"
  May  5 19:17:03.204: INFO: Deleting pod "simpletest.rc-dk4m9" in namespace "gc-4387"
  May  5 19:17:03.261: INFO: Deleting pod "simpletest.rc-ds5vq" in namespace "gc-4387"
  May  5 19:17:03.303: INFO: Deleting pod "simpletest.rc-ff4hg" in namespace "gc-4387"
  May  5 19:17:03.344: INFO: Deleting pod "simpletest.rc-gc48b" in namespace "gc-4387"
  May  5 19:17:03.378: INFO: Deleting pod "simpletest.rc-gcc28" in namespace "gc-4387"
  May  5 19:17:03.403: INFO: Deleting pod "simpletest.rc-gtf82" in namespace "gc-4387"
  May  5 19:17:03.438: INFO: Deleting pod "simpletest.rc-h8x2r" in namespace "gc-4387"
  May  5 19:17:03.461: INFO: Deleting pod "simpletest.rc-hfd9r" in namespace "gc-4387"
  May  5 19:17:03.484: INFO: Deleting pod "simpletest.rc-hfq9s" in namespace "gc-4387"
  May  5 19:17:03.510: INFO: Deleting pod "simpletest.rc-hkqx2" in namespace "gc-4387"
  May  5 19:17:03.567: INFO: Deleting pod "simpletest.rc-hkt7n" in namespace "gc-4387"
  May  5 19:17:03.602: INFO: Deleting pod "simpletest.rc-hppc7" in namespace "gc-4387"
  May  5 19:17:03.685: INFO: Deleting pod "simpletest.rc-hs8sn" in namespace "gc-4387"
  May  5 19:17:03.720: INFO: Deleting pod "simpletest.rc-jfb85" in namespace "gc-4387"
  May  5 19:17:03.784: INFO: Deleting pod "simpletest.rc-jfqfv" in namespace "gc-4387"
  May  5 19:17:03.812: INFO: Deleting pod "simpletest.rc-jvbb4" in namespace "gc-4387"
  May  5 19:17:03.832: INFO: Deleting pod "simpletest.rc-jwcmk" in namespace "gc-4387"
  May  5 19:17:03.853: INFO: Deleting pod "simpletest.rc-kb7w5" in namespace "gc-4387"
  May  5 19:17:03.877: INFO: Deleting pod "simpletest.rc-ksbmd" in namespace "gc-4387"
  May  5 19:17:03.895: INFO: Deleting pod "simpletest.rc-l86l4" in namespace "gc-4387"
  May  5 19:17:03.908: INFO: Deleting pod "simpletest.rc-ljskk" in namespace "gc-4387"
  May  5 19:17:03.946: INFO: Deleting pod "simpletest.rc-m5hlz" in namespace "gc-4387"
  May  5 19:17:04.051: INFO: Deleting pod "simpletest.rc-mfbjx" in namespace "gc-4387"
  May  5 19:17:04.100: INFO: Deleting pod "simpletest.rc-mprxp" in namespace "gc-4387"
  May  5 19:17:04.143: INFO: Deleting pod "simpletest.rc-mtq78" in namespace "gc-4387"
  May  5 19:17:04.170: INFO: Deleting pod "simpletest.rc-nglcm" in namespace "gc-4387"
  May  5 19:17:04.210: INFO: Deleting pod "simpletest.rc-pf4qt" in namespace "gc-4387"
  May  5 19:17:04.231: INFO: Deleting pod "simpletest.rc-pj5qp" in namespace "gc-4387"
  May  5 19:17:04.261: INFO: Deleting pod "simpletest.rc-pmt6z" in namespace "gc-4387"
  May  5 19:17:04.318: INFO: Deleting pod "simpletest.rc-px2f2" in namespace "gc-4387"
  May  5 19:17:04.331: INFO: Deleting pod "simpletest.rc-qg9j5" in namespace "gc-4387"
  May  5 19:17:04.458: INFO: Deleting pod "simpletest.rc-qwt7p" in namespace "gc-4387"
  May  5 19:17:04.499: INFO: Deleting pod "simpletest.rc-qz9vl" in namespace "gc-4387"
  May  5 19:17:04.530: INFO: Deleting pod "simpletest.rc-r9mng" in namespace "gc-4387"
  May  5 19:17:04.552: INFO: Deleting pod "simpletest.rc-sc64j" in namespace "gc-4387"
  May  5 19:17:04.580: INFO: Deleting pod "simpletest.rc-sdwzn" in namespace "gc-4387"
  May  5 19:17:04.651: INFO: Deleting pod "simpletest.rc-sfdgg" in namespace "gc-4387"
  May  5 19:17:04.700: INFO: Deleting pod "simpletest.rc-sl2pn" in namespace "gc-4387"
  May  5 19:17:04.783: INFO: Deleting pod "simpletest.rc-th8xk" in namespace "gc-4387"
  May  5 19:17:04.825: INFO: Deleting pod "simpletest.rc-thmrp" in namespace "gc-4387"
  May  5 19:17:04.860: INFO: Deleting pod "simpletest.rc-tqj8v" in namespace "gc-4387"
  May  5 19:17:04.872: INFO: Deleting pod "simpletest.rc-v78r5" in namespace "gc-4387"
  May  5 19:17:04.899: INFO: Deleting pod "simpletest.rc-vtt9l" in namespace "gc-4387"
  May  5 19:17:04.921: INFO: Deleting pod "simpletest.rc-vvm82" in namespace "gc-4387"
  May  5 19:17:04.951: INFO: Deleting pod "simpletest.rc-w8p5t" in namespace "gc-4387"
  May  5 19:17:04.987: INFO: Deleting pod "simpletest.rc-w9lk4" in namespace "gc-4387"
  May  5 19:17:05.015: INFO: Deleting pod "simpletest.rc-wcppg" in namespace "gc-4387"
  May  5 19:17:05.052: INFO: Deleting pod "simpletest.rc-xbgsz" in namespace "gc-4387"
  May  5 19:17:05.082: INFO: Deleting pod "simpletest.rc-xqfvd" in namespace "gc-4387"
  May  5 19:17:05.098: INFO: Deleting pod "simpletest.rc-xqkmr" in namespace "gc-4387"
  May  5 19:17:05.116: INFO: Deleting pod "simpletest.rc-xtqv2" in namespace "gc-4387"
  May  5 19:17:05.139: INFO: Deleting pod "simpletest.rc-z8mrp" in namespace "gc-4387"
  May  5 19:17:05.168: INFO: Deleting pod "simpletest.rc-zdlqj" in namespace "gc-4387"
  May  5 19:17:05.195: INFO: Deleting pod "simpletest.rc-zpj7r" in namespace "gc-4387"
  May  5 19:17:05.214: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4387" for this suite. @ 05/05/24 19:17:05.22
• [44.910 seconds]
------------------------------
S
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 05/05/24 19:17:05.227
  May  5 19:17:05.227: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename init-container @ 05/05/24 19:17:05.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:17:05.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:17:05.275
  STEP: creating the pod @ 05/05/24 19:17:05.281
  May  5 19:17:05.281: INFO: PodSpec: initContainers in spec.initContainers
  May  5 19:17:10.740: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8027" for this suite. @ 05/05/24 19:17:10.742
• [5.519 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 05/05/24 19:17:10.746
  May  5 19:17:10.747: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/05/24 19:17:10.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:17:10.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:17:10.756
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 05/05/24 19:17:10.758
  May  5 19:17:10.759: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 19:17:11.923: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 19:17:16.668: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8296" for this suite. @ 05/05/24 19:17:16.671
• [5.937 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 05/05/24 19:17:16.685
  May  5 19:17:16.685: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename daemonsets @ 05/05/24 19:17:16.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:17:16.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:17:16.697
  May  5 19:17:16.707: INFO: Create a RollingUpdate DaemonSet
  May  5 19:17:16.709: INFO: Check that daemon pods launch on every node of the cluster
  May  5 19:17:16.712: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  5 19:17:16.712: INFO: Node worker00 is running 0 daemon pod, expected 1
  May  5 19:17:17.722: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  5 19:17:17.722: INFO: Node worker00 is running 0 daemon pod, expected 1
  May  5 19:17:18.721: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  May  5 19:17:18.721: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  May  5 19:17:18.721: INFO: Update the DaemonSet to trigger a rollout
  May  5 19:17:18.743: INFO: Updating DaemonSet daemon-set
  May  5 19:17:20.751: INFO: Roll back the DaemonSet before rollout is complete
  May  5 19:17:20.754: INFO: Updating DaemonSet daemon-set
  May  5 19:17:20.754: INFO: Make sure DaemonSet rollback is complete
  May  5 19:17:20.756: INFO: Wrong image for pod: daemon-set-qs2tz. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  May  5 19:17:20.756: INFO: Pod daemon-set-qs2tz is not available
  May  5 19:17:25.766: INFO: Pod daemon-set-2gzv6 is not available
  STEP: Deleting DaemonSet "daemon-set" @ 05/05/24 19:17:25.778
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4402, will wait for the garbage collector to delete the pods @ 05/05/24 19:17:25.778
  May  5 19:17:25.836: INFO: Deleting DaemonSet.extensions daemon-set took: 5.062452ms
  May  5 19:17:25.937: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.164105ms
  May  5 19:17:28.941: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  5 19:17:28.941: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May  5 19:17:28.943: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"28710"},"items":null}

  May  5 19:17:28.945: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"28710"},"items":null}

  May  5 19:17:28.950: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4402" for this suite. @ 05/05/24 19:17:28.951
• [12.269 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 05/05/24 19:17:28.954
  May  5 19:17:28.954: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename configmap @ 05/05/24 19:17:28.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:17:28.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:17:28.962
  STEP: Creating configMap with name configmap-test-upd-5db5fb8d-9021-489c-9aae-27a5e8998b61 @ 05/05/24 19:17:28.965
  STEP: Creating the pod @ 05/05/24 19:17:28.967
  STEP: Updating configmap configmap-test-upd-5db5fb8d-9021-489c-9aae-27a5e8998b61 @ 05/05/24 19:17:30.986
  STEP: waiting to observe update in volume @ 05/05/24 19:17:30.989
  May  5 19:17:32.998: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6650" for this suite. @ 05/05/24 19:17:32.999
• [4.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:713
  STEP: Creating a kubernetes client @ 05/05/24 19:17:33.003
  May  5 19:17:33.003: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename gc @ 05/05/24 19:17:33.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:17:33.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:17:33.034
  STEP: create the rc1 @ 05/05/24 19:17:33.058
  STEP: create the rc2 @ 05/05/24 19:17:33.069
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 05/05/24 19:17:39.076
  STEP: delete the rc simpletest-rc-to-be-deleted @ 05/05/24 19:17:40.049
  STEP: wait for the rc to be deleted @ 05/05/24 19:17:40.06
  May  5 19:17:45.072: INFO: 74 pods remaining
  May  5 19:17:45.072: INFO: 74 pods has nil DeletionTimestamp
  May  5 19:17:45.072: INFO: 
  STEP: Gathering metrics @ 05/05/24 19:17:50.073
  May  5 19:17:50.133: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May  5 19:17:50.133: INFO: Deleting pod "simpletest-rc-to-be-deleted-24tb2" in namespace "gc-5520"
  May  5 19:17:50.145: INFO: Deleting pod "simpletest-rc-to-be-deleted-28lmb" in namespace "gc-5520"
  May  5 19:17:50.162: INFO: Deleting pod "simpletest-rc-to-be-deleted-2jvt2" in namespace "gc-5520"
  May  5 19:17:50.179: INFO: Deleting pod "simpletest-rc-to-be-deleted-2lj6b" in namespace "gc-5520"
  May  5 19:17:50.207: INFO: Deleting pod "simpletest-rc-to-be-deleted-2m4hm" in namespace "gc-5520"
  May  5 19:17:50.230: INFO: Deleting pod "simpletest-rc-to-be-deleted-47f44" in namespace "gc-5520"
  May  5 19:17:50.258: INFO: Deleting pod "simpletest-rc-to-be-deleted-4d97d" in namespace "gc-5520"
  May  5 19:17:50.281: INFO: Deleting pod "simpletest-rc-to-be-deleted-4drdw" in namespace "gc-5520"
  May  5 19:17:50.314: INFO: Deleting pod "simpletest-rc-to-be-deleted-4p6z8" in namespace "gc-5520"
  May  5 19:17:50.341: INFO: Deleting pod "simpletest-rc-to-be-deleted-4sjqg" in namespace "gc-5520"
  May  5 19:17:50.358: INFO: Deleting pod "simpletest-rc-to-be-deleted-4vb9m" in namespace "gc-5520"
  May  5 19:17:50.380: INFO: Deleting pod "simpletest-rc-to-be-deleted-5227m" in namespace "gc-5520"
  May  5 19:17:50.421: INFO: Deleting pod "simpletest-rc-to-be-deleted-5n5ck" in namespace "gc-5520"
  May  5 19:17:50.438: INFO: Deleting pod "simpletest-rc-to-be-deleted-6c6kj" in namespace "gc-5520"
  May  5 19:17:50.452: INFO: Deleting pod "simpletest-rc-to-be-deleted-6ssnt" in namespace "gc-5520"
  May  5 19:17:50.492: INFO: Deleting pod "simpletest-rc-to-be-deleted-7lmhb" in namespace "gc-5520"
  May  5 19:17:50.517: INFO: Deleting pod "simpletest-rc-to-be-deleted-7mwm9" in namespace "gc-5520"
  May  5 19:17:50.537: INFO: Deleting pod "simpletest-rc-to-be-deleted-7vw78" in namespace "gc-5520"
  May  5 19:17:50.572: INFO: Deleting pod "simpletest-rc-to-be-deleted-84bz4" in namespace "gc-5520"
  May  5 19:17:50.623: INFO: Deleting pod "simpletest-rc-to-be-deleted-89bk4" in namespace "gc-5520"
  May  5 19:17:50.657: INFO: Deleting pod "simpletest-rc-to-be-deleted-8bhpg" in namespace "gc-5520"
  May  5 19:17:50.682: INFO: Deleting pod "simpletest-rc-to-be-deleted-8g8rw" in namespace "gc-5520"
  May  5 19:17:50.753: INFO: Deleting pod "simpletest-rc-to-be-deleted-8vsrh" in namespace "gc-5520"
  May  5 19:17:50.787: INFO: Deleting pod "simpletest-rc-to-be-deleted-94vpt" in namespace "gc-5520"
  May  5 19:17:50.813: INFO: Deleting pod "simpletest-rc-to-be-deleted-95hcq" in namespace "gc-5520"
  May  5 19:17:50.848: INFO: Deleting pod "simpletest-rc-to-be-deleted-999gr" in namespace "gc-5520"
  May  5 19:17:50.867: INFO: Deleting pod "simpletest-rc-to-be-deleted-99w9h" in namespace "gc-5520"
  May  5 19:17:50.885: INFO: Deleting pod "simpletest-rc-to-be-deleted-9vnrw" in namespace "gc-5520"
  May  5 19:17:50.933: INFO: Deleting pod "simpletest-rc-to-be-deleted-b8vvh" in namespace "gc-5520"
  May  5 19:17:50.952: INFO: Deleting pod "simpletest-rc-to-be-deleted-bppx9" in namespace "gc-5520"
  May  5 19:17:50.978: INFO: Deleting pod "simpletest-rc-to-be-deleted-bx6x9" in namespace "gc-5520"
  May  5 19:17:51.001: INFO: Deleting pod "simpletest-rc-to-be-deleted-c2p5f" in namespace "gc-5520"
  May  5 19:17:51.041: INFO: Deleting pod "simpletest-rc-to-be-deleted-c84tw" in namespace "gc-5520"
  May  5 19:17:51.062: INFO: Deleting pod "simpletest-rc-to-be-deleted-ch7b4" in namespace "gc-5520"
  May  5 19:17:51.099: INFO: Deleting pod "simpletest-rc-to-be-deleted-cklpq" in namespace "gc-5520"
  May  5 19:17:51.125: INFO: Deleting pod "simpletest-rc-to-be-deleted-db72z" in namespace "gc-5520"
  May  5 19:17:51.145: INFO: Deleting pod "simpletest-rc-to-be-deleted-dwtw2" in namespace "gc-5520"
  May  5 19:17:51.170: INFO: Deleting pod "simpletest-rc-to-be-deleted-f8kwx" in namespace "gc-5520"
  May  5 19:17:51.217: INFO: Deleting pod "simpletest-rc-to-be-deleted-fj6ln" in namespace "gc-5520"
  May  5 19:17:51.263: INFO: Deleting pod "simpletest-rc-to-be-deleted-g8sjq" in namespace "gc-5520"
  May  5 19:17:51.307: INFO: Deleting pod "simpletest-rc-to-be-deleted-gftjc" in namespace "gc-5520"
  May  5 19:17:51.360: INFO: Deleting pod "simpletest-rc-to-be-deleted-gwwdc" in namespace "gc-5520"
  May  5 19:17:51.384: INFO: Deleting pod "simpletest-rc-to-be-deleted-h6cj7" in namespace "gc-5520"
  May  5 19:17:51.403: INFO: Deleting pod "simpletest-rc-to-be-deleted-hccs5" in namespace "gc-5520"
  May  5 19:17:51.429: INFO: Deleting pod "simpletest-rc-to-be-deleted-hhsbt" in namespace "gc-5520"
  May  5 19:17:51.445: INFO: Deleting pod "simpletest-rc-to-be-deleted-hjpg7" in namespace "gc-5520"
  May  5 19:17:51.478: INFO: Deleting pod "simpletest-rc-to-be-deleted-hnkbs" in namespace "gc-5520"
  May  5 19:17:51.500: INFO: Deleting pod "simpletest-rc-to-be-deleted-hrlll" in namespace "gc-5520"
  May  5 19:17:51.568: INFO: Deleting pod "simpletest-rc-to-be-deleted-hshlk" in namespace "gc-5520"
  May  5 19:17:51.599: INFO: Deleting pod "simpletest-rc-to-be-deleted-hwxm2" in namespace "gc-5520"
  May  5 19:17:51.622: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5520" for this suite. @ 05/05/24 19:17:51.632
• [18.639 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 05/05/24 19:17:51.646
  May  5 19:17:51.646: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename projected @ 05/05/24 19:17:51.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:17:51.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:17:51.675
  STEP: Creating projection with secret that has name projected-secret-test-5608d14f-12de-44f0-b9bf-d61306c5371d @ 05/05/24 19:17:51.678
  STEP: Creating a pod to test consume secrets @ 05/05/24 19:17:51.684
  STEP: Saw pod success @ 05/05/24 19:17:55.727
  May  5 19:17:55.730: INFO: Trying to get logs from node worker01 pod pod-projected-secrets-0e20adf7-0340-4449-a3f6-d9935072d363 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/05/24 19:17:55.736
  May  5 19:17:55.750: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8561" for this suite. @ 05/05/24 19:17:55.752
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:177
  STEP: Creating a kubernetes client @ 05/05/24 19:17:55.758
  May  5 19:17:55.758: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename emptydir @ 05/05/24 19:17:55.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:17:55.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:17:55.77
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/05/24 19:17:55.771
  STEP: Saw pod success @ 05/05/24 19:17:57.78
  May  5 19:17:57.782: INFO: Trying to get logs from node worker00 pod pod-ee839b53-2692-4dfd-a814-75a3c4721641 container test-container: <nil>
  STEP: delete the pod @ 05/05/24 19:17:57.788
  May  5 19:17:57.797: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5160" for this suite. @ 05/05/24 19:17:57.799
• [2.045 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 05/05/24 19:17:57.803
  May  5 19:17:57.803: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename tables @ 05/05/24 19:17:57.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:17:57.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:17:57.815
  May  5 19:17:57.818: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-1653" for this suite. @ 05/05/24 19:17:57.82
• [0.020 seconds]
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 05/05/24 19:17:57.823
  May  5 19:17:57.823: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename containers @ 05/05/24 19:17:57.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:17:57.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:17:57.833
  STEP: Creating a pod to test override all @ 05/05/24 19:17:57.835
  STEP: Saw pod success @ 05/05/24 19:17:59.845
  May  5 19:17:59.848: INFO: Trying to get logs from node worker00 pod client-containers-76f21b21-9438-4af2-a886-9c2010501863 container agnhost-container: <nil>
  STEP: delete the pod @ 05/05/24 19:17:59.852
  May  5 19:17:59.870: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4786" for this suite. @ 05/05/24 19:17:59.872
• [2.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:538
  STEP: Creating a kubernetes client @ 05/05/24 19:17:59.876
  May  5 19:17:59.876: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename gc @ 05/05/24 19:17:59.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:17:59.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:17:59.884
  STEP: create the deployment @ 05/05/24 19:17:59.886
  W0505 19:17:59.889328      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/05/24 19:17:59.889
  STEP: delete the deployment @ 05/05/24 19:18:00.399
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 05/05/24 19:18:00.403
  STEP: Gathering metrics @ 05/05/24 19:18:00.916
  May  5 19:18:00.947: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May  5 19:18:00.948: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-927" for this suite. @ 05/05/24 19:18:00.95
• [1.077 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 05/05/24 19:18:00.953
  May  5 19:18:00.953: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename subjectreview @ 05/05/24 19:18:00.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:18:00.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:18:00.965
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-3942" @ 05/05/24 19:18:00.966
  May  5 19:18:00.969: INFO: saUsername: "system:serviceaccount:subjectreview-3942:e2e"
  May  5 19:18:00.969: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-3942"}
  May  5 19:18:00.969: INFO: saUID: "79c03e7b-6537-49e7-b416-304cb32284e0"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-3942:e2e" @ 05/05/24 19:18:00.969
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-3942:e2e" @ 05/05/24 19:18:00.971
  May  5 19:18:00.972: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-3942:e2e" api 'list' configmaps in "subjectreview-3942" namespace @ 05/05/24 19:18:00.972
  May  5 19:18:00.973: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-3942:e2e" @ 05/05/24 19:18:00.973
  May  5 19:18:00.976: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  May  5 19:18:00.976: INFO: LocalSubjectAccessReview has been verified
  May  5 19:18:00.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-3942" for this suite. @ 05/05/24 19:18:00.979
• [0.029 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 05/05/24 19:18:00.983
  May  5 19:18:00.983: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename deployment @ 05/05/24 19:18:00.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:18:00.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:18:00.995
  May  5 19:18:00.996: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  May  5 19:18:01.000: INFO: Pod name sample-pod: Found 0 pods out of 1
  May  5 19:18:06.003: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/05/24 19:18:06.003
  May  5 19:18:06.003: INFO: Creating deployment "test-rolling-update-deployment"
  May  5 19:18:06.005: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  May  5 19:18:06.010: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  May  5 19:18:08.021: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  May  5 19:18:08.027: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  May  5 19:18:08.034: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=13) "deployment-56",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f9245edf-57e5-43ec-bca0-83d42f14badb",
      ResourceVersion: (string) (len=5) "31633",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850533486,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-7ddb77f68b\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May  5 19:18:08.042: INFO: New ReplicaSet "test-rolling-update-deployment-7ddb77f68b" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
      GenerateName: (string) "",
      Namespace: (string) (len=13) "deployment-56",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fd95027a-ed60-4959-8df5-014583134a2a",
      ResourceVersion: (string) (len=5) "31623",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850533486,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "f9245edf-57e5-43ec-bca0-83d42f14badb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 39 32 34 35 65  64 66 2d 35 37 65 35 2d  |\"f9245edf-57e5-|
              00000120  34 33 65 63 2d 62 63 61  30 2d 38 33 64 34 32 66  |43ec-bca0-83d42f|
              00000130  31 34 62 61 64 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |14badb\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May  5 19:18:08.046: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  May  5 19:18:08.047: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=13) "deployment-56",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f2bf3b72-3287-49c4-aa2e-d268a25efb49",
      ResourceVersion: (string) (len=5) "31632",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850533480,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "f9245edf-57e5-43ec-bca0-83d42f14badb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 66 39 32 34 35 65 64  |"uid\":\"f9245ed|
              000000b0  66 2d 35 37 65 35 2d 34  33 65 63 2d 62 63 61 30  |f-57e5-43ec-bca0|
              000000c0  2d 38 33 64 34 32 66 31  34 62 61 64 62 5c 22 7d  |-83d42f14badb\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May  5 19:18:08.054: INFO: Pod "test-rolling-update-deployment-7ddb77f68b-x26kv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-7ddb77f68b-x26kv",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-7ddb77f68b-",
      Namespace: (string) (len=13) "deployment-56",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9e80b212-a2d0-45bc-99d7-c9c6718b95ea",
      ResourceVersion: (string) (len=5) "31622",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850533486,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "ffeecdd310bff0253d266d1773f530194b84f7cd49fd9c93fa03bac87f99952c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.200.5.9/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.200.5.9/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
          UID: (types.UID) (len=36) "fd95027a-ed60-4959-8df5-014583134a2a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 64  39 35 30 32 37 61 2d 65  |d\":\"fd95027a-e|
              00000090  64 36 30 2d 34 39 35 39  2d 38 64 66 35 2d 30 31  |d60-4959-8df5-01|
              000000a0  34 35 38 33 31 33 34 61  32 61 5c 22 7d 22 3a 7b  |4583134a2a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 39  5c 22 7d 22 3a 7b 22 2e  |.200.5.9\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gwjbd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gwjbd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=10) "10.200.5.9",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.200.5.9"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850533486,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850533486,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://71a6de8e118a8dcb930fb0c854fb33315881cf366e6273327879780aa961d206",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:18:08.060: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-56" for this suite. @ 05/05/24 19:18:08.064
• [7.087 seconds]
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 05/05/24 19:18:08.071
  May  5 19:18:08.071: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename services @ 05/05/24 19:18:08.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:18:08.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:18:08.087
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-3792 @ 05/05/24 19:18:08.088
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/05/24 19:18:08.093
  STEP: creating service externalsvc in namespace services-3792 @ 05/05/24 19:18:08.093
  STEP: creating replication controller externalsvc in namespace services-3792 @ 05/05/24 19:18:08.104
  I0505 19:18:08.110102      20 runners.go:197] Created replication controller with name: externalsvc, namespace: services-3792, replica count: 2
  I0505 19:18:11.166914      20 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 05/05/24 19:18:11.171
  May  5 19:18:11.193: INFO: Creating new exec pod
  May  5 19:18:13.214: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-3792 exec execpodxtq5f -- /bin/sh -x -c nslookup clusterip-service.services-3792.svc.cluster.local'
  May  5 19:18:13.342: INFO: stderr: "+ nslookup clusterip-service.services-3792.svc.cluster.local\n"
  May  5 19:18:13.342: INFO: stdout: "Server:\t\t10.32.0.10\nAddress:\t10.32.0.10#53\n\nclusterip-service.services-3792.svc.cluster.local\tcanonical name = externalsvc.services-3792.svc.cluster.local.\nName:\texternalsvc.services-3792.svc.cluster.local\nAddress: 10.32.0.169\n\n"
  May  5 19:18:13.342: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-3792, will wait for the garbage collector to delete the pods @ 05/05/24 19:18:13.344
  May  5 19:18:13.399: INFO: Deleting ReplicationController externalsvc took: 2.496089ms
  May  5 19:18:13.500: INFO: Terminating ReplicationController externalsvc pods took: 101.331021ms
  May  5 19:18:16.513: INFO: Cleaning up the ClusterIP to ExternalName test service
  STEP: Destroying namespace "services-3792" for this suite. @ 05/05/24 19:18:16.521
• [8.455 seconds]
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 05/05/24 19:18:16.526
  May  5 19:18:16.526: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename kubelet-test @ 05/05/24 19:18:16.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:18:16.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:18:16.538
  May  5 19:18:16.555: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1762" for this suite. @ 05/05/24 19:18:16.557
• [0.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:154
  STEP: Creating a kubernetes client @ 05/05/24 19:18:16.56
  May  5 19:18:16.560: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename replicaset @ 05/05/24 19:18:16.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:18:16.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:18:16.57
  May  5 19:18:16.582: INFO: Pod name sample-pod: Found 0 pods out of 1
  May  5 19:18:21.583: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/05/24 19:18:21.583
  STEP: Scaling up "test-rs" replicaset  @ 05/05/24 19:18:21.584
  May  5 19:18:21.589: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 05/05/24 19:18:21.59
  May  5 19:18:21.595: INFO: observed ReplicaSet test-rs in namespace replicaset-3098 with ReadyReplicas 1, AvailableReplicas 1
  May  5 19:18:21.606: INFO: observed ReplicaSet test-rs in namespace replicaset-3098 with ReadyReplicas 1, AvailableReplicas 1
  May  5 19:18:21.620: INFO: observed ReplicaSet test-rs in namespace replicaset-3098 with ReadyReplicas 1, AvailableReplicas 1
  May  5 19:18:21.623: INFO: observed ReplicaSet test-rs in namespace replicaset-3098 with ReadyReplicas 1, AvailableReplicas 1
  May  5 19:18:22.463: INFO: observed ReplicaSet test-rs in namespace replicaset-3098 with ReadyReplicas 2, AvailableReplicas 2
  May  5 19:18:22.728: INFO: observed Replicaset test-rs in namespace replicaset-3098 with ReadyReplicas 3 found true
  May  5 19:18:22.728: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3098" for this suite. @ 05/05/24 19:18:22.73
• [6.173 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:740
  STEP: Creating a kubernetes client @ 05/05/24 19:18:22.733
  May  5 19:18:22.733: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename svcaccounts @ 05/05/24 19:18:22.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:18:22.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:18:22.742
  May  5 19:18:22.746: INFO: Got root ca configmap in namespace "svcaccounts-2033"
  May  5 19:18:22.748: INFO: Deleted root ca configmap in namespace "svcaccounts-2033"
  STEP: waiting for a new root ca configmap created @ 05/05/24 19:18:23.249
  May  5 19:18:23.254: INFO: Recreated root ca configmap in namespace "svcaccounts-2033"
  May  5 19:18:23.271: INFO: Updated root ca configmap in namespace "svcaccounts-2033"
  STEP: waiting for the root ca configmap reconciled @ 05/05/24 19:18:23.772
  May  5 19:18:23.774: INFO: Reconciled root ca configmap in namespace "svcaccounts-2033"
  May  5 19:18:23.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2033" for this suite. @ 05/05/24 19:18:23.775
• [1.055 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:528
  STEP: Creating a kubernetes client @ 05/05/24 19:18:23.788
  May  5 19:18:23.788: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename security-context-test @ 05/05/24 19:18:23.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:18:23.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:18:23.798
  May  5 19:18:25.820: INFO: Got logs for pod "busybox-privileged-false-e5a51756-021f-4758-b167-9e2c7604777c": "ip: RTNETLINK answers: Operation not permitted\n"
  May  5 19:18:25.820: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4295" for this suite. @ 05/05/24 19:18:25.824
• [2.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 05/05/24 19:18:25.84
  May  5 19:18:25.840: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename certificates @ 05/05/24 19:18:25.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:18:25.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:18:25.851
  STEP: getting /apis @ 05/05/24 19:18:26.266
  STEP: getting /apis/certificates.k8s.io @ 05/05/24 19:18:26.269
  STEP: getting /apis/certificates.k8s.io/v1 @ 05/05/24 19:18:26.269
  STEP: creating @ 05/05/24 19:18:26.27
  STEP: getting @ 05/05/24 19:18:26.293
  STEP: listing @ 05/05/24 19:18:26.295
  STEP: watching @ 05/05/24 19:18:26.297
  May  5 19:18:26.297: INFO: starting watch
  STEP: patching @ 05/05/24 19:18:26.297
  STEP: updating @ 05/05/24 19:18:26.3
  May  5 19:18:26.303: INFO: waiting for watch events with expected annotations
  May  5 19:18:26.303: INFO: saw patched and updated annotations
  STEP: getting /approval @ 05/05/24 19:18:26.303
  STEP: patching /approval @ 05/05/24 19:18:26.304
  STEP: updating /approval @ 05/05/24 19:18:26.308
  STEP: getting /status @ 05/05/24 19:18:26.311
  STEP: patching /status @ 05/05/24 19:18:26.313
  STEP: updating /status @ 05/05/24 19:18:26.317
  STEP: deleting @ 05/05/24 19:18:26.321
  STEP: deleting a collection @ 05/05/24 19:18:26.326
  May  5 19:18:26.331: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-4967" for this suite. @ 05/05/24 19:18:26.333
• [0.496 seconds]
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:45
  STEP: Creating a kubernetes client @ 05/05/24 19:18:26.335
  May  5 19:18:26.335: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename downward-api @ 05/05/24 19:18:26.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:18:26.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:18:26.348
  STEP: Creating a pod to test downward api env vars @ 05/05/24 19:18:26.349
  STEP: Saw pod success @ 05/05/24 19:18:30.367
  May  5 19:18:30.371: INFO: Trying to get logs from node worker01 pod downward-api-2e2b503a-f412-478c-a3f5-60412182c885 container dapi-container: <nil>
  STEP: delete the pod @ 05/05/24 19:18:30.38
  May  5 19:18:30.402: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7021" for this suite. @ 05/05/24 19:18:30.404
• [4.072 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 05/05/24 19:18:30.409
  May  5 19:18:30.409: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename field-validation @ 05/05/24 19:18:30.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:18:30.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:18:30.419
  May  5 19:18:30.421: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  W0505 19:18:32.955384      20 warnings.go:70] unknown field "alpha"
  W0505 19:18:32.955439      20 warnings.go:70] unknown field "beta"
  W0505 19:18:32.955455      20 warnings.go:70] unknown field "delta"
  W0505 19:18:32.955470      20 warnings.go:70] unknown field "epsilon"
  W0505 19:18:32.955486      20 warnings.go:70] unknown field "gamma"
  May  5 19:18:33.478: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5050" for this suite. @ 05/05/24 19:18:33.491
• [3.097 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:792
  STEP: Creating a kubernetes client @ 05/05/24 19:18:33.506
  May  5 19:18:33.506: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename statefulset @ 05/05/24 19:18:33.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:18:33.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:18:33.519
  STEP: Creating service test in namespace statefulset-7295 @ 05/05/24 19:18:33.523
  STEP: Looking for a node to schedule stateful set and pod @ 05/05/24 19:18:33.526
  STEP: Creating pod with conflicting port in namespace statefulset-7295 @ 05/05/24 19:18:33.531
  STEP: Waiting until pod test-pod will start running in namespace statefulset-7295 @ 05/05/24 19:18:33.537
  STEP: Creating statefulset with conflicting port in namespace statefulset-7295 @ 05/05/24 19:18:35.542
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-7295 @ 05/05/24 19:18:35.545
  May  5 19:18:35.550: INFO: Observed stateful pod in namespace: statefulset-7295, name: ss-0, uid: dbffd03f-7c09-430f-9c17-a94f8ff6a2da, status phase: Pending. Waiting for statefulset controller to delete.
  May  5 19:18:35.559: INFO: Observed stateful pod in namespace: statefulset-7295, name: ss-0, uid: dbffd03f-7c09-430f-9c17-a94f8ff6a2da, status phase: Failed. Waiting for statefulset controller to delete.
  May  5 19:18:35.579: INFO: Observed stateful pod in namespace: statefulset-7295, name: ss-0, uid: dbffd03f-7c09-430f-9c17-a94f8ff6a2da, status phase: Failed. Waiting for statefulset controller to delete.
  May  5 19:18:35.583: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-7295
  STEP: Removing pod with conflicting port in namespace statefulset-7295 @ 05/05/24 19:18:35.583
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-7295 and will be in running state @ 05/05/24 19:18:35.602
  May  5 19:18:37.611: INFO: Deleting all statefulset in ns statefulset-7295
  May  5 19:18:37.615: INFO: Scaling statefulset ss to 0
  May  5 19:18:47.625: INFO: Waiting for statefulset status.replicas updated to 0
  May  5 19:18:47.627: INFO: Deleting statefulset ss
  May  5 19:18:47.635: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7295" for this suite. @ 05/05/24 19:18:47.639
• [14.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 05/05/24 19:18:47.643
  May  5 19:18:47.643: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename cronjob @ 05/05/24 19:18:47.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:18:47.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:18:47.656
  STEP: Creating a suspended cronjob @ 05/05/24 19:18:47.658
  STEP: Ensuring no jobs are scheduled @ 05/05/24 19:18:47.661
  STEP: Ensuring no job exists by listing jobs explicitly @ 05/05/24 19:23:47.669
  STEP: Removing cronjob @ 05/05/24 19:23:47.671
  May  5 19:23:47.684: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6697" for this suite. @ 05/05/24 19:23:47.687
• [300.048 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1707
  STEP: Creating a kubernetes client @ 05/05/24 19:23:47.694
  May  5 19:23:47.695: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename kubectl @ 05/05/24 19:23:47.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:23:47.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:23:47.707
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/05/24 19:23:47.709
  May  5 19:23:47.709: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-1999 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  May  5 19:23:47.759: INFO: stderr: ""
  May  5 19:23:47.759: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/05/24 19:23:47.759
  May  5 19:23:47.762: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-1999 delete pods e2e-test-httpd-pod'
  May  5 19:23:49.060: INFO: stderr: ""
  May  5 19:23:49.060: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  May  5 19:23:49.060: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1999" for this suite. @ 05/05/24 19:23:49.062
• [1.370 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:123
  STEP: Creating a kubernetes client @ 05/05/24 19:23:49.065
  May  5 19:23:49.066: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename sysctl @ 05/05/24 19:23:49.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:23:49.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:23:49.077
  STEP: Creating a pod with one valid and two invalid sysctls @ 05/05/24 19:23:49.078
  May  5 19:23:49.081: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-5474" for this suite. @ 05/05/24 19:23:49.083
• [0.023 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:138
  STEP: Creating a kubernetes client @ 05/05/24 19:23:49.089
  May  5 19:23:49.089: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename configmap @ 05/05/24 19:23:49.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:23:49.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:23:49.102
  STEP: Creating configMap that has name configmap-test-emptyKey-1d8b4e7a-8291-4213-8b25-c2c42c977d7d @ 05/05/24 19:23:49.103
  May  5 19:23:49.104: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-397" for this suite. @ 05/05/24 19:23:49.106
• [0.021 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:272
  STEP: Creating a kubernetes client @ 05/05/24 19:23:49.11
  May  5 19:23:49.110: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename namespaces @ 05/05/24 19:23:49.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:23:49.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:23:49.123
  STEP: creating a Namespace @ 05/05/24 19:23:49.124
  STEP: patching the Namespace @ 05/05/24 19:23:49.133
  STEP: get the Namespace and ensuring it has the label @ 05/05/24 19:23:49.137
  May  5 19:23:49.139: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6091" for this suite. @ 05/05/24 19:23:49.142
  STEP: Destroying namespace "nspatchtest-d990117f-d2d8-4ddb-bd60-6e77636a5b68-5393" for this suite. @ 05/05/24 19:23:49.145
• [0.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 05/05/24 19:23:49.151
  May  5 19:23:49.151: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename webhook @ 05/05/24 19:23:49.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:23:49.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:23:49.162
  STEP: Setting up server cert @ 05/05/24 19:23:49.176
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 19:23:49.359
  STEP: Deploying the webhook pod @ 05/05/24 19:23:49.365
  STEP: Wait for the deployment to be ready @ 05/05/24 19:23:49.372
  May  5 19:23:49.379: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/05/24 19:23:51.403
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 19:23:51.411
  May  5 19:23:52.412: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/05/24 19:23:52.423
  STEP: create a pod that should be denied by the webhook @ 05/05/24 19:23:52.436
  STEP: create a pod that causes the webhook to hang @ 05/05/24 19:23:52.445
  STEP: create a configmap that should be denied by the webhook @ 05/05/24 19:24:02.456
  STEP: create a configmap that should be admitted by the webhook @ 05/05/24 19:24:02.48
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/05/24 19:24:02.487
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/05/24 19:24:02.492
  STEP: create a namespace that bypass the webhook @ 05/05/24 19:24:02.496
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 05/05/24 19:24:02.506
  May  5 19:24:02.513: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9488" for this suite. @ 05/05/24 19:24:02.555
  STEP: Destroying namespace "webhook-markers-1593" for this suite. @ 05/05/24 19:24:02.561
  STEP: Destroying namespace "exempted-namespace-9804" for this suite. @ 05/05/24 19:24:02.567
• [13.421 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 05/05/24 19:24:02.572
  May  5 19:24:02.572: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename pods @ 05/05/24 19:24:02.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:24:02.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:24:02.589
  STEP: creating the pod @ 05/05/24 19:24:02.591
  STEP: submitting the pod to kubernetes @ 05/05/24 19:24:02.591
  STEP: verifying the pod is in kubernetes @ 05/05/24 19:24:04.61
  STEP: updating the pod @ 05/05/24 19:24:04.614
  May  5 19:24:05.138: INFO: Successfully updated pod "pod-update-2e70e9c4-5ab1-4f3c-bfc3-5e2bd498adb8"
  STEP: verifying the updated pod is in kubernetes @ 05/05/24 19:24:05.142
  May  5 19:24:05.144: INFO: Pod update OK
  May  5 19:24:05.145: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8452" for this suite. @ 05/05/24 19:24:05.147
• [2.579 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:529
  STEP: Creating a kubernetes client @ 05/05/24 19:24:05.155
  May  5 19:24:05.155: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename svcaccounts @ 05/05/24 19:24:05.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:24:05.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:24:05.168
  May  5 19:24:05.177: INFO: created pod
  STEP: Saw pod success @ 05/05/24 19:24:09.188
  May  5 19:24:39.188: INFO: polling logs
  May  5 19:24:39.205: INFO: Pod logs: 
  I0505 19:24:06.021986       1 log.go:245] OK: Got token
  I0505 19:24:06.022033       1 log.go:245] validating with in-cluster discovery
  I0505 19:24:06.022605       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0505 19:24:06.022621       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-6990:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00020bca0), NotBefore:(*jwt.NumericDate)(0xc00020bd88), IssuedAt:(*jwt.NumericDate)(0xc00020bcb0), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6990", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"51cfcd60-6e05-4515-934c-57b6379a8873"}}}
  I0505 19:24:06.028333       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0505 19:24:06.031202       1 log.go:245] OK: Validated signature on JWT
  I0505 19:24:06.031295       1 log.go:245] OK: Got valid claims from token!
  I0505 19:24:06.031382       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-6990:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000012ad8), NotBefore:(*jwt.NumericDate)(0xc000012b20), IssuedAt:(*jwt.NumericDate)(0xc000012ae0), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6990", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"51cfcd60-6e05-4515-934c-57b6379a8873"}}}

  May  5 19:24:39.205: INFO: completed pod
  May  5 19:24:39.211: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6990" for this suite. @ 05/05/24 19:24:39.213
• [34.062 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:609
  STEP: Creating a kubernetes client @ 05/05/24 19:24:39.218
  May  5 19:24:39.218: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename security-context-test @ 05/05/24 19:24:39.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:24:39.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:24:39.229
  May  5 19:24:45.267: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9462" for this suite. @ 05/05/24 19:24:45.271
• [6.061 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 05/05/24 19:24:45.279
  May  5 19:24:45.279: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename sched-preemption @ 05/05/24 19:24:45.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:24:45.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:24:45.296
  May  5 19:24:45.315: INFO: Waiting up to 1m0s for all nodes to be ready
  May  5 19:25:45.345: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/05/24 19:25:45.346
  May  5 19:25:45.357: INFO: Created pod: pod0-0-sched-preemption-low-priority
  May  5 19:25:45.365: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  May  5 19:25:45.378: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  May  5 19:25:45.384: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/05/24 19:25:45.384
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 05/05/24 19:25:47.405
  May  5 19:25:51.443: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1839" for this suite. @ 05/05/24 19:25:51.471
• [66.197 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:145
  STEP: Creating a kubernetes client @ 05/05/24 19:25:51.476
  May  5 19:25:51.476: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/05/24 19:25:51.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:25:51.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:25:51.49
  May  5 19:25:51.491: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 19:25:52.039: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2620" for this suite. @ 05/05/24 19:25:52.041
• [0.569 seconds]
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:321
  STEP: Creating a kubernetes client @ 05/05/24 19:25:52.045
  May  5 19:25:52.045: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename gc @ 05/05/24 19:25:52.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:25:52.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:25:52.059
  STEP: create the rc @ 05/05/24 19:25:52.061
  W0505 19:25:52.063760      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 05/05/24 19:25:57.07
  STEP: wait for all pods to be garbage collected @ 05/05/24 19:25:57.086
  STEP: Gathering metrics @ 05/05/24 19:26:02.094
  May  5 19:26:02.125: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May  5 19:26:02.125: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9998" for this suite. @ 05/05/24 19:26:02.128
• [10.095 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:303
  STEP: Creating a kubernetes client @ 05/05/24 19:26:02.14
  May  5 19:26:02.140: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename namespaces @ 05/05/24 19:26:02.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:26:02.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:26:02.151
  STEP: Read namespace status @ 05/05/24 19:26:02.153
  May  5 19:26:02.155: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 05/05/24 19:26:02.155
  May  5 19:26:02.158: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 05/05/24 19:26:02.158
  May  5 19:26:02.167: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  May  5 19:26:02.167: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-376" for this suite. @ 05/05/24 19:26:02.169
• [0.035 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:152
  STEP: Creating a kubernetes client @ 05/05/24 19:26:02.176
  May  5 19:26:02.176: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/05/24 19:26:02.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:26:02.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:26:02.194
  STEP: create the container to handle the HTTPGet hook request. @ 05/05/24 19:26:02.198
  STEP: create the pod with lifecycle hook @ 05/05/24 19:26:04.216
  STEP: delete the pod with lifecycle hook @ 05/05/24 19:26:06.239
  STEP: check prestop hook @ 05/05/24 19:26:10.263
  May  5 19:26:10.271: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5216" for this suite. @ 05/05/24 19:26:10.274
• [8.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1013
  STEP: Creating a kubernetes client @ 05/05/24 19:26:10.29
  May  5 19:26:10.290: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename resourcequota @ 05/05/24 19:26:10.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:26:10.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:26:10.301
  STEP: Creating resourceQuota "e2e-rq-status-fv7sc" @ 05/05/24 19:26:10.304
  May  5 19:26:10.310: INFO: Resource quota "e2e-rq-status-fv7sc" reports spec: hard cpu limit of 500m
  May  5 19:26:10.310: INFO: Resource quota "e2e-rq-status-fv7sc" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-fv7sc" /status @ 05/05/24 19:26:10.31
  STEP: Confirm /status for "e2e-rq-status-fv7sc" resourceQuota via watch @ 05/05/24 19:26:10.317
  May  5 19:26:10.319: INFO: observed resourceQuota "e2e-rq-status-fv7sc" in namespace "resourcequota-5787" with hard status: v1.ResourceList(nil)
  May  5 19:26:10.319: INFO: Found resourceQuota "e2e-rq-status-fv7sc" in namespace "resourcequota-5787" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  May  5 19:26:10.319: INFO: ResourceQuota "e2e-rq-status-fv7sc" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 05/05/24 19:26:10.321
  May  5 19:26:10.325: INFO: Resource quota "e2e-rq-status-fv7sc" reports spec: hard cpu limit of 1
  May  5 19:26:10.325: INFO: Resource quota "e2e-rq-status-fv7sc" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-fv7sc" /status @ 05/05/24 19:26:10.325
  STEP: Confirm /status for "e2e-rq-status-fv7sc" resourceQuota via watch @ 05/05/24 19:26:10.329
  May  5 19:26:10.331: INFO: observed resourceQuota "e2e-rq-status-fv7sc" in namespace "resourcequota-5787" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  May  5 19:26:10.331: INFO: Found resourceQuota "e2e-rq-status-fv7sc" in namespace "resourcequota-5787" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  May  5 19:26:10.331: INFO: ResourceQuota "e2e-rq-status-fv7sc" /status was patched
  STEP: Get "e2e-rq-status-fv7sc" /status @ 05/05/24 19:26:10.332
  May  5 19:26:10.335: INFO: Resourcequota "e2e-rq-status-fv7sc" reports status: hard cpu of 1
  May  5 19:26:10.335: INFO: Resourcequota "e2e-rq-status-fv7sc" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-fv7sc" /status before checking Spec is unchanged @ 05/05/24 19:26:10.337
  May  5 19:26:10.341: INFO: Resourcequota "e2e-rq-status-fv7sc" reports status: hard cpu of 2
  May  5 19:26:10.341: INFO: Resourcequota "e2e-rq-status-fv7sc" reports status: hard memory of 2Gi
  May  5 19:26:10.343: INFO: Found resourceQuota "e2e-rq-status-fv7sc" in namespace "resourcequota-5787" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  May  5 19:26:15.347: INFO: ResourceQuota "e2e-rq-status-fv7sc" Spec was unchanged and /status reset
  May  5 19:26:15.348: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5787" for this suite. @ 05/05/24 19:26:15.352
• [5.098 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 05/05/24 19:26:15.391
  May  5 19:26:15.391: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename sched-pred @ 05/05/24 19:26:15.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:26:15.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:26:15.445
  May  5 19:26:15.452: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  May  5 19:26:15.467: INFO: Waiting for terminating namespaces to be deleted...
  May  5 19:26:15.474: INFO: 
  Logging pods the apiserver thinks is on node worker00 before test
  May  5 19:26:15.498: INFO: coredns-5b87cbd9d7-9jpw9 from kube-system started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:26:15.498: INFO: 	Container coredns ready: true, restart count 0
  May  5 19:26:15.498: INFO: coredns-5b87cbd9d7-ww797 from kube-system started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:26:15.498: INFO: 	Container coredns ready: true, restart count 0
  May  5 19:26:15.498: INFO: etcd-worker00 from kube-system started at 2024-05-05 18:09:11 +0000 UTC (1 container statuses recorded)
  May  5 19:26:15.499: INFO: 	Container etcd ready: true, restart count 0
  May  5 19:26:15.499: INFO: gobetween-worker00 from kube-system started at 2024-05-05 18:09:11 +0000 UTC (1 container statuses recorded)
  May  5 19:26:15.499: INFO: 	Container gobetween ready: true, restart count 0
  May  5 19:26:15.499: INFO: kube-apiserver-worker00 from kube-system started at 2024-05-05 18:09:11 +0000 UTC (1 container statuses recorded)
  May  5 19:26:15.499: INFO: 	Container kube-apiserver ready: true, restart count 0
  May  5 19:26:15.499: INFO: kube-controller-manager-worker00 from kube-system started at 2024-05-05 18:09:11 +0000 UTC (1 container statuses recorded)
  May  5 19:26:15.499: INFO: 	Container kube-controller-manager ready: true, restart count 0
  May  5 19:26:15.499: INFO: kube-proxy-worker00 from kube-system started at 2024-05-05 18:09:11 +0000 UTC (1 container statuses recorded)
  May  5 19:26:15.499: INFO: 	Container kube-proxy ready: true, restart count 0
  May  5 19:26:15.499: INFO: kube-scheduler-worker00 from kube-system started at 2024-05-05 18:09:11 +0000 UTC (1 container statuses recorded)
  May  5 19:26:15.499: INFO: 	Container kube-scheduler ready: true, restart count 0
  May  5 19:26:15.499: INFO: kubernetes-dashboard-api-86d45cdc48-cr84l from kube-system started at 2024-05-05 18:13:22 +0000 UTC (1 container statuses recorded)
  May  5 19:26:15.499: INFO: 	Container kubernetes-dashboard-api ready: true, restart count 0
  May  5 19:26:15.499: INFO: kubernetes-dashboard-auth-5d859bc497-5trkl from kube-system started at 2024-05-05 18:13:22 +0000 UTC (1 container statuses recorded)
  May  5 19:26:15.499: INFO: 	Container kubernetes-dashboard-auth ready: true, restart count 0
  May  5 19:26:15.499: INFO: kubernetes-dashboard-kong-65b5fb65cc-5hbxz from kube-system started at 2024-05-05 18:13:22 +0000 UTC (1 container statuses recorded)
  May  5 19:26:15.499: INFO: 	Container proxy ready: true, restart count 0
  May  5 19:26:15.499: INFO: kubernetes-dashboard-metrics-scraper-56c9f5cc54-kgvqk from kube-system started at 2024-05-05 18:13:22 +0000 UTC (1 container statuses recorded)
  May  5 19:26:15.499: INFO: 	Container kubernetes-dashboard-metrics-scraper ready: true, restart count 0
  May  5 19:26:15.499: INFO: kubernetes-dashboard-web-74dcc49f5-ck8gt from kube-system started at 2024-05-05 18:13:22 +0000 UTC (1 container statuses recorded)
  May  5 19:26:15.499: INFO: 	Container kubernetes-dashboard-web ready: true, restart count 0
  May  5 19:26:15.499: INFO: calico-kube-controllers-758c99c4b5-t7476 from networking started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:26:15.499: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  May  5 19:26:15.499: INFO: calico-node-txcwz from networking started at 2024-05-05 18:09:54 +0000 UTC (1 container statuses recorded)
  May  5 19:26:15.499: INFO: 	Container calico-node ready: true, restart count 0
  May  5 19:26:15.499: INFO: calico-typha-5cfbc84557-dsph6 from networking started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:26:15.499: INFO: 	Container calico-typha ready: true, restart count 0
  May  5 19:26:15.499: INFO: metallb-controller-67f4cfb984-c266w from networking started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:26:15.499: INFO: 	Container controller ready: true, restart count 0
  May  5 19:26:15.499: INFO: metallb-speaker-jjxsx from networking started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:26:15.499: INFO: 	Container speaker ready: true, restart count 0
  May  5 19:26:15.499: INFO: sonobuoy from sonobuoy started at 2024-05-05 18:14:39 +0000 UTC (1 container statuses recorded)
  May  5 19:26:15.499: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  May  5 19:26:15.499: INFO: sonobuoy-e2e-job-c39f0ba3513c4764 from sonobuoy started at 2024-05-05 18:14:44 +0000 UTC (2 container statuses recorded)
  May  5 19:26:15.499: INFO: 	Container e2e ready: true, restart count 0
  May  5 19:26:15.499: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May  5 19:26:15.499: INFO: sonobuoy-systemd-logs-daemon-set-b21bb3e5fd3f4718-c5bfp from sonobuoy started at 2024-05-05 18:14:44 +0000 UTC (2 container statuses recorded)
  May  5 19:26:15.499: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May  5 19:26:15.499: INFO: 	Container systemd-logs ready: true, restart count 0
  May  5 19:26:15.499: INFO: ceph-csi-cephfs-nodeplugin-rcxpw from storage started at 2024-05-05 18:09:54 +0000 UTC (3 container statuses recorded)
  May  5 19:26:15.499: INFO: 	Container csi-cephfsplugin ready: true, restart count 0
  May  5 19:26:15.499: INFO: 	Container driver-registrar ready: true, restart count 0
  May  5 19:26:15.499: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:26:15.499: INFO: ceph-csi-rbd-nodeplugin-ndxrk from storage started at 2024-05-05 18:09:54 +0000 UTC (3 container statuses recorded)
  May  5 19:26:15.499: INFO: 	Container csi-rbdplugin ready: true, restart count 0
  May  5 19:26:15.499: INFO: 	Container driver-registrar ready: true, restart count 0
  May  5 19:26:15.499: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:26:15.499: INFO: ceph-mon-worker00-797bf6469d-vpp5c from storage started at 2024-05-05 18:09:55 +0000 UTC (1 container statuses recorded)
  May  5 19:26:15.499: INFO: 	Container ceph-mon ready: true, restart count 0
  May  5 19:26:15.499: INFO: snapshot-controller-587656f7cd-jzqv2 from storage started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:26:15.501: INFO: 	Container snapshot-controller ready: true, restart count 0
  May  5 19:26:15.501: INFO: snapshot-controller-587656f7cd-lz69v from storage started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:26:15.501: INFO: 	Container snapshot-controller ready: true, restart count 0
  May  5 19:26:15.501: INFO: snapshot-validation-webhook-64b8d8cb7b-vsnwg from storage started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:26:15.501: INFO: 	Container snapshot-validation-webhook ready: true, restart count 0
  May  5 19:26:15.501: INFO: 
  Logging pods the apiserver thinks is on node worker01 before test
  May  5 19:26:15.523: INFO: gobetween-worker01 from kube-system started at 2024-05-05 18:09:20 +0000 UTC (1 container statuses recorded)
  May  5 19:26:15.523: INFO: 	Container gobetween ready: true, restart count 0
  May  5 19:26:15.523: INFO: kube-proxy-worker01 from kube-system started at 2024-05-05 18:09:20 +0000 UTC (1 container statuses recorded)
  May  5 19:26:15.523: INFO: 	Container kube-proxy ready: true, restart count 0
  May  5 19:26:15.523: INFO: calico-node-88klg from networking started at 2024-05-05 18:09:54 +0000 UTC (1 container statuses recorded)
  May  5 19:26:15.523: INFO: 	Container calico-node ready: true, restart count 0
  May  5 19:26:15.523: INFO: metallb-speaker-b72z2 from networking started at 2024-05-05 18:18:36 +0000 UTC (1 container statuses recorded)
  May  5 19:26:15.524: INFO: 	Container speaker ready: true, restart count 0
  May  5 19:26:15.524: INFO: sonobuoy-systemd-logs-daemon-set-b21bb3e5fd3f4718-pqr9c from sonobuoy started at 2024-05-05 18:14:44 +0000 UTC (2 container statuses recorded)
  May  5 19:26:15.524: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container systemd-logs ready: true, restart count 0
  May  5 19:26:15.524: INFO: ceph-csi-cephfs-nodeplugin-q249r from storage started at 2024-05-05 18:18:36 +0000 UTC (3 container statuses recorded)
  May  5 19:26:15.524: INFO: 	Container csi-cephfsplugin ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container driver-registrar ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:26:15.524: INFO: ceph-csi-cephfs-provisioner-6dc49995f7-9p65d from storage started at 2024-05-05 18:18:36 +0000 UTC (5 container statuses recorded)
  May  5 19:26:15.524: INFO: 	Container csi-cephfsplugin ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container csi-provisioner ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container csi-resizer ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container csi-snapshotter ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:26:15.524: INFO: ceph-csi-cephfs-provisioner-6dc49995f7-cpnz2 from storage started at 2024-05-05 18:18:36 +0000 UTC (5 container statuses recorded)
  May  5 19:26:15.524: INFO: 	Container csi-cephfsplugin ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container csi-provisioner ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container csi-resizer ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container csi-snapshotter ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:26:15.524: INFO: ceph-csi-cephfs-provisioner-6dc49995f7-jzrmz from storage started at 2024-05-05 18:18:36 +0000 UTC (5 container statuses recorded)
  May  5 19:26:15.524: INFO: 	Container csi-cephfsplugin ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container csi-provisioner ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container csi-resizer ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container csi-snapshotter ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:26:15.524: INFO: ceph-csi-rbd-nodeplugin-wcfzv from storage started at 2024-05-05 18:18:36 +0000 UTC (3 container statuses recorded)
  May  5 19:26:15.524: INFO: 	Container csi-rbdplugin ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container driver-registrar ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:26:15.524: INFO: ceph-csi-rbd-provisioner-68c69d9998-x5qfs from storage started at 2024-05-05 18:18:36 +0000 UTC (7 container statuses recorded)
  May  5 19:26:15.524: INFO: 	Container csi-attacher ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container csi-provisioner ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container csi-rbdplugin ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container csi-rbdplugin-controller ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container csi-resizer ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container csi-snapshotter ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:26:15.524: INFO: ceph-csi-rbd-provisioner-68c69d9998-xs77s from storage started at 2024-05-05 18:18:36 +0000 UTC (7 container statuses recorded)
  May  5 19:26:15.524: INFO: 	Container csi-attacher ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container csi-provisioner ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container csi-rbdplugin ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container csi-rbdplugin-controller ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container csi-resizer ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container csi-snapshotter ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:26:15.524: INFO: ceph-csi-rbd-provisioner-68c69d9998-zxjxm from storage started at 2024-05-05 18:18:36 +0000 UTC (7 container statuses recorded)
  May  5 19:26:15.524: INFO: 	Container csi-attacher ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container csi-provisioner ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container csi-rbdplugin ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container csi-rbdplugin-controller ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container csi-resizer ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container csi-snapshotter ready: true, restart count 0
  May  5 19:26:15.524: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:26:15.524: INFO: ceph-mds-worker01-798b64d68-cmkx8 from storage started at 2024-05-05 18:18:36 +0000 UTC (1 container statuses recorded)
  May  5 19:26:15.524: INFO: 	Container ceph-mds ready: true, restart count 0
  May  5 19:26:15.524: INFO: ceph-mgr-worker01-7c4c56cf76-jkjzd from storage started at 2024-05-05 18:18:36 +0000 UTC (1 container statuses recorded)
  May  5 19:26:15.524: INFO: 	Container ceph-mgr ready: true, restart count 0
  May  5 19:26:15.524: INFO: ceph-osd-worker01-75d7885b87-bb7h2 from storage started at 2024-05-05 18:18:36 +0000 UTC (1 container statuses recorded)
  May  5 19:26:15.524: INFO: 	Container ceph-osd ready: true, restart count 0
  May  5 19:26:15.524: INFO: ceph-rgw-worker01-5bd8c8bf8b-x9h9p from storage started at 2024-05-05 18:18:36 +0000 UTC (1 container statuses recorded)
  May  5 19:26:15.524: INFO: 	Container ceph-rgw ready: true, restart count 0
  STEP: verifying the node has the label node worker00 @ 05/05/24 19:26:15.582
  STEP: verifying the node has the label node worker01 @ 05/05/24 19:26:15.602
  May  5 19:26:15.720: INFO: Pod coredns-5b87cbd9d7-9jpw9 requesting resource cpu=100m on Node worker00
  May  5 19:26:15.720: INFO: Pod coredns-5b87cbd9d7-ww797 requesting resource cpu=100m on Node worker00
  May  5 19:26:15.720: INFO: Pod etcd-worker00 requesting resource cpu=0m on Node worker00
  May  5 19:26:15.720: INFO: Pod gobetween-worker00 requesting resource cpu=100m on Node worker00
  May  5 19:26:15.720: INFO: Pod gobetween-worker01 requesting resource cpu=100m on Node worker01
  May  5 19:26:15.720: INFO: Pod kube-apiserver-worker00 requesting resource cpu=250m on Node worker00
  May  5 19:26:15.720: INFO: Pod kube-controller-manager-worker00 requesting resource cpu=200m on Node worker00
  May  5 19:26:15.720: INFO: Pod kube-proxy-worker00 requesting resource cpu=200m on Node worker00
  May  5 19:26:15.720: INFO: Pod kube-proxy-worker01 requesting resource cpu=200m on Node worker01
  May  5 19:26:15.720: INFO: Pod kube-scheduler-worker00 requesting resource cpu=100m on Node worker00
  May  5 19:26:15.720: INFO: Pod kubernetes-dashboard-api-86d45cdc48-cr84l requesting resource cpu=100m on Node worker00
  May  5 19:26:15.720: INFO: Pod kubernetes-dashboard-auth-5d859bc497-5trkl requesting resource cpu=100m on Node worker00
  May  5 19:26:15.720: INFO: Pod kubernetes-dashboard-kong-65b5fb65cc-5hbxz requesting resource cpu=0m on Node worker00
  May  5 19:26:15.720: INFO: Pod kubernetes-dashboard-metrics-scraper-56c9f5cc54-kgvqk requesting resource cpu=100m on Node worker00
  May  5 19:26:15.720: INFO: Pod kubernetes-dashboard-web-74dcc49f5-ck8gt requesting resource cpu=100m on Node worker00
  May  5 19:26:15.720: INFO: Pod calico-kube-controllers-758c99c4b5-t7476 requesting resource cpu=0m on Node worker00
  May  5 19:26:15.720: INFO: Pod calico-node-88klg requesting resource cpu=250m on Node worker01
  May  5 19:26:15.720: INFO: Pod calico-node-txcwz requesting resource cpu=250m on Node worker00
  May  5 19:26:15.720: INFO: Pod calico-typha-5cfbc84557-dsph6 requesting resource cpu=0m on Node worker00
  May  5 19:26:15.720: INFO: Pod metallb-controller-67f4cfb984-c266w requesting resource cpu=100m on Node worker00
  May  5 19:26:15.720: INFO: Pod metallb-speaker-b72z2 requesting resource cpu=100m on Node worker01
  May  5 19:26:15.720: INFO: Pod metallb-speaker-jjxsx requesting resource cpu=100m on Node worker00
  May  5 19:26:15.720: INFO: Pod sonobuoy requesting resource cpu=0m on Node worker00
  May  5 19:26:15.720: INFO: Pod sonobuoy-e2e-job-c39f0ba3513c4764 requesting resource cpu=0m on Node worker00
  May  5 19:26:15.720: INFO: Pod sonobuoy-systemd-logs-daemon-set-b21bb3e5fd3f4718-c5bfp requesting resource cpu=0m on Node worker00
  May  5 19:26:15.720: INFO: Pod sonobuoy-systemd-logs-daemon-set-b21bb3e5fd3f4718-pqr9c requesting resource cpu=0m on Node worker01
  May  5 19:26:15.720: INFO: Pod ceph-csi-cephfs-nodeplugin-q249r requesting resource cpu=0m on Node worker01
  May  5 19:26:15.720: INFO: Pod ceph-csi-cephfs-nodeplugin-rcxpw requesting resource cpu=0m on Node worker00
  May  5 19:26:15.720: INFO: Pod ceph-csi-cephfs-provisioner-6dc49995f7-9p65d requesting resource cpu=0m on Node worker01
  May  5 19:26:15.720: INFO: Pod ceph-csi-cephfs-provisioner-6dc49995f7-cpnz2 requesting resource cpu=0m on Node worker01
  May  5 19:26:15.720: INFO: Pod ceph-csi-cephfs-provisioner-6dc49995f7-jzrmz requesting resource cpu=0m on Node worker01
  May  5 19:26:15.720: INFO: Pod ceph-csi-rbd-nodeplugin-ndxrk requesting resource cpu=0m on Node worker00
  May  5 19:26:15.720: INFO: Pod ceph-csi-rbd-nodeplugin-wcfzv requesting resource cpu=0m on Node worker01
  May  5 19:26:15.720: INFO: Pod ceph-csi-rbd-provisioner-68c69d9998-x5qfs requesting resource cpu=0m on Node worker01
  May  5 19:26:15.720: INFO: Pod ceph-csi-rbd-provisioner-68c69d9998-xs77s requesting resource cpu=0m on Node worker01
  May  5 19:26:15.721: INFO: Pod ceph-csi-rbd-provisioner-68c69d9998-zxjxm requesting resource cpu=0m on Node worker01
  May  5 19:26:15.721: INFO: Pod ceph-mds-worker01-798b64d68-cmkx8 requesting resource cpu=0m on Node worker01
  May  5 19:26:15.721: INFO: Pod ceph-mgr-worker01-7c4c56cf76-jkjzd requesting resource cpu=0m on Node worker01
  May  5 19:26:15.721: INFO: Pod ceph-mon-worker00-797bf6469d-vpp5c requesting resource cpu=0m on Node worker00
  May  5 19:26:15.721: INFO: Pod ceph-osd-worker01-75d7885b87-bb7h2 requesting resource cpu=0m on Node worker01
  May  5 19:26:15.721: INFO: Pod ceph-rgw-worker01-5bd8c8bf8b-x9h9p requesting resource cpu=0m on Node worker01
  May  5 19:26:15.721: INFO: Pod snapshot-controller-587656f7cd-jzqv2 requesting resource cpu=0m on Node worker00
  May  5 19:26:15.721: INFO: Pod snapshot-controller-587656f7cd-lz69v requesting resource cpu=0m on Node worker00
  May  5 19:26:15.721: INFO: Pod snapshot-validation-webhook-64b8d8cb7b-vsnwg requesting resource cpu=0m on Node worker00
  STEP: Starting Pods to consume most of the cluster CPU. @ 05/05/24 19:26:15.721
  May  5 19:26:15.721: INFO: Creating a pod which consumes cpu=1470m on Node worker00
  May  5 19:26:15.810: INFO: Creating a pod which consumes cpu=2345m on Node worker01
  STEP: Creating another pod that requires unavailable amount of CPU. @ 05/05/24 19:26:17.848
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-071eb64b-97f2-42d2-8f26-0d5cd175b188.17ccae4678dd538c], Reason = [Scheduled], Message = [Successfully assigned sched-pred-3195/filler-pod-071eb64b-97f2-42d2-8f26-0d5cd175b188 to worker00] @ 05/05/24 19:26:17.851
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-071eb64b-97f2-42d2-8f26-0d5cd175b188.17ccae469dfc59ae], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/05/24 19:26:17.851
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-071eb64b-97f2-42d2-8f26-0d5cd175b188.17ccae469f59d6df], Reason = [Created], Message = [Created container filler-pod-071eb64b-97f2-42d2-8f26-0d5cd175b188] @ 05/05/24 19:26:17.851
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-071eb64b-97f2-42d2-8f26-0d5cd175b188.17ccae46a5072c76], Reason = [Started], Message = [Started container filler-pod-071eb64b-97f2-42d2-8f26-0d5cd175b188] @ 05/05/24 19:26:17.851
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-83dd22eb-9951-42bd-8b4b-9f7467b2bd4a.17ccae467a47e40d], Reason = [Scheduled], Message = [Successfully assigned sched-pred-3195/filler-pod-83dd22eb-9951-42bd-8b4b-9f7467b2bd4a to worker01] @ 05/05/24 19:26:17.851
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-83dd22eb-9951-42bd-8b4b-9f7467b2bd4a.17ccae46a0492f89], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/05/24 19:26:17.851
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-83dd22eb-9951-42bd-8b4b-9f7467b2bd4a.17ccae46a1c827b1], Reason = [Created], Message = [Created container filler-pod-83dd22eb-9951-42bd-8b4b-9f7467b2bd4a] @ 05/05/24 19:26:17.851
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-83dd22eb-9951-42bd-8b4b-9f7467b2bd4a.17ccae46a76f5dc5], Reason = [Started], Message = [Started container filler-pod-83dd22eb-9951-42bd-8b4b-9f7467b2bd4a] @ 05/05/24 19:26:17.851
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17ccae46f26c4959], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod..] @ 05/05/24 19:26:17.863
  STEP: removing the label node off the node worker00 @ 05/05/24 19:26:18.862
  STEP: verifying the node doesn't have the label node @ 05/05/24 19:26:18.879
  STEP: removing the label node off the node worker01 @ 05/05/24 19:26:18.885
  STEP: verifying the node doesn't have the label node @ 05/05/24 19:26:18.895
  May  5 19:26:18.899: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3195" for this suite. @ 05/05/24 19:26:18.902
• [3.518 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:354
  STEP: Creating a kubernetes client @ 05/05/24 19:26:18.911
  May  5 19:26:18.911: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename kubectl @ 05/05/24 19:26:18.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:26:18.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:26:18.932
  STEP: creating a replication controller @ 05/05/24 19:26:18.934
  May  5 19:26:18.934: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-7586 create -f -'
  May  5 19:26:19.085: INFO: stderr: ""
  May  5 19:26:19.085: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/05/24 19:26:19.085
  May  5 19:26:19.085: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-7586 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May  5 19:26:19.143: INFO: stderr: ""
  May  5 19:26:19.143: INFO: stdout: "update-demo-nautilus-fvbqd update-demo-nautilus-vvkns "
  May  5 19:26:19.143: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-7586 get pods update-demo-nautilus-fvbqd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May  5 19:26:19.179: INFO: stderr: ""
  May  5 19:26:19.179: INFO: stdout: ""
  May  5 19:26:19.179: INFO: update-demo-nautilus-fvbqd is created but not running
  May  5 19:26:24.180: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-7586 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May  5 19:26:24.277: INFO: stderr: ""
  May  5 19:26:24.277: INFO: stdout: "update-demo-nautilus-fvbqd update-demo-nautilus-vvkns "
  May  5 19:26:24.277: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-7586 get pods update-demo-nautilus-fvbqd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May  5 19:26:24.383: INFO: stderr: ""
  May  5 19:26:24.384: INFO: stdout: "true"
  May  5 19:26:24.384: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-7586 get pods update-demo-nautilus-fvbqd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May  5 19:26:24.496: INFO: stderr: ""
  May  5 19:26:24.496: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May  5 19:26:24.496: INFO: validating pod update-demo-nautilus-fvbqd
  May  5 19:26:24.503: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May  5 19:26:24.503: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May  5 19:26:24.503: INFO: update-demo-nautilus-fvbqd is verified up and running
  May  5 19:26:24.503: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-7586 get pods update-demo-nautilus-vvkns -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May  5 19:26:24.570: INFO: stderr: ""
  May  5 19:26:24.570: INFO: stdout: "true"
  May  5 19:26:24.570: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-7586 get pods update-demo-nautilus-vvkns -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May  5 19:26:24.625: INFO: stderr: ""
  May  5 19:26:24.625: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May  5 19:26:24.625: INFO: validating pod update-demo-nautilus-vvkns
  May  5 19:26:24.637: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May  5 19:26:24.637: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May  5 19:26:24.637: INFO: update-demo-nautilus-vvkns is verified up and running
  STEP: scaling down the replication controller @ 05/05/24 19:26:24.637
  May  5 19:26:24.639: INFO: scanned /root for discovery docs: <nil>
  May  5 19:26:24.639: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-7586 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  May  5 19:26:25.724: INFO: stderr: ""
  May  5 19:26:25.725: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/05/24 19:26:25.725
  May  5 19:26:25.725: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-7586 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May  5 19:26:25.768: INFO: stderr: ""
  May  5 19:26:25.768: INFO: stdout: "update-demo-nautilus-fvbqd "
  May  5 19:26:25.768: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-7586 get pods update-demo-nautilus-fvbqd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May  5 19:26:25.807: INFO: stderr: ""
  May  5 19:26:25.807: INFO: stdout: "true"
  May  5 19:26:25.807: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-7586 get pods update-demo-nautilus-fvbqd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May  5 19:26:25.843: INFO: stderr: ""
  May  5 19:26:25.843: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May  5 19:26:25.843: INFO: validating pod update-demo-nautilus-fvbqd
  May  5 19:26:25.846: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May  5 19:26:25.846: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May  5 19:26:25.846: INFO: update-demo-nautilus-fvbqd is verified up and running
  STEP: scaling up the replication controller @ 05/05/24 19:26:25.846
  May  5 19:26:25.847: INFO: scanned /root for discovery docs: <nil>
  May  5 19:26:25.847: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-7586 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  May  5 19:26:26.912: INFO: stderr: ""
  May  5 19:26:26.912: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/05/24 19:26:26.912
  May  5 19:26:26.913: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-7586 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May  5 19:26:26.960: INFO: stderr: ""
  May  5 19:26:26.960: INFO: stdout: "update-demo-nautilus-42fql update-demo-nautilus-fvbqd "
  May  5 19:26:26.960: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-7586 get pods update-demo-nautilus-42fql -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May  5 19:26:27.002: INFO: stderr: ""
  May  5 19:26:27.002: INFO: stdout: "true"
  May  5 19:26:27.002: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-7586 get pods update-demo-nautilus-42fql -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May  5 19:26:27.048: INFO: stderr: ""
  May  5 19:26:27.048: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May  5 19:26:27.048: INFO: validating pod update-demo-nautilus-42fql
  May  5 19:26:27.051: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May  5 19:26:27.051: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May  5 19:26:27.051: INFO: update-demo-nautilus-42fql is verified up and running
  May  5 19:26:27.051: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-7586 get pods update-demo-nautilus-fvbqd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May  5 19:26:27.112: INFO: stderr: ""
  May  5 19:26:27.112: INFO: stdout: "true"
  May  5 19:26:27.112: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-7586 get pods update-demo-nautilus-fvbqd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May  5 19:26:27.156: INFO: stderr: ""
  May  5 19:26:27.156: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May  5 19:26:27.156: INFO: validating pod update-demo-nautilus-fvbqd
  May  5 19:26:27.159: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May  5 19:26:27.159: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May  5 19:26:27.159: INFO: update-demo-nautilus-fvbqd is verified up and running
  STEP: using delete to clean up resources @ 05/05/24 19:26:27.159
  May  5 19:26:27.159: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-7586 delete --grace-period=0 --force -f -'
  May  5 19:26:27.203: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May  5 19:26:27.203: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  May  5 19:26:27.203: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-7586 get rc,svc -l name=update-demo --no-headers'
  May  5 19:26:27.256: INFO: stderr: "No resources found in kubectl-7586 namespace.\n"
  May  5 19:26:27.256: INFO: stdout: ""
  May  5 19:26:27.256: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-7586 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  May  5 19:26:27.305: INFO: stderr: ""
  May  5 19:26:27.305: INFO: stdout: ""
  May  5 19:26:27.305: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7586" for this suite. @ 05/05/24 19:26:27.308
• [8.400 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 05/05/24 19:26:27.311
  May  5 19:26:27.311: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/05/24 19:26:27.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:26:27.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:26:27.329
  May  5 19:26:27.333: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/05/24 19:26:28.579
  May  5 19:26:28.579: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=crd-publish-openapi-4027 --namespace=crd-publish-openapi-4027 create -f -'
  May  5 19:26:30.880: INFO: stderr: ""
  May  5 19:26:30.880: INFO: stdout: "e2e-test-crd-publish-openapi-8762-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  May  5 19:26:30.880: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=crd-publish-openapi-4027 --namespace=crd-publish-openapi-4027 delete e2e-test-crd-publish-openapi-8762-crds test-cr'
  May  5 19:26:30.921: INFO: stderr: ""
  May  5 19:26:30.921: INFO: stdout: "e2e-test-crd-publish-openapi-8762-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  May  5 19:26:30.921: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=crd-publish-openapi-4027 --namespace=crd-publish-openapi-4027 apply -f -'
  May  5 19:26:31.025: INFO: stderr: ""
  May  5 19:26:31.025: INFO: stdout: "e2e-test-crd-publish-openapi-8762-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  May  5 19:26:31.025: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=crd-publish-openapi-4027 --namespace=crd-publish-openapi-4027 delete e2e-test-crd-publish-openapi-8762-crds test-cr'
  May  5 19:26:31.063: INFO: stderr: ""
  May  5 19:26:31.063: INFO: stdout: "e2e-test-crd-publish-openapi-8762-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/05/24 19:26:31.063
  May  5 19:26:31.063: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=crd-publish-openapi-4027 explain e2e-test-crd-publish-openapi-8762-crds'
  May  5 19:26:31.156: INFO: stderr: ""
  May  5 19:26:31.156: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-8762-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  May  5 19:26:32.341: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4027" for this suite. @ 05/05/24 19:26:32.355
• [5.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 05/05/24 19:26:32.36
  May  5 19:26:32.360: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename configmap @ 05/05/24 19:26:32.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:26:32.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:26:32.371
  STEP: Creating configMap with name configmap-test-volume-map-a9f7d4f4-5d1d-4d1f-86d5-ab63f0d296a2 @ 05/05/24 19:26:32.373
  STEP: Creating a pod to test consume configMaps @ 05/05/24 19:26:32.376
  STEP: Saw pod success @ 05/05/24 19:26:36.392
  May  5 19:26:36.394: INFO: Trying to get logs from node worker00 pod pod-configmaps-e2f0ca8c-deb6-420a-b360-404e61620a03 container agnhost-container: <nil>
  STEP: delete the pod @ 05/05/24 19:26:36.398
  May  5 19:26:36.416: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6132" for this suite. @ 05/05/24 19:26:36.418
• [4.060 seconds]
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 05/05/24 19:26:36.42
  May  5 19:26:36.420: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename deployment @ 05/05/24 19:26:36.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:26:36.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:26:36.429
  STEP: creating a Deployment @ 05/05/24 19:26:36.433
  May  5 19:26:36.433: INFO: Creating simple deployment test-deployment-jrvcm
  May  5 19:26:36.438: INFO: deployment "test-deployment-jrvcm" doesn't have the required revision set
  STEP: Getting /status @ 05/05/24 19:26:38.45
  May  5 19:26:38.454: INFO: Deployment test-deployment-jrvcm has Conditions: [{Available True 2024-05-05 19:26:37 +0000 UTC 2024-05-05 19:26:37 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-05-05 19:26:37 +0000 UTC 2024-05-05 19:26:36 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-jrvcm-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 05/05/24 19:26:38.454
  May  5 19:26:38.469: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 19, 26, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 26, 37, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 19, 26, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 26, 36, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-jrvcm-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 05/05/24 19:26:38.469
  May  5 19:26:38.471: INFO: Observed &Deployment event: ADDED
  May  5 19:26:38.471: INFO: Observed Deployment test-deployment-jrvcm in namespace deployment-1803 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-05 19:26:36 +0000 UTC 2024-05-05 19:26:36 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-jrvcm-5d576bd769"}
  May  5 19:26:38.472: INFO: Observed &Deployment event: MODIFIED
  May  5 19:26:38.472: INFO: Observed Deployment test-deployment-jrvcm in namespace deployment-1803 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-05 19:26:36 +0000 UTC 2024-05-05 19:26:36 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-jrvcm-5d576bd769"}
  May  5 19:26:38.472: INFO: Observed Deployment test-deployment-jrvcm in namespace deployment-1803 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-05 19:26:36 +0000 UTC 2024-05-05 19:26:36 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  May  5 19:26:38.472: INFO: Observed &Deployment event: MODIFIED
  May  5 19:26:38.472: INFO: Observed Deployment test-deployment-jrvcm in namespace deployment-1803 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-05 19:26:36 +0000 UTC 2024-05-05 19:26:36 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  May  5 19:26:38.472: INFO: Observed Deployment test-deployment-jrvcm in namespace deployment-1803 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-05 19:26:36 +0000 UTC 2024-05-05 19:26:36 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-jrvcm-5d576bd769" is progressing.}
  May  5 19:26:38.473: INFO: Observed &Deployment event: MODIFIED
  May  5 19:26:38.473: INFO: Observed Deployment test-deployment-jrvcm in namespace deployment-1803 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-05 19:26:37 +0000 UTC 2024-05-05 19:26:37 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  May  5 19:26:38.473: INFO: Observed Deployment test-deployment-jrvcm in namespace deployment-1803 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-05 19:26:37 +0000 UTC 2024-05-05 19:26:36 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-jrvcm-5d576bd769" has successfully progressed.}
  May  5 19:26:38.473: INFO: Observed &Deployment event: MODIFIED
  May  5 19:26:38.473: INFO: Observed Deployment test-deployment-jrvcm in namespace deployment-1803 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-05 19:26:37 +0000 UTC 2024-05-05 19:26:37 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  May  5 19:26:38.473: INFO: Observed Deployment test-deployment-jrvcm in namespace deployment-1803 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-05 19:26:37 +0000 UTC 2024-05-05 19:26:36 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-jrvcm-5d576bd769" has successfully progressed.}
  May  5 19:26:38.473: INFO: Found Deployment test-deployment-jrvcm in namespace deployment-1803 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May  5 19:26:38.473: INFO: Deployment test-deployment-jrvcm has an updated status
  STEP: patching the Statefulset Status @ 05/05/24 19:26:38.473
  May  5 19:26:38.473: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  May  5 19:26:38.478: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 05/05/24 19:26:38.478
  May  5 19:26:38.480: INFO: Observed &Deployment event: ADDED
  May  5 19:26:38.480: INFO: Observed deployment test-deployment-jrvcm in namespace deployment-1803 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-05 19:26:36 +0000 UTC 2024-05-05 19:26:36 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-jrvcm-5d576bd769"}
  May  5 19:26:38.480: INFO: Observed &Deployment event: MODIFIED
  May  5 19:26:38.480: INFO: Observed deployment test-deployment-jrvcm in namespace deployment-1803 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-05 19:26:36 +0000 UTC 2024-05-05 19:26:36 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-jrvcm-5d576bd769"}
  May  5 19:26:38.480: INFO: Observed deployment test-deployment-jrvcm in namespace deployment-1803 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-05 19:26:36 +0000 UTC 2024-05-05 19:26:36 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  May  5 19:26:38.480: INFO: Observed &Deployment event: MODIFIED
  May  5 19:26:38.480: INFO: Observed deployment test-deployment-jrvcm in namespace deployment-1803 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-05 19:26:36 +0000 UTC 2024-05-05 19:26:36 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  May  5 19:26:38.480: INFO: Observed deployment test-deployment-jrvcm in namespace deployment-1803 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-05 19:26:36 +0000 UTC 2024-05-05 19:26:36 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-jrvcm-5d576bd769" is progressing.}
  May  5 19:26:38.480: INFO: Observed &Deployment event: MODIFIED
  May  5 19:26:38.480: INFO: Observed deployment test-deployment-jrvcm in namespace deployment-1803 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-05 19:26:37 +0000 UTC 2024-05-05 19:26:37 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  May  5 19:26:38.480: INFO: Observed deployment test-deployment-jrvcm in namespace deployment-1803 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-05 19:26:37 +0000 UTC 2024-05-05 19:26:36 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-jrvcm-5d576bd769" has successfully progressed.}
  May  5 19:26:38.481: INFO: Observed &Deployment event: MODIFIED
  May  5 19:26:38.481: INFO: Observed deployment test-deployment-jrvcm in namespace deployment-1803 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-05 19:26:37 +0000 UTC 2024-05-05 19:26:37 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  May  5 19:26:38.481: INFO: Observed deployment test-deployment-jrvcm in namespace deployment-1803 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-05 19:26:37 +0000 UTC 2024-05-05 19:26:36 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-jrvcm-5d576bd769" has successfully progressed.}
  May  5 19:26:38.481: INFO: Observed deployment test-deployment-jrvcm in namespace deployment-1803 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May  5 19:26:38.481: INFO: Observed &Deployment event: MODIFIED
  May  5 19:26:38.481: INFO: Found deployment test-deployment-jrvcm in namespace deployment-1803 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  May  5 19:26:38.481: INFO: Deployment test-deployment-jrvcm has a patched status
  May  5 19:26:38.485: INFO: Deployment "test-deployment-jrvcm":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-jrvcm",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1803",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1526344e-8cb4-4472-b516-2c581d535d75",
      ResourceVersion: (string) (len=5) "34674",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850533996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533998,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533998,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533998,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533998,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-jrvcm-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May  5 19:26:38.491: INFO: New ReplicaSet "test-deployment-jrvcm-5d576bd769" of Deployment "test-deployment-jrvcm":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-jrvcm-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1803",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7d0ac262-07a8-4dfa-b310-493df003410b",
      ResourceVersion: (string) (len=5) "34668",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850533996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-jrvcm",
          UID: (types.UID) (len=36) "1526344e-8cb4-4472-b516-2c581d535d75",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 31 35 32  |k:{\"uid\":\"152|
              00000120  36 33 34 34 65 2d 38 63  62 34 2d 34 34 37 32 2d  |6344e-8cb4-4472-|
              00000130  62 35 31 36 2d 32 63 35  38 31 64 35 33 35 64 37  |b516-2c581d535d7|
              00000140  35 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |5\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May  5 19:26:38.500: INFO: Pod "test-deployment-jrvcm-5d576bd769-jp56g" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-jrvcm-5d576bd769-jp56g",
      GenerateName: (string) (len=33) "test-deployment-jrvcm-5d576bd769-",
      Namespace: (string) (len=15) "deployment-1803",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "85e28a6c-017f-4f95-b4cb-a90d3e943de8",
      ResourceVersion: (string) (len=5) "34666",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850533996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "6ca9bee34a61bad187bb0ae456e197995ecae4cbb47d6d186e0101bf0d076fe0",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.25/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.25/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-jrvcm-5d576bd769",
          UID: (types.UID) (len=36) "7d0ac262-07a8-4dfa-b310-493df003410b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 37 64 30 61 63 32 36  32 2d 30 37 61 38 2d 34  |"7d0ac262-07a8-4|
              000000a0  64 66 61 2d 62 33 31 30  2d 34 39 33 64 66 30 30  |dfa-b310-493df00|
              000000b0  33 34 31 30 62 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |3410b\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 32  35 5c 22 7d 22 3a 7b 22  |.200.5.25\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z6tpc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z6tpc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850533996,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.25",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.25"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850533996,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850533996,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e464d6304a239db11584295711fc572cf5909b6a7fa4163000ffe491a5470858",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:26:38.504: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1803" for this suite. @ 05/05/24 19:26:38.506
• [2.092 seconds]
------------------------------
SSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 05/05/24 19:26:38.514
  May  5 19:26:38.515: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename init-container @ 05/05/24 19:26:38.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:26:38.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:26:38.528
  STEP: creating the pod @ 05/05/24 19:26:38.529
  May  5 19:26:38.529: INFO: PodSpec: initContainers in spec.initContainers
  May  5 19:27:25.036: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-fe6d8c5d-f6e8-47c7-90f7-e8941fd866bd", GenerateName:"", Namespace:"init-container-9168", SelfLink:"", UID:"5431aa15-9f3e-443a-a188-371ddfc73328", ResourceVersion:"34897", Generation:0, CreationTimestamp:time.Date(2024, time.May, 5, 19, 26, 38, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"529351601"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"833855445783ab2f992e2b53fea14c7dfbb0985e28f340b6d0534752b5a15e62", "cni.projectcalico.org/podIP":"10.200.131.161/32", "cni.projectcalico.org/podIPs":"10.200.131.161/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 5, 19, 26, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00550db48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 5, 19, 26, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00550db78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 5, 19, 27, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00550dba8), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-g5vdq", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc003c1ed80), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-g5vdq", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-g5vdq", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-g5vdq", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0046c5d80), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"worker00", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc006aa97a0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0046c5e10)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0046c5e30)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0046c5e38), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0046c5e3c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0057db410), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 5, 19, 26, 39, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 5, 19, 26, 38, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 5, 19, 26, 38, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 5, 19, 26, 38, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 5, 19, 26, 38, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.58.100", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.58.100"}}, PodIP:"10.200.131.161", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.200.131.161"}}, StartTime:time.Date(2024, time.May, 5, 19, 26, 38, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc006aa9880)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc006aa98f0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"containerd://1120e0def841c766c12886ba75b6934ce53c0362bd4ce0e77c6988cd0ef0d194", Started:(*bool)(0xc0046c5edf), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc003c1ee00), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(0xc0046c5ee5), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc003c1ede0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc0046c5eb4), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  May  5 19:27:25.037: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9168" for this suite. @ 05/05/24 19:27:25.039
• [46.528 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 05/05/24 19:27:25.044
  May  5 19:27:25.044: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename projected @ 05/05/24 19:27:25.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:27:25.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:27:25.056
  STEP: Creating configMap with name projected-configmap-test-volume-map-050dbc8e-fbed-4955-942f-25ef64161ec6 @ 05/05/24 19:27:25.057
  STEP: Creating a pod to test consume configMaps @ 05/05/24 19:27:25.059
  STEP: Saw pod success @ 05/05/24 19:27:29.069
  May  5 19:27:29.071: INFO: Trying to get logs from node worker01 pod pod-projected-configmaps-6810f12e-c68a-430b-b81f-676f8efdfae2 container agnhost-container: <nil>
  STEP: delete the pod @ 05/05/24 19:27:29.078
  May  5 19:27:29.098: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8672" for this suite. @ 05/05/24 19:27:29.101
• [4.060 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:140
  STEP: Creating a kubernetes client @ 05/05/24 19:27:29.104
  May  5 19:27:29.104: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename secrets @ 05/05/24 19:27:29.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:27:29.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:27:29.113
  STEP: Creating projection with secret that has name secret-emptykey-test-94ca2ffd-d197-40bd-80a9-7212bf2cf828 @ 05/05/24 19:27:29.114
  May  5 19:27:29.116: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4037" for this suite. @ 05/05/24 19:27:29.118
• [0.017 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 05/05/24 19:27:29.123
  May  5 19:27:29.123: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename disruption @ 05/05/24 19:27:29.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:27:29.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:27:29.132
  STEP: Waiting for the pdb to be processed @ 05/05/24 19:27:29.136
  STEP: Waiting for all pods to be running @ 05/05/24 19:27:31.156
  May  5 19:27:31.167: INFO: running pods: 0 < 3
  May  5 19:27:33.172: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3604" for this suite. @ 05/05/24 19:27:33.175
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 05/05/24 19:27:33.194
  May  5 19:27:33.194: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename sched-pred @ 05/05/24 19:27:33.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:27:33.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:27:33.212
  May  5 19:27:33.213: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  May  5 19:27:33.218: INFO: Waiting for terminating namespaces to be deleted...
  May  5 19:27:33.220: INFO: 
  Logging pods the apiserver thinks is on node worker00 before test
  May  5 19:27:33.227: INFO: pod-2 from disruption-3604 started at 2024-05-05 19:27:31 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.227: INFO: 	Container donothing ready: true, restart count 0
  May  5 19:27:33.227: INFO: coredns-5b87cbd9d7-9jpw9 from kube-system started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.227: INFO: 	Container coredns ready: true, restart count 0
  May  5 19:27:33.227: INFO: coredns-5b87cbd9d7-ww797 from kube-system started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.227: INFO: 	Container coredns ready: true, restart count 0
  May  5 19:27:33.227: INFO: etcd-worker00 from kube-system started at 2024-05-05 18:09:11 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.227: INFO: 	Container etcd ready: true, restart count 0
  May  5 19:27:33.227: INFO: gobetween-worker00 from kube-system started at 2024-05-05 18:09:11 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.228: INFO: 	Container gobetween ready: true, restart count 0
  May  5 19:27:33.228: INFO: kube-apiserver-worker00 from kube-system started at 2024-05-05 18:09:11 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.228: INFO: 	Container kube-apiserver ready: true, restart count 0
  May  5 19:27:33.228: INFO: kube-controller-manager-worker00 from kube-system started at 2024-05-05 18:09:11 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.228: INFO: 	Container kube-controller-manager ready: true, restart count 0
  May  5 19:27:33.228: INFO: kube-proxy-worker00 from kube-system started at 2024-05-05 18:09:11 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.228: INFO: 	Container kube-proxy ready: true, restart count 0
  May  5 19:27:33.228: INFO: kube-scheduler-worker00 from kube-system started at 2024-05-05 18:09:11 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.228: INFO: 	Container kube-scheduler ready: true, restart count 0
  May  5 19:27:33.228: INFO: kubernetes-dashboard-api-86d45cdc48-cr84l from kube-system started at 2024-05-05 18:13:22 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.228: INFO: 	Container kubernetes-dashboard-api ready: true, restart count 0
  May  5 19:27:33.228: INFO: kubernetes-dashboard-auth-5d859bc497-5trkl from kube-system started at 2024-05-05 18:13:22 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.228: INFO: 	Container kubernetes-dashboard-auth ready: true, restart count 0
  May  5 19:27:33.228: INFO: kubernetes-dashboard-kong-65b5fb65cc-5hbxz from kube-system started at 2024-05-05 18:13:22 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.228: INFO: 	Container proxy ready: true, restart count 0
  May  5 19:27:33.228: INFO: kubernetes-dashboard-metrics-scraper-56c9f5cc54-kgvqk from kube-system started at 2024-05-05 18:13:22 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.228: INFO: 	Container kubernetes-dashboard-metrics-scraper ready: true, restart count 0
  May  5 19:27:33.228: INFO: kubernetes-dashboard-web-74dcc49f5-ck8gt from kube-system started at 2024-05-05 18:13:22 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.228: INFO: 	Container kubernetes-dashboard-web ready: true, restart count 0
  May  5 19:27:33.228: INFO: calico-kube-controllers-758c99c4b5-t7476 from networking started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.228: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  May  5 19:27:33.228: INFO: calico-node-txcwz from networking started at 2024-05-05 18:09:54 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.228: INFO: 	Container calico-node ready: true, restart count 0
  May  5 19:27:33.228: INFO: calico-typha-5cfbc84557-dsph6 from networking started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.228: INFO: 	Container calico-typha ready: true, restart count 0
  May  5 19:27:33.228: INFO: metallb-controller-67f4cfb984-c266w from networking started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.228: INFO: 	Container controller ready: true, restart count 0
  May  5 19:27:33.228: INFO: metallb-speaker-jjxsx from networking started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.228: INFO: 	Container speaker ready: true, restart count 0
  May  5 19:27:33.228: INFO: sonobuoy from sonobuoy started at 2024-05-05 18:14:39 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.228: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  May  5 19:27:33.228: INFO: sonobuoy-e2e-job-c39f0ba3513c4764 from sonobuoy started at 2024-05-05 18:14:44 +0000 UTC (2 container statuses recorded)
  May  5 19:27:33.228: INFO: 	Container e2e ready: true, restart count 0
  May  5 19:27:33.228: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May  5 19:27:33.228: INFO: sonobuoy-systemd-logs-daemon-set-b21bb3e5fd3f4718-c5bfp from sonobuoy started at 2024-05-05 18:14:44 +0000 UTC (2 container statuses recorded)
  May  5 19:27:33.228: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May  5 19:27:33.228: INFO: 	Container systemd-logs ready: true, restart count 0
  May  5 19:27:33.228: INFO: ceph-csi-cephfs-nodeplugin-rcxpw from storage started at 2024-05-05 18:09:54 +0000 UTC (3 container statuses recorded)
  May  5 19:27:33.228: INFO: 	Container csi-cephfsplugin ready: true, restart count 0
  May  5 19:27:33.228: INFO: 	Container driver-registrar ready: true, restart count 0
  May  5 19:27:33.228: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:27:33.228: INFO: ceph-csi-rbd-nodeplugin-ndxrk from storage started at 2024-05-05 18:09:54 +0000 UTC (3 container statuses recorded)
  May  5 19:27:33.228: INFO: 	Container csi-rbdplugin ready: true, restart count 0
  May  5 19:27:33.228: INFO: 	Container driver-registrar ready: true, restart count 0
  May  5 19:27:33.228: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:27:33.228: INFO: ceph-mon-worker00-797bf6469d-vpp5c from storage started at 2024-05-05 18:09:55 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.228: INFO: 	Container ceph-mon ready: true, restart count 0
  May  5 19:27:33.228: INFO: snapshot-controller-587656f7cd-jzqv2 from storage started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.228: INFO: 	Container snapshot-controller ready: true, restart count 0
  May  5 19:27:33.228: INFO: snapshot-controller-587656f7cd-lz69v from storage started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.228: INFO: 	Container snapshot-controller ready: true, restart count 0
  May  5 19:27:33.228: INFO: snapshot-validation-webhook-64b8d8cb7b-vsnwg from storage started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.228: INFO: 	Container snapshot-validation-webhook ready: true, restart count 0
  May  5 19:27:33.228: INFO: 
  Logging pods the apiserver thinks is on node worker01 before test
  May  5 19:27:33.236: INFO: pod-0 from disruption-3604 started at 2024-05-05 19:27:31 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.236: INFO: 	Container donothing ready: true, restart count 0
  May  5 19:27:33.236: INFO: pod-1 from disruption-3604 started at 2024-05-05 19:27:31 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.236: INFO: 	Container donothing ready: true, restart count 0
  May  5 19:27:33.236: INFO: gobetween-worker01 from kube-system started at 2024-05-05 18:09:20 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.236: INFO: 	Container gobetween ready: true, restart count 0
  May  5 19:27:33.236: INFO: kube-proxy-worker01 from kube-system started at 2024-05-05 18:09:20 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.236: INFO: 	Container kube-proxy ready: true, restart count 0
  May  5 19:27:33.236: INFO: calico-node-88klg from networking started at 2024-05-05 18:09:54 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.236: INFO: 	Container calico-node ready: true, restart count 0
  May  5 19:27:33.236: INFO: metallb-speaker-b72z2 from networking started at 2024-05-05 18:18:36 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.236: INFO: 	Container speaker ready: true, restart count 0
  May  5 19:27:33.236: INFO: sonobuoy-systemd-logs-daemon-set-b21bb3e5fd3f4718-pqr9c from sonobuoy started at 2024-05-05 18:14:44 +0000 UTC (2 container statuses recorded)
  May  5 19:27:33.236: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container systemd-logs ready: true, restart count 0
  May  5 19:27:33.236: INFO: ceph-csi-cephfs-nodeplugin-q249r from storage started at 2024-05-05 18:18:36 +0000 UTC (3 container statuses recorded)
  May  5 19:27:33.236: INFO: 	Container csi-cephfsplugin ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container driver-registrar ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:27:33.236: INFO: ceph-csi-cephfs-provisioner-6dc49995f7-9p65d from storage started at 2024-05-05 18:18:36 +0000 UTC (5 container statuses recorded)
  May  5 19:27:33.236: INFO: 	Container csi-cephfsplugin ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container csi-provisioner ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container csi-resizer ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container csi-snapshotter ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:27:33.236: INFO: ceph-csi-cephfs-provisioner-6dc49995f7-cpnz2 from storage started at 2024-05-05 18:18:36 +0000 UTC (5 container statuses recorded)
  May  5 19:27:33.236: INFO: 	Container csi-cephfsplugin ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container csi-provisioner ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container csi-resizer ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container csi-snapshotter ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:27:33.236: INFO: ceph-csi-cephfs-provisioner-6dc49995f7-jzrmz from storage started at 2024-05-05 18:18:36 +0000 UTC (5 container statuses recorded)
  May  5 19:27:33.236: INFO: 	Container csi-cephfsplugin ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container csi-provisioner ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container csi-resizer ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container csi-snapshotter ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:27:33.236: INFO: ceph-csi-rbd-nodeplugin-wcfzv from storage started at 2024-05-05 18:18:36 +0000 UTC (3 container statuses recorded)
  May  5 19:27:33.236: INFO: 	Container csi-rbdplugin ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container driver-registrar ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:27:33.236: INFO: ceph-csi-rbd-provisioner-68c69d9998-x5qfs from storage started at 2024-05-05 18:18:36 +0000 UTC (7 container statuses recorded)
  May  5 19:27:33.236: INFO: 	Container csi-attacher ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container csi-provisioner ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container csi-rbdplugin ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container csi-rbdplugin-controller ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container csi-resizer ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container csi-snapshotter ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:27:33.236: INFO: ceph-csi-rbd-provisioner-68c69d9998-xs77s from storage started at 2024-05-05 18:18:36 +0000 UTC (7 container statuses recorded)
  May  5 19:27:33.236: INFO: 	Container csi-attacher ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container csi-provisioner ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container csi-rbdplugin ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container csi-rbdplugin-controller ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container csi-resizer ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container csi-snapshotter ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:27:33.236: INFO: ceph-csi-rbd-provisioner-68c69d9998-zxjxm from storage started at 2024-05-05 18:18:36 +0000 UTC (7 container statuses recorded)
  May  5 19:27:33.236: INFO: 	Container csi-attacher ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container csi-provisioner ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container csi-rbdplugin ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container csi-rbdplugin-controller ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container csi-resizer ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container csi-snapshotter ready: true, restart count 0
  May  5 19:27:33.236: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:27:33.236: INFO: ceph-mds-worker01-798b64d68-cmkx8 from storage started at 2024-05-05 18:18:36 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.236: INFO: 	Container ceph-mds ready: true, restart count 0
  May  5 19:27:33.236: INFO: ceph-mgr-worker01-7c4c56cf76-jkjzd from storage started at 2024-05-05 18:18:36 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.236: INFO: 	Container ceph-mgr ready: true, restart count 0
  May  5 19:27:33.236: INFO: ceph-osd-worker01-75d7885b87-bb7h2 from storage started at 2024-05-05 18:18:36 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.236: INFO: 	Container ceph-osd ready: true, restart count 0
  May  5 19:27:33.236: INFO: ceph-rgw-worker01-5bd8c8bf8b-x9h9p from storage started at 2024-05-05 18:18:36 +0000 UTC (1 container statuses recorded)
  May  5 19:27:33.236: INFO: 	Container ceph-rgw ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/05/24 19:27:33.236
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/05/24 19:27:35.261
  STEP: Trying to apply a random label on the found node. @ 05/05/24 19:27:35.287
  STEP: verifying the node has the label kubernetes.io/e2e-f93a6da5-3583-488f-a97c-6e2a05246c69 42 @ 05/05/24 19:27:35.311
  STEP: Trying to relaunch the pod, now with labels. @ 05/05/24 19:27:35.315
  STEP: removing the label kubernetes.io/e2e-f93a6da5-3583-488f-a97c-6e2a05246c69 off the node worker01 @ 05/05/24 19:27:37.349
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-f93a6da5-3583-488f-a97c-6e2a05246c69 @ 05/05/24 19:27:37.369
  May  5 19:27:37.376: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6857" for this suite. @ 05/05/24 19:27:37.379
• [4.192 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 05/05/24 19:27:37.386
  May  5 19:27:37.386: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename sched-preemption @ 05/05/24 19:27:37.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:27:37.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:27:37.407
  May  5 19:27:37.424: INFO: Waiting up to 1m0s for all nodes to be ready
  May  5 19:28:37.461: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/05/24 19:28:37.462
  May  5 19:28:37.462: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/05/24 19:28:37.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:28:37.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:28:37.485
  STEP: Finding an available node @ 05/05/24 19:28:37.488
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/05/24 19:28:37.488
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/05/24 19:28:39.509
  May  5 19:28:39.534: INFO: found a healthy node: worker00
  May  5 19:28:45.621: INFO: pods created so far: [1 1 1]
  May  5 19:28:45.621: INFO: length of pods created so far: 3
  May  5 19:28:47.635: INFO: pods created so far: [2 2 1]
  May  5 19:28:54.636: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May  5 19:28:54.668: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-6863" for this suite. @ 05/05/24 19:28:54.702
  STEP: Destroying namespace "sched-preemption-4022" for this suite. @ 05/05/24 19:28:54.739
• [77.360 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:198
  STEP: Creating a kubernetes client @ 05/05/24 19:28:54.747
  May  5 19:28:54.747: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/05/24 19:28:54.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:28:54.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:28:54.767
  STEP: fetching the /apis discovery document @ 05/05/24 19:28:54.771
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 05/05/24 19:28:54.773
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 05/05/24 19:28:54.773
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 05/05/24 19:28:54.773
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 05/05/24 19:28:54.775
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 05/05/24 19:28:54.775
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 05/05/24 19:28:54.777
  May  5 19:28:54.778: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8546" for this suite. @ 05/05/24 19:28:54.783
• [0.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:147
  STEP: Creating a kubernetes client @ 05/05/24 19:28:54.791
  May  5 19:28:54.791: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename emptydir @ 05/05/24 19:28:54.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:28:54.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:28:54.814
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/05/24 19:28:54.818
  STEP: Saw pod success @ 05/05/24 19:28:58.842
  May  5 19:28:58.844: INFO: Trying to get logs from node worker01 pod pod-2a5ae6b8-754b-4f4a-a755-b289507c32eb container test-container: <nil>
  STEP: delete the pod @ 05/05/24 19:28:58.848
  May  5 19:28:58.876: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4276" for this suite. @ 05/05/24 19:28:58.879
• [4.092 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 05/05/24 19:28:58.883
  May  5 19:28:58.883: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename proxy @ 05/05/24 19:28:58.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:28:58.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:28:58.902
  May  5 19:28:58.905: INFO: Creating pod...
  May  5 19:29:00.922: INFO: Creating service...
  May  5 19:29:00.936: INFO: Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-7307/pods/agnhost/proxy/some/path/with/DELETE
  May  5 19:29:00.947: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  May  5 19:29:00.947: INFO: Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-7307/pods/agnhost/proxy/some/path/with/GET
  May  5 19:29:00.954: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  May  5 19:29:00.954: INFO: Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-7307/pods/agnhost/proxy/some/path/with/HEAD
  May  5 19:29:00.959: INFO: http.Client request:HEAD | StatusCode:200
  May  5 19:29:00.959: INFO: Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-7307/pods/agnhost/proxy/some/path/with/OPTIONS
  May  5 19:29:00.963: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  May  5 19:29:00.963: INFO: Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-7307/pods/agnhost/proxy/some/path/with/PATCH
  May  5 19:29:00.969: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  May  5 19:29:00.970: INFO: Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-7307/pods/agnhost/proxy/some/path/with/POST
  May  5 19:29:00.975: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  May  5 19:29:00.975: INFO: Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-7307/pods/agnhost/proxy/some/path/with/PUT
  May  5 19:29:00.978: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  May  5 19:29:00.978: INFO: Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-7307/services/test-service/proxy/some/path/with/DELETE
  May  5 19:29:00.982: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  May  5 19:29:00.983: INFO: Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-7307/services/test-service/proxy/some/path/with/GET
  May  5 19:29:00.986: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  May  5 19:29:00.986: INFO: Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-7307/services/test-service/proxy/some/path/with/HEAD
  May  5 19:29:00.990: INFO: http.Client request:HEAD | StatusCode:200
  May  5 19:29:00.990: INFO: Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-7307/services/test-service/proxy/some/path/with/OPTIONS
  May  5 19:29:00.994: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  May  5 19:29:00.994: INFO: Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-7307/services/test-service/proxy/some/path/with/PATCH
  May  5 19:29:00.997: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  May  5 19:29:00.997: INFO: Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-7307/services/test-service/proxy/some/path/with/POST
  May  5 19:29:01.002: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  May  5 19:29:01.002: INFO: Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-7307/services/test-service/proxy/some/path/with/PUT
  May  5 19:29:01.005: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  May  5 19:29:01.005: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7307" for this suite. @ 05/05/24 19:29:01.009
• [2.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:806
  STEP: Creating a kubernetes client @ 05/05/24 19:29:01.014
  May  5 19:29:01.014: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename resourcequota @ 05/05/24 19:29:01.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:29:01.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:29:01.029
  STEP: Creating a ResourceQuota with best effort scope @ 05/05/24 19:29:01.031
  STEP: Ensuring ResourceQuota status is calculated @ 05/05/24 19:29:01.036
  STEP: Creating a ResourceQuota with not best effort scope @ 05/05/24 19:29:03.041
  STEP: Ensuring ResourceQuota status is calculated @ 05/05/24 19:29:03.057
  STEP: Creating a best-effort pod @ 05/05/24 19:29:05.066
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 05/05/24 19:29:05.078
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 05/05/24 19:29:07.082
  STEP: Deleting the pod @ 05/05/24 19:29:09.086
  STEP: Ensuring resource quota status released the pod usage @ 05/05/24 19:29:09.097
  STEP: Creating a not best-effort pod @ 05/05/24 19:29:11.101
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 05/05/24 19:29:11.109
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 05/05/24 19:29:13.111
  STEP: Deleting the pod @ 05/05/24 19:29:15.115
  STEP: Ensuring resource quota status released the pod usage @ 05/05/24 19:29:15.134
  May  5 19:29:17.141: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5166" for this suite. @ 05/05/24 19:29:17.15
• [16.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 05/05/24 19:29:17.166
  May  5 19:29:17.166: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/05/24 19:29:17.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:29:17.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:29:17.208
  STEP: creating a target pod @ 05/05/24 19:29:17.216
  STEP: adding an ephemeral container @ 05/05/24 19:29:19.252
  STEP: checking pod container endpoints @ 05/05/24 19:29:23.277
  May  5 19:29:23.277: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4313 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  5 19:29:23.278: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 19:29:23.281: INFO: ExecWithOptions: Clientset creation
  May  5 19:29:23.282: INFO: ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/ephemeral-containers-test-4313/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  May  5 19:29:23.336: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 05/05/24 19:29:23.338
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 05/05/24 19:29:23.341
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 05/05/24 19:29:23.347
  May  5 19:29:23.354: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-4313" for this suite. @ 05/05/24 19:29:23.36
• [6.199 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 05/05/24 19:29:23.365
  May  5 19:29:23.365: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename subpath @ 05/05/24 19:29:23.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:29:23.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:29:23.386
  STEP: Setting up data @ 05/05/24 19:29:23.392
  STEP: Creating pod pod-subpath-test-downwardapi-7cvh @ 05/05/24 19:29:23.401
  STEP: Creating a pod to test atomic-volume-subpath @ 05/05/24 19:29:23.401
  STEP: Saw pod success @ 05/05/24 19:29:47.488
  May  5 19:29:47.492: INFO: Trying to get logs from node worker01 pod pod-subpath-test-downwardapi-7cvh container test-container-subpath-downwardapi-7cvh: <nil>
  STEP: delete the pod @ 05/05/24 19:29:47.499
  STEP: Deleting pod pod-subpath-test-downwardapi-7cvh @ 05/05/24 19:29:47.511
  May  5 19:29:47.511: INFO: Deleting pod "pod-subpath-test-downwardapi-7cvh" in namespace "subpath-5742"
  May  5 19:29:47.514: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5742" for this suite. @ 05/05/24 19:29:47.516
• [24.157 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:638
  STEP: Creating a kubernetes client @ 05/05/24 19:29:47.524
  May  5 19:29:47.524: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename gc @ 05/05/24 19:29:47.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:29:47.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:29:47.541
  STEP: create the rc @ 05/05/24 19:29:47.545
  W0505 19:29:47.549674      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 05/05/24 19:29:53.585
  STEP: wait for the rc to be deleted @ 05/05/24 19:29:53.624
  May  5 19:29:54.688: INFO: 80 pods remaining
  May  5 19:29:54.688: INFO: 80 pods has nil DeletionTimestamp
  May  5 19:29:54.688: INFO: 
  May  5 19:29:55.784: INFO: 70 pods remaining
  May  5 19:29:55.784: INFO: 68 pods has nil DeletionTimestamp
  May  5 19:29:55.784: INFO: 
  May  5 19:29:56.728: INFO: 59 pods remaining
  May  5 19:29:56.728: INFO: 59 pods has nil DeletionTimestamp
  May  5 19:29:56.728: INFO: 
  May  5 19:29:57.789: INFO: 41 pods remaining
  May  5 19:29:57.789: INFO: 41 pods has nil DeletionTimestamp
  May  5 19:29:57.790: INFO: 
  May  5 19:29:58.909: INFO: 29 pods remaining
  May  5 19:29:58.913: INFO: 28 pods has nil DeletionTimestamp
  May  5 19:29:58.913: INFO: 
  May  5 19:29:59.768: INFO: 18 pods remaining
  May  5 19:29:59.768: INFO: 17 pods has nil DeletionTimestamp
  May  5 19:29:59.768: INFO: 
  May  5 19:30:00.913: INFO: 10 pods remaining
  May  5 19:30:00.913: INFO: 3 pods has nil DeletionTimestamp
  May  5 19:30:00.913: INFO: 
  STEP: Gathering metrics @ 05/05/24 19:30:01.645
  May  5 19:30:02.137: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May  5 19:30:02.138: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5591" for this suite. @ 05/05/24 19:30:02.148
• [14.639 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 05/05/24 19:30:02.163
  May  5 19:30:02.163: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename projected @ 05/05/24 19:30:02.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:30:02.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:30:02.233
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 19:30:02.273
  STEP: Saw pod success @ 05/05/24 19:30:12.361
  May  5 19:30:12.363: INFO: Trying to get logs from node worker01 pod downwardapi-volume-fb3f8c4f-e4c8-41e0-b48f-f99126f360a7 container client-container: <nil>
  STEP: delete the pod @ 05/05/24 19:30:12.367
  May  5 19:30:12.395: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5397" for this suite. @ 05/05/24 19:30:12.401
• [10.248 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 05/05/24 19:30:12.411
  May  5 19:30:12.412: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename kubelet-test @ 05/05/24 19:30:12.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:30:12.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:30:12.437
  STEP: Waiting for pod completion @ 05/05/24 19:30:12.446
  May  5 19:30:14.460: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8229" for this suite. @ 05/05/24 19:30:14.465
• [2.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:131
  STEP: Creating a kubernetes client @ 05/05/24 19:30:14.477
  May  5 19:30:14.477: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename replicaset @ 05/05/24 19:30:14.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:30:14.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:30:14.503
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 05/05/24 19:30:14.509
  STEP: When a replicaset with a matching selector is created @ 05/05/24 19:30:16.533
  STEP: Then the orphan pod is adopted @ 05/05/24 19:30:16.536
  STEP: When the matched label of one of its pods change @ 05/05/24 19:30:17.543
  May  5 19:30:17.545: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/05/24 19:30:17.556
  May  5 19:30:17.561: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7875" for this suite. @ 05/05/24 19:30:17.565
• [3.096 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:107
  STEP: Creating a kubernetes client @ 05/05/24 19:30:17.573
  May  5 19:30:17.573: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename emptydir @ 05/05/24 19:30:17.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:30:17.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:30:17.595
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/05/24 19:30:17.596
  STEP: Saw pod success @ 05/05/24 19:30:21.609
  May  5 19:30:21.612: INFO: Trying to get logs from node worker01 pod pod-e70fe58e-56f0-420b-972b-009042fad80f container test-container: <nil>
  STEP: delete the pod @ 05/05/24 19:30:21.618
  May  5 19:30:21.629: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8326" for this suite. @ 05/05/24 19:30:21.632
• [4.062 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:91
  STEP: Creating a kubernetes client @ 05/05/24 19:30:21.637
  May  5 19:30:21.637: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename downward-api @ 05/05/24 19:30:21.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:30:21.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:30:21.652
  STEP: Creating a pod to test downward api env vars @ 05/05/24 19:30:21.655
  STEP: Saw pod success @ 05/05/24 19:30:25.67
  May  5 19:30:25.671: INFO: Trying to get logs from node worker01 pod downward-api-f2fc20dd-c54e-4015-8b25-0792ef4545dd container dapi-container: <nil>
  STEP: delete the pod @ 05/05/24 19:30:25.675
  May  5 19:30:25.685: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1947" for this suite. @ 05/05/24 19:30:25.687
• [4.053 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 05/05/24 19:30:25.691
  May  5 19:30:25.691: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename webhook @ 05/05/24 19:30:25.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:30:25.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:30:25.7
  STEP: Setting up server cert @ 05/05/24 19:30:25.709
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 19:30:25.856
  STEP: Deploying the webhook pod @ 05/05/24 19:30:25.863
  STEP: Wait for the deployment to be ready @ 05/05/24 19:30:25.877
  May  5 19:30:25.885: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/05/24 19:30:27.894
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 19:30:27.916
  May  5 19:30:28.919: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 05/05/24 19:30:28.927
  STEP: create a namespace for the webhook @ 05/05/24 19:30:28.953
  STEP: create a configmap should be unconditionally rejected by the webhook @ 05/05/24 19:30:28.961
  May  5 19:30:28.968: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3113" for this suite. @ 05/05/24 19:30:28.999
  STEP: Destroying namespace "webhook-markers-5548" for this suite. @ 05/05/24 19:30:29.007
  STEP: Destroying namespace "fail-closed-namespace-1449" for this suite. @ 05/05/24 19:30:29.011
• [3.323 seconds]
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 05/05/24 19:30:29.014
  May  5 19:30:29.014: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename containers @ 05/05/24 19:30:29.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:30:29.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:30:29.023
  STEP: Creating a pod to test override command @ 05/05/24 19:30:29.024
  STEP: Saw pod success @ 05/05/24 19:30:33.038
  May  5 19:30:33.043: INFO: Trying to get logs from node worker00 pod client-containers-73637480-365d-44d2-9232-2f88a7382bd4 container agnhost-container: <nil>
  STEP: delete the pod @ 05/05/24 19:30:33.05
  May  5 19:30:33.061: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2633" for this suite. @ 05/05/24 19:30:33.062
• [4.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 05/05/24 19:30:33.069
  May  5 19:30:33.069: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename container-runtime @ 05/05/24 19:30:33.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:30:33.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:30:33.086
  STEP: create the container @ 05/05/24 19:30:33.09
  W0505 19:30:33.100912      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/05/24 19:30:33.101
  STEP: get the container status @ 05/05/24 19:30:36.119
  STEP: the container should be terminated @ 05/05/24 19:30:36.122
  STEP: the termination message should be set @ 05/05/24 19:30:36.122
  May  5 19:30:36.122: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 05/05/24 19:30:36.122
  May  5 19:30:36.129: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7854" for this suite. @ 05/05/24 19:30:36.133
• [3.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:169
  STEP: Creating a kubernetes client @ 05/05/24 19:30:36.137
  May  5 19:30:36.137: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename discovery @ 05/05/24 19:30:36.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:30:36.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:30:36.147
  STEP: Setting up server cert @ 05/05/24 19:30:36.149
  STEP: Requesting APIResourceList from "/api/v1" @ 05/05/24 19:30:36.339
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 05/05/24 19:30:36.342
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 05/05/24 19:30:36.342
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 05/05/24 19:30:36.343
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 05/05/24 19:30:36.343
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 05/05/24 19:30:36.345
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 05/05/24 19:30:36.345
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 05/05/24 19:30:36.346
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 05/05/24 19:30:36.347
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 05/05/24 19:30:36.348
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 05/05/24 19:30:36.349
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 05/05/24 19:30:36.35
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 05/05/24 19:30:36.35
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 05/05/24 19:30:36.351
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 05/05/24 19:30:36.352
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 05/05/24 19:30:36.353
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 05/05/24 19:30:36.354
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 05/05/24 19:30:36.355
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 05/05/24 19:30:36.355
  May  5 19:30:36.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7398" for this suite. @ 05/05/24 19:30:36.358
• [0.223 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:124
  STEP: Creating a kubernetes client @ 05/05/24 19:30:36.362
  May  5 19:30:36.362: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename pod-network-test @ 05/05/24 19:30:36.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:30:36.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:30:36.371
  STEP: Performing setup for networking test in namespace pod-network-test-1520 @ 05/05/24 19:30:36.372
  STEP: creating a selector @ 05/05/24 19:30:36.372
  STEP: Creating the service pods in kubernetes @ 05/05/24 19:30:36.372
  May  5 19:30:36.372: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/05/24 19:30:48.422
  May  5 19:30:50.449: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  May  5 19:30:50.449: INFO: Going to poll 10.200.131.160 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  May  5 19:30:50.450: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.200.131.160 8081 | grep -v '^\s*$'] Namespace:pod-network-test-1520 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  5 19:30:50.450: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 19:30:50.451: INFO: ExecWithOptions: Clientset creation
  May  5 19:30:50.451: INFO: ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/pod-network-test-1520/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.200.131.160+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May  5 19:30:51.498: INFO: Found all 1 expected endpoints: [netserver-0]
  May  5 19:30:51.498: INFO: Going to poll 10.200.5.32 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  May  5 19:30:51.500: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.200.5.32 8081 | grep -v '^\s*$'] Namespace:pod-network-test-1520 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  5 19:30:51.500: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 19:30:51.501: INFO: ExecWithOptions: Clientset creation
  May  5 19:30:51.501: INFO: ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/pod-network-test-1520/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.200.5.32+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May  5 19:30:52.554: INFO: Found all 1 expected endpoints: [netserver-1]
  May  5 19:30:52.554: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1520" for this suite. @ 05/05/24 19:30:52.557
• [16.210 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 05/05/24 19:30:52.573
  May  5 19:30:52.573: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/05/24 19:30:52.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:30:52.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:30:52.584
  STEP: Creating 50 configmaps @ 05/05/24 19:30:52.586
  STEP: Creating RC which spawns configmap-volume pods @ 05/05/24 19:30:52.827
  May  5 19:30:52.946: INFO: Pod name wrapped-volume-race-4fd6b719-d050-4bac-a332-74f28f0d9a43: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/05/24 19:30:52.946
  STEP: Creating RC which spawns configmap-volume pods @ 05/05/24 19:30:54.994
  May  5 19:30:55.001: INFO: Pod name wrapped-volume-race-ee6673c5-9249-4156-afac-6f52f3859175: Found 0 pods out of 5
  May  5 19:31:00.016: INFO: Pod name wrapped-volume-race-ee6673c5-9249-4156-afac-6f52f3859175: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/05/24 19:31:00.016
  STEP: Creating RC which spawns configmap-volume pods @ 05/05/24 19:31:00.025
  May  5 19:31:00.034: INFO: Pod name wrapped-volume-race-57b425ec-bdfa-43f2-b201-cebb08198a68: Found 0 pods out of 5
  May  5 19:31:05.040: INFO: Pod name wrapped-volume-race-57b425ec-bdfa-43f2-b201-cebb08198a68: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/05/24 19:31:05.04
  May  5 19:31:05.050: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController wrapped-volume-race-57b425ec-bdfa-43f2-b201-cebb08198a68 in namespace emptydir-wrapper-8772, will wait for the garbage collector to delete the pods @ 05/05/24 19:31:05.052
  May  5 19:31:05.110: INFO: Deleting ReplicationController wrapped-volume-race-57b425ec-bdfa-43f2-b201-cebb08198a68 took: 4.245309ms
  May  5 19:31:05.211: INFO: Terminating ReplicationController wrapped-volume-race-57b425ec-bdfa-43f2-b201-cebb08198a68 pods took: 100.88539ms
  STEP: deleting ReplicationController wrapped-volume-race-ee6673c5-9249-4156-afac-6f52f3859175 in namespace emptydir-wrapper-8772, will wait for the garbage collector to delete the pods @ 05/05/24 19:31:06.612
  May  5 19:31:06.670: INFO: Deleting ReplicationController wrapped-volume-race-ee6673c5-9249-4156-afac-6f52f3859175 took: 5.351614ms
  May  5 19:31:06.771: INFO: Terminating ReplicationController wrapped-volume-race-ee6673c5-9249-4156-afac-6f52f3859175 pods took: 101.109814ms
  STEP: deleting ReplicationController wrapped-volume-race-4fd6b719-d050-4bac-a332-74f28f0d9a43 in namespace emptydir-wrapper-8772, will wait for the garbage collector to delete the pods @ 05/05/24 19:31:08.572
  May  5 19:31:08.643: INFO: Deleting ReplicationController wrapped-volume-race-4fd6b719-d050-4bac-a332-74f28f0d9a43 took: 15.057155ms
  May  5 19:31:08.743: INFO: Terminating ReplicationController wrapped-volume-race-4fd6b719-d050-4bac-a332-74f28f0d9a43 pods took: 100.212808ms
  STEP: Cleaning up the configMaps @ 05/05/24 19:31:09.846
  STEP: Destroying namespace "emptydir-wrapper-8772" for this suite. @ 05/05/24 19:31:09.987
• [17.416 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:217
  STEP: Creating a kubernetes client @ 05/05/24 19:31:09.989
  May  5 19:31:09.989: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename emptydir @ 05/05/24 19:31:09.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:31:10
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:31:10.002
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/05/24 19:31:10.005
  STEP: Saw pod success @ 05/05/24 19:31:14.022
  May  5 19:31:14.025: INFO: Trying to get logs from node worker00 pod pod-3c6a2cd4-7f7c-479d-9c6d-0d67357e95c6 container test-container: <nil>
  STEP: delete the pod @ 05/05/24 19:31:14.033
  May  5 19:31:14.064: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2665" for this suite. @ 05/05/24 19:31:14.071
• [4.095 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 05/05/24 19:31:14.084
  May  5 19:31:14.084: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename webhook @ 05/05/24 19:31:14.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:31:14.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:31:14.116
  STEP: Setting up server cert @ 05/05/24 19:31:14.155
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 19:31:14.506
  STEP: Deploying the webhook pod @ 05/05/24 19:31:14.514
  STEP: Wait for the deployment to be ready @ 05/05/24 19:31:14.529
  May  5 19:31:14.537: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/05/24 19:31:16.545
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 19:31:16.563
  May  5 19:31:17.564: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 05/05/24 19:31:17.569
  STEP: create a configmap that should be updated by the webhook @ 05/05/24 19:31:17.583
  May  5 19:31:17.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8815" for this suite. @ 05/05/24 19:31:17.628
  STEP: Destroying namespace "webhook-markers-5878" for this suite. @ 05/05/24 19:31:17.635
• [3.564 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 05/05/24 19:31:17.651
  May  5 19:31:17.651: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename webhook @ 05/05/24 19:31:17.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:31:17.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:31:17.669
  STEP: Setting up server cert @ 05/05/24 19:31:17.69
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 19:31:17.929
  STEP: Deploying the webhook pod @ 05/05/24 19:31:17.933
  STEP: Wait for the deployment to be ready @ 05/05/24 19:31:17.943
  May  5 19:31:17.948: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/05/24 19:31:19.959
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 19:31:19.973
  May  5 19:31:20.973: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  May  5 19:31:20.980: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 05/05/24 19:31:21.491
  STEP: Creating a custom resource that should be denied by the webhook @ 05/05/24 19:31:21.508
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 05/05/24 19:31:23.522
  STEP: Updating the custom resource with disallowed data should be denied @ 05/05/24 19:31:23.527
  STEP: Deleting the custom resource should be denied @ 05/05/24 19:31:23.534
  STEP: Remove the offending key and value from the custom resource data @ 05/05/24 19:31:23.541
  STEP: Deleting the updated custom resource should be successful @ 05/05/24 19:31:23.552
  May  5 19:31:23.557: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6506" for this suite. @ 05/05/24 19:31:24.156
  STEP: Destroying namespace "webhook-markers-9116" for this suite. @ 05/05/24 19:31:24.16
• [6.514 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 05/05/24 19:31:24.165
  May  5 19:31:24.165: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename configmap @ 05/05/24 19:31:24.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:31:24.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:31:24.178
  STEP: Creating configMap with name configmap-test-volume-182dac19-8fd6-49d9-bc38-a5983f57b4dc @ 05/05/24 19:31:24.182
  STEP: Creating a pod to test consume configMaps @ 05/05/24 19:31:24.187
  STEP: Saw pod success @ 05/05/24 19:31:28.207
  May  5 19:31:28.211: INFO: Trying to get logs from node worker01 pod pod-configmaps-d563e77e-95ce-465b-9451-5806eec43bdf container agnhost-container: <nil>
  STEP: delete the pod @ 05/05/24 19:31:28.221
  May  5 19:31:28.241: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9290" for this suite. @ 05/05/24 19:31:28.248
• [4.094 seconds]
------------------------------
S
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 05/05/24 19:31:28.259
  May  5 19:31:28.259: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename events @ 05/05/24 19:31:28.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:31:28.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:31:28.292
  STEP: creating a test event @ 05/05/24 19:31:28.298
  STEP: listing events in all namespaces @ 05/05/24 19:31:28.314
  STEP: listing events in test namespace @ 05/05/24 19:31:28.322
  STEP: listing events with field selection filtering on source @ 05/05/24 19:31:28.326
  STEP: listing events with field selection filtering on reportingController @ 05/05/24 19:31:28.335
  STEP: getting the test event @ 05/05/24 19:31:28.34
  STEP: patching the test event @ 05/05/24 19:31:28.343
  STEP: getting the test event @ 05/05/24 19:31:28.499
  STEP: updating the test event @ 05/05/24 19:31:28.509
  STEP: getting the test event @ 05/05/24 19:31:28.522
  STEP: deleting the test event @ 05/05/24 19:31:28.531
  STEP: listing events in all namespaces @ 05/05/24 19:31:28.543
  STEP: listing events in test namespace @ 05/05/24 19:31:28.553
  May  5 19:31:28.557: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7045" for this suite. @ 05/05/24 19:31:28.562
• [0.313 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2202
  STEP: Creating a kubernetes client @ 05/05/24 19:31:28.577
  May  5 19:31:28.577: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename services @ 05/05/24 19:31:28.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:31:28.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:31:28.612
  STEP: creating service in namespace services-3754 @ 05/05/24 19:31:28.618
  STEP: creating service affinity-nodeport in namespace services-3754 @ 05/05/24 19:31:28.618
  STEP: creating replication controller affinity-nodeport in namespace services-3754 @ 05/05/24 19:31:28.64
  I0505 19:31:28.664810      20 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-3754, replica count: 3
  I0505 19:31:31.718280      20 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May  5 19:31:31.722: INFO: Creating new exec pod
  May  5 19:31:34.753: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-3754 exec execpod-affinityp7lrc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  May  5 19:31:34.845: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport 80\n+ echo hostName\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  May  5 19:31:34.845: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  5 19:31:34.845: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-3754 exec execpod-affinityp7lrc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.27 80'
  May  5 19:31:34.930: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.27 80\nConnection to 10.32.0.27 80 port [tcp/http] succeeded!\n"
  May  5 19:31:34.930: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  5 19:31:34.930: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-3754 exec execpod-affinityp7lrc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.100 31381'
  May  5 19:31:35.018: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.100 31381\nConnection to 192.168.58.100 31381 port [tcp/*] succeeded!\n"
  May  5 19:31:35.018: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  5 19:31:35.018: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-3754 exec execpod-affinityp7lrc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.101 31381'
  May  5 19:31:35.104: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.101 31381\nConnection to 192.168.58.101 31381 port [tcp/*] succeeded!\n"
  May  5 19:31:35.104: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  5 19:31:35.104: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-3754 exec execpod-affinityp7lrc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.58.100:31381/ ; done'
  May  5 19:31:35.247: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31381/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31381/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31381/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31381/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31381/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31381/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31381/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31381/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31381/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31381/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31381/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31381/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31381/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31381/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31381/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31381/\n"
  May  5 19:31:35.247: INFO: stdout: "\naffinity-nodeport-cppgq\naffinity-nodeport-cppgq\naffinity-nodeport-cppgq\naffinity-nodeport-cppgq\naffinity-nodeport-cppgq\naffinity-nodeport-cppgq\naffinity-nodeport-cppgq\naffinity-nodeport-cppgq\naffinity-nodeport-cppgq\naffinity-nodeport-cppgq\naffinity-nodeport-cppgq\naffinity-nodeport-cppgq\naffinity-nodeport-cppgq\naffinity-nodeport-cppgq\naffinity-nodeport-cppgq\naffinity-nodeport-cppgq"
  May  5 19:31:35.247: INFO: Received response from host: affinity-nodeport-cppgq
  May  5 19:31:35.247: INFO: Received response from host: affinity-nodeport-cppgq
  May  5 19:31:35.247: INFO: Received response from host: affinity-nodeport-cppgq
  May  5 19:31:35.247: INFO: Received response from host: affinity-nodeport-cppgq
  May  5 19:31:35.247: INFO: Received response from host: affinity-nodeport-cppgq
  May  5 19:31:35.247: INFO: Received response from host: affinity-nodeport-cppgq
  May  5 19:31:35.247: INFO: Received response from host: affinity-nodeport-cppgq
  May  5 19:31:35.247: INFO: Received response from host: affinity-nodeport-cppgq
  May  5 19:31:35.247: INFO: Received response from host: affinity-nodeport-cppgq
  May  5 19:31:35.247: INFO: Received response from host: affinity-nodeport-cppgq
  May  5 19:31:35.247: INFO: Received response from host: affinity-nodeport-cppgq
  May  5 19:31:35.247: INFO: Received response from host: affinity-nodeport-cppgq
  May  5 19:31:35.247: INFO: Received response from host: affinity-nodeport-cppgq
  May  5 19:31:35.247: INFO: Received response from host: affinity-nodeport-cppgq
  May  5 19:31:35.247: INFO: Received response from host: affinity-nodeport-cppgq
  May  5 19:31:35.247: INFO: Received response from host: affinity-nodeport-cppgq
  May  5 19:31:35.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May  5 19:31:35.250: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-3754, will wait for the garbage collector to delete the pods @ 05/05/24 19:31:35.263
  May  5 19:31:35.326: INFO: Deleting ReplicationController affinity-nodeport took: 8.372744ms
  May  5 19:31:35.426: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.103923ms
  STEP: Destroying namespace "services-3754" for this suite. @ 05/05/24 19:31:38.753
• [10.182 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:207
  STEP: Creating a kubernetes client @ 05/05/24 19:31:38.76
  May  5 19:31:38.760: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename endpointslice @ 05/05/24 19:31:38.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:31:38.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:31:38.775
  STEP: referencing a single matching pod @ 05/05/24 19:31:43.842
  STEP: referencing matching pods with named port @ 05/05/24 19:31:48.85
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 05/05/24 19:31:53.862
  STEP: recreating EndpointSlices after they've been deleted @ 05/05/24 19:31:58.871
  May  5 19:31:58.901: INFO: EndpointSlice for Service endpointslice-491/example-named-port not found
  May  5 19:32:08.913: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-491" for this suite. @ 05/05/24 19:32:08.919
• [30.178 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2165
  STEP: Creating a kubernetes client @ 05/05/24 19:32:08.938
  May  5 19:32:08.938: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename services @ 05/05/24 19:32:08.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:32:08.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:32:08.953
  STEP: creating service in namespace services-5553 @ 05/05/24 19:32:08.955
  STEP: creating service affinity-clusterip in namespace services-5553 @ 05/05/24 19:32:08.955
  STEP: creating replication controller affinity-clusterip in namespace services-5553 @ 05/05/24 19:32:08.964
  I0505 19:32:08.975424      20 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-5553, replica count: 3
  I0505 19:32:12.026548      20 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May  5 19:32:12.035: INFO: Creating new exec pod
  May  5 19:32:15.048: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-5553 exec execpod-affinity5mx6j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  May  5 19:32:15.133: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  May  5 19:32:15.134: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  5 19:32:15.134: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-5553 exec execpod-affinity5mx6j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.23 80'
  May  5 19:32:15.216: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.23 80\nConnection to 10.32.0.23 80 port [tcp/http] succeeded!\n"
  May  5 19:32:15.216: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  5 19:32:15.216: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-5553 exec execpod-affinity5mx6j -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.32.0.23:80/ ; done'
  May  5 19:32:15.379: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.23:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.23:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.23:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.23:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.23:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.23:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.23:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.23:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.23:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.23:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.23:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.23:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.23:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.23:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.23:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.23:80/\n"
  May  5 19:32:15.379: INFO: stdout: "\naffinity-clusterip-874wc\naffinity-clusterip-874wc\naffinity-clusterip-874wc\naffinity-clusterip-874wc\naffinity-clusterip-874wc\naffinity-clusterip-874wc\naffinity-clusterip-874wc\naffinity-clusterip-874wc\naffinity-clusterip-874wc\naffinity-clusterip-874wc\naffinity-clusterip-874wc\naffinity-clusterip-874wc\naffinity-clusterip-874wc\naffinity-clusterip-874wc\naffinity-clusterip-874wc\naffinity-clusterip-874wc"
  May  5 19:32:15.379: INFO: Received response from host: affinity-clusterip-874wc
  May  5 19:32:15.379: INFO: Received response from host: affinity-clusterip-874wc
  May  5 19:32:15.379: INFO: Received response from host: affinity-clusterip-874wc
  May  5 19:32:15.379: INFO: Received response from host: affinity-clusterip-874wc
  May  5 19:32:15.379: INFO: Received response from host: affinity-clusterip-874wc
  May  5 19:32:15.379: INFO: Received response from host: affinity-clusterip-874wc
  May  5 19:32:15.379: INFO: Received response from host: affinity-clusterip-874wc
  May  5 19:32:15.379: INFO: Received response from host: affinity-clusterip-874wc
  May  5 19:32:15.379: INFO: Received response from host: affinity-clusterip-874wc
  May  5 19:32:15.379: INFO: Received response from host: affinity-clusterip-874wc
  May  5 19:32:15.379: INFO: Received response from host: affinity-clusterip-874wc
  May  5 19:32:15.379: INFO: Received response from host: affinity-clusterip-874wc
  May  5 19:32:15.379: INFO: Received response from host: affinity-clusterip-874wc
  May  5 19:32:15.379: INFO: Received response from host: affinity-clusterip-874wc
  May  5 19:32:15.379: INFO: Received response from host: affinity-clusterip-874wc
  May  5 19:32:15.379: INFO: Received response from host: affinity-clusterip-874wc
  May  5 19:32:15.379: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May  5 19:32:15.383: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-5553, will wait for the garbage collector to delete the pods @ 05/05/24 19:32:15.395
  May  5 19:32:15.456: INFO: Deleting ReplicationController affinity-clusterip took: 3.729259ms
  May  5 19:32:15.556: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.138803ms
  STEP: Destroying namespace "services-5553" for this suite. @ 05/05/24 19:32:18.172
• [9.238 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:176
  STEP: Creating a kubernetes client @ 05/05/24 19:32:18.175
  May  5 19:32:18.175: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename crd-webhook @ 05/05/24 19:32:18.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:32:18.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:32:18.197
  STEP: Setting up server cert @ 05/05/24 19:32:18.199
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/05/24 19:32:18.435
  STEP: Deploying the custom resource conversion webhook pod @ 05/05/24 19:32:18.44
  STEP: Wait for the deployment to be ready @ 05/05/24 19:32:18.446
  May  5 19:32:18.455: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/05/24 19:32:20.463
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 19:32:20.483
  May  5 19:32:21.484: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  May  5 19:32:21.490: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Creating a v1 custom resource @ 05/05/24 19:32:24.056
  STEP: Create a v2 custom resource @ 05/05/24 19:32:24.065
  STEP: List CRs in v1 @ 05/05/24 19:32:24.086
  STEP: List CRs in v2 @ 05/05/24 19:32:24.093
  May  5 19:32:24.097: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-5020" for this suite. @ 05/05/24 19:32:24.65
• [6.480 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 05/05/24 19:32:24.656
  May  5 19:32:24.656: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename dns @ 05/05/24 19:32:24.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:32:24.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:32:24.684
  STEP: Creating a test headless service @ 05/05/24 19:32:24.687
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-7257.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-7257.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 05/05/24 19:32:24.691
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-7257.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-7257.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 05/05/24 19:32:24.691
  STEP: creating a pod to probe DNS @ 05/05/24 19:32:24.691
  STEP: submitting the pod to kubernetes @ 05/05/24 19:32:24.691
  STEP: retrieving the pod @ 05/05/24 19:32:26.713
  STEP: looking for the results for each expected name from probers @ 05/05/24 19:32:26.718
  May  5 19:32:26.738: INFO: DNS probes using dns-7257/dns-test-252dae38-c70c-4ea4-b76d-e11ed1bb44bb succeeded

  May  5 19:32:26.738: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/05/24 19:32:26.74
  STEP: deleting the test headless service @ 05/05/24 19:32:26.752
  STEP: Destroying namespace "dns-7257" for this suite. @ 05/05/24 19:32:26.771
• [2.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 05/05/24 19:32:26.779
  May  5 19:32:26.779: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename projected @ 05/05/24 19:32:26.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:32:26.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:32:26.799
  STEP: Creating configMap with name configmap-projected-all-test-volume-797c731f-8e86-40c7-a853-5bf8323e0573 @ 05/05/24 19:32:26.801
  STEP: Creating secret with name secret-projected-all-test-volume-4c6ffcb5-2250-4057-b8b1-652d81bc6f92 @ 05/05/24 19:32:26.805
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 05/05/24 19:32:26.809
  STEP: Saw pod success @ 05/05/24 19:32:30.829
  May  5 19:32:30.834: INFO: Trying to get logs from node worker00 pod projected-volume-0f02add4-d959-4618-9f5f-d61f1c2255be container projected-all-volume-test: <nil>
  STEP: delete the pod @ 05/05/24 19:32:30.839
  May  5 19:32:30.851: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4540" for this suite. @ 05/05/24 19:32:30.854
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 05/05/24 19:32:30.862
  May  5 19:32:30.862: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename projected @ 05/05/24 19:32:30.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:32:30.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:32:30.881
  STEP: Creating the pod @ 05/05/24 19:32:30.884
  May  5 19:32:33.427: INFO: Successfully updated pod "annotationupdateb5c357d2-b46f-4b79-9a38-d4b53334a3d8"
  May  5 19:32:35.446: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7722" for this suite. @ 05/05/24 19:32:35.451
• [4.604 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 05/05/24 19:32:35.467
  May  5 19:32:35.467: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename configmap @ 05/05/24 19:32:35.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:32:35.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:32:35.482
  May  5 19:32:35.506: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7011" for this suite. @ 05/05/24 19:32:35.508
• [0.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 05/05/24 19:32:35.51
  May  5 19:32:35.510: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename webhook @ 05/05/24 19:32:35.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:32:35.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:32:35.522
  STEP: Setting up server cert @ 05/05/24 19:32:35.538
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 19:32:35.87
  STEP: Deploying the webhook pod @ 05/05/24 19:32:35.873
  STEP: Wait for the deployment to be ready @ 05/05/24 19:32:35.882
  May  5 19:32:35.888: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/05/24 19:32:37.902
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 19:32:37.921
  May  5 19:32:38.921: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 05/05/24 19:32:38.925
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/05/24 19:32:38.925
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 05/05/24 19:32:38.933
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 05/05/24 19:32:39.944
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/05/24 19:32:39.944
  STEP: Having no error when timeout is longer than webhook latency @ 05/05/24 19:32:40.963
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/05/24 19:32:40.963
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 05/05/24 19:32:45.988
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/05/24 19:32:45.989
  May  5 19:32:51.005: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9810" for this suite. @ 05/05/24 19:32:51.054
  STEP: Destroying namespace "webhook-markers-8946" for this suite. @ 05/05/24 19:32:51.063
• [15.561 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1641
  STEP: Creating a kubernetes client @ 05/05/24 19:32:51.076
  May  5 19:32:51.076: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename kubectl @ 05/05/24 19:32:51.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:32:51.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:32:51.101
  STEP: creating Agnhost RC @ 05/05/24 19:32:51.104
  May  5 19:32:51.104: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-1734 create -f -'
  May  5 19:32:51.488: INFO: stderr: ""
  May  5 19:32:51.488: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/05/24 19:32:51.488
  May  5 19:32:52.493: INFO: Selector matched 1 pods for map[app:agnhost]
  May  5 19:32:52.493: INFO: Found 0 / 1
  May  5 19:32:53.492: INFO: Selector matched 1 pods for map[app:agnhost]
  May  5 19:32:53.492: INFO: Found 1 / 1
  May  5 19:32:53.492: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 05/05/24 19:32:53.493
  May  5 19:32:53.495: INFO: Selector matched 1 pods for map[app:agnhost]
  May  5 19:32:53.495: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  May  5 19:32:53.495: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-1734 patch pod agnhost-primary-pdnm9 -p {"metadata":{"annotations":{"x":"y"}}}'
  May  5 19:32:53.554: INFO: stderr: ""
  May  5 19:32:53.554: INFO: stdout: "pod/agnhost-primary-pdnm9 patched\n"
  STEP: checking annotations @ 05/05/24 19:32:53.554
  May  5 19:32:53.556: INFO: Selector matched 1 pods for map[app:agnhost]
  May  5 19:32:53.556: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  May  5 19:32:53.556: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1734" for this suite. @ 05/05/24 19:32:53.558
• [2.488 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:395
  STEP: Creating a kubernetes client @ 05/05/24 19:32:53.563
  May  5 19:32:53.563: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename resourcequota @ 05/05/24 19:32:53.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:32:53.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:32:53.578
  STEP: Counting existing ResourceQuota @ 05/05/24 19:32:53.58
  STEP: Creating a ResourceQuota @ 05/05/24 19:32:58.587
  STEP: Ensuring resource quota status is calculated @ 05/05/24 19:32:58.591
  STEP: Creating a ReplicationController @ 05/05/24 19:33:00.595
  STEP: Ensuring resource quota status captures replication controller creation @ 05/05/24 19:33:00.605
  STEP: Deleting a ReplicationController @ 05/05/24 19:33:02.609
  STEP: Ensuring resource quota status released usage @ 05/05/24 19:33:02.615
  May  5 19:33:04.619: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5804" for this suite. @ 05/05/24 19:33:04.623
• [11.068 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 05/05/24 19:33:04.639
  May  5 19:33:04.639: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/05/24 19:33:04.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:33:04.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:33:04.655
  STEP: creating a target pod @ 05/05/24 19:33:04.656
  STEP: adding an ephemeral container @ 05/05/24 19:33:06.671
  STEP: checking pod container endpoints @ 05/05/24 19:33:10.701
  May  5 19:33:10.701: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-1911 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  5 19:33:10.701: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 19:33:10.701: INFO: ExecWithOptions: Clientset creation
  May  5 19:33:10.702: INFO: ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/ephemeral-containers-test-1911/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  May  5 19:33:10.745: INFO: Exec stderr: ""
  May  5 19:33:10.748: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-1911" for this suite. @ 05/05/24 19:33:10.75
• [6.123 seconds]
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 05/05/24 19:33:10.763
  May  5 19:33:10.763: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename disruption @ 05/05/24 19:33:10.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:33:10.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:33:10.774
  STEP: Creating a kubernetes client @ 05/05/24 19:33:10.776
  May  5 19:33:10.776: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename disruption-2 @ 05/05/24 19:33:10.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:33:10.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:33:10.785
  STEP: Waiting for the pdb to be processed @ 05/05/24 19:33:10.79
  STEP: Waiting for the pdb to be processed @ 05/05/24 19:33:12.813
  STEP: Waiting for the pdb to be processed @ 05/05/24 19:33:12.821
  STEP: listing a collection of PDBs across all namespaces @ 05/05/24 19:33:14.827
  STEP: listing a collection of PDBs in namespace disruption-4552 @ 05/05/24 19:33:14.833
  STEP: deleting a collection of PDBs @ 05/05/24 19:33:14.838
  STEP: Waiting for the PDB collection to be deleted @ 05/05/24 19:33:14.846
  May  5 19:33:14.848: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May  5 19:33:14.850: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-3384" for this suite. @ 05/05/24 19:33:14.852
  STEP: Destroying namespace "disruption-4552" for this suite. @ 05/05/24 19:33:14.855
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 05/05/24 19:33:14.863
  May  5 19:33:14.863: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename dns @ 05/05/24 19:33:14.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:33:14.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:33:14.874
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-7802.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-7802.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 05/05/24 19:33:14.877
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-7802.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-7802.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 05/05/24 19:33:14.877
  STEP: creating a pod to probe /etc/hosts @ 05/05/24 19:33:14.877
  STEP: submitting the pod to kubernetes @ 05/05/24 19:33:14.877
  STEP: retrieving the pod @ 05/05/24 19:33:16.89
  STEP: looking for the results for each expected name from probers @ 05/05/24 19:33:16.892
  May  5 19:33:16.906: INFO: DNS probes using dns-7802/dns-test-53d8a7f5-969c-4ce2-8c38-1b7602642997 succeeded

  May  5 19:33:16.906: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/05/24 19:33:16.909
  STEP: Destroying namespace "dns-7802" for this suite. @ 05/05/24 19:33:16.929
• [2.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 05/05/24 19:33:16.937
  May  5 19:33:16.937: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename downward-api @ 05/05/24 19:33:16.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:33:16.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:33:16.957
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 19:33:16.961
  STEP: Saw pod success @ 05/05/24 19:33:20.982
  May  5 19:33:20.984: INFO: Trying to get logs from node worker01 pod downwardapi-volume-bdb88ebd-8386-4c06-b705-e494f0ad9eb5 container client-container: <nil>
  STEP: delete the pod @ 05/05/24 19:33:20.988
  May  5 19:33:21.006: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1760" for this suite. @ 05/05/24 19:33:21.008
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 05/05/24 19:33:21.012
  May  5 19:33:21.012: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename projected @ 05/05/24 19:33:21.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:33:21.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:33:21.022
  STEP: Creating secret with name projected-secret-test-1d573200-4c81-45ae-8d4b-07b18c9513f1 @ 05/05/24 19:33:21.024
  STEP: Creating a pod to test consume secrets @ 05/05/24 19:33:21.026
  STEP: Saw pod success @ 05/05/24 19:33:25.043
  May  5 19:33:25.046: INFO: Trying to get logs from node worker01 pod pod-projected-secrets-87ae207f-22c0-4dee-9253-54eecff798b1 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/05/24 19:33:25.05
  May  5 19:33:25.068: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-320" for this suite. @ 05/05/24 19:33:25.07
• [4.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:69
  STEP: Creating a kubernetes client @ 05/05/24 19:33:25.074
  May  5 19:33:25.074: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename replication-controller @ 05/05/24 19:33:25.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:33:25.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:33:25.086
  STEP: Creating replication controller my-hostname-basic-f823b119-85d7-4ba8-9608-702f6128fcb5 @ 05/05/24 19:33:25.087
  May  5 19:33:25.093: INFO: Pod name my-hostname-basic-f823b119-85d7-4ba8-9608-702f6128fcb5: Found 0 pods out of 1
  May  5 19:33:30.096: INFO: Pod name my-hostname-basic-f823b119-85d7-4ba8-9608-702f6128fcb5: Found 1 pods out of 1
  May  5 19:33:30.096: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-f823b119-85d7-4ba8-9608-702f6128fcb5" are running
  May  5 19:33:30.099: INFO: Pod "my-hostname-basic-f823b119-85d7-4ba8-9608-702f6128fcb5-l5j4d" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-05 19:33:26 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-05 19:33:25 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-05 19:33:26 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-05 19:33:26 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-05 19:33:25 +0000 UTC Reason: Message:}])
  May  5 19:33:30.099: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/05/24 19:33:30.099
  May  5 19:33:30.104: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9869" for this suite. @ 05/05/24 19:33:30.117
• [5.046 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 05/05/24 19:33:30.121
  May  5 19:33:30.121: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename field-validation @ 05/05/24 19:33:30.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:33:30.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:33:30.134
  May  5 19:33:30.136: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  W0505 19:33:32.687269      20 warnings.go:70] unknown field "alpha"
  W0505 19:33:32.687296      20 warnings.go:70] unknown field "beta"
  W0505 19:33:32.687305      20 warnings.go:70] unknown field "delta"
  W0505 19:33:32.687314      20 warnings.go:70] unknown field "epsilon"
  W0505 19:33:32.687322      20 warnings.go:70] unknown field "gamma"
  May  5 19:33:33.211: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4514" for this suite. @ 05/05/24 19:33:33.219
• [3.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:125
  STEP: Creating a kubernetes client @ 05/05/24 19:33:33.224
  May  5 19:33:33.224: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename discovery @ 05/05/24 19:33:33.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:33:33.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:33:33.236
  STEP: Setting up server cert @ 05/05/24 19:33:33.238
  May  5 19:33:33.397: INFO: Checking APIGroup: apiregistration.k8s.io
  May  5 19:33:33.397: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  May  5 19:33:33.397: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  May  5 19:33:33.397: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  May  5 19:33:33.397: INFO: Checking APIGroup: apps
  May  5 19:33:33.398: INFO: PreferredVersion.GroupVersion: apps/v1
  May  5 19:33:33.398: INFO: Versions found [{apps/v1 v1}]
  May  5 19:33:33.398: INFO: apps/v1 matches apps/v1
  May  5 19:33:33.398: INFO: Checking APIGroup: events.k8s.io
  May  5 19:33:33.399: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  May  5 19:33:33.399: INFO: Versions found [{events.k8s.io/v1 v1}]
  May  5 19:33:33.399: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  May  5 19:33:33.399: INFO: Checking APIGroup: authentication.k8s.io
  May  5 19:33:33.399: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  May  5 19:33:33.399: INFO: Versions found [{authentication.k8s.io/v1 v1} {authentication.k8s.io/v1beta1 v1beta1} {authentication.k8s.io/v1alpha1 v1alpha1}]
  May  5 19:33:33.399: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  May  5 19:33:33.399: INFO: Checking APIGroup: authorization.k8s.io
  May  5 19:33:33.400: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  May  5 19:33:33.400: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  May  5 19:33:33.400: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  May  5 19:33:33.400: INFO: Checking APIGroup: autoscaling
  May  5 19:33:33.400: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  May  5 19:33:33.400: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  May  5 19:33:33.400: INFO: autoscaling/v2 matches autoscaling/v2
  May  5 19:33:33.400: INFO: Checking APIGroup: batch
  May  5 19:33:33.401: INFO: PreferredVersion.GroupVersion: batch/v1
  May  5 19:33:33.401: INFO: Versions found [{batch/v1 v1}]
  May  5 19:33:33.401: INFO: batch/v1 matches batch/v1
  May  5 19:33:33.401: INFO: Checking APIGroup: certificates.k8s.io
  May  5 19:33:33.402: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  May  5 19:33:33.402: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  May  5 19:33:33.402: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  May  5 19:33:33.402: INFO: Checking APIGroup: networking.k8s.io
  May  5 19:33:33.402: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  May  5 19:33:33.402: INFO: Versions found [{networking.k8s.io/v1 v1} {networking.k8s.io/v1alpha1 v1alpha1}]
  May  5 19:33:33.402: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  May  5 19:33:33.402: INFO: Checking APIGroup: policy
  May  5 19:33:33.403: INFO: PreferredVersion.GroupVersion: policy/v1
  May  5 19:33:33.403: INFO: Versions found [{policy/v1 v1}]
  May  5 19:33:33.403: INFO: policy/v1 matches policy/v1
  May  5 19:33:33.403: INFO: Checking APIGroup: rbac.authorization.k8s.io
  May  5 19:33:33.403: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  May  5 19:33:33.403: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  May  5 19:33:33.403: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  May  5 19:33:33.403: INFO: Checking APIGroup: storage.k8s.io
  May  5 19:33:33.404: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  May  5 19:33:33.404: INFO: Versions found [{storage.k8s.io/v1 v1}]
  May  5 19:33:33.404: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  May  5 19:33:33.404: INFO: Checking APIGroup: admissionregistration.k8s.io
  May  5 19:33:33.404: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  May  5 19:33:33.404: INFO: Versions found [{admissionregistration.k8s.io/v1 v1} {admissionregistration.k8s.io/v1beta1 v1beta1} {admissionregistration.k8s.io/v1alpha1 v1alpha1}]
  May  5 19:33:33.404: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  May  5 19:33:33.404: INFO: Checking APIGroup: apiextensions.k8s.io
  May  5 19:33:33.405: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  May  5 19:33:33.405: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  May  5 19:33:33.405: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  May  5 19:33:33.405: INFO: Checking APIGroup: scheduling.k8s.io
  May  5 19:33:33.406: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  May  5 19:33:33.406: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  May  5 19:33:33.406: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  May  5 19:33:33.406: INFO: Checking APIGroup: coordination.k8s.io
  May  5 19:33:33.406: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  May  5 19:33:33.406: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  May  5 19:33:33.406: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  May  5 19:33:33.406: INFO: Checking APIGroup: node.k8s.io
  May  5 19:33:33.407: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  May  5 19:33:33.407: INFO: Versions found [{node.k8s.io/v1 v1}]
  May  5 19:33:33.407: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  May  5 19:33:33.407: INFO: Checking APIGroup: discovery.k8s.io
  May  5 19:33:33.408: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  May  5 19:33:33.408: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  May  5 19:33:33.408: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  May  5 19:33:33.408: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  May  5 19:33:33.409: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
  May  5 19:33:33.409: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
  May  5 19:33:33.409: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
  May  5 19:33:33.409: INFO: Checking APIGroup: internal.apiserver.k8s.io
  May  5 19:33:33.409: INFO: PreferredVersion.GroupVersion: internal.apiserver.k8s.io/v1alpha1
  May  5 19:33:33.409: INFO: Versions found [{internal.apiserver.k8s.io/v1alpha1 v1alpha1}]
  May  5 19:33:33.409: INFO: internal.apiserver.k8s.io/v1alpha1 matches internal.apiserver.k8s.io/v1alpha1
  May  5 19:33:33.409: INFO: Checking APIGroup: resource.k8s.io
  May  5 19:33:33.410: INFO: PreferredVersion.GroupVersion: resource.k8s.io/v1alpha2
  May  5 19:33:33.410: INFO: Versions found [{resource.k8s.io/v1alpha2 v1alpha2}]
  May  5 19:33:33.410: INFO: resource.k8s.io/v1alpha2 matches resource.k8s.io/v1alpha2
  May  5 19:33:33.410: INFO: Checking APIGroup: crd.projectcalico.org
  May  5 19:33:33.411: INFO: PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  May  5 19:33:33.411: INFO: Versions found [{crd.projectcalico.org/v1 v1}]
  May  5 19:33:33.411: INFO: crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  May  5 19:33:33.411: INFO: Checking APIGroup: snapshot.storage.k8s.io
  May  5 19:33:33.412: INFO: PreferredVersion.GroupVersion: snapshot.storage.k8s.io/v1
  May  5 19:33:33.412: INFO: Versions found [{snapshot.storage.k8s.io/v1 v1}]
  May  5 19:33:33.412: INFO: snapshot.storage.k8s.io/v1 matches snapshot.storage.k8s.io/v1
  May  5 19:33:33.412: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-9512" for this suite. @ 05/05/24 19:33:33.414
• [0.203 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 05/05/24 19:33:33.427
  May  5 19:33:33.428: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename sched-pred @ 05/05/24 19:33:33.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:33:33.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:33:33.44
  May  5 19:33:33.442: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  May  5 19:33:33.446: INFO: Waiting for terminating namespaces to be deleted...
  May  5 19:33:33.447: INFO: 
  Logging pods the apiserver thinks is on node worker00 before test
  May  5 19:33:33.469: INFO: ephemeral-containers-target-pod from ephemeral-containers-test-1911 started at 2024-05-05 19:33:04 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.469: INFO: 	Container test-container-1 ready: true, restart count 0
  May  5 19:33:33.469: INFO: coredns-5b87cbd9d7-9jpw9 from kube-system started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.469: INFO: 	Container coredns ready: true, restart count 0
  May  5 19:33:33.469: INFO: coredns-5b87cbd9d7-ww797 from kube-system started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.469: INFO: 	Container coredns ready: true, restart count 0
  May  5 19:33:33.469: INFO: etcd-worker00 from kube-system started at 2024-05-05 18:09:11 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.469: INFO: 	Container etcd ready: true, restart count 0
  May  5 19:33:33.469: INFO: gobetween-worker00 from kube-system started at 2024-05-05 18:09:11 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.469: INFO: 	Container gobetween ready: true, restart count 0
  May  5 19:33:33.469: INFO: kube-apiserver-worker00 from kube-system started at 2024-05-05 18:09:11 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.469: INFO: 	Container kube-apiserver ready: true, restart count 0
  May  5 19:33:33.469: INFO: kube-controller-manager-worker00 from kube-system started at 2024-05-05 18:09:11 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.469: INFO: 	Container kube-controller-manager ready: true, restart count 0
  May  5 19:33:33.469: INFO: kube-proxy-worker00 from kube-system started at 2024-05-05 18:09:11 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.469: INFO: 	Container kube-proxy ready: true, restart count 0
  May  5 19:33:33.469: INFO: kube-scheduler-worker00 from kube-system started at 2024-05-05 18:09:11 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.469: INFO: 	Container kube-scheduler ready: true, restart count 0
  May  5 19:33:33.469: INFO: kubernetes-dashboard-api-86d45cdc48-cr84l from kube-system started at 2024-05-05 18:13:22 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.469: INFO: 	Container kubernetes-dashboard-api ready: true, restart count 0
  May  5 19:33:33.469: INFO: kubernetes-dashboard-auth-5d859bc497-5trkl from kube-system started at 2024-05-05 18:13:22 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.469: INFO: 	Container kubernetes-dashboard-auth ready: true, restart count 0
  May  5 19:33:33.469: INFO: kubernetes-dashboard-kong-65b5fb65cc-5hbxz from kube-system started at 2024-05-05 18:13:22 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.469: INFO: 	Container proxy ready: true, restart count 0
  May  5 19:33:33.469: INFO: kubernetes-dashboard-metrics-scraper-56c9f5cc54-kgvqk from kube-system started at 2024-05-05 18:13:22 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.469: INFO: 	Container kubernetes-dashboard-metrics-scraper ready: true, restart count 0
  May  5 19:33:33.469: INFO: kubernetes-dashboard-web-74dcc49f5-ck8gt from kube-system started at 2024-05-05 18:13:22 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.469: INFO: 	Container kubernetes-dashboard-web ready: true, restart count 0
  May  5 19:33:33.469: INFO: calico-kube-controllers-758c99c4b5-t7476 from networking started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.469: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  May  5 19:33:33.469: INFO: calico-node-txcwz from networking started at 2024-05-05 18:09:54 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.469: INFO: 	Container calico-node ready: true, restart count 0
  May  5 19:33:33.469: INFO: calico-typha-5cfbc84557-dsph6 from networking started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.469: INFO: 	Container calico-typha ready: true, restart count 0
  May  5 19:33:33.469: INFO: metallb-controller-67f4cfb984-c266w from networking started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.469: INFO: 	Container controller ready: true, restart count 0
  May  5 19:33:33.469: INFO: metallb-speaker-jjxsx from networking started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.469: INFO: 	Container speaker ready: true, restart count 0
  May  5 19:33:33.469: INFO: sonobuoy from sonobuoy started at 2024-05-05 18:14:39 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.469: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  May  5 19:33:33.469: INFO: sonobuoy-e2e-job-c39f0ba3513c4764 from sonobuoy started at 2024-05-05 18:14:44 +0000 UTC (2 container statuses recorded)
  May  5 19:33:33.469: INFO: 	Container e2e ready: true, restart count 0
  May  5 19:33:33.469: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May  5 19:33:33.469: INFO: sonobuoy-systemd-logs-daemon-set-b21bb3e5fd3f4718-c5bfp from sonobuoy started at 2024-05-05 18:14:44 +0000 UTC (2 container statuses recorded)
  May  5 19:33:33.469: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May  5 19:33:33.469: INFO: 	Container systemd-logs ready: true, restart count 0
  May  5 19:33:33.469: INFO: ceph-csi-cephfs-nodeplugin-rcxpw from storage started at 2024-05-05 18:09:54 +0000 UTC (3 container statuses recorded)
  May  5 19:33:33.469: INFO: 	Container csi-cephfsplugin ready: true, restart count 0
  May  5 19:33:33.469: INFO: 	Container driver-registrar ready: true, restart count 0
  May  5 19:33:33.469: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:33:33.469: INFO: ceph-csi-rbd-nodeplugin-ndxrk from storage started at 2024-05-05 18:09:54 +0000 UTC (3 container statuses recorded)
  May  5 19:33:33.469: INFO: 	Container csi-rbdplugin ready: true, restart count 0
  May  5 19:33:33.470: INFO: 	Container driver-registrar ready: true, restart count 0
  May  5 19:33:33.470: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:33:33.470: INFO: ceph-mon-worker00-797bf6469d-vpp5c from storage started at 2024-05-05 18:09:55 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.470: INFO: 	Container ceph-mon ready: true, restart count 0
  May  5 19:33:33.470: INFO: snapshot-controller-587656f7cd-jzqv2 from storage started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.470: INFO: 	Container snapshot-controller ready: true, restart count 0
  May  5 19:33:33.470: INFO: snapshot-controller-587656f7cd-lz69v from storage started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.470: INFO: 	Container snapshot-controller ready: true, restart count 0
  May  5 19:33:33.470: INFO: snapshot-validation-webhook-64b8d8cb7b-vsnwg from storage started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.470: INFO: 	Container snapshot-validation-webhook ready: true, restart count 0
  May  5 19:33:33.470: INFO: 
  Logging pods the apiserver thinks is on node worker01 before test
  May  5 19:33:33.477: INFO: gobetween-worker01 from kube-system started at 2024-05-05 18:09:20 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.477: INFO: 	Container gobetween ready: true, restart count 0
  May  5 19:33:33.477: INFO: kube-proxy-worker01 from kube-system started at 2024-05-05 18:09:20 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.477: INFO: 	Container kube-proxy ready: true, restart count 0
  May  5 19:33:33.477: INFO: calico-node-88klg from networking started at 2024-05-05 18:09:54 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.477: INFO: 	Container calico-node ready: true, restart count 0
  May  5 19:33:33.477: INFO: metallb-speaker-b72z2 from networking started at 2024-05-05 18:18:36 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.477: INFO: 	Container speaker ready: true, restart count 0
  May  5 19:33:33.477: INFO: my-hostname-basic-f823b119-85d7-4ba8-9608-702f6128fcb5-l5j4d from replication-controller-9869 started at 2024-05-05 19:33:25 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.477: INFO: 	Container my-hostname-basic-f823b119-85d7-4ba8-9608-702f6128fcb5 ready: true, restart count 0
  May  5 19:33:33.477: INFO: sonobuoy-systemd-logs-daemon-set-b21bb3e5fd3f4718-pqr9c from sonobuoy started at 2024-05-05 18:14:44 +0000 UTC (2 container statuses recorded)
  May  5 19:33:33.477: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May  5 19:33:33.477: INFO: 	Container systemd-logs ready: true, restart count 0
  May  5 19:33:33.477: INFO: ceph-csi-cephfs-nodeplugin-q249r from storage started at 2024-05-05 18:18:36 +0000 UTC (3 container statuses recorded)
  May  5 19:33:33.477: INFO: 	Container csi-cephfsplugin ready: true, restart count 0
  May  5 19:33:33.477: INFO: 	Container driver-registrar ready: true, restart count 0
  May  5 19:33:33.477: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:33:33.477: INFO: ceph-csi-cephfs-provisioner-6dc49995f7-9p65d from storage started at 2024-05-05 18:18:36 +0000 UTC (5 container statuses recorded)
  May  5 19:33:33.477: INFO: 	Container csi-cephfsplugin ready: true, restart count 0
  May  5 19:33:33.477: INFO: 	Container csi-provisioner ready: true, restart count 0
  May  5 19:33:33.477: INFO: 	Container csi-resizer ready: true, restart count 0
  May  5 19:33:33.477: INFO: 	Container csi-snapshotter ready: true, restart count 0
  May  5 19:33:33.477: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:33:33.477: INFO: ceph-csi-cephfs-provisioner-6dc49995f7-cpnz2 from storage started at 2024-05-05 18:18:36 +0000 UTC (5 container statuses recorded)
  May  5 19:33:33.477: INFO: 	Container csi-cephfsplugin ready: true, restart count 0
  May  5 19:33:33.477: INFO: 	Container csi-provisioner ready: true, restart count 0
  May  5 19:33:33.477: INFO: 	Container csi-resizer ready: true, restart count 0
  May  5 19:33:33.477: INFO: 	Container csi-snapshotter ready: true, restart count 0
  May  5 19:33:33.478: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:33:33.478: INFO: ceph-csi-cephfs-provisioner-6dc49995f7-jzrmz from storage started at 2024-05-05 18:18:36 +0000 UTC (5 container statuses recorded)
  May  5 19:33:33.478: INFO: 	Container csi-cephfsplugin ready: true, restart count 0
  May  5 19:33:33.478: INFO: 	Container csi-provisioner ready: true, restart count 0
  May  5 19:33:33.478: INFO: 	Container csi-resizer ready: true, restart count 0
  May  5 19:33:33.478: INFO: 	Container csi-snapshotter ready: true, restart count 0
  May  5 19:33:33.478: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:33:33.478: INFO: ceph-csi-rbd-nodeplugin-wcfzv from storage started at 2024-05-05 18:18:36 +0000 UTC (3 container statuses recorded)
  May  5 19:33:33.478: INFO: 	Container csi-rbdplugin ready: true, restart count 0
  May  5 19:33:33.478: INFO: 	Container driver-registrar ready: true, restart count 0
  May  5 19:33:33.478: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:33:33.478: INFO: ceph-csi-rbd-provisioner-68c69d9998-x5qfs from storage started at 2024-05-05 18:18:36 +0000 UTC (7 container statuses recorded)
  May  5 19:33:33.478: INFO: 	Container csi-attacher ready: true, restart count 0
  May  5 19:33:33.478: INFO: 	Container csi-provisioner ready: true, restart count 0
  May  5 19:33:33.478: INFO: 	Container csi-rbdplugin ready: true, restart count 0
  May  5 19:33:33.478: INFO: 	Container csi-rbdplugin-controller ready: true, restart count 0
  May  5 19:33:33.478: INFO: 	Container csi-resizer ready: true, restart count 0
  May  5 19:33:33.478: INFO: 	Container csi-snapshotter ready: true, restart count 0
  May  5 19:33:33.478: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:33:33.478: INFO: ceph-csi-rbd-provisioner-68c69d9998-xs77s from storage started at 2024-05-05 18:18:36 +0000 UTC (7 container statuses recorded)
  May  5 19:33:33.478: INFO: 	Container csi-attacher ready: true, restart count 0
  May  5 19:33:33.478: INFO: 	Container csi-provisioner ready: true, restart count 0
  May  5 19:33:33.478: INFO: 	Container csi-rbdplugin ready: true, restart count 0
  May  5 19:33:33.478: INFO: 	Container csi-rbdplugin-controller ready: true, restart count 0
  May  5 19:33:33.478: INFO: 	Container csi-resizer ready: true, restart count 0
  May  5 19:33:33.478: INFO: 	Container csi-snapshotter ready: true, restart count 0
  May  5 19:33:33.478: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:33:33.478: INFO: ceph-csi-rbd-provisioner-68c69d9998-zxjxm from storage started at 2024-05-05 18:18:36 +0000 UTC (7 container statuses recorded)
  May  5 19:33:33.478: INFO: 	Container csi-attacher ready: true, restart count 0
  May  5 19:33:33.478: INFO: 	Container csi-provisioner ready: true, restart count 0
  May  5 19:33:33.478: INFO: 	Container csi-rbdplugin ready: true, restart count 0
  May  5 19:33:33.478: INFO: 	Container csi-rbdplugin-controller ready: true, restart count 0
  May  5 19:33:33.478: INFO: 	Container csi-resizer ready: true, restart count 0
  May  5 19:33:33.478: INFO: 	Container csi-snapshotter ready: true, restart count 0
  May  5 19:33:33.478: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:33:33.478: INFO: ceph-mds-worker01-798b64d68-cmkx8 from storage started at 2024-05-05 18:18:36 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.478: INFO: 	Container ceph-mds ready: true, restart count 0
  May  5 19:33:33.478: INFO: ceph-mgr-worker01-7c4c56cf76-jkjzd from storage started at 2024-05-05 18:18:36 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.478: INFO: 	Container ceph-mgr ready: true, restart count 0
  May  5 19:33:33.478: INFO: ceph-osd-worker01-75d7885b87-bb7h2 from storage started at 2024-05-05 18:18:36 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.478: INFO: 	Container ceph-osd ready: true, restart count 0
  May  5 19:33:33.478: INFO: ceph-rgw-worker01-5bd8c8bf8b-x9h9p from storage started at 2024-05-05 18:18:36 +0000 UTC (1 container statuses recorded)
  May  5 19:33:33.478: INFO: 	Container ceph-rgw ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 05/05/24 19:33:33.478
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17ccaeac6050a558], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling..] @ 05/05/24 19:33:33.499
  May  5 19:33:34.502: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9650" for this suite. @ 05/05/24 19:33:34.504
• [1.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1342
  STEP: Creating a kubernetes client @ 05/05/24 19:33:34.508
  May  5 19:33:34.508: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename kubectl @ 05/05/24 19:33:34.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:33:34.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:33:34.522
  May  5 19:33:34.523: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-4900 create -f -'
  May  5 19:33:34.663: INFO: stderr: ""
  May  5 19:33:34.663: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  May  5 19:33:34.663: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-4900 create -f -'
  May  5 19:33:34.801: INFO: stderr: ""
  May  5 19:33:34.801: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/05/24 19:33:34.802
  May  5 19:33:35.809: INFO: Selector matched 1 pods for map[app:agnhost]
  May  5 19:33:35.809: INFO: Found 0 / 1
  May  5 19:33:36.812: INFO: Selector matched 1 pods for map[app:agnhost]
  May  5 19:33:36.812: INFO: Found 1 / 1
  May  5 19:33:36.812: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  May  5 19:33:36.818: INFO: Selector matched 1 pods for map[app:agnhost]
  May  5 19:33:36.818: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  May  5 19:33:36.818: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-4900 describe pod agnhost-primary-v7kj2'
  May  5 19:33:36.878: INFO: stderr: ""
  May  5 19:33:36.878: INFO: stdout: "Name:             agnhost-primary-v7kj2\nNamespace:        kubectl-4900\nPriority:         0\nService Account:  default\nNode:             worker01/192.168.58.101\nStart Time:       Sun, 05 May 2024 19:33:34 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: 6f51182c0b6cb2eb7b82580377aa9ae0d3316ec807dbfc6030f8d391531724c9\n                  cni.projectcalico.org/podIP: 10.200.5.26/32\n                  cni.projectcalico.org/podIPs: 10.200.5.26/32\nStatus:           Running\nIP:               10.200.5.26\nIPs:\n  IP:           10.200.5.26\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://5db4cb5e3fe85786002c7fc34fa824a57d8d1edb840e2dd6b8669c61d3e5a2f8\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sun, 05 May 2024 19:33:35 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-mm457 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-mm457:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-4900/agnhost-primary-v7kj2 to worker01\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  May  5 19:33:36.878: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-4900 describe rc agnhost-primary'
  May  5 19:33:36.933: INFO: stderr: ""
  May  5 19:33:36.934: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-4900\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-v7kj2\n"
  May  5 19:33:36.934: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-4900 describe service agnhost-primary'
  May  5 19:33:37.009: INFO: stderr: ""
  May  5 19:33:37.009: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-4900\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.32.0.179\nIPs:               10.32.0.179\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.200.5.26:6379\nSession Affinity:  None\nEvents:            <none>\n"
  May  5 19:33:37.011: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-4900 describe node worker00'
  May  5 19:33:37.165: INFO: stderr: ""
  May  5 19:33:37.165: INFO: stdout: "Name:               worker00\nRoles:              controller,worker\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=worker00\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/controller=true\n                    node-role.kubernetes.io/worker=true\nAnnotations:        csi.volume.kubernetes.io/nodeid: {\"cephfs.csi.ceph.com\":\"worker00\",\"rbd.csi.ceph.com\":\"worker00\"}\n                    node.alpha.kubernetes.io/ttl: 0\n                    projectcalico.org/IPv4Address: 192.168.58.100/24\n                    projectcalico.org/IPv4IPIPTunnelAddr: 10.200.131.129\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sun, 05 May 2024 18:09:39 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  worker00\n  AcquireTime:     <unset>\n  RenewTime:       Sun, 05 May 2024 19:33:33 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sun, 05 May 2024 18:13:06 +0000   Sun, 05 May 2024 18:13:06 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sun, 05 May 2024 19:32:09 +0000   Sun, 05 May 2024 18:09:31 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sun, 05 May 2024 19:32:09 +0000   Sun, 05 May 2024 18:09:31 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sun, 05 May 2024 19:32:09 +0000   Sun, 05 May 2024 18:09:31 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sun, 05 May 2024 19:32:09 +0000   Sun, 05 May 2024 18:10:09 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.58.100\n  Hostname:    worker00\nCapacity:\n  cpu:                  4\n  ephemeral-storage:    31811408Ki\n  example.com/fakecpu:  1k\n  hugepages-2Mi:        0\n  memory:               4009416Ki\n  pods:                 110\nAllocatable:\n  cpu:                  4\n  ephemeral-storage:    29317393565\n  example.com/fakecpu:  1k\n  hugepages-2Mi:        0\n  memory:               3907016Ki\n  pods:                 110\nSystem Info:\n  Machine ID:                     3c763e35f9114dc09214d5a600bbf537\n  System UUID:                    40069cce-f2b1-2440-bcf0-99b2b58a9bdd\n  Boot ID:                        dce05182-4f4a-4105-937f-b03a873e79aa\n  Kernel Version:                 6.8.0-31-generic\n  OS Image:                       Ubuntu 24.04 LTS\n  Operating System:               linux\n  Architecture:                   amd64\n  Container Runtime Version:      containerd://1.7.16\n  Kubelet Version:                v1.30.0\n  Kube-Proxy Version:             v1.30.0\nPodCIDR:                          10.200.0.0/24\nPodCIDRs:                         10.200.0.0/24\nNon-terminated Pods:              (28 in total)\n  Namespace                       Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                       ----                                                       ------------  ----------  ---------------  -------------  ---\n  ephemeral-containers-test-1911  ephemeral-containers-target-pod                            0 (0%)        0 (0%)      0 (0%)           0 (0%)         33s\n  kube-system                     coredns-5b87cbd9d7-9jpw9                                   100m (2%)     100m (2%)   128Mi (3%)       128Mi (3%)     83m\n  kube-system                     coredns-5b87cbd9d7-ww797                                   100m (2%)     100m (2%)   128Mi (3%)       128Mi (3%)     83m\n  kube-system                     etcd-worker00                                              0 (0%)        0 (0%)      0 (0%)           0 (0%)         82m\n  kube-system                     gobetween-worker00                                         100m (2%)     0 (0%)      0 (0%)           0 (0%)         82m\n  kube-system                     kube-apiserver-worker00                                    250m (6%)     0 (0%)      0 (0%)           0 (0%)         82m\n  kube-system                     kube-controller-manager-worker00                           200m (5%)     0 (0%)      0 (0%)           0 (0%)         83m\n  kube-system                     kube-proxy-worker00                                        200m (5%)     0 (0%)      0 (0%)           0 (0%)         82m\n  kube-system                     kube-scheduler-worker00                                    100m (2%)     0 (0%)      0 (0%)           0 (0%)         82m\n  kube-system                     kubernetes-dashboard-api-86d45cdc48-cr84l                  100m (2%)     250m (6%)   200Mi (5%)       400Mi (10%)    80m\n  kube-system                     kubernetes-dashboard-auth-5d859bc497-5trkl                 100m (2%)     250m (6%)   200Mi (5%)       400Mi (10%)    80m\n  kube-system                     kubernetes-dashboard-kong-65b5fb65cc-5hbxz                 0 (0%)        0 (0%)      0 (0%)           0 (0%)         80m\n  kube-system                     kubernetes-dashboard-metrics-scraper-56c9f5cc54-kgvqk      100m (2%)     250m (6%)   200Mi (5%)       400Mi (10%)    80m\n  kube-system                     kubernetes-dashboard-web-74dcc49f5-ck8gt                   100m (2%)     250m (6%)   200Mi (5%)       400Mi (10%)    80m\n  networking                      calico-kube-controllers-758c99c4b5-t7476                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         83m\n  networking                      calico-node-txcwz                                          250m (6%)     0 (0%)      0 (0%)           0 (0%)         83m\n  networking                      calico-typha-5cfbc84557-dsph6                              0 (0%)        0 (0%)      0 (0%)           0 (0%)         83m\n  networking                      metallb-controller-67f4cfb984-c266w                        100m (2%)     100m (2%)   100Mi (2%)       100Mi (2%)     83m\n  networking                      metallb-speaker-jjxsx                                      100m (2%)     100m (2%)   100Mi (2%)       100Mi (2%)     83m\n  sonobuoy                        sonobuoy                                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         78m\n  sonobuoy                        sonobuoy-e2e-job-c39f0ba3513c4764                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         78m\n  sonobuoy                        sonobuoy-systemd-logs-daemon-set-b21bb3e5fd3f4718-c5bfp    0 (0%)        0 (0%)      0 (0%)           0 (0%)         78m\n  storage                         ceph-csi-cephfs-nodeplugin-rcxpw                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         83m\n  storage                         ceph-csi-rbd-nodeplugin-ndxrk                              0 (0%)        0 (0%)      0 (0%)           0 (0%)         83m\n  storage                         ceph-mon-worker00-797bf6469d-vpp5c                         0 (0%)        0 (0%)      0 (0%)           0 (0%)         83m\n  storage                         snapshot-controller-587656f7cd-jzqv2                       0 (0%)        0 (0%)      0 (0%)           0 (0%)         83m\n  storage                         snapshot-controller-587656f7cd-lz69v                       0 (0%)        0 (0%)      0 (0%)           0 (0%)         83m\n  storage                         snapshot-validation-webhook-64b8d8cb7b-vsnwg               0 (0%)        0 (0%)      0 (0%)           0 (0%)         83m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource             Requests      Limits\n  --------             --------      ------\n  cpu                  1900m (47%)   1400m (35%)\n  memory               1256Mi (32%)  2056Mi (53%)\n  ephemeral-storage    0 (0%)        0 (0%)\n  hugepages-2Mi        0 (0%)        0 (0%)\n  example.com/fakecpu  0             0\nEvents:                <none>\n"
  May  5 19:33:37.165: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-4900 describe namespace kubectl-4900'
  May  5 19:33:37.227: INFO: stderr: ""
  May  5 19:33:37.227: INFO: stdout: "Name:         kubectl-4900\nLabels:       e2e-framework=kubectl\n              e2e-run=20cfd802-f832-4d04-b523-418a0c03c4ba\n              kubernetes.io/metadata.name=kubectl-4900\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  May  5 19:33:37.227: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4900" for this suite. @ 05/05/24 19:33:37.23
• [2.726 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 05/05/24 19:33:37.238
  May  5 19:33:37.238: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename var-expansion @ 05/05/24 19:33:37.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:33:37.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:33:37.257
  STEP: Creating a pod to test substitution in container's command @ 05/05/24 19:33:37.26
  STEP: Saw pod success @ 05/05/24 19:33:41.277
  May  5 19:33:41.281: INFO: Trying to get logs from node worker01 pod var-expansion-fc53cd5f-a218-48a8-b7f7-bd9b368b41b0 container dapi-container: <nil>
  STEP: delete the pod @ 05/05/24 19:33:41.29
  May  5 19:33:41.300: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1322" for this suite. @ 05/05/24 19:33:41.302
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 05/05/24 19:33:41.306
  May  5 19:33:41.306: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename kubelet-test @ 05/05/24 19:33:41.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:33:41.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:33:41.322
  May  5 19:33:43.345: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5200" for this suite. @ 05/05/24 19:33:43.347
• [2.045 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 05/05/24 19:33:43.351
  May  5 19:33:43.351: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename subpath @ 05/05/24 19:33:43.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:33:43.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:33:43.364
  STEP: Setting up data @ 05/05/24 19:33:43.366
  STEP: Creating pod pod-subpath-test-projected-j8dl @ 05/05/24 19:33:43.371
  STEP: Creating a pod to test atomic-volume-subpath @ 05/05/24 19:33:43.371
  STEP: Saw pod success @ 05/05/24 19:34:07.44
  May  5 19:34:07.444: INFO: Trying to get logs from node worker01 pod pod-subpath-test-projected-j8dl container test-container-subpath-projected-j8dl: <nil>
  STEP: delete the pod @ 05/05/24 19:34:07.451
  STEP: Deleting pod pod-subpath-test-projected-j8dl @ 05/05/24 19:34:07.46
  May  5 19:34:07.460: INFO: Deleting pod "pod-subpath-test-projected-j8dl" in namespace "subpath-1319"
  May  5 19:34:07.462: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1319" for this suite. @ 05/05/24 19:34:07.464
• [24.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 05/05/24 19:34:07.469
  May  5 19:34:07.469: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename downward-api @ 05/05/24 19:34:07.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:34:07.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:34:07.482
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 19:34:07.484
  STEP: Saw pod success @ 05/05/24 19:34:09.494
  May  5 19:34:09.496: INFO: Trying to get logs from node worker00 pod downwardapi-volume-cbe482b3-a53e-48a2-a252-aa5e39f37dd5 container client-container: <nil>
  STEP: delete the pod @ 05/05/24 19:34:09.499
  May  5 19:34:09.510: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8724" for this suite. @ 05/05/24 19:34:09.514
• [2.048 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:49
  STEP: Creating a kubernetes client @ 05/05/24 19:34:09.517
  May  5 19:34:09.517: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename csistoragecapacity @ 05/05/24 19:34:09.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:34:09.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:34:09.529
  STEP: getting /apis @ 05/05/24 19:34:09.532
  STEP: getting /apis/storage.k8s.io @ 05/05/24 19:34:09.535
  STEP: getting /apis/storage.k8s.io/v1 @ 05/05/24 19:34:09.536
  STEP: creating @ 05/05/24 19:34:09.537
  STEP: watching @ 05/05/24 19:34:09.549
  May  5 19:34:09.549: INFO: starting watch
  STEP: getting @ 05/05/24 19:34:09.554
  STEP: listing in namespace @ 05/05/24 19:34:09.556
  STEP: listing across namespaces @ 05/05/24 19:34:09.559
  STEP: patching @ 05/05/24 19:34:09.567
  STEP: updating @ 05/05/24 19:34:09.572
  May  5 19:34:09.576: INFO: waiting for watch events with expected annotations in namespace
  May  5 19:34:09.577: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 05/05/24 19:34:09.577
  STEP: deleting a collection @ 05/05/24 19:34:09.586
  May  5 19:34:09.596: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-6895" for this suite. @ 05/05/24 19:34:09.601
• [0.089 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 05/05/24 19:34:09.608
  May  5 19:34:09.608: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename pods @ 05/05/24 19:34:09.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:34:09.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:34:09.621
  STEP: creating pod @ 05/05/24 19:34:09.623
  May  5 19:34:11.645: INFO: Pod pod-hostip-4e43f131-c3e2-4a12-9f17-45c17255761c has hostIP: 192.168.58.101
  May  5 19:34:11.645: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-750" for this suite. @ 05/05/24 19:34:11.648
• [2.043 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 05/05/24 19:34:11.652
  May  5 19:34:11.652: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename daemonsets @ 05/05/24 19:34:11.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:34:11.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:34:11.662
  STEP: Creating a simple DaemonSet "daemon-set" @ 05/05/24 19:34:11.673
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/05/24 19:34:11.676
  May  5 19:34:11.681: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  5 19:34:11.681: INFO: Node worker00 is running 0 daemon pod, expected 1
  May  5 19:34:12.689: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  May  5 19:34:12.689: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 05/05/24 19:34:12.692
  May  5 19:34:12.711: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  May  5 19:34:12.711: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 05/05/24 19:34:12.711
  STEP: Deleting DaemonSet "daemon-set" @ 05/05/24 19:34:13.724
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6139, will wait for the garbage collector to delete the pods @ 05/05/24 19:34:13.724
  May  5 19:34:13.791: INFO: Deleting DaemonSet.extensions daemon-set took: 12.66797ms
  May  5 19:34:13.891: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.673555ms
  May  5 19:34:16.496: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  5 19:34:16.496: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May  5 19:34:16.500: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"41308"},"items":null}

  May  5 19:34:16.503: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"41308"},"items":null}

  May  5 19:34:16.510: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6139" for this suite. @ 05/05/24 19:34:16.511
• [4.863 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1316
  STEP: Creating a kubernetes client @ 05/05/24 19:34:16.516
  May  5 19:34:16.516: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename kubectl @ 05/05/24 19:34:16.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:34:16.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:34:16.531
  STEP: validating cluster-info @ 05/05/24 19:34:16.534
  May  5 19:34:16.534: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-8917 cluster-info'
  May  5 19:34:16.572: INFO: stderr: ""
  May  5 19:34:16.572: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.32.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  May  5 19:34:16.572: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8917" for this suite. @ 05/05/24 19:34:16.574
• [0.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 05/05/24 19:34:16.578
  May  5 19:34:16.578: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename container-probe @ 05/05/24 19:34:16.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:34:16.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:34:16.591
  STEP: Creating pod busybox-ae84e362-3f7d-4052-b30f-3380bf5d1224 in namespace container-probe-964 @ 05/05/24 19:34:16.594
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/05/24 19:34:18.607
  May  5 19:34:18.609: INFO: Initial restart count of pod busybox-ae84e362-3f7d-4052-b30f-3380bf5d1224 is 0
  May  5 19:34:18.611: INFO: Get pod busybox-ae84e362-3f7d-4052-b30f-3380bf5d1224 in namespace container-probe-964
  May  5 19:34:20.619: INFO: Get pod busybox-ae84e362-3f7d-4052-b30f-3380bf5d1224 in namespace container-probe-964
  May  5 19:34:22.627: INFO: Get pod busybox-ae84e362-3f7d-4052-b30f-3380bf5d1224 in namespace container-probe-964
  May  5 19:34:24.636: INFO: Get pod busybox-ae84e362-3f7d-4052-b30f-3380bf5d1224 in namespace container-probe-964
  May  5 19:34:26.639: INFO: Get pod busybox-ae84e362-3f7d-4052-b30f-3380bf5d1224 in namespace container-probe-964
  May  5 19:34:28.644: INFO: Get pod busybox-ae84e362-3f7d-4052-b30f-3380bf5d1224 in namespace container-probe-964
  May  5 19:34:30.648: INFO: Get pod busybox-ae84e362-3f7d-4052-b30f-3380bf5d1224 in namespace container-probe-964
  May  5 19:34:32.655: INFO: Get pod busybox-ae84e362-3f7d-4052-b30f-3380bf5d1224 in namespace container-probe-964
  May  5 19:34:34.658: INFO: Get pod busybox-ae84e362-3f7d-4052-b30f-3380bf5d1224 in namespace container-probe-964
  May  5 19:34:36.662: INFO: Get pod busybox-ae84e362-3f7d-4052-b30f-3380bf5d1224 in namespace container-probe-964
  May  5 19:34:38.666: INFO: Get pod busybox-ae84e362-3f7d-4052-b30f-3380bf5d1224 in namespace container-probe-964
  May  5 19:34:40.669: INFO: Get pod busybox-ae84e362-3f7d-4052-b30f-3380bf5d1224 in namespace container-probe-964
  May  5 19:34:42.672: INFO: Get pod busybox-ae84e362-3f7d-4052-b30f-3380bf5d1224 in namespace container-probe-964
  May  5 19:34:44.677: INFO: Get pod busybox-ae84e362-3f7d-4052-b30f-3380bf5d1224 in namespace container-probe-964
  May  5 19:34:46.681: INFO: Get pod busybox-ae84e362-3f7d-4052-b30f-3380bf5d1224 in namespace container-probe-964
  May  5 19:34:48.687: INFO: Get pod busybox-ae84e362-3f7d-4052-b30f-3380bf5d1224 in namespace container-probe-964
  May  5 19:34:50.696: INFO: Get pod busybox-ae84e362-3f7d-4052-b30f-3380bf5d1224 in namespace container-probe-964
  May  5 19:34:52.701: INFO: Get pod busybox-ae84e362-3f7d-4052-b30f-3380bf5d1224 in namespace container-probe-964
  May  5 19:34:54.707: INFO: Get pod busybox-ae84e362-3f7d-4052-b30f-3380bf5d1224 in namespace container-probe-964
  May  5 19:34:56.716: INFO: Get pod busybox-ae84e362-3f7d-4052-b30f-3380bf5d1224 in namespace container-probe-964
  May  5 19:34:58.721: INFO: Get pod busybox-ae84e362-3f7d-4052-b30f-3380bf5d1224 in namespace container-probe-964
  May  5 19:35:00.728: INFO: Get pod busybox-ae84e362-3f7d-4052-b30f-3380bf5d1224 in namespace container-probe-964
  May  5 19:35:02.734: INFO: Get pod busybox-ae84e362-3f7d-4052-b30f-3380bf5d1224 in namespace container-probe-964
  May  5 19:35:04.739: INFO: Get pod busybox-ae84e362-3f7d-4052-b30f-3380bf5d1224 in namespace container-probe-964
  May  5 19:35:06.745: INFO: Get pod busybox-ae84e362-3f7d-4052-b30f-3380bf5d1224 in namespace container-probe-964
  May  5 19:35:08.756: INFO: Get pod busybox-ae84e362-3f7d-4052-b30f-3380bf5d1224 in namespace container-probe-964
  May  5 19:35:08.756: INFO: Restart count of pod container-probe-964/busybox-ae84e362-3f7d-4052-b30f-3380bf5d1224 is now 1 (50.146790432s elapsed)
  May  5 19:35:08.756: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/05/24 19:35:08.76
  STEP: Destroying namespace "container-probe-964" for this suite. @ 05/05/24 19:35:08.784
• [52.213 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 05/05/24 19:35:08.791
  May  5 19:35:08.791: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename secrets @ 05/05/24 19:35:08.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:35:08.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:35:08.809
  STEP: Creating secret with name secret-test-866bdde9-74de-4878-b70a-aa1e774a0b24 @ 05/05/24 19:35:08.811
  STEP: Creating a pod to test consume secrets @ 05/05/24 19:35:08.814
  STEP: Saw pod success @ 05/05/24 19:35:10.828
  May  5 19:35:10.833: INFO: Trying to get logs from node worker00 pod pod-secrets-efc9fcaa-e808-4e06-85f5-2af168614078 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/05/24 19:35:10.841
  May  5 19:35:10.851: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3835" for this suite. @ 05/05/24 19:35:10.853
• [2.065 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:96
  STEP: Creating a kubernetes client @ 05/05/24 19:35:10.857
  May  5 19:35:10.857: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename aggregator @ 05/05/24 19:35:10.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:35:10.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:35:10.871
  May  5 19:35:10.873: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Registering the sample API server. @ 05/05/24 19:35:10.873
  May  5 19:35:11.357: INFO: Found ClusterRoles; assuming RBAC is enabled.
  May  5 19:35:11.368: INFO: new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  May  5 19:35:13.396: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  5 19:35:15.410: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  5 19:35:17.402: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  5 19:35:19.402: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  5 19:35:21.402: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  5 19:35:23.403: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  5 19:35:25.401: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  5 19:35:27.400: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  5 19:35:29.398: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  5 19:35:31.401: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  5 19:35:33.401: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  5 19:35:35.403: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  5 19:35:37.399: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  5 19:35:39.398: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  5 19:35:41.403: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  5 19:35:43.403: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  5 19:35:45.529: INFO: Waited 117.289188ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 05/05/24 19:35:45.566
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 05/05/24 19:35:45.568
  STEP: List APIServices @ 05/05/24 19:35:45.572
  May  5 19:35:45.576: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 05/05/24 19:35:45.576
  May  5 19:35:45.585: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 05/05/24 19:35:45.585
  May  5 19:35:45.590: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.May, 5, 19, 35, 45, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 05/05/24 19:35:45.59
  May  5 19:35:45.592: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-05-05 19:35:45 +0000 UTC Passed all checks passed}
  May  5 19:35:45.593: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May  5 19:35:45.593: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 05/05/24 19:35:45.593
  May  5 19:35:45.600: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete APIService "dynamic-flunder-478968151" @ 05/05/24 19:35:45.6
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 05/05/24 19:35:45.609
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 05/05/24 19:35:45.615
  STEP: Patch APIService Status @ 05/05/24 19:35:45.616
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 05/05/24 19:35:45.62
  May  5 19:35:45.624: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-05-05 19:35:45 +0000 UTC Passed all checks passed}
  May  5 19:35:45.624: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May  5 19:35:45.624: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  May  5 19:35:45.624: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "e2e-apiservice=patched" @ 05/05/24 19:35:45.624
  STEP: Confirm that the generated APIService has been deleted @ 05/05/24 19:35:45.628
  May  5 19:35:45.628: INFO: Requesting list of APIServices to confirm quantity
  May  5 19:35:45.632: INFO: Found 0 APIService with label "e2e-apiservice=patched"
  May  5 19:35:45.632: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  May  5 19:35:45.691: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-4536" for this suite. @ 05/05/24 19:35:45.706
• [34.853 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 05/05/24 19:35:45.711
  May  5 19:35:45.711: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename daemonsets @ 05/05/24 19:35:45.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:35:45.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:35:45.724
  STEP: Creating simple DaemonSet "daemon-set" @ 05/05/24 19:35:45.735
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/05/24 19:35:45.739
  May  5 19:35:45.744: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  5 19:35:45.744: INFO: Node worker00 is running 0 daemon pod, expected 1
  May  5 19:35:46.755: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May  5 19:35:46.755: INFO: Node worker01 is running 0 daemon pod, expected 1
  May  5 19:35:47.752: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  May  5 19:35:47.752: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 05/05/24 19:35:47.755
  May  5 19:35:47.766: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May  5 19:35:47.766: INFO: Node worker01 is running 0 daemon pod, expected 1
  May  5 19:35:48.770: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May  5 19:35:48.770: INFO: Node worker01 is running 0 daemon pod, expected 1
  May  5 19:35:49.770: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May  5 19:35:49.770: INFO: Node worker01 is running 0 daemon pod, expected 1
  May  5 19:35:50.769: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May  5 19:35:50.769: INFO: Node worker01 is running 0 daemon pod, expected 1
  May  5 19:35:51.775: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  May  5 19:35:51.775: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/05/24 19:35:51.779
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5608, will wait for the garbage collector to delete the pods @ 05/05/24 19:35:51.779
  May  5 19:35:51.841: INFO: Deleting DaemonSet.extensions daemon-set took: 7.810353ms
  May  5 19:35:51.941: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.627777ms
  May  5 19:35:53.846: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  5 19:35:53.846: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May  5 19:35:53.848: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"41958"},"items":null}

  May  5 19:35:53.850: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"41958"},"items":null}

  May  5 19:35:53.854: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5608" for this suite. @ 05/05/24 19:35:53.857
• [8.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 05/05/24 19:35:53.862
  May  5 19:35:53.862: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename downward-api @ 05/05/24 19:35:53.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:35:53.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:35:53.873
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 19:35:53.875
  STEP: Saw pod success @ 05/05/24 19:35:55.893
  May  5 19:35:55.896: INFO: Trying to get logs from node worker00 pod downwardapi-volume-140b69b6-bb54-4b5b-87fc-5f92c830b7d7 container client-container: <nil>
  STEP: delete the pod @ 05/05/24 19:35:55.9
  May  5 19:35:55.911: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7896" for this suite. @ 05/05/24 19:35:55.913
• [2.054 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:103
  STEP: Creating a kubernetes client @ 05/05/24 19:35:55.916
  May  5 19:35:55.916: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename replication-controller @ 05/05/24 19:35:55.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:35:55.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:35:55.929
  STEP: Given a ReplicationController is created @ 05/05/24 19:35:55.931
  STEP: When the matched label of one of its pods change @ 05/05/24 19:35:55.935
  May  5 19:35:55.938: INFO: Pod name pod-release: Found 0 pods out of 1
  May  5 19:36:00.940: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/05/24 19:36:00.949
  May  5 19:36:01.960: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8847" for this suite. @ 05/05/24 19:36:01.964
• [6.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high  [Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 05/05/24 19:36:01.97
  May  5 19:36:01.970: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename svc-latency @ 05/05/24 19:36:01.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:36:01.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:36:01.984
  May  5 19:36:01.986: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-2945 @ 05/05/24 19:36:01.987
  I0505 19:36:01.991858      20 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-2945, replica count: 1
  I0505 19:36:03.043648      20 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May  5 19:36:03.173: INFO: Created: latency-svc-6zmhg
  May  5 19:36:03.182: INFO: Got endpoints: latency-svc-6zmhg [36.54348ms]
  May  5 19:36:03.195: INFO: Created: latency-svc-bqg6j
  May  5 19:36:03.203: INFO: Got endpoints: latency-svc-bqg6j [20.031641ms]
  May  5 19:36:03.204: INFO: Created: latency-svc-bfzjg
  May  5 19:36:03.210: INFO: Got endpoints: latency-svc-bfzjg [27.16709ms]
  May  5 19:36:03.217: INFO: Created: latency-svc-6mtbv
  May  5 19:36:03.224: INFO: Got endpoints: latency-svc-6mtbv [40.342797ms]
  May  5 19:36:03.225: INFO: Created: latency-svc-nfzx2
  May  5 19:36:03.229: INFO: Got endpoints: latency-svc-nfzx2 [46.378777ms]
  May  5 19:36:03.229: INFO: Created: latency-svc-xrdjp
  May  5 19:36:03.237: INFO: Got endpoints: latency-svc-xrdjp [52.615051ms]
  May  5 19:36:03.243: INFO: Created: latency-svc-45r4l
  May  5 19:36:03.250: INFO: Got endpoints: latency-svc-45r4l [65.227095ms]
  May  5 19:36:03.253: INFO: Created: latency-svc-hclvp
  May  5 19:36:03.261: INFO: Got endpoints: latency-svc-hclvp [75.649931ms]
  May  5 19:36:03.265: INFO: Created: latency-svc-kbtps
  May  5 19:36:03.265: INFO: Got endpoints: latency-svc-kbtps [81.02136ms]
  May  5 19:36:03.271: INFO: Created: latency-svc-79nm9
  May  5 19:36:03.273: INFO: Got endpoints: latency-svc-79nm9 [88.22031ms]
  May  5 19:36:03.279: INFO: Created: latency-svc-jtgtx
  May  5 19:36:03.281: INFO: Got endpoints: latency-svc-jtgtx [95.358767ms]
  May  5 19:36:03.286: INFO: Created: latency-svc-cmzzh
  May  5 19:36:03.290: INFO: Got endpoints: latency-svc-cmzzh [106.194523ms]
  May  5 19:36:03.295: INFO: Created: latency-svc-n2s8z
  May  5 19:36:03.298: INFO: Got endpoints: latency-svc-n2s8z [111.739539ms]
  May  5 19:36:03.303: INFO: Created: latency-svc-92phm
  May  5 19:36:03.312: INFO: Got endpoints: latency-svc-92phm [126.722103ms]
  May  5 19:36:03.313: INFO: Created: latency-svc-jkwww
  May  5 19:36:03.320: INFO: Got endpoints: latency-svc-jkwww [135.955691ms]
  May  5 19:36:03.321: INFO: Created: latency-svc-pqhlr
  May  5 19:36:03.325: INFO: Got endpoints: latency-svc-pqhlr [140.974864ms]
  May  5 19:36:03.330: INFO: Created: latency-svc-5ztlg
  May  5 19:36:03.338: INFO: Got endpoints: latency-svc-5ztlg [135.416869ms]
  May  5 19:36:03.338: INFO: Created: latency-svc-74xbw
  May  5 19:36:03.342: INFO: Got endpoints: latency-svc-74xbw [132.084468ms]
  May  5 19:36:03.357: INFO: Created: latency-svc-m4h2m
  May  5 19:36:03.358: INFO: Created: latency-svc-t45zj
  May  5 19:36:03.360: INFO: Created: latency-svc-h8zxq
  May  5 19:36:03.360: INFO: Got endpoints: latency-svc-h8zxq [136.24551ms]
  May  5 19:36:03.360: INFO: Got endpoints: latency-svc-m4h2m [131.226259ms]
  May  5 19:36:03.366: INFO: Got endpoints: latency-svc-t45zj [127.878176ms]
  May  5 19:36:03.367: INFO: Created: latency-svc-wjgf9
  May  5 19:36:03.375: INFO: Got endpoints: latency-svc-wjgf9 [124.609032ms]
  May  5 19:36:03.404: INFO: Created: latency-svc-mblfg
  May  5 19:36:03.404: INFO: Created: latency-svc-9gk8r
  May  5 19:36:03.405: INFO: Created: latency-svc-86rm2
  May  5 19:36:03.405: INFO: Created: latency-svc-f76hk
  May  5 19:36:03.405: INFO: Created: latency-svc-ttg6m
  May  5 19:36:03.405: INFO: Created: latency-svc-rxsrt
  May  5 19:36:03.406: INFO: Created: latency-svc-p2fks
  May  5 19:36:03.412: INFO: Created: latency-svc-fgp94
  May  5 19:36:03.415: INFO: Created: latency-svc-7gmhg
  May  5 19:36:03.416: INFO: Created: latency-svc-xn4ww
  May  5 19:36:03.416: INFO: Created: latency-svc-f4z2w
  May  5 19:36:03.424: INFO: Created: latency-svc-vq8ql
  May  5 19:36:03.424: INFO: Got endpoints: latency-svc-mblfg [150.565647ms]
  May  5 19:36:03.425: INFO: Created: latency-svc-pzlw4
  May  5 19:36:03.427: INFO: Created: latency-svc-rvjmr
  May  5 19:36:03.427: INFO: Created: latency-svc-nwffn
  May  5 19:36:03.432: INFO: Got endpoints: latency-svc-9gk8r [167.565595ms]
  May  5 19:36:03.434: INFO: Got endpoints: latency-svc-ttg6m [136.061035ms]
  May  5 19:36:03.434: INFO: Got endpoints: latency-svc-86rm2 [114.33251ms]
  May  5 19:36:03.429: INFO: Got endpoints: latency-svc-f76hk [116.954194ms]
  May  5 19:36:03.438: INFO: Got endpoints: latency-svc-rvjmr [156.765228ms]
  May  5 19:36:03.438: INFO: Got endpoints: latency-svc-fgp94 [99.822738ms]
  May  5 19:36:03.438: INFO: Got endpoints: latency-svc-p2fks [113.17811ms]
  May  5 19:36:03.438: INFO: Got endpoints: latency-svc-xn4ww [147.579497ms]
  May  5 19:36:03.438: INFO: Got endpoints: latency-svc-rxsrt [95.598579ms]
  May  5 19:36:03.447: INFO: Got endpoints: latency-svc-nwffn [86.647188ms]
  May  5 19:36:03.448: INFO: Got endpoints: latency-svc-f4z2w [185.549164ms]
  May  5 19:36:03.449: INFO: Got endpoints: latency-svc-pzlw4 [83.789851ms]
  May  5 19:36:03.451: INFO: Created: latency-svc-45cws
  May  5 19:36:03.456: INFO: Created: latency-svc-rpkcr
  May  5 19:36:03.462: INFO: Created: latency-svc-sjzwz
  May  5 19:36:03.468: INFO: Created: latency-svc-gfnk4
  May  5 19:36:03.473: INFO: Created: latency-svc-zvd8m
  May  5 19:36:03.479: INFO: Got endpoints: latency-svc-vq8ql [103.799046ms]
  May  5 19:36:03.481: INFO: Created: latency-svc-j9g8n
  May  5 19:36:03.484: INFO: Created: latency-svc-rll7l
  May  5 19:36:03.489: INFO: Created: latency-svc-m4z9p
  May  5 19:36:03.492: INFO: Created: latency-svc-sl8bm
  May  5 19:36:03.498: INFO: Created: latency-svc-g7wrw
  May  5 19:36:03.500: INFO: Created: latency-svc-lfvrn
  May  5 19:36:03.506: INFO: Created: latency-svc-p6n7n
  May  5 19:36:03.511: INFO: Created: latency-svc-7brvg
  May  5 19:36:03.516: INFO: Created: latency-svc-k8n9r
  May  5 19:36:03.525: INFO: Got endpoints: latency-svc-7gmhg [164.659008ms]
  May  5 19:36:03.531: INFO: Created: latency-svc-c74tx
  May  5 19:36:03.576: INFO: Got endpoints: latency-svc-45cws [151.935915ms]
  May  5 19:36:03.586: INFO: Created: latency-svc-78f2z
  May  5 19:36:03.626: INFO: Got endpoints: latency-svc-rpkcr [194.320346ms]
  May  5 19:36:03.635: INFO: Created: latency-svc-28w7b
  May  5 19:36:03.680: INFO: Got endpoints: latency-svc-sjzwz [245.843858ms]
  May  5 19:36:03.687: INFO: Created: latency-svc-2dhrw
  May  5 19:36:03.728: INFO: Got endpoints: latency-svc-gfnk4 [294.026246ms]
  May  5 19:36:03.732: INFO: Created: latency-svc-7blqr
  May  5 19:36:03.780: INFO: Got endpoints: latency-svc-zvd8m [341.387336ms]
  May  5 19:36:03.786: INFO: Created: latency-svc-fl8f5
  May  5 19:36:03.832: INFO: Got endpoints: latency-svc-j9g8n [393.446384ms]
  May  5 19:36:03.837: INFO: Created: latency-svc-ztpb5
  May  5 19:36:03.874: INFO: Got endpoints: latency-svc-rll7l [435.198979ms]
  May  5 19:36:03.882: INFO: Created: latency-svc-7mfxw
  May  5 19:36:03.924: INFO: Got endpoints: latency-svc-m4z9p [484.852427ms]
  May  5 19:36:03.930: INFO: Created: latency-svc-9t9vw
  May  5 19:36:03.977: INFO: Got endpoints: latency-svc-sl8bm [533.433682ms]
  May  5 19:36:03.983: INFO: Created: latency-svc-c789w
  May  5 19:36:04.027: INFO: Got endpoints: latency-svc-g7wrw [588.905013ms]
  May  5 19:36:04.034: INFO: Created: latency-svc-24dl9
  May  5 19:36:04.079: INFO: Got endpoints: latency-svc-lfvrn [632.333747ms]
  May  5 19:36:04.085: INFO: Created: latency-svc-qcj77
  May  5 19:36:04.131: INFO: Got endpoints: latency-svc-p6n7n [681.424181ms]
  May  5 19:36:04.141: INFO: Created: latency-svc-p7qqt
  May  5 19:36:04.179: INFO: Got endpoints: latency-svc-7brvg [731.594459ms]
  May  5 19:36:04.188: INFO: Created: latency-svc-zrtg7
  May  5 19:36:04.227: INFO: Got endpoints: latency-svc-k8n9r [748.626226ms]
  May  5 19:36:04.236: INFO: Created: latency-svc-qrkqk
  May  5 19:36:04.279: INFO: Got endpoints: latency-svc-c74tx [753.962942ms]
  May  5 19:36:04.289: INFO: Created: latency-svc-6jvdr
  May  5 19:36:04.326: INFO: Got endpoints: latency-svc-78f2z [749.733673ms]
  May  5 19:36:04.332: INFO: Created: latency-svc-jnhnx
  May  5 19:36:04.372: INFO: Got endpoints: latency-svc-28w7b [745.641616ms]
  May  5 19:36:04.377: INFO: Created: latency-svc-8vs29
  May  5 19:36:04.425: INFO: Got endpoints: latency-svc-2dhrw [744.742642ms]
  May  5 19:36:04.431: INFO: Created: latency-svc-p99dl
  May  5 19:36:04.478: INFO: Got endpoints: latency-svc-7blqr [750.489842ms]
  May  5 19:36:04.487: INFO: Created: latency-svc-jklnd
  May  5 19:36:04.527: INFO: Got endpoints: latency-svc-fl8f5 [745.469942ms]
  May  5 19:36:04.531: INFO: Created: latency-svc-vmkvt
  May  5 19:36:04.573: INFO: Got endpoints: latency-svc-ztpb5 [741.293651ms]
  May  5 19:36:04.579: INFO: Created: latency-svc-gzrp7
  May  5 19:36:04.628: INFO: Got endpoints: latency-svc-7mfxw [753.423071ms]
  May  5 19:36:04.639: INFO: Created: latency-svc-nhs7w
  May  5 19:36:04.673: INFO: Got endpoints: latency-svc-9t9vw [749.326491ms]
  May  5 19:36:04.684: INFO: Created: latency-svc-7nk6z
  May  5 19:36:04.724: INFO: Got endpoints: latency-svc-c789w [746.535687ms]
  May  5 19:36:04.729: INFO: Created: latency-svc-x7npj
  May  5 19:36:04.778: INFO: Got endpoints: latency-svc-24dl9 [750.86164ms]
  May  5 19:36:04.786: INFO: Created: latency-svc-xbbmb
  May  5 19:36:04.828: INFO: Got endpoints: latency-svc-qcj77 [749.24317ms]
  May  5 19:36:04.837: INFO: Created: latency-svc-j55d4
  May  5 19:36:04.879: INFO: Got endpoints: latency-svc-p7qqt [747.478331ms]
  May  5 19:36:04.886: INFO: Created: latency-svc-s6kxm
  May  5 19:36:04.927: INFO: Got endpoints: latency-svc-zrtg7 [747.742133ms]
  May  5 19:36:04.935: INFO: Created: latency-svc-pkbzw
  May  5 19:36:04.979: INFO: Got endpoints: latency-svc-qrkqk [752.258514ms]
  May  5 19:36:04.985: INFO: Created: latency-svc-v8pml
  May  5 19:36:05.028: INFO: Got endpoints: latency-svc-6jvdr [748.503826ms]
  May  5 19:36:05.031: INFO: Created: latency-svc-zhzc4
  May  5 19:36:05.078: INFO: Got endpoints: latency-svc-jnhnx [751.864727ms]
  May  5 19:36:05.090: INFO: Created: latency-svc-8g294
  May  5 19:36:05.124: INFO: Got endpoints: latency-svc-8vs29 [752.214894ms]
  May  5 19:36:05.138: INFO: Created: latency-svc-9p242
  May  5 19:36:05.179: INFO: Got endpoints: latency-svc-p99dl [753.961874ms]
  May  5 19:36:05.187: INFO: Created: latency-svc-wm5cz
  May  5 19:36:05.226: INFO: Got endpoints: latency-svc-jklnd [747.727856ms]
  May  5 19:36:05.231: INFO: Created: latency-svc-krmmg
  May  5 19:36:05.274: INFO: Got endpoints: latency-svc-vmkvt [747.525008ms]
  May  5 19:36:05.283: INFO: Created: latency-svc-zp8mz
  May  5 19:36:05.324: INFO: Got endpoints: latency-svc-gzrp7 [750.623253ms]
  May  5 19:36:05.332: INFO: Created: latency-svc-t7kpk
  May  5 19:36:05.374: INFO: Got endpoints: latency-svc-nhs7w [746.521527ms]
  May  5 19:36:05.380: INFO: Created: latency-svc-ftpcz
  May  5 19:36:05.424: INFO: Got endpoints: latency-svc-7nk6z [750.523361ms]
  May  5 19:36:05.430: INFO: Created: latency-svc-grb5f
  May  5 19:36:05.477: INFO: Got endpoints: latency-svc-x7npj [753.252753ms]
  May  5 19:36:05.485: INFO: Created: latency-svc-dqh6n
  May  5 19:36:05.531: INFO: Got endpoints: latency-svc-xbbmb [752.509597ms]
  May  5 19:36:05.538: INFO: Created: latency-svc-44jsf
  May  5 19:36:05.575: INFO: Got endpoints: latency-svc-j55d4 [746.769194ms]
  May  5 19:36:05.582: INFO: Created: latency-svc-b24hn
  May  5 19:36:05.624: INFO: Got endpoints: latency-svc-s6kxm [745.753124ms]
  May  5 19:36:05.631: INFO: Created: latency-svc-gfj29
  May  5 19:36:05.679: INFO: Got endpoints: latency-svc-pkbzw [752.174352ms]
  May  5 19:36:05.686: INFO: Created: latency-svc-bj7hz
  May  5 19:36:05.729: INFO: Got endpoints: latency-svc-v8pml [749.105643ms]
  May  5 19:36:05.738: INFO: Created: latency-svc-rjngs
  May  5 19:36:05.781: INFO: Got endpoints: latency-svc-zhzc4 [753.48459ms]
  May  5 19:36:05.786: INFO: Created: latency-svc-qctkr
  May  5 19:36:05.824: INFO: Got endpoints: latency-svc-8g294 [746.416055ms]
  May  5 19:36:05.830: INFO: Created: latency-svc-zzp65
  May  5 19:36:05.879: INFO: Got endpoints: latency-svc-9p242 [753.62145ms]
  May  5 19:36:05.886: INFO: Created: latency-svc-kxqmj
  May  5 19:36:05.926: INFO: Got endpoints: latency-svc-wm5cz [747.558102ms]
  May  5 19:36:05.933: INFO: Created: latency-svc-pjljj
  May  5 19:36:05.976: INFO: Got endpoints: latency-svc-krmmg [749.63483ms]
  May  5 19:36:05.986: INFO: Created: latency-svc-2k7ql
  May  5 19:36:06.032: INFO: Got endpoints: latency-svc-zp8mz [757.378248ms]
  May  5 19:36:06.040: INFO: Created: latency-svc-zzrvl
  May  5 19:36:06.073: INFO: Got endpoints: latency-svc-t7kpk [748.872444ms]
  May  5 19:36:06.079: INFO: Created: latency-svc-dl2ll
  May  5 19:36:06.125: INFO: Got endpoints: latency-svc-ftpcz [750.480208ms]
  May  5 19:36:06.132: INFO: Created: latency-svc-djh48
  May  5 19:36:06.178: INFO: Got endpoints: latency-svc-grb5f [753.569834ms]
  May  5 19:36:06.183: INFO: Created: latency-svc-7ffsr
  May  5 19:36:06.233: INFO: Got endpoints: latency-svc-dqh6n [755.50655ms]
  May  5 19:36:06.241: INFO: Created: latency-svc-mxg97
  May  5 19:36:06.282: INFO: Got endpoints: latency-svc-44jsf [750.833016ms]
  May  5 19:36:06.287: INFO: Created: latency-svc-cxh7c
  May  5 19:36:06.326: INFO: Got endpoints: latency-svc-b24hn [750.774085ms]
  May  5 19:36:06.333: INFO: Created: latency-svc-hshhv
  May  5 19:36:06.377: INFO: Got endpoints: latency-svc-gfj29 [752.746839ms]
  May  5 19:36:06.387: INFO: Created: latency-svc-gkgf5
  May  5 19:36:06.428: INFO: Got endpoints: latency-svc-bj7hz [748.98097ms]
  May  5 19:36:06.435: INFO: Created: latency-svc-qjp28
  May  5 19:36:06.473: INFO: Got endpoints: latency-svc-rjngs [743.880696ms]
  May  5 19:36:06.478: INFO: Created: latency-svc-hqrmk
  May  5 19:36:06.526: INFO: Got endpoints: latency-svc-qctkr [744.614527ms]
  May  5 19:36:06.533: INFO: Created: latency-svc-wsng4
  May  5 19:36:06.577: INFO: Got endpoints: latency-svc-zzp65 [752.758866ms]
  May  5 19:36:06.585: INFO: Created: latency-svc-l6qbc
  May  5 19:36:06.625: INFO: Got endpoints: latency-svc-kxqmj [746.600858ms]
  May  5 19:36:06.632: INFO: Created: latency-svc-swgdk
  May  5 19:36:06.676: INFO: Got endpoints: latency-svc-pjljj [749.331246ms]
  May  5 19:36:06.684: INFO: Created: latency-svc-89tz2
  May  5 19:36:06.728: INFO: Got endpoints: latency-svc-2k7ql [751.924995ms]
  May  5 19:36:06.735: INFO: Created: latency-svc-wwhn7
  May  5 19:36:06.780: INFO: Got endpoints: latency-svc-zzrvl [748.051787ms]
  May  5 19:36:06.786: INFO: Created: latency-svc-ctmpc
  May  5 19:36:06.828: INFO: Got endpoints: latency-svc-dl2ll [755.489194ms]
  May  5 19:36:06.851: INFO: Created: latency-svc-pxqwt
  May  5 19:36:06.881: INFO: Got endpoints: latency-svc-djh48 [756.059117ms]
  May  5 19:36:06.889: INFO: Created: latency-svc-kmjwm
  May  5 19:36:06.925: INFO: Got endpoints: latency-svc-7ffsr [747.384979ms]
  May  5 19:36:06.932: INFO: Created: latency-svc-sr5hl
  May  5 19:36:06.973: INFO: Got endpoints: latency-svc-mxg97 [740.485148ms]
  May  5 19:36:06.983: INFO: Created: latency-svc-nlp6q
  May  5 19:36:07.024: INFO: Got endpoints: latency-svc-cxh7c [741.702869ms]
  May  5 19:36:07.030: INFO: Created: latency-svc-4fp8x
  May  5 19:36:07.077: INFO: Got endpoints: latency-svc-hshhv [750.43261ms]
  May  5 19:36:07.084: INFO: Created: latency-svc-7wx69
  May  5 19:36:07.125: INFO: Got endpoints: latency-svc-gkgf5 [747.333028ms]
  May  5 19:36:07.136: INFO: Created: latency-svc-dk568
  May  5 19:36:07.178: INFO: Got endpoints: latency-svc-qjp28 [749.173452ms]
  May  5 19:36:07.192: INFO: Created: latency-svc-v8mfv
  May  5 19:36:07.224: INFO: Got endpoints: latency-svc-hqrmk [750.906776ms]
  May  5 19:36:07.231: INFO: Created: latency-svc-qghf2
  May  5 19:36:07.273: INFO: Got endpoints: latency-svc-wsng4 [747.418232ms]
  May  5 19:36:07.279: INFO: Created: latency-svc-tjm8w
  May  5 19:36:07.325: INFO: Got endpoints: latency-svc-l6qbc [747.884129ms]
  May  5 19:36:07.333: INFO: Created: latency-svc-x8jdq
  May  5 19:36:07.373: INFO: Got endpoints: latency-svc-swgdk [747.567506ms]
  May  5 19:36:07.378: INFO: Created: latency-svc-bsbxf
  May  5 19:36:07.427: INFO: Got endpoints: latency-svc-89tz2 [751.501822ms]
  May  5 19:36:07.433: INFO: Created: latency-svc-sr8vx
  May  5 19:36:07.476: INFO: Got endpoints: latency-svc-wwhn7 [748.250204ms]
  May  5 19:36:07.483: INFO: Created: latency-svc-wg47j
  May  5 19:36:07.524: INFO: Got endpoints: latency-svc-ctmpc [744.671189ms]
  May  5 19:36:07.532: INFO: Created: latency-svc-zpn8m
  May  5 19:36:07.575: INFO: Got endpoints: latency-svc-pxqwt [746.652801ms]
  May  5 19:36:07.584: INFO: Created: latency-svc-4s9k7
  May  5 19:36:07.625: INFO: Got endpoints: latency-svc-kmjwm [743.264435ms]
  May  5 19:36:07.631: INFO: Created: latency-svc-w2bqw
  May  5 19:36:07.679: INFO: Got endpoints: latency-svc-sr5hl [754.247826ms]
  May  5 19:36:07.687: INFO: Created: latency-svc-hvhnn
  May  5 19:36:07.729: INFO: Got endpoints: latency-svc-nlp6q [755.514055ms]
  May  5 19:36:07.736: INFO: Created: latency-svc-2brnp
  May  5 19:36:07.776: INFO: Got endpoints: latency-svc-4fp8x [752.595081ms]
  May  5 19:36:07.785: INFO: Created: latency-svc-65zvr
  May  5 19:36:07.824: INFO: Got endpoints: latency-svc-7wx69 [747.242178ms]
  May  5 19:36:07.832: INFO: Created: latency-svc-rlzgw
  May  5 19:36:07.874: INFO: Got endpoints: latency-svc-dk568 [748.578729ms]
  May  5 19:36:07.880: INFO: Created: latency-svc-hnfdh
  May  5 19:36:07.924: INFO: Got endpoints: latency-svc-v8mfv [746.859787ms]
  May  5 19:36:07.933: INFO: Created: latency-svc-w4pj6
  May  5 19:36:07.975: INFO: Got endpoints: latency-svc-qghf2 [750.872273ms]
  May  5 19:36:07.983: INFO: Created: latency-svc-6qnrj
  May  5 19:36:08.028: INFO: Got endpoints: latency-svc-tjm8w [754.252168ms]
  May  5 19:36:08.036: INFO: Created: latency-svc-hmhw2
  May  5 19:36:08.075: INFO: Got endpoints: latency-svc-x8jdq [750.066633ms]
  May  5 19:36:08.084: INFO: Created: latency-svc-pnqdk
  May  5 19:36:08.124: INFO: Got endpoints: latency-svc-bsbxf [750.886757ms]
  May  5 19:36:08.131: INFO: Created: latency-svc-wns2h
  May  5 19:36:08.176: INFO: Got endpoints: latency-svc-sr8vx [748.970055ms]
  May  5 19:36:08.184: INFO: Created: latency-svc-m67vr
  May  5 19:36:08.222: INFO: Got endpoints: latency-svc-wg47j [745.362919ms]
  May  5 19:36:08.227: INFO: Created: latency-svc-z7z8c
  May  5 19:36:08.280: INFO: Got endpoints: latency-svc-zpn8m [755.870263ms]
  May  5 19:36:08.288: INFO: Created: latency-svc-xds9h
  May  5 19:36:08.325: INFO: Got endpoints: latency-svc-4s9k7 [749.600616ms]
  May  5 19:36:08.331: INFO: Created: latency-svc-w9666
  May  5 19:36:08.378: INFO: Got endpoints: latency-svc-w2bqw [752.90032ms]
  May  5 19:36:08.384: INFO: Created: latency-svc-8lbgb
  May  5 19:36:08.426: INFO: Got endpoints: latency-svc-hvhnn [746.979532ms]
  May  5 19:36:08.436: INFO: Created: latency-svc-g7mmk
  May  5 19:36:08.477: INFO: Got endpoints: latency-svc-2brnp [748.015607ms]
  May  5 19:36:08.487: INFO: Created: latency-svc-c99b6
  May  5 19:36:08.528: INFO: Got endpoints: latency-svc-65zvr [752.069955ms]
  May  5 19:36:08.535: INFO: Created: latency-svc-2lvcn
  May  5 19:36:08.572: INFO: Got endpoints: latency-svc-rlzgw [748.110662ms]
  May  5 19:36:08.580: INFO: Created: latency-svc-5gq76
  May  5 19:36:08.627: INFO: Got endpoints: latency-svc-hnfdh [752.980034ms]
  May  5 19:36:08.636: INFO: Created: latency-svc-4s266
  May  5 19:36:08.678: INFO: Got endpoints: latency-svc-w4pj6 [753.289843ms]
  May  5 19:36:08.688: INFO: Created: latency-svc-r97hw
  May  5 19:36:08.726: INFO: Got endpoints: latency-svc-6qnrj [750.512923ms]
  May  5 19:36:08.731: INFO: Created: latency-svc-lhrdn
  May  5 19:36:08.777: INFO: Got endpoints: latency-svc-hmhw2 [749.485729ms]
  May  5 19:36:08.785: INFO: Created: latency-svc-zjgtq
  May  5 19:36:08.831: INFO: Got endpoints: latency-svc-pnqdk [755.9679ms]
  May  5 19:36:08.841: INFO: Created: latency-svc-9ffms
  May  5 19:36:08.876: INFO: Got endpoints: latency-svc-wns2h [751.939875ms]
  May  5 19:36:08.881: INFO: Created: latency-svc-rzzbt
  May  5 19:36:08.928: INFO: Got endpoints: latency-svc-m67vr [751.496393ms]
  May  5 19:36:08.934: INFO: Created: latency-svc-sl4gf
  May  5 19:36:08.977: INFO: Got endpoints: latency-svc-z7z8c [755.764659ms]
  May  5 19:36:08.984: INFO: Created: latency-svc-h92nm
  May  5 19:36:09.026: INFO: Got endpoints: latency-svc-xds9h [745.448399ms]
  May  5 19:36:09.033: INFO: Created: latency-svc-5sbf2
  May  5 19:36:09.079: INFO: Got endpoints: latency-svc-w9666 [754.053285ms]
  May  5 19:36:09.083: INFO: Created: latency-svc-x9pbb
  May  5 19:36:09.125: INFO: Got endpoints: latency-svc-8lbgb [746.558151ms]
  May  5 19:36:09.133: INFO: Created: latency-svc-w578x
  May  5 19:36:09.175: INFO: Got endpoints: latency-svc-g7mmk [748.748615ms]
  May  5 19:36:09.184: INFO: Created: latency-svc-lgzr2
  May  5 19:36:09.224: INFO: Got endpoints: latency-svc-c99b6 [746.278289ms]
  May  5 19:36:09.229: INFO: Created: latency-svc-dzlxm
  May  5 19:36:09.278: INFO: Got endpoints: latency-svc-2lvcn [749.07179ms]
  May  5 19:36:09.285: INFO: Created: latency-svc-k54t9
  May  5 19:36:09.325: INFO: Got endpoints: latency-svc-5gq76 [752.269065ms]
  May  5 19:36:09.331: INFO: Created: latency-svc-mmksk
  May  5 19:36:09.376: INFO: Got endpoints: latency-svc-4s266 [749.271635ms]
  May  5 19:36:09.387: INFO: Created: latency-svc-h8rfl
  May  5 19:36:09.429: INFO: Got endpoints: latency-svc-r97hw [751.336426ms]
  May  5 19:36:09.439: INFO: Created: latency-svc-9x6v8
  May  5 19:36:09.480: INFO: Got endpoints: latency-svc-lhrdn [754.086033ms]
  May  5 19:36:09.490: INFO: Created: latency-svc-vgtnx
  May  5 19:36:09.535: INFO: Got endpoints: latency-svc-zjgtq [757.922316ms]
  May  5 19:36:09.541: INFO: Created: latency-svc-xlcxn
  May  5 19:36:09.573: INFO: Got endpoints: latency-svc-9ffms [741.84893ms]
  May  5 19:36:09.582: INFO: Created: latency-svc-q6gmq
  May  5 19:36:09.623: INFO: Got endpoints: latency-svc-rzzbt [747.509201ms]
  May  5 19:36:09.630: INFO: Created: latency-svc-zmj47
  May  5 19:36:09.678: INFO: Got endpoints: latency-svc-sl4gf [750.448424ms]
  May  5 19:36:09.686: INFO: Created: latency-svc-gddxv
  May  5 19:36:09.728: INFO: Got endpoints: latency-svc-h92nm [750.564802ms]
  May  5 19:36:09.733: INFO: Created: latency-svc-8cwld
  May  5 19:36:09.773: INFO: Got endpoints: latency-svc-5sbf2 [747.260067ms]
  May  5 19:36:09.781: INFO: Created: latency-svc-sql9x
  May  5 19:36:09.824: INFO: Got endpoints: latency-svc-x9pbb [745.261315ms]
  May  5 19:36:09.829: INFO: Created: latency-svc-ffkks
  May  5 19:36:09.875: INFO: Got endpoints: latency-svc-w578x [749.798252ms]
  May  5 19:36:09.881: INFO: Created: latency-svc-vqrhd
  May  5 19:36:09.926: INFO: Got endpoints: latency-svc-lgzr2 [750.710903ms]
  May  5 19:36:09.936: INFO: Created: latency-svc-vft4d
  May  5 19:36:09.978: INFO: Got endpoints: latency-svc-dzlxm [754.470455ms]
  May  5 19:36:09.984: INFO: Created: latency-svc-l9cqr
  May  5 19:36:10.026: INFO: Got endpoints: latency-svc-k54t9 [748.633543ms]
  May  5 19:36:10.034: INFO: Created: latency-svc-bwgv4
  May  5 19:36:10.074: INFO: Got endpoints: latency-svc-mmksk [749.17872ms]
  May  5 19:36:10.080: INFO: Created: latency-svc-w2smh
  May  5 19:36:10.128: INFO: Got endpoints: latency-svc-h8rfl [751.962878ms]
  May  5 19:36:10.136: INFO: Created: latency-svc-h2q68
  May  5 19:36:10.176: INFO: Got endpoints: latency-svc-9x6v8 [745.843556ms]
  May  5 19:36:10.182: INFO: Created: latency-svc-psxp8
  May  5 19:36:10.225: INFO: Got endpoints: latency-svc-vgtnx [744.929647ms]
  May  5 19:36:10.230: INFO: Created: latency-svc-dms5c
  May  5 19:36:10.281: INFO: Got endpoints: latency-svc-xlcxn [745.474399ms]
  May  5 19:36:10.288: INFO: Created: latency-svc-5jl9c
  May  5 19:36:10.327: INFO: Got endpoints: latency-svc-q6gmq [754.072037ms]
  May  5 19:36:10.335: INFO: Created: latency-svc-647f4
  May  5 19:36:10.375: INFO: Got endpoints: latency-svc-zmj47 [751.396946ms]
  May  5 19:36:10.383: INFO: Created: latency-svc-ld452
  May  5 19:36:10.427: INFO: Got endpoints: latency-svc-gddxv [748.467402ms]
  May  5 19:36:10.435: INFO: Created: latency-svc-drrnq
  May  5 19:36:10.479: INFO: Got endpoints: latency-svc-8cwld [750.604707ms]
  May  5 19:36:10.485: INFO: Created: latency-svc-4mrxh
  May  5 19:36:10.527: INFO: Got endpoints: latency-svc-sql9x [753.841094ms]
  May  5 19:36:10.535: INFO: Created: latency-svc-qzkjp
  May  5 19:36:10.581: INFO: Got endpoints: latency-svc-ffkks [756.601476ms]
  May  5 19:36:10.588: INFO: Created: latency-svc-sjqnj
  May  5 19:36:10.624: INFO: Got endpoints: latency-svc-vqrhd [749.124221ms]
  May  5 19:36:10.630: INFO: Created: latency-svc-n2b8b
  May  5 19:36:10.674: INFO: Got endpoints: latency-svc-vft4d [747.597803ms]
  May  5 19:36:10.682: INFO: Created: latency-svc-hbv86
  May  5 19:36:10.727: INFO: Got endpoints: latency-svc-l9cqr [748.712988ms]
  May  5 19:36:10.737: INFO: Created: latency-svc-hrp4g
  May  5 19:36:10.779: INFO: Got endpoints: latency-svc-bwgv4 [752.786394ms]
  May  5 19:36:10.789: INFO: Created: latency-svc-r6vqh
  May  5 19:36:10.830: INFO: Got endpoints: latency-svc-w2smh [755.648226ms]
  May  5 19:36:10.836: INFO: Created: latency-svc-zm54f
  May  5 19:36:10.879: INFO: Got endpoints: latency-svc-h2q68 [751.347477ms]
  May  5 19:36:10.888: INFO: Created: latency-svc-94w6t
  May  5 19:36:10.926: INFO: Got endpoints: latency-svc-psxp8 [750.117404ms]
  May  5 19:36:10.937: INFO: Created: latency-svc-kpbf8
  May  5 19:36:10.975: INFO: Got endpoints: latency-svc-dms5c [750.201512ms]
  May  5 19:36:10.979: INFO: Created: latency-svc-wsl7p
  May  5 19:36:11.028: INFO: Got endpoints: latency-svc-5jl9c [747.096473ms]
  May  5 19:36:11.078: INFO: Got endpoints: latency-svc-647f4 [750.233694ms]
  May  5 19:36:11.132: INFO: Got endpoints: latency-svc-ld452 [756.726026ms]
  May  5 19:36:11.178: INFO: Got endpoints: latency-svc-drrnq [750.366672ms]
  May  5 19:36:11.224: INFO: Got endpoints: latency-svc-4mrxh [744.861465ms]
  May  5 19:36:11.277: INFO: Got endpoints: latency-svc-qzkjp [749.814888ms]
  May  5 19:36:11.326: INFO: Got endpoints: latency-svc-sjqnj [745.094135ms]
  May  5 19:36:11.376: INFO: Got endpoints: latency-svc-n2b8b [752.026421ms]
  May  5 19:36:11.428: INFO: Got endpoints: latency-svc-hbv86 [753.661597ms]
  May  5 19:36:11.475: INFO: Got endpoints: latency-svc-hrp4g [747.587051ms]
  May  5 19:36:11.527: INFO: Got endpoints: latency-svc-r6vqh [748.008878ms]
  May  5 19:36:11.578: INFO: Got endpoints: latency-svc-zm54f [748.312647ms]
  May  5 19:36:11.626: INFO: Got endpoints: latency-svc-94w6t [746.492374ms]
  May  5 19:36:11.674: INFO: Got endpoints: latency-svc-kpbf8 [748.043283ms]
  May  5 19:36:11.731: INFO: Got endpoints: latency-svc-wsl7p [755.967157ms]
  May  5 19:36:11.731: INFO: Latencies: [20.031641ms 27.16709ms 40.342797ms 46.378777ms 52.615051ms 65.227095ms 75.649931ms 81.02136ms 83.789851ms 86.647188ms 88.22031ms 95.358767ms 95.598579ms 99.822738ms 103.799046ms 106.194523ms 111.739539ms 113.17811ms 114.33251ms 116.954194ms 124.609032ms 126.722103ms 127.878176ms 131.226259ms 132.084468ms 135.416869ms 135.955691ms 136.061035ms 136.24551ms 140.974864ms 147.579497ms 150.565647ms 151.935915ms 156.765228ms 164.659008ms 167.565595ms 185.549164ms 194.320346ms 245.843858ms 294.026246ms 341.387336ms 393.446384ms 435.198979ms 484.852427ms 533.433682ms 588.905013ms 632.333747ms 681.424181ms 731.594459ms 740.485148ms 741.293651ms 741.702869ms 741.84893ms 743.264435ms 743.880696ms 744.614527ms 744.671189ms 744.742642ms 744.861465ms 744.929647ms 745.094135ms 745.261315ms 745.362919ms 745.448399ms 745.469942ms 745.474399ms 745.641616ms 745.753124ms 745.843556ms 746.278289ms 746.416055ms 746.492374ms 746.521527ms 746.535687ms 746.558151ms 746.600858ms 746.652801ms 746.769194ms 746.859787ms 746.979532ms 747.096473ms 747.242178ms 747.260067ms 747.333028ms 747.384979ms 747.418232ms 747.478331ms 747.509201ms 747.525008ms 747.558102ms 747.567506ms 747.587051ms 747.597803ms 747.727856ms 747.742133ms 747.884129ms 748.008878ms 748.015607ms 748.043283ms 748.051787ms 748.110662ms 748.250204ms 748.312647ms 748.467402ms 748.503826ms 748.578729ms 748.626226ms 748.633543ms 748.712988ms 748.748615ms 748.872444ms 748.970055ms 748.98097ms 749.07179ms 749.105643ms 749.124221ms 749.173452ms 749.17872ms 749.24317ms 749.271635ms 749.326491ms 749.331246ms 749.485729ms 749.600616ms 749.63483ms 749.733673ms 749.798252ms 749.814888ms 750.066633ms 750.117404ms 750.201512ms 750.233694ms 750.366672ms 750.43261ms 750.448424ms 750.480208ms 750.489842ms 750.512923ms 750.523361ms 750.564802ms 750.604707ms 750.623253ms 750.710903ms 750.774085ms 750.833016ms 750.86164ms 750.872273ms 750.886757ms 750.906776ms 751.336426ms 751.347477ms 751.396946ms 751.496393ms 751.501822ms 751.864727ms 751.924995ms 751.939875ms 751.962878ms 752.026421ms 752.069955ms 752.174352ms 752.214894ms 752.258514ms 752.269065ms 752.509597ms 752.595081ms 752.746839ms 752.758866ms 752.786394ms 752.90032ms 752.980034ms 753.252753ms 753.289843ms 753.423071ms 753.48459ms 753.569834ms 753.62145ms 753.661597ms 753.841094ms 753.961874ms 753.962942ms 754.053285ms 754.072037ms 754.086033ms 754.247826ms 754.252168ms 754.470455ms 755.489194ms 755.50655ms 755.514055ms 755.648226ms 755.764659ms 755.870263ms 755.967157ms 755.9679ms 756.059117ms 756.601476ms 756.726026ms 757.378248ms 757.922316ms]
  May  5 19:36:11.732: INFO: 50 %ile: 748.110662ms
  May  5 19:36:11.732: INFO: 90 %ile: 753.962942ms
  May  5 19:36:11.732: INFO: 99 %ile: 757.378248ms
  May  5 19:36:11.732: INFO: Total sample count: 200
  May  5 19:36:11.732: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-2945" for this suite. @ 05/05/24 19:36:11.735
• [9.769 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:370
  STEP: Creating a kubernetes client @ 05/05/24 19:36:11.74
  May  5 19:36:11.740: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename job @ 05/05/24 19:36:11.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:36:11.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:36:11.753
  STEP: Creating Indexed job @ 05/05/24 19:36:11.755
  STEP: Ensuring job reaches completions @ 05/05/24 19:36:11.758
  STEP: Ensuring pods with index for job exist @ 05/05/24 19:36:19.764
  May  5 19:36:19.768: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6616" for this suite. @ 05/05/24 19:36:19.77
• [8.043 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 05/05/24 19:36:19.784
  May  5 19:36:19.784: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename configmap @ 05/05/24 19:36:19.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:36:19.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:36:19.799
  STEP: Creating configMap with name configmap-test-volume-ad9e0e7c-57ef-4e8d-81b0-52dd32755849 @ 05/05/24 19:36:19.802
  STEP: Creating a pod to test consume configMaps @ 05/05/24 19:36:19.804
  STEP: Saw pod success @ 05/05/24 19:36:23.82
  May  5 19:36:23.822: INFO: Trying to get logs from node worker00 pod pod-configmaps-943fe965-397d-40e0-a777-807cdd27f792 container agnhost-container: <nil>
  STEP: delete the pod @ 05/05/24 19:36:23.825
  May  5 19:36:23.845: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5188" for this suite. @ 05/05/24 19:36:23.849
• [4.070 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 05/05/24 19:36:23.853
  May  5 19:36:23.853: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename configmap @ 05/05/24 19:36:23.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:36:23.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:36:23.869
  STEP: Creating configMap with name configmap-test-upd-841d3c06-27d5-46ef-9845-50e47807c9a7 @ 05/05/24 19:36:23.871
  STEP: Creating the pod @ 05/05/24 19:36:23.873
  STEP: Waiting for pod with text data @ 05/05/24 19:36:25.887
  STEP: Waiting for pod with binary data @ 05/05/24 19:36:25.903
  May  5 19:36:25.908: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1395" for this suite. @ 05/05/24 19:36:25.911
• [2.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 05/05/24 19:36:25.916
  May  5 19:36:25.916: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename daemonsets @ 05/05/24 19:36:25.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:36:25.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:36:25.93
  May  5 19:36:25.939: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/05/24 19:36:25.944
  May  5 19:36:25.949: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  5 19:36:25.949: INFO: Node worker00 is running 0 daemon pod, expected 1
  May  5 19:36:26.954: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  May  5 19:36:26.954: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 05/05/24 19:36:26.961
  STEP: Check that daemon pods images are updated. @ 05/05/24 19:36:26.969
  May  5 19:36:26.974: INFO: Wrong image for pod: daemon-set-h8n7p. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May  5 19:36:26.974: INFO: Wrong image for pod: daemon-set-vvbc2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May  5 19:36:27.981: INFO: Wrong image for pod: daemon-set-h8n7p. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May  5 19:36:28.979: INFO: Wrong image for pod: daemon-set-h8n7p. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  STEP: Check that daemon pods are still running on every node of the cluster. @ 05/05/24 19:36:30.981
  May  5 19:36:30.985: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  May  5 19:36:30.985: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/05/24 19:36:30.992
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5018, will wait for the garbage collector to delete the pods @ 05/05/24 19:36:30.992
  May  5 19:36:31.050: INFO: Deleting DaemonSet.extensions daemon-set took: 3.839379ms
  May  5 19:36:31.153: INFO: Terminating DaemonSet.extensions daemon-set pods took: 102.823123ms
  May  5 19:36:33.958: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  5 19:36:33.958: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May  5 19:36:33.961: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"44195"},"items":null}

  May  5 19:36:33.962: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"44195"},"items":null}

  May  5 19:36:33.966: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5018" for this suite. @ 05/05/24 19:36:33.968
• [8.055 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 05/05/24 19:36:33.971
  May  5 19:36:33.971: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename container-runtime @ 05/05/24 19:36:33.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:36:33.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:36:33.984
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 05/05/24 19:36:33.991
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 05/05/24 19:36:51.043
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 05/05/24 19:36:51.045
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 05/05/24 19:36:51.049
  STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] @ 05/05/24 19:36:51.049
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 05/05/24 19:36:51.062
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 05/05/24 19:36:53.078
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 05/05/24 19:36:54.084
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 05/05/24 19:36:54.087
  STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] @ 05/05/24 19:36:54.087
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 05/05/24 19:36:54.096
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 05/05/24 19:36:55.104
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 05/05/24 19:36:57.112
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 05/05/24 19:36:57.114
  STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] @ 05/05/24 19:36:57.114
  May  5 19:36:57.122: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4430" for this suite. @ 05/05/24 19:36:57.127
• [23.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:104
  STEP: Creating a kubernetes client @ 05/05/24 19:36:57.132
  May  5 19:36:57.132: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename endpointslice @ 05/05/24 19:36:57.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:36:57.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:36:57.143
  May  5 19:36:57.172: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5095" for this suite. @ 05/05/24 19:36:57.174
• [0.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 05/05/24 19:36:57.18
  May  5 19:36:57.180: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename projected @ 05/05/24 19:36:57.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:36:57.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:36:57.193
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-402a6d2a-751a-4917-88ad-183290648be3 @ 05/05/24 19:36:57.198
  STEP: Creating the pod @ 05/05/24 19:36:57.202
  STEP: Updating configmap projected-configmap-test-upd-402a6d2a-751a-4917-88ad-183290648be3 @ 05/05/24 19:36:59.229
  STEP: waiting to observe update in volume @ 05/05/24 19:36:59.243
  May  5 19:38:09.596: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5510" for this suite. @ 05/05/24 19:38:09.597
• [72.431 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:85
  STEP: Creating a kubernetes client @ 05/05/24 19:38:09.612
  May  5 19:38:09.612: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename replication-controller @ 05/05/24 19:38:09.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:38:09.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:38:09.623
  May  5 19:38:09.625: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 05/05/24 19:38:10.633
  STEP: Checking rc "condition-test" has the desired failure condition set @ 05/05/24 19:38:10.655
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 05/05/24 19:38:11.66
  May  5 19:38:11.675: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 05/05/24 19:38:11.675
  May  5 19:38:12.681: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9092" for this suite. @ 05/05/24 19:38:12.687
• [3.091 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 05/05/24 19:38:12.703
  May  5 19:38:12.703: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename watch @ 05/05/24 19:38:12.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:38:12.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:38:12.718
  STEP: creating a watch on configmaps @ 05/05/24 19:38:12.72
  STEP: creating a new configmap @ 05/05/24 19:38:12.72
  STEP: modifying the configmap once @ 05/05/24 19:38:12.723
  STEP: closing the watch once it receives two notifications @ 05/05/24 19:38:12.727
  May  5 19:38:12.727: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-965  e927549c-3279-4734-b59d-3712dd79e7e1 44749 0 2024-05-05 19:38:12 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-05 19:38:12 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May  5 19:38:12.727: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-965  e927549c-3279-4734-b59d-3712dd79e7e1 44750 0 2024-05-05 19:38:12 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-05 19:38:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 05/05/24 19:38:12.727
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 05/05/24 19:38:12.733
  STEP: deleting the configmap @ 05/05/24 19:38:12.734
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 05/05/24 19:38:12.737
  May  5 19:38:12.737: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-965  e927549c-3279-4734-b59d-3712dd79e7e1 44751 0 2024-05-05 19:38:12 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-05 19:38:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May  5 19:38:12.737: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-965  e927549c-3279-4734-b59d-3712dd79e7e1 44752 0 2024-05-05 19:38:12 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-05 19:38:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May  5 19:38:12.738: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-965" for this suite. @ 05/05/24 19:38:12.74
• [0.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 05/05/24 19:38:12.744
  May  5 19:38:12.744: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename projected @ 05/05/24 19:38:12.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:38:12.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:38:12.756
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 19:38:12.76
  STEP: Saw pod success @ 05/05/24 19:38:14.77
  May  5 19:38:14.772: INFO: Trying to get logs from node worker01 pod downwardapi-volume-0c6b545d-c3c0-4f94-803e-89a778e89e12 container client-container: <nil>
  STEP: delete the pod @ 05/05/24 19:38:14.775
  May  5 19:38:14.790: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6196" for this suite. @ 05/05/24 19:38:14.794
• [2.060 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 05/05/24 19:38:14.805
  May  5 19:38:14.805: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename proxy @ 05/05/24 19:38:14.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:38:14.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:38:14.818
  May  5 19:38:14.821: INFO: Creating pod...
  May  5 19:38:16.837: INFO: Creating service...
  May  5 19:38:16.845: INFO: Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-8372/pods/agnhost/proxy?method=DELETE
  May  5 19:38:16.859: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  May  5 19:38:16.859: INFO: Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-8372/pods/agnhost/proxy?method=OPTIONS
  May  5 19:38:16.863: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  May  5 19:38:16.863: INFO: Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-8372/pods/agnhost/proxy?method=PATCH
  May  5 19:38:16.867: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  May  5 19:38:16.867: INFO: Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-8372/pods/agnhost/proxy?method=POST
  May  5 19:38:16.869: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  May  5 19:38:16.869: INFO: Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-8372/pods/agnhost/proxy?method=PUT
  May  5 19:38:16.873: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  May  5 19:38:16.873: INFO: Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-8372/services/e2e-proxy-test-service/proxy?method=DELETE
  May  5 19:38:16.877: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  May  5 19:38:16.878: INFO: Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-8372/services/e2e-proxy-test-service/proxy?method=OPTIONS
  May  5 19:38:16.882: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  May  5 19:38:16.882: INFO: Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-8372/services/e2e-proxy-test-service/proxy?method=PATCH
  May  5 19:38:16.885: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  May  5 19:38:16.886: INFO: Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-8372/services/e2e-proxy-test-service/proxy?method=POST
  May  5 19:38:16.889: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  May  5 19:38:16.889: INFO: Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-8372/services/e2e-proxy-test-service/proxy?method=PUT
  May  5 19:38:16.895: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  May  5 19:38:16.895: INFO: Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-8372/pods/agnhost/proxy?method=GET
  May  5 19:38:16.898: INFO: http.Client request:GET StatusCode:301
  May  5 19:38:16.898: INFO: Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-8372/services/e2e-proxy-test-service/proxy?method=GET
  May  5 19:38:16.902: INFO: http.Client request:GET StatusCode:301
  May  5 19:38:16.902: INFO: Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-8372/pods/agnhost/proxy?method=HEAD
  May  5 19:38:16.904: INFO: http.Client request:HEAD StatusCode:301
  May  5 19:38:16.904: INFO: Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-8372/services/e2e-proxy-test-service/proxy?method=HEAD
  May  5 19:38:16.906: INFO: http.Client request:HEAD StatusCode:301
  May  5 19:38:16.906: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8372" for this suite. @ 05/05/24 19:38:16.909
• [2.107 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:750
  STEP: Creating a kubernetes client @ 05/05/24 19:38:16.912
  May  5 19:38:16.913: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename statefulset @ 05/05/24 19:38:16.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:38:16.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:38:16.927
  STEP: Creating service test in namespace statefulset-6666 @ 05/05/24 19:38:16.929
  STEP: Creating stateful set ss in namespace statefulset-6666 @ 05/05/24 19:38:16.934
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6666 @ 05/05/24 19:38:16.942
  May  5 19:38:16.945: INFO: Found 0 stateful pods, waiting for 1
  May  5 19:38:26.950: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 05/05/24 19:38:26.95
  May  5 19:38:26.952: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=statefulset-6666 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May  5 19:38:27.060: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May  5 19:38:27.060: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May  5 19:38:27.061: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May  5 19:38:27.063: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  May  5 19:38:37.066: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  May  5 19:38:37.067: INFO: Waiting for statefulset status.readyReplicas updated to 0
  May  5 19:38:37.075: INFO: POD   NODE      PHASE    GRACE  CONDITIONS
  May  5 19:38:37.075: INFO: ss-0  worker01  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 19:38:18 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 19:38:16 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-05 19:38:27 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-05 19:38:27 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 19:38:16 +0000 UTC  }]
  May  5 19:38:37.075: INFO: 
  May  5 19:38:37.075: INFO: StatefulSet ss has not reached scale 3, at 1
  May  5 19:38:38.081: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.997411793s
  May  5 19:38:39.087: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.991650588s
  May  5 19:38:40.110: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.966933301s
  May  5 19:38:41.116: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.960968454s
  May  5 19:38:42.124: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.954667589s
  May  5 19:38:43.128: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.946673418s
  May  5 19:38:44.131: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.943793077s
  May  5 19:38:45.138: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.939067831s
  May  5 19:38:46.144: INFO: Verifying statefulset ss doesn't scale past 3 for another 931.957909ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6666 @ 05/05/24 19:38:47.147
  May  5 19:38:47.154: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=statefulset-6666 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May  5 19:38:47.232: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May  5 19:38:47.232: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May  5 19:38:47.232: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May  5 19:38:47.232: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=statefulset-6666 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May  5 19:38:47.310: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  May  5 19:38:47.310: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May  5 19:38:47.310: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May  5 19:38:47.310: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=statefulset-6666 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May  5 19:38:47.395: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  May  5 19:38:47.395: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May  5 19:38:47.395: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May  5 19:38:47.398: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  May  5 19:38:47.398: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  May  5 19:38:47.398: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 05/05/24 19:38:47.398
  May  5 19:38:47.403: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=statefulset-6666 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May  5 19:38:47.479: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May  5 19:38:47.479: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May  5 19:38:47.479: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May  5 19:38:47.479: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=statefulset-6666 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May  5 19:38:47.556: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May  5 19:38:47.556: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May  5 19:38:47.556: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May  5 19:38:47.556: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=statefulset-6666 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May  5 19:38:47.626: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May  5 19:38:47.626: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May  5 19:38:47.626: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May  5 19:38:47.626: INFO: Waiting for statefulset status.readyReplicas updated to 0
  May  5 19:38:47.628: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  May  5 19:38:57.642: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  May  5 19:38:57.642: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  May  5 19:38:57.642: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  May  5 19:38:57.648: INFO: POD   NODE      PHASE    GRACE  CONDITIONS
  May  5 19:38:57.648: INFO: ss-0  worker01  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 19:38:18 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 19:38:16 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-05 19:38:48 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-05 19:38:48 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 19:38:16 +0000 UTC  }]
  May  5 19:38:57.648: INFO: ss-1  worker01  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 19:38:38 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 19:38:37 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-05 19:38:48 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-05 19:38:48 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 19:38:37 +0000 UTC  }]
  May  5 19:38:57.648: INFO: ss-2  worker00  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 19:38:38 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 19:38:37 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-05 19:38:48 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-05 19:38:48 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-05 19:38:37 +0000 UTC  }]
  May  5 19:38:57.648: INFO: 
  May  5 19:38:57.648: INFO: StatefulSet ss has not reached scale 0, at 3
  May  5 19:38:58.651: INFO: Verifying statefulset ss doesn't scale past 0 for another 8.997719854s
  May  5 19:38:59.655: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.994766393s
  May  5 19:39:00.658: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.990444963s
  May  5 19:39:01.664: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.986097037s
  May  5 19:39:02.668: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.982006705s
  May  5 19:39:03.671: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.977020721s
  May  5 19:39:04.676: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.974540688s
  May  5 19:39:05.681: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.970706582s
  May  5 19:39:06.687: INFO: Verifying statefulset ss doesn't scale past 0 for another 964.084057ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6666 @ 05/05/24 19:39:07.687
  May  5 19:39:07.692: INFO: Scaling statefulset ss to 0
  May  5 19:39:07.702: INFO: Waiting for statefulset status.replicas updated to 0
  May  5 19:39:07.704: INFO: Deleting all statefulset in ns statefulset-6666
  May  5 19:39:07.707: INFO: Scaling statefulset ss to 0
  May  5 19:39:07.716: INFO: Waiting for statefulset status.replicas updated to 0
  May  5 19:39:07.718: INFO: Deleting statefulset ss
  May  5 19:39:07.725: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6666" for this suite. @ 05/05/24 19:39:07.727
• [50.820 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 05/05/24 19:39:07.733
  May  5 19:39:07.733: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename services @ 05/05/24 19:39:07.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:39:07.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:39:07.745
  STEP: creating service nodeport-test with type=NodePort in namespace services-1081 @ 05/05/24 19:39:07.747
  STEP: creating replication controller nodeport-test in namespace services-1081 @ 05/05/24 19:39:07.757
  I0505 19:39:07.764558      20 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-1081, replica count: 2
  I0505 19:39:10.815443      20 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May  5 19:39:10.815: INFO: Creating new exec pod
  May  5 19:39:13.849: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-1081 exec execpodlqsf8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  May  5 19:39:13.945: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  May  5 19:39:13.945: INFO: stdout: "nodeport-test-ffddb"
  May  5 19:39:13.945: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-1081 exec execpodlqsf8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.83 80'
  May  5 19:39:14.015: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.83 80\nConnection to 10.32.0.83 80 port [tcp/http] succeeded!\n"
  May  5 19:39:14.015: INFO: stdout: ""
  May  5 19:39:15.017: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-1081 exec execpodlqsf8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.83 80'
  May  5 19:39:15.101: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.83 80\nConnection to 10.32.0.83 80 port [tcp/http] succeeded!\n"
  May  5 19:39:15.101: INFO: stdout: ""
  May  5 19:39:16.017: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-1081 exec execpodlqsf8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.83 80'
  May  5 19:39:16.112: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.83 80\nConnection to 10.32.0.83 80 port [tcp/http] succeeded!\n"
  May  5 19:39:16.112: INFO: stdout: ""
  May  5 19:39:17.016: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-1081 exec execpodlqsf8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.83 80'
  May  5 19:39:17.116: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.83 80\nConnection to 10.32.0.83 80 port [tcp/http] succeeded!\n"
  May  5 19:39:17.116: INFO: stdout: ""
  May  5 19:39:18.016: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-1081 exec execpodlqsf8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.83 80'
  May  5 19:39:18.087: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.83 80\nConnection to 10.32.0.83 80 port [tcp/http] succeeded!\n"
  May  5 19:39:18.087: INFO: stdout: ""
  May  5 19:39:19.015: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-1081 exec execpodlqsf8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.83 80'
  May  5 19:39:19.099: INFO: stderr: "+ + ncecho -v -t hostName -w 2\n 10.32.0.83 80\nConnection to 10.32.0.83 80 port [tcp/http] succeeded!\n"
  May  5 19:39:19.100: INFO: stdout: ""
  May  5 19:39:20.017: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-1081 exec execpodlqsf8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.83 80'
  May  5 19:39:20.095: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.83 80\nConnection to 10.32.0.83 80 port [tcp/http] succeeded!\n"
  May  5 19:39:20.095: INFO: stdout: "nodeport-test-ffddb"
  May  5 19:39:20.095: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-1081 exec execpodlqsf8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.100 30698'
  May  5 19:39:20.175: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.100 30698\nConnection to 192.168.58.100 30698 port [tcp/*] succeeded!\n"
  May  5 19:39:20.175: INFO: stdout: "nodeport-test-ffddb"
  May  5 19:39:20.175: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-1081 exec execpodlqsf8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.101 30698'
  May  5 19:39:20.245: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.101 30698\nConnection to 192.168.58.101 30698 port [tcp/*] succeeded!\n"
  May  5 19:39:20.245: INFO: stdout: "nodeport-test-ffddb"
  May  5 19:39:20.245: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1081" for this suite. @ 05/05/24 19:39:20.248
• [12.522 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:93
  STEP: Creating a kubernetes client @ 05/05/24 19:39:20.257
  May  5 19:39:20.257: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename configmap @ 05/05/24 19:39:20.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:39:20.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:39:20.269
  STEP: Creating configMap configmap-6769/configmap-test-ab4ba3b0-1b2a-475b-a761-351c2589b9cb @ 05/05/24 19:39:20.271
  STEP: Creating a pod to test consume configMaps @ 05/05/24 19:39:20.274
  STEP: Saw pod success @ 05/05/24 19:39:24.296
  May  5 19:39:24.300: INFO: Trying to get logs from node worker01 pod pod-configmaps-b1fd67ac-bfde-4799-ac5b-313bd963e570 container env-test: <nil>
  STEP: delete the pod @ 05/05/24 19:39:24.306
  May  5 19:39:24.332: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6769" for this suite. @ 05/05/24 19:39:24.334
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 05/05/24 19:39:24.338
  May  5 19:39:24.338: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/05/24 19:39:24.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:39:24.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:39:24.349
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 05/05/24 19:39:24.351
  May  5 19:39:24.352: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 19:39:25.666: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 19:39:30.413: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9208" for this suite. @ 05/05/24 19:39:30.417
• [6.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 05/05/24 19:39:30.43
  May  5 19:39:30.430: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename init-container @ 05/05/24 19:39:30.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:39:30.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:39:30.441
  STEP: creating the pod @ 05/05/24 19:39:30.442
  May  5 19:39:30.442: INFO: PodSpec: initContainers in spec.initContainers
  May  5 19:39:33.754: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8602" for this suite. @ 05/05/24 19:39:33.757
• [3.333 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 05/05/24 19:39:33.764
  May  5 19:39:33.764: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename secrets @ 05/05/24 19:39:33.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:39:33.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:39:33.775
  STEP: Creating secret with name s-test-opt-del-519068ef-7a97-4524-a066-85c7a252517b @ 05/05/24 19:39:33.778
  STEP: Creating secret with name s-test-opt-upd-99e961be-bf30-4376-9eac-6adabdb462f9 @ 05/05/24 19:39:33.78
  STEP: Creating the pod @ 05/05/24 19:39:33.782
  STEP: Deleting secret s-test-opt-del-519068ef-7a97-4524-a066-85c7a252517b @ 05/05/24 19:39:35.812
  STEP: Updating secret s-test-opt-upd-99e961be-bf30-4376-9eac-6adabdb462f9 @ 05/05/24 19:39:35.826
  STEP: Creating secret with name s-test-opt-create-0c9b79ae-ed6a-47ab-9b32-dca88b996a3e @ 05/05/24 19:39:35.831
  STEP: waiting to observe update in volume @ 05/05/24 19:39:35.836
  May  5 19:39:37.858: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-151" for this suite. @ 05/05/24 19:39:37.86
• [4.110 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:901
  STEP: Creating a kubernetes client @ 05/05/24 19:39:37.874
  May  5 19:39:37.874: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename statefulset @ 05/05/24 19:39:37.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:39:37.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:39:37.885
  STEP: Creating service test in namespace statefulset-9322 @ 05/05/24 19:39:37.887
  STEP: Creating statefulset ss in namespace statefulset-9322 @ 05/05/24 19:39:37.897
  May  5 19:39:37.903: INFO: Found 0 stateful pods, waiting for 1
  May  5 19:39:47.911: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 05/05/24 19:39:47.919
  STEP: updating a scale subresource @ 05/05/24 19:39:47.932
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/05/24 19:39:47.939
  STEP: Patch a scale subresource @ 05/05/24 19:39:47.942
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/05/24 19:39:47.949
  May  5 19:39:47.954: INFO: Deleting all statefulset in ns statefulset-9322
  May  5 19:39:47.957: INFO: Scaling statefulset ss to 0
  May  5 19:39:57.973: INFO: Waiting for statefulset status.replicas updated to 0
  May  5 19:39:57.977: INFO: Deleting statefulset ss
  May  5 19:39:57.985: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9322" for this suite. @ 05/05/24 19:39:57.987
• [20.117 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 05/05/24 19:39:57.992
  May  5 19:39:57.992: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename webhook @ 05/05/24 19:39:57.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:39:58.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:39:58.003
  STEP: Setting up server cert @ 05/05/24 19:39:58.015
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 19:39:58.491
  STEP: Deploying the webhook pod @ 05/05/24 19:39:58.504
  STEP: Wait for the deployment to be ready @ 05/05/24 19:39:58.511
  May  5 19:39:58.514: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/05/24 19:40:00.525
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 19:40:00.545
  May  5 19:40:01.545: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 05/05/24 19:40:01.552
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 05/05/24 19:40:01.575
  STEP: Creating a configMap that should not be mutated @ 05/05/24 19:40:01.579
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 05/05/24 19:40:01.583
  STEP: Creating a configMap that should be mutated @ 05/05/24 19:40:01.588
  May  5 19:40:01.599: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8759" for this suite. @ 05/05/24 19:40:01.624
  STEP: Destroying namespace "webhook-markers-5854" for this suite. @ 05/05/24 19:40:01.627
• [3.640 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 05/05/24 19:40:01.634
  May  5 19:40:01.634: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename webhook @ 05/05/24 19:40:01.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:40:01.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:40:01.654
  STEP: Setting up server cert @ 05/05/24 19:40:01.671
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 19:40:01.971
  STEP: Deploying the webhook pod @ 05/05/24 19:40:01.974
  STEP: Wait for the deployment to be ready @ 05/05/24 19:40:01.98
  May  5 19:40:01.986: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/05/24 19:40:03.994
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 19:40:04.005
  May  5 19:40:05.010: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  May  5 19:40:05.017: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8871-crds.webhook.example.com via the AdmissionRegistration API @ 05/05/24 19:40:05.544
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/05/24 19:40:05.568
  May  5 19:40:07.610: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8770" for this suite. @ 05/05/24 19:40:08.155
  STEP: Destroying namespace "webhook-markers-8835" for this suite. @ 05/05/24 19:40:08.164
• [6.535 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 05/05/24 19:40:08.17
  May  5 19:40:08.170: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename field-validation @ 05/05/24 19:40:08.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:40:08.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:40:08.184
  May  5 19:40:08.185: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  W0505 19:40:10.723337      20 warnings.go:70] unknown field "alpha"
  W0505 19:40:10.723375      20 warnings.go:70] unknown field "beta"
  W0505 19:40:10.723387      20 warnings.go:70] unknown field "delta"
  W0505 19:40:10.723401      20 warnings.go:70] unknown field "epsilon"
  W0505 19:40:10.723412      20 warnings.go:70] unknown field "gamma"
  May  5 19:40:11.244: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5580" for this suite. @ 05/05/24 19:40:11.255
• [3.089 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:78
  STEP: Creating a kubernetes client @ 05/05/24 19:40:11.26
  May  5 19:40:11.260: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename svcaccounts @ 05/05/24 19:40:11.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:40:11.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:40:11.273
  STEP: reading a file in the container @ 05/05/24 19:40:13.289
  May  5 19:40:13.289: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1738 pod-service-account-c1c155b7-6881-4f76-bf86-3835a75333f4 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 05/05/24 19:40:13.372
  May  5 19:40:13.372: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1738 pod-service-account-c1c155b7-6881-4f76-bf86-3835a75333f4 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 05/05/24 19:40:13.447
  May  5 19:40:13.447: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1738 pod-service-account-c1c155b7-6881-4f76-bf86-3835a75333f4 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  May  5 19:40:13.525: INFO: Got root ca configmap in namespace "svcaccounts-1738"
  May  5 19:40:13.540: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1738" for this suite. @ 05/05/24 19:40:13.543
• [2.287 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:127
  STEP: Creating a kubernetes client @ 05/05/24 19:40:13.547
  May  5 19:40:13.547: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename emptydir @ 05/05/24 19:40:13.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:40:13.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:40:13.558
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/05/24 19:40:13.56
  STEP: Saw pod success @ 05/05/24 19:40:17.578
  May  5 19:40:17.582: INFO: Trying to get logs from node worker00 pod pod-d5f11eec-f2fa-452a-83e8-497d30bcf6a1 container test-container: <nil>
  STEP: delete the pod @ 05/05/24 19:40:17.588
  May  5 19:40:17.607: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8653" for this suite. @ 05/05/24 19:40:17.609
• [4.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:135
  STEP: Creating a kubernetes client @ 05/05/24 19:40:17.613
  May  5 19:40:17.613: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/05/24 19:40:17.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:40:17.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:40:17.622
  STEP: create the container to handle the HTTPGet hook request. @ 05/05/24 19:40:17.627
  STEP: create the pod with lifecycle hook @ 05/05/24 19:40:19.654
  STEP: check poststart hook @ 05/05/24 19:40:21.672
  STEP: delete the pod with lifecycle hook @ 05/05/24 19:40:21.677
  May  5 19:40:25.709: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4658" for this suite. @ 05/05/24 19:40:25.713
• [8.117 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 05/05/24 19:40:25.731
  May  5 19:40:25.731: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename projected @ 05/05/24 19:40:25.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:40:25.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:40:25.744
  STEP: Creating configMap with name projected-configmap-test-volume-map-3d9b4b6a-0c5b-4904-abca-af2d024b249e @ 05/05/24 19:40:25.745
  STEP: Creating a pod to test consume configMaps @ 05/05/24 19:40:25.749
  STEP: Saw pod success @ 05/05/24 19:40:29.766
  May  5 19:40:29.770: INFO: Trying to get logs from node worker00 pod pod-projected-configmaps-7d4e432f-19fa-419e-9a6d-c7f7a585ea6b container agnhost-container: <nil>
  STEP: delete the pod @ 05/05/24 19:40:29.775
  May  5 19:40:29.795: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1282" for this suite. @ 05/05/24 19:40:29.798
• [4.070 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:252
  STEP: Creating a kubernetes client @ 05/05/24 19:40:29.801
  May  5 19:40:29.801: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename namespaces @ 05/05/24 19:40:29.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:40:29.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:40:29.813
  STEP: Creating a test namespace @ 05/05/24 19:40:29.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:40:29.821
  STEP: Creating a service in the namespace @ 05/05/24 19:40:29.824
  STEP: Deleting the namespace @ 05/05/24 19:40:29.833
  STEP: Waiting for the namespace to be removed. @ 05/05/24 19:40:29.843
  STEP: Recreating the namespace @ 05/05/24 19:40:35.845
  STEP: Verifying there is no service in the namespace @ 05/05/24 19:40:35.855
  May  5 19:40:35.857: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5963" for this suite. @ 05/05/24 19:40:35.859
  STEP: Destroying namespace "nsdeletetest-5778" for this suite. @ 05/05/24 19:40:35.863
  May  5 19:40:35.865: INFO: Namespace nsdeletetest-5778 was already deleted
  STEP: Destroying namespace "nsdeletetest-2253" for this suite. @ 05/05/24 19:40:35.865
• [6.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 05/05/24 19:40:35.869
  May  5 19:40:35.869: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename deployment @ 05/05/24 19:40:35.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:40:35.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:40:35.883
  May  5 19:40:35.886: INFO: Creating deployment "test-recreate-deployment"
  May  5 19:40:35.889: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  May  5 19:40:35.897: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  May  5 19:40:37.902: INFO: Waiting deployment "test-recreate-deployment" to complete
  May  5 19:40:37.903: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  May  5 19:40:37.909: INFO: Updating deployment test-recreate-deployment
  May  5 19:40:37.909: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  May  5 19:40:37.960: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-948",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cf6ea5d0-5c81-4396-9ab8-053731baab47",
      ResourceVersion: (string) (len=5) "46323",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850534835,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850534837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850534837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850534837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850534837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850534837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850534835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May  5 19:40:37.969: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-948",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "842f4ae9-58c2-4c19-977a-cbf7d7fcf353",
      ResourceVersion: (string) (len=5) "46322",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850534837,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "cf6ea5d0-5c81-4396-9ab8-053731baab47",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850534837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 66 36 65 61 35  64 30 2d 35 63 38 31 2d  |\"cf6ea5d0-5c81-|
              00000120  34 33 39 36 2d 39 61 62  38 2d 30 35 33 37 33 31  |4396-9ab8-053731|
              00000130  62 61 61 62 34 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |baab47\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850534837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May  5 19:40:37.970: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  May  5 19:40:37.971: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-5cf87b5b86",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-948",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aac081dc-b201-4530-9caa-639f149e852d",
      ResourceVersion: (string) (len=5) "46311",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850534835,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "cf6ea5d0-5c81-4396-9ab8-053731baab47",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850534837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 66 36 65 61 35  64 30 2d 35 63 38 31 2d  |\"cf6ea5d0-5c81-|
              00000120  34 33 39 36 2d 39 61 62  38 2d 30 35 33 37 33 31  |4396-9ab8-053731|
              00000130  62 61 61 62 34 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |baab47\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850534837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May  5 19:40:37.982: INFO: Pod "test-recreate-deployment-76fb77d45-l85vj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-l85vj",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=14) "deployment-948",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6f87056e-3887-4665-b563-1ac6b0150f76",
      ResourceVersion: (string) (len=5) "46321",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850534837,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "842f4ae9-58c2-4c19-977a-cbf7d7fcf353",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850534837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 34  32 66 34 61 65 39 2d 35  |d\":\"842f4ae9-5|
              00000090  38 63 32 2d 34 63 31 39  2d 39 37 37 61 2d 63 62  |8c2-4c19-977a-cb|
              000000a0  66 37 64 37 66 63 66 33  35 33 5c 22 7d 22 3a 7b  |f7d7fcf353\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850534837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6tz75",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6tz75",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850534837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850534837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850534837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850534837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850534837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850534837,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:40:37.999: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-948" for this suite. @ 05/05/24 19:40:38.005
• [2.142 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:479
  STEP: Creating a kubernetes client @ 05/05/24 19:40:38.013
  May  5 19:40:38.013: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename gc @ 05/05/24 19:40:38.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:40:38.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:40:38.03
  STEP: create the deployment @ 05/05/24 19:40:38.033
  W0505 19:40:38.037430      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/05/24 19:40:38.037
  STEP: delete the deployment @ 05/05/24 19:40:38.041
  STEP: wait for all rs to be garbage collected @ 05/05/24 19:40:38.049
  STEP: expected 0 pods, got 2 pods @ 05/05/24 19:40:38.082
  STEP: Gathering metrics @ 05/05/24 19:40:38.59
  May  5 19:40:38.629: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May  5 19:40:38.629: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1610" for this suite. @ 05/05/24 19:40:38.632
• [0.622 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:85
  STEP: Creating a kubernetes client @ 05/05/24 19:40:38.637
  May  5 19:40:38.637: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/05/24 19:40:38.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:40:38.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:40:38.65
  May  5 19:40:38.652: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 19:40:44.858: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4952" for this suite. @ 05/05/24 19:40:44.863
• [6.243 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2224
  STEP: Creating a kubernetes client @ 05/05/24 19:40:44.882
  May  5 19:40:44.882: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename services @ 05/05/24 19:40:44.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:40:44.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:40:44.896
  STEP: creating service in namespace services-4617 @ 05/05/24 19:40:44.897
  STEP: creating service affinity-nodeport-transition in namespace services-4617 @ 05/05/24 19:40:44.897
  STEP: creating replication controller affinity-nodeport-transition in namespace services-4617 @ 05/05/24 19:40:44.906
  I0505 19:40:44.912879      20 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-4617, replica count: 3
  I0505 19:40:47.966713      20 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May  5 19:40:47.972: INFO: Creating new exec pod
  May  5 19:40:50.990: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-4617 exec execpod-affinityzwxvm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  May  5 19:40:51.087: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  May  5 19:40:51.087: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  5 19:40:51.087: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-4617 exec execpod-affinityzwxvm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.175 80'
  May  5 19:40:51.161: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.175 80\nConnection to 10.32.0.175 80 port [tcp/http] succeeded!\n"
  May  5 19:40:51.161: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  5 19:40:51.161: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-4617 exec execpod-affinityzwxvm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.100 31138'
  May  5 19:40:51.233: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.100 31138\nConnection to 192.168.58.100 31138 port [tcp/*] succeeded!\n"
  May  5 19:40:51.234: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  5 19:40:51.234: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-4617 exec execpod-affinityzwxvm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.101 31138'
  May  5 19:40:51.323: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.101 31138\nConnection to 192.168.58.101 31138 port [tcp/*] succeeded!\n"
  May  5 19:40:51.323: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  5 19:40:51.329: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-4617 exec execpod-affinityzwxvm -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.58.100:31138/ ; done'
  May  5 19:40:51.475: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31138/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31138/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31138/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31138/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31138/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31138/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31138/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31138/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31138/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31138/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31138/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31138/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31138/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31138/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31138/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31138/\n"
  May  5 19:40:51.475: INFO: stdout: "\naffinity-nodeport-transition-ljbqm\naffinity-nodeport-transition-6h6z9\naffinity-nodeport-transition-ljbqm\naffinity-nodeport-transition-6h6z9\naffinity-nodeport-transition-6h6z9\naffinity-nodeport-transition-ljbqm\naffinity-nodeport-transition-ljbqm\naffinity-nodeport-transition-ljbqm\naffinity-nodeport-transition-6h6z9\naffinity-nodeport-transition-ljbqm\naffinity-nodeport-transition-ljbqm\naffinity-nodeport-transition-s8rj8\naffinity-nodeport-transition-6h6z9\naffinity-nodeport-transition-s8rj8\naffinity-nodeport-transition-s8rj8\naffinity-nodeport-transition-s8rj8"
  May  5 19:40:51.475: INFO: Received response from host: affinity-nodeport-transition-ljbqm
  May  5 19:40:51.475: INFO: Received response from host: affinity-nodeport-transition-6h6z9
  May  5 19:40:51.475: INFO: Received response from host: affinity-nodeport-transition-ljbqm
  May  5 19:40:51.475: INFO: Received response from host: affinity-nodeport-transition-6h6z9
  May  5 19:40:51.475: INFO: Received response from host: affinity-nodeport-transition-6h6z9
  May  5 19:40:51.475: INFO: Received response from host: affinity-nodeport-transition-ljbqm
  May  5 19:40:51.475: INFO: Received response from host: affinity-nodeport-transition-ljbqm
  May  5 19:40:51.475: INFO: Received response from host: affinity-nodeport-transition-ljbqm
  May  5 19:40:51.475: INFO: Received response from host: affinity-nodeport-transition-6h6z9
  May  5 19:40:51.475: INFO: Received response from host: affinity-nodeport-transition-ljbqm
  May  5 19:40:51.475: INFO: Received response from host: affinity-nodeport-transition-ljbqm
  May  5 19:40:51.475: INFO: Received response from host: affinity-nodeport-transition-s8rj8
  May  5 19:40:51.475: INFO: Received response from host: affinity-nodeport-transition-6h6z9
  May  5 19:40:51.475: INFO: Received response from host: affinity-nodeport-transition-s8rj8
  May  5 19:40:51.475: INFO: Received response from host: affinity-nodeport-transition-s8rj8
  May  5 19:40:51.475: INFO: Received response from host: affinity-nodeport-transition-s8rj8
  May  5 19:40:51.491: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-4617 exec execpod-affinityzwxvm -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.58.100:31138/ ; done'
  May  5 19:40:51.616: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31138/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31138/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31138/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31138/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31138/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31138/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31138/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31138/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31138/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31138/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31138/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31138/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31138/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31138/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31138/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31138/\n"
  May  5 19:40:51.616: INFO: stdout: "\naffinity-nodeport-transition-ljbqm\naffinity-nodeport-transition-ljbqm\naffinity-nodeport-transition-ljbqm\naffinity-nodeport-transition-ljbqm\naffinity-nodeport-transition-ljbqm\naffinity-nodeport-transition-ljbqm\naffinity-nodeport-transition-ljbqm\naffinity-nodeport-transition-ljbqm\naffinity-nodeport-transition-ljbqm\naffinity-nodeport-transition-ljbqm\naffinity-nodeport-transition-ljbqm\naffinity-nodeport-transition-ljbqm\naffinity-nodeport-transition-ljbqm\naffinity-nodeport-transition-ljbqm\naffinity-nodeport-transition-ljbqm\naffinity-nodeport-transition-ljbqm"
  May  5 19:40:51.616: INFO: Received response from host: affinity-nodeport-transition-ljbqm
  May  5 19:40:51.616: INFO: Received response from host: affinity-nodeport-transition-ljbqm
  May  5 19:40:51.616: INFO: Received response from host: affinity-nodeport-transition-ljbqm
  May  5 19:40:51.616: INFO: Received response from host: affinity-nodeport-transition-ljbqm
  May  5 19:40:51.616: INFO: Received response from host: affinity-nodeport-transition-ljbqm
  May  5 19:40:51.616: INFO: Received response from host: affinity-nodeport-transition-ljbqm
  May  5 19:40:51.616: INFO: Received response from host: affinity-nodeport-transition-ljbqm
  May  5 19:40:51.616: INFO: Received response from host: affinity-nodeport-transition-ljbqm
  May  5 19:40:51.616: INFO: Received response from host: affinity-nodeport-transition-ljbqm
  May  5 19:40:51.616: INFO: Received response from host: affinity-nodeport-transition-ljbqm
  May  5 19:40:51.616: INFO: Received response from host: affinity-nodeport-transition-ljbqm
  May  5 19:40:51.616: INFO: Received response from host: affinity-nodeport-transition-ljbqm
  May  5 19:40:51.616: INFO: Received response from host: affinity-nodeport-transition-ljbqm
  May  5 19:40:51.616: INFO: Received response from host: affinity-nodeport-transition-ljbqm
  May  5 19:40:51.616: INFO: Received response from host: affinity-nodeport-transition-ljbqm
  May  5 19:40:51.616: INFO: Received response from host: affinity-nodeport-transition-ljbqm
  May  5 19:40:51.616: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May  5 19:40:51.619: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-4617, will wait for the garbage collector to delete the pods @ 05/05/24 19:40:51.632
  May  5 19:40:51.690: INFO: Deleting ReplicationController affinity-nodeport-transition took: 3.783904ms
  May  5 19:40:51.791: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.73749ms
  STEP: Destroying namespace "services-4617" for this suite. @ 05/05/24 19:40:54.308
• [9.427 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 05/05/24 19:40:54.311
  May  5 19:40:54.311: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename webhook @ 05/05/24 19:40:54.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:40:54.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:40:54.323
  STEP: Setting up server cert @ 05/05/24 19:40:54.336
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/05/24 19:40:54.569
  STEP: Deploying the webhook pod @ 05/05/24 19:40:54.583
  STEP: Wait for the deployment to be ready @ 05/05/24 19:40:54.59
  May  5 19:40:54.596: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  May  5 19:40:56.605: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 5, 19, 40, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 40, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 5, 19, 40, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 5, 19, 40, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 05/05/24 19:40:58.614
  STEP: Verifying the service has paired with the endpoint @ 05/05/24 19:40:58.637
  May  5 19:40:59.638: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 05/05/24 19:40:59.643
  STEP: create a pod that should be updated by the webhook @ 05/05/24 19:40:59.651
  May  5 19:40:59.659: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3850" for this suite. @ 05/05/24 19:40:59.696
  STEP: Destroying namespace "webhook-markers-2287" for this suite. @ 05/05/24 19:40:59.704
• [5.400 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 05/05/24 19:40:59.712
  May  5 19:40:59.712: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename field-validation @ 05/05/24 19:40:59.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:40:59.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:40:59.728
  May  5 19:40:59.729: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 19:41:02.795: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8725" for this suite. @ 05/05/24 19:41:02.805
• [3.096 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:239
  STEP: Creating a kubernetes client @ 05/05/24 19:41:02.808
  May  5 19:41:02.808: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename limitrange @ 05/05/24 19:41:02.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:41:02.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:41:02.82
  STEP: Creating LimitRange "e2e-limitrange-fv64v" in namespace "limitrange-8065" @ 05/05/24 19:41:02.822
  STEP: Creating another limitRange in another namespace @ 05/05/24 19:41:02.854
  May  5 19:41:02.862: INFO: Namespace "e2e-limitrange-fv64v-7374" created
  May  5 19:41:02.862: INFO: Creating LimitRange "e2e-limitrange-fv64v" in namespace "e2e-limitrange-fv64v-7374"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-fv64v" @ 05/05/24 19:41:02.866
  May  5 19:41:02.868: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-fv64v" in "limitrange-8065" namespace @ 05/05/24 19:41:02.868
  May  5 19:41:02.874: INFO: LimitRange "e2e-limitrange-fv64v" has been patched
  STEP: Delete LimitRange "e2e-limitrange-fv64v" by Collection with labelSelector: "e2e-limitrange-fv64v=patched" @ 05/05/24 19:41:02.874
  STEP: Confirm that the limitRange "e2e-limitrange-fv64v" has been deleted @ 05/05/24 19:41:02.879
  May  5 19:41:02.879: INFO: Requesting list of LimitRange to confirm quantity
  May  5 19:41:02.881: INFO: Found 0 LimitRange with label "e2e-limitrange-fv64v=patched"
  May  5 19:41:02.881: INFO: LimitRange "e2e-limitrange-fv64v" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-fv64v" @ 05/05/24 19:41:02.881
  May  5 19:41:02.883: INFO: Found 1 limitRange
  May  5 19:41:02.883: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-8065" for this suite. @ 05/05/24 19:41:02.886
  STEP: Destroying namespace "e2e-limitrange-fv64v-7374" for this suite. @ 05/05/24 19:41:02.889
• [0.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 05/05/24 19:41:02.896
  May  5 19:41:02.896: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename configmap @ 05/05/24 19:41:02.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:41:02.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:41:02.907
  STEP: Creating configMap with name cm-test-opt-del-e8b3abb6-4b0a-4029-bd2e-4a9673464793 @ 05/05/24 19:41:02.911
  STEP: Creating configMap with name cm-test-opt-upd-d83e843c-ab2b-4737-bdaf-4673162ac84a @ 05/05/24 19:41:02.914
  STEP: Creating the pod @ 05/05/24 19:41:02.917
  STEP: Deleting configmap cm-test-opt-del-e8b3abb6-4b0a-4029-bd2e-4a9673464793 @ 05/05/24 19:41:04.95
  STEP: Updating configmap cm-test-opt-upd-d83e843c-ab2b-4737-bdaf-4673162ac84a @ 05/05/24 19:41:04.952
  STEP: Creating configMap with name cm-test-opt-create-082a96b6-4b75-4cf2-b1b5-e218267f99ee @ 05/05/24 19:41:04.954
  STEP: waiting to observe update in volume @ 05/05/24 19:41:04.956
  May  5 19:41:06.970: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8034" for this suite. @ 05/05/24 19:41:06.972
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:107
  STEP: Creating a kubernetes client @ 05/05/24 19:41:06.977
  May  5 19:41:06.977: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename pod-network-test @ 05/05/24 19:41:06.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:41:06.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:41:06.991
  STEP: Performing setup for networking test in namespace pod-network-test-2983 @ 05/05/24 19:41:06.993
  STEP: creating a selector @ 05/05/24 19:41:06.993
  STEP: Creating the service pods in kubernetes @ 05/05/24 19:41:06.993
  May  5 19:41:06.993: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/05/24 19:41:19.048
  May  5 19:41:21.081: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  May  5 19:41:21.081: INFO: Going to poll 10.200.131.169 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  May  5 19:41:21.083: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.200.131.169:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2983 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  5 19:41:21.083: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 19:41:21.084: INFO: ExecWithOptions: Clientset creation
  May  5 19:41:21.084: INFO: ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/pod-network-test-2983/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.200.131.169%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May  5 19:41:21.127: INFO: Found all 1 expected endpoints: [netserver-0]
  May  5 19:41:21.127: INFO: Going to poll 10.200.5.62 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  May  5 19:41:21.130: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.200.5.62:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2983 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  5 19:41:21.130: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 19:41:21.131: INFO: ExecWithOptions: Clientset creation
  May  5 19:41:21.131: INFO: ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/pod-network-test-2983/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.200.5.62%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May  5 19:41:21.166: INFO: Found all 1 expected endpoints: [netserver-1]
  May  5 19:41:21.166: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2983" for this suite. @ 05/05/24 19:41:21.169
• [14.204 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:189
  STEP: Creating a kubernetes client @ 05/05/24 19:41:21.182
  May  5 19:41:21.182: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename runtimeclass @ 05/05/24 19:41:21.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:41:21.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:41:21.192
  STEP: getting /apis @ 05/05/24 19:41:21.194
  STEP: getting /apis/node.k8s.io @ 05/05/24 19:41:21.196
  STEP: getting /apis/node.k8s.io/v1 @ 05/05/24 19:41:21.197
  STEP: creating @ 05/05/24 19:41:21.198
  STEP: watching @ 05/05/24 19:41:21.21
  May  5 19:41:21.210: INFO: starting watch
  STEP: getting @ 05/05/24 19:41:21.214
  STEP: listing @ 05/05/24 19:41:21.215
  STEP: patching @ 05/05/24 19:41:21.218
  STEP: updating @ 05/05/24 19:41:21.221
  May  5 19:41:21.224: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 05/05/24 19:41:21.224
  STEP: deleting a collection @ 05/05/24 19:41:21.229
  May  5 19:41:21.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3628" for this suite. @ 05/05/24 19:41:21.242
• [0.063 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 05/05/24 19:41:21.245
  May  5 19:41:21.245: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename sched-pred @ 05/05/24 19:41:21.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:41:21.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:41:21.26
  May  5 19:41:21.262: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  May  5 19:41:21.265: INFO: Waiting for terminating namespaces to be deleted...
  May  5 19:41:21.266: INFO: 
  Logging pods the apiserver thinks is on node worker00 before test
  May  5 19:41:21.272: INFO: coredns-5b87cbd9d7-9jpw9 from kube-system started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.272: INFO: 	Container coredns ready: true, restart count 0
  May  5 19:41:21.272: INFO: coredns-5b87cbd9d7-ww797 from kube-system started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.272: INFO: 	Container coredns ready: true, restart count 0
  May  5 19:41:21.272: INFO: etcd-worker00 from kube-system started at 2024-05-05 18:09:11 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.272: INFO: 	Container etcd ready: true, restart count 0
  May  5 19:41:21.272: INFO: gobetween-worker00 from kube-system started at 2024-05-05 18:09:11 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.272: INFO: 	Container gobetween ready: true, restart count 0
  May  5 19:41:21.272: INFO: kube-apiserver-worker00 from kube-system started at 2024-05-05 18:09:11 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.272: INFO: 	Container kube-apiserver ready: true, restart count 0
  May  5 19:41:21.272: INFO: kube-controller-manager-worker00 from kube-system started at 2024-05-05 18:09:11 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.272: INFO: 	Container kube-controller-manager ready: true, restart count 0
  May  5 19:41:21.272: INFO: kube-proxy-worker00 from kube-system started at 2024-05-05 18:09:11 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.272: INFO: 	Container kube-proxy ready: true, restart count 0
  May  5 19:41:21.272: INFO: kube-scheduler-worker00 from kube-system started at 2024-05-05 18:09:11 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.272: INFO: 	Container kube-scheduler ready: true, restart count 0
  May  5 19:41:21.272: INFO: kubernetes-dashboard-api-86d45cdc48-cr84l from kube-system started at 2024-05-05 18:13:22 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.272: INFO: 	Container kubernetes-dashboard-api ready: true, restart count 0
  May  5 19:41:21.272: INFO: kubernetes-dashboard-auth-5d859bc497-5trkl from kube-system started at 2024-05-05 18:13:22 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.272: INFO: 	Container kubernetes-dashboard-auth ready: true, restart count 0
  May  5 19:41:21.272: INFO: kubernetes-dashboard-kong-65b5fb65cc-5hbxz from kube-system started at 2024-05-05 18:13:22 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.272: INFO: 	Container proxy ready: true, restart count 0
  May  5 19:41:21.272: INFO: kubernetes-dashboard-metrics-scraper-56c9f5cc54-kgvqk from kube-system started at 2024-05-05 18:13:22 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.272: INFO: 	Container kubernetes-dashboard-metrics-scraper ready: true, restart count 0
  May  5 19:41:21.272: INFO: kubernetes-dashboard-web-74dcc49f5-ck8gt from kube-system started at 2024-05-05 18:13:22 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.272: INFO: 	Container kubernetes-dashboard-web ready: true, restart count 0
  May  5 19:41:21.272: INFO: calico-kube-controllers-758c99c4b5-t7476 from networking started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.272: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  May  5 19:41:21.272: INFO: calico-node-txcwz from networking started at 2024-05-05 18:09:54 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.272: INFO: 	Container calico-node ready: true, restart count 0
  May  5 19:41:21.272: INFO: calico-typha-5cfbc84557-dsph6 from networking started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.272: INFO: 	Container calico-typha ready: true, restart count 0
  May  5 19:41:21.272: INFO: metallb-controller-67f4cfb984-c266w from networking started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.272: INFO: 	Container controller ready: true, restart count 0
  May  5 19:41:21.272: INFO: metallb-speaker-jjxsx from networking started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.272: INFO: 	Container speaker ready: true, restart count 0
  May  5 19:41:21.272: INFO: netserver-0 from pod-network-test-2983 started at 2024-05-05 19:41:07 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.272: INFO: 	Container webserver ready: true, restart count 0
  May  5 19:41:21.272: INFO: sonobuoy from sonobuoy started at 2024-05-05 18:14:39 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.272: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  May  5 19:41:21.272: INFO: sonobuoy-e2e-job-c39f0ba3513c4764 from sonobuoy started at 2024-05-05 18:14:44 +0000 UTC (2 container statuses recorded)
  May  5 19:41:21.272: INFO: 	Container e2e ready: true, restart count 0
  May  5 19:41:21.272: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May  5 19:41:21.272: INFO: sonobuoy-systemd-logs-daemon-set-b21bb3e5fd3f4718-c5bfp from sonobuoy started at 2024-05-05 18:14:44 +0000 UTC (2 container statuses recorded)
  May  5 19:41:21.272: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May  5 19:41:21.272: INFO: 	Container systemd-logs ready: true, restart count 0
  May  5 19:41:21.272: INFO: ceph-csi-cephfs-nodeplugin-rcxpw from storage started at 2024-05-05 18:09:54 +0000 UTC (3 container statuses recorded)
  May  5 19:41:21.272: INFO: 	Container csi-cephfsplugin ready: true, restart count 0
  May  5 19:41:21.272: INFO: 	Container driver-registrar ready: true, restart count 0
  May  5 19:41:21.272: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:41:21.272: INFO: ceph-csi-rbd-nodeplugin-ndxrk from storage started at 2024-05-05 18:09:54 +0000 UTC (3 container statuses recorded)
  May  5 19:41:21.272: INFO: 	Container csi-rbdplugin ready: true, restart count 0
  May  5 19:41:21.272: INFO: 	Container driver-registrar ready: true, restart count 0
  May  5 19:41:21.272: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:41:21.272: INFO: ceph-mon-worker00-797bf6469d-vpp5c from storage started at 2024-05-05 18:09:55 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.272: INFO: 	Container ceph-mon ready: true, restart count 0
  May  5 19:41:21.272: INFO: snapshot-controller-587656f7cd-jzqv2 from storage started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.272: INFO: 	Container snapshot-controller ready: true, restart count 0
  May  5 19:41:21.272: INFO: snapshot-controller-587656f7cd-lz69v from storage started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.272: INFO: 	Container snapshot-controller ready: true, restart count 0
  May  5 19:41:21.272: INFO: snapshot-validation-webhook-64b8d8cb7b-vsnwg from storage started at 2024-05-05 18:10:09 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.272: INFO: 	Container snapshot-validation-webhook ready: true, restart count 0
  May  5 19:41:21.272: INFO: 
  Logging pods the apiserver thinks is on node worker01 before test
  May  5 19:41:21.280: INFO: gobetween-worker01 from kube-system started at 2024-05-05 18:09:20 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.280: INFO: 	Container gobetween ready: true, restart count 0
  May  5 19:41:21.280: INFO: kube-proxy-worker01 from kube-system started at 2024-05-05 18:09:20 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.280: INFO: 	Container kube-proxy ready: true, restart count 0
  May  5 19:41:21.280: INFO: calico-node-88klg from networking started at 2024-05-05 18:09:54 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.280: INFO: 	Container calico-node ready: true, restart count 0
  May  5 19:41:21.280: INFO: metallb-speaker-b72z2 from networking started at 2024-05-05 18:18:36 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.281: INFO: 	Container speaker ready: true, restart count 0
  May  5 19:41:21.281: INFO: host-test-container-pod from pod-network-test-2983 started at 2024-05-05 19:41:19 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.281: INFO: 	Container agnhost-container ready: true, restart count 0
  May  5 19:41:21.281: INFO: netserver-1 from pod-network-test-2983 started at 2024-05-05 19:41:07 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.281: INFO: 	Container webserver ready: true, restart count 0
  May  5 19:41:21.281: INFO: test-container-pod from pod-network-test-2983 started at 2024-05-05 19:41:19 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.281: INFO: 	Container webserver ready: true, restart count 0
  May  5 19:41:21.281: INFO: sonobuoy-systemd-logs-daemon-set-b21bb3e5fd3f4718-pqr9c from sonobuoy started at 2024-05-05 18:14:44 +0000 UTC (2 container statuses recorded)
  May  5 19:41:21.281: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container systemd-logs ready: true, restart count 0
  May  5 19:41:21.281: INFO: ceph-csi-cephfs-nodeplugin-q249r from storage started at 2024-05-05 18:18:36 +0000 UTC (3 container statuses recorded)
  May  5 19:41:21.281: INFO: 	Container csi-cephfsplugin ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container driver-registrar ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:41:21.281: INFO: ceph-csi-cephfs-provisioner-6dc49995f7-9p65d from storage started at 2024-05-05 18:18:36 +0000 UTC (5 container statuses recorded)
  May  5 19:41:21.281: INFO: 	Container csi-cephfsplugin ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container csi-provisioner ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container csi-resizer ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container csi-snapshotter ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:41:21.281: INFO: ceph-csi-cephfs-provisioner-6dc49995f7-cpnz2 from storage started at 2024-05-05 18:18:36 +0000 UTC (5 container statuses recorded)
  May  5 19:41:21.281: INFO: 	Container csi-cephfsplugin ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container csi-provisioner ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container csi-resizer ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container csi-snapshotter ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:41:21.281: INFO: ceph-csi-cephfs-provisioner-6dc49995f7-jzrmz from storage started at 2024-05-05 18:18:36 +0000 UTC (5 container statuses recorded)
  May  5 19:41:21.281: INFO: 	Container csi-cephfsplugin ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container csi-provisioner ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container csi-resizer ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container csi-snapshotter ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:41:21.281: INFO: ceph-csi-rbd-nodeplugin-wcfzv from storage started at 2024-05-05 18:18:36 +0000 UTC (3 container statuses recorded)
  May  5 19:41:21.281: INFO: 	Container csi-rbdplugin ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container driver-registrar ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:41:21.281: INFO: ceph-csi-rbd-provisioner-68c69d9998-x5qfs from storage started at 2024-05-05 18:18:36 +0000 UTC (7 container statuses recorded)
  May  5 19:41:21.281: INFO: 	Container csi-attacher ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container csi-provisioner ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container csi-rbdplugin ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container csi-rbdplugin-controller ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container csi-resizer ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container csi-snapshotter ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:41:21.281: INFO: ceph-csi-rbd-provisioner-68c69d9998-xs77s from storage started at 2024-05-05 18:18:36 +0000 UTC (7 container statuses recorded)
  May  5 19:41:21.281: INFO: 	Container csi-attacher ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container csi-provisioner ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container csi-rbdplugin ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container csi-rbdplugin-controller ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container csi-resizer ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container csi-snapshotter ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:41:21.281: INFO: ceph-csi-rbd-provisioner-68c69d9998-zxjxm from storage started at 2024-05-05 18:18:36 +0000 UTC (7 container statuses recorded)
  May  5 19:41:21.281: INFO: 	Container csi-attacher ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container csi-provisioner ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container csi-rbdplugin ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container csi-rbdplugin-controller ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container csi-resizer ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container csi-snapshotter ready: true, restart count 0
  May  5 19:41:21.281: INFO: 	Container liveness-prometheus ready: true, restart count 0
  May  5 19:41:21.281: INFO: ceph-mds-worker01-798b64d68-cmkx8 from storage started at 2024-05-05 18:18:36 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.281: INFO: 	Container ceph-mds ready: true, restart count 0
  May  5 19:41:21.281: INFO: ceph-mgr-worker01-7c4c56cf76-jkjzd from storage started at 2024-05-05 18:18:36 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.281: INFO: 	Container ceph-mgr ready: true, restart count 0
  May  5 19:41:21.281: INFO: ceph-osd-worker01-75d7885b87-bb7h2 from storage started at 2024-05-05 18:18:36 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.281: INFO: 	Container ceph-osd ready: true, restart count 0
  May  5 19:41:21.281: INFO: ceph-rgw-worker01-5bd8c8bf8b-x9h9p from storage started at 2024-05-05 18:18:36 +0000 UTC (1 container statuses recorded)
  May  5 19:41:21.281: INFO: 	Container ceph-rgw ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/05/24 19:41:21.281
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/05/24 19:41:23.292
  STEP: Trying to apply a random label on the found node. @ 05/05/24 19:41:23.303
  STEP: verifying the node has the label kubernetes.io/e2e-1b899ca5-abbe-4d9c-a4b3-606b2d4947ab 95 @ 05/05/24 19:41:23.31
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 05/05/24 19:41:23.318
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.58.101 on the node which pod4 resides and expect not scheduled @ 05/05/24 19:41:25.33
  STEP: removing the label kubernetes.io/e2e-1b899ca5-abbe-4d9c-a4b3-606b2d4947ab off the node worker01 @ 05/05/24 19:46:25.348
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-1b899ca5-abbe-4d9c-a4b3-606b2d4947ab @ 05/05/24 19:46:25.364
  May  5 19:46:25.372: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7194" for this suite. @ 05/05/24 19:46:25.382
• [304.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 05/05/24 19:46:25.4
  May  5 19:46:25.400: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename subpath @ 05/05/24 19:46:25.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:46:25.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:46:25.429
  STEP: Setting up data @ 05/05/24 19:46:25.435
  STEP: Creating pod pod-subpath-test-configmap-s9gd @ 05/05/24 19:46:25.457
  STEP: Creating a pod to test atomic-volume-subpath @ 05/05/24 19:46:25.457
  STEP: Saw pod success @ 05/05/24 19:46:49.543
  May  5 19:46:49.547: INFO: Trying to get logs from node worker01 pod pod-subpath-test-configmap-s9gd container test-container-subpath-configmap-s9gd: <nil>
  STEP: delete the pod @ 05/05/24 19:46:49.569
  STEP: Deleting pod pod-subpath-test-configmap-s9gd @ 05/05/24 19:46:49.592
  May  5 19:46:49.592: INFO: Deleting pod "pod-subpath-test-configmap-s9gd" in namespace "subpath-5415"
  May  5 19:46:49.597: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5415" for this suite. @ 05/05/24 19:46:49.6
• [24.217 seconds]
------------------------------
SS
------------------------------
[sig-node] PreStop should call prestop when killing a pod  [Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 05/05/24 19:46:49.618
  May  5 19:46:49.618: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename prestop @ 05/05/24 19:46:49.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:46:49.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:46:49.644
  STEP: Creating server pod server in namespace prestop-8913 @ 05/05/24 19:46:49.647
  STEP: Waiting for pods to come up. @ 05/05/24 19:46:49.656
  STEP: Creating tester pod tester in namespace prestop-8913 @ 05/05/24 19:46:51.67
  STEP: Deleting pre-stop pod @ 05/05/24 19:46:53.694
  May  5 19:46:58.713: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  May  5 19:46:58.714: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Deleting the server pod @ 05/05/24 19:46:58.72
  STEP: Destroying namespace "prestop-8913" for this suite. @ 05/05/24 19:46:58.736
• [9.134 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 05/05/24 19:46:58.758
  May  5 19:46:58.758: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename container-runtime @ 05/05/24 19:46:58.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:46:58.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:46:58.791
  STEP: create the container @ 05/05/24 19:46:58.796
  W0505 19:46:58.810602      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 05/05/24 19:46:58.81
  STEP: get the container status @ 05/05/24 19:47:01.83
  STEP: the container should be terminated @ 05/05/24 19:47:01.833
  STEP: the termination message should be set @ 05/05/24 19:47:01.833
  May  5 19:47:01.833: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/05/24 19:47:01.833
  May  5 19:47:01.848: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-719" for this suite. @ 05/05/24 19:47:01.852
• [3.099 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 05/05/24 19:47:01.857
  May  5 19:47:01.857: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename pods @ 05/05/24 19:47:01.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:47:01.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:47:01.881
  May  5 19:47:01.886: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: creating the pod @ 05/05/24 19:47:01.886
  STEP: submitting the pod to kubernetes @ 05/05/24 19:47:01.886
  May  5 19:47:03.915: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-859" for this suite. @ 05/05/24 19:47:03.924
• [2.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 05/05/24 19:47:03.94
  May  5 19:47:03.941: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename cronjob @ 05/05/24 19:47:03.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:47:03.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:47:03.975
  STEP: Creating a cronjob @ 05/05/24 19:47:03.979
  STEP: creating @ 05/05/24 19:47:03.979
  STEP: getting @ 05/05/24 19:47:03.989
  STEP: listing @ 05/05/24 19:47:03.993
  STEP: watching @ 05/05/24 19:47:03.997
  May  5 19:47:03.997: INFO: starting watch
  STEP: cluster-wide listing @ 05/05/24 19:47:04.002
  STEP: cluster-wide watching @ 05/05/24 19:47:04.012
  May  5 19:47:04.012: INFO: starting watch
  STEP: patching @ 05/05/24 19:47:04.016
  STEP: updating @ 05/05/24 19:47:04.025
  May  5 19:47:04.038: INFO: waiting for watch events with expected annotations
  May  5 19:47:04.038: INFO: saw patched and updated annotations
  STEP: patching /status @ 05/05/24 19:47:04.038
  STEP: updating /status @ 05/05/24 19:47:04.046
  STEP: get /status @ 05/05/24 19:47:04.055
  STEP: deleting @ 05/05/24 19:47:04.059
  STEP: deleting a collection @ 05/05/24 19:47:04.073
  May  5 19:47:04.085: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9915" for this suite. @ 05/05/24 19:47:04.089
• [0.160 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:104
  STEP: Creating a kubernetes client @ 05/05/24 19:47:04.1
  May  5 19:47:04.100: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename runtimeclass @ 05/05/24 19:47:04.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:47:04.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:47:04.137
  May  5 19:47:06.163: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9032" for this suite. @ 05/05/24 19:47:06.186
• [2.092 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:642
  STEP: Creating a kubernetes client @ 05/05/24 19:47:06.194
  May  5 19:47:06.194: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename job @ 05/05/24 19:47:06.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:47:06.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:47:06.222
  STEP: Creating a job @ 05/05/24 19:47:06.226
  STEP: Ensure pods equal to parallelism count is attached to the job @ 05/05/24 19:47:06.235
  STEP: patching /status @ 05/05/24 19:47:08.24
  STEP: updating /status @ 05/05/24 19:47:08.247
  STEP: get /status @ 05/05/24 19:47:08.253
  May  5 19:47:08.256: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4212" for this suite. @ 05/05/24 19:47:08.26
• [2.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:58
  STEP: Creating a kubernetes client @ 05/05/24 19:47:08.27
  May  5 19:47:08.270: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/05/24 19:47:08.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:47:08.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:47:08.292
  May  5 19:47:08.295: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  May  5 19:47:09.329: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-608" for this suite. @ 05/05/24 19:47:09.335
• [1.073 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 05/05/24 19:47:09.344
  May  5 19:47:09.344: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename downward-api @ 05/05/24 19:47:09.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:47:09.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:47:09.366
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 19:47:09.371
  STEP: Saw pod success @ 05/05/24 19:47:13.401
  May  5 19:47:13.405: INFO: Trying to get logs from node worker01 pod downwardapi-volume-30c98629-985e-41e3-a5d9-980676fd2b93 container client-container: <nil>
  STEP: delete the pod @ 05/05/24 19:47:13.412
  May  5 19:47:13.426: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8794" for this suite. @ 05/05/24 19:47:13.431
• [4.098 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:101
  STEP: Creating a kubernetes client @ 05/05/24 19:47:13.441
  May  5 19:47:13.441: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename resourcequota @ 05/05/24 19:47:13.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:47:13.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:47:13.481
  STEP: Counting existing ResourceQuota @ 05/05/24 19:47:13.489
  STEP: Creating a ResourceQuota @ 05/05/24 19:47:18.495
  STEP: Ensuring resource quota status is calculated @ 05/05/24 19:47:18.52
  STEP: Creating a Service @ 05/05/24 19:47:20.53
  STEP: Creating a NodePort Service @ 05/05/24 19:47:20.578
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 05/05/24 19:47:20.627
  STEP: Ensuring resource quota status captures service creation @ 05/05/24 19:47:20.672
  STEP: Deleting Services @ 05/05/24 19:47:22.676
  STEP: Ensuring resource quota status released usage @ 05/05/24 19:47:22.72
  May  5 19:47:24.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1739" for this suite. @ 05/05/24 19:47:24.727
• [11.293 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1674
  STEP: Creating a kubernetes client @ 05/05/24 19:47:24.741
  May  5 19:47:24.741: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename kubectl @ 05/05/24 19:47:24.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:47:24.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:47:24.768
  May  5 19:47:24.772: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=kubectl-9468 version'
  May  5 19:47:24.853: INFO: stderr: ""
  May  5 19:47:24.853: INFO: stdout: "Client Version: v1.28.9\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.28.9\n"
  May  5 19:47:24.854: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9468" for this suite. @ 05/05/24 19:47:24.86
• [0.129 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 05/05/24 19:47:24.871
  May  5 19:47:24.871: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename projected @ 05/05/24 19:47:24.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:47:24.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:47:24.895
  STEP: Creating projection with secret that has name projected-secret-test-map-30fedc6b-8679-4303-bf08-cdaeed9f7bef @ 05/05/24 19:47:24.902
  STEP: Creating a pod to test consume secrets @ 05/05/24 19:47:24.912
  STEP: Saw pod success @ 05/05/24 19:47:28.945
  May  5 19:47:28.951: INFO: Trying to get logs from node worker01 pod pod-projected-secrets-86759d68-49a7-496c-9d38-d7a83e9341f4 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/05/24 19:47:28.96
  May  5 19:47:28.980: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4337" for this suite. @ 05/05/24 19:47:28.985
• [4.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 05/05/24 19:47:28.995
  May  5 19:47:28.995: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename downward-api @ 05/05/24 19:47:28.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:47:29.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:47:29.024
  STEP: Creating the pod @ 05/05/24 19:47:29.028
  May  5 19:47:31.572: INFO: Successfully updated pod "annotationupdate52192ce1-5f01-4c47-a4fa-61d9ce94e401"
  May  5 19:47:35.604: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3719" for this suite. @ 05/05/24 19:47:35.608
• [6.620 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 05/05/24 19:47:35.616
  May  5 19:47:35.616: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename events @ 05/05/24 19:47:35.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:47:35.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:47:35.639
  STEP: Create set of events @ 05/05/24 19:47:35.643
  STEP: get a list of Events with a label in the current namespace @ 05/05/24 19:47:35.665
  STEP: delete a list of events @ 05/05/24 19:47:35.669
  May  5 19:47:35.669: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/05/24 19:47:35.684
  May  5 19:47:35.686: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9840" for this suite. @ 05/05/24 19:47:35.689
• [0.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3552
  STEP: Creating a kubernetes client @ 05/05/24 19:47:35.698
  May  5 19:47:35.698: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename services @ 05/05/24 19:47:35.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:47:35.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:47:35.724
  STEP: creating a collection of services @ 05/05/24 19:47:35.729
  May  5 19:47:35.729: INFO: Creating e2e-svc-a-p5fjv
  May  5 19:47:35.741: INFO: Creating e2e-svc-b-cgg97
  May  5 19:47:35.757: INFO: Creating e2e-svc-c-7nq8d
  STEP: deleting service collection @ 05/05/24 19:47:35.771
  May  5 19:47:35.811: INFO: Collection of services has been deleted
  May  5 19:47:35.811: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8822" for this suite. @ 05/05/24 19:47:35.815
• [0.123 seconds]
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 05/05/24 19:47:35.821
  May  5 19:47:35.822: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename deployment @ 05/05/24 19:47:35.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:47:35.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:47:35.847
  May  5 19:47:35.852: INFO: Creating deployment "webserver-deployment"
  May  5 19:47:35.858: INFO: Waiting for observed generation 1
  May  5 19:47:37.867: INFO: Waiting for all required pods to come up
  May  5 19:47:37.874: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 05/05/24 19:47:37.874
  May  5 19:47:39.905: INFO: Waiting for deployment "webserver-deployment" to complete
  May  5 19:47:39.910: INFO: Updating deployment "webserver-deployment" with a non-existent image
  May  5 19:47:39.919: INFO: Updating deployment webserver-deployment
  May  5 19:47:39.919: INFO: Waiting for observed generation 2
  May  5 19:47:41.929: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  May  5 19:47:41.935: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  May  5 19:47:41.940: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  May  5 19:47:41.946: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  May  5 19:47:41.946: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  May  5 19:47:41.950: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  May  5 19:47:41.955: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  May  5 19:47:41.955: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  May  5 19:47:41.965: INFO: Updating deployment webserver-deployment
  May  5 19:47:41.965: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  May  5 19:47:42.035: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  May  5 19:47:44.076: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  May  5 19:47:44.136: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c8c16025-8f2b-4128-a682-f2a601f0645d",
      ResourceVersion: (string) (len=5) "49163",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535255,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 25,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535255,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May  5 19:47:44.196: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "79c26ad3-28b2-4dfb-851b-810b4e293d55",
      ResourceVersion: (string) (len=5) "49153",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535259,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "c8c16025-8f2b-4128-a682-f2a601f0645d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 38 63 31 36 30  32 35 2d 38 66 32 62 2d  |\"c8c16025-8f2b-|
              00000120  34 31 32 38 2d 61 36 38  32 2d 66 32 61 36 30 31  |4128-a682-f2a601|
              00000130  66 30 36 34 35 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f0645d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May  5 19:47:44.200: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  May  5 19:47:44.201: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f04bdfe1-03ee-41ce-b7ae-44e609f676a4",
      ResourceVersion: (string) (len=5) "49160",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535255,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "c8c16025-8f2b-4128-a682-f2a601f0645d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 38 63 31 36 30  32 35 2d 38 66 32 62 2d  |\"c8c16025-8f2b-|
              00000120  34 31 32 38 2d 61 36 38  32 2d 66 32 61 36 30 31  |4128-a682-f2a601|
              00000130  66 30 36 34 35 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f0645d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May  5 19:47:44.266: INFO: Pod "webserver-deployment-557759b7c7-4cg7r" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4cg7r",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8916e243-af65-4e49-aab3-c97d89085164",
      ResourceVersion: (string) (len=5) "48952",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535255,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "8b9c4bad54d82a63c06800923281b89d544234f24e460b0545665d19fdf44503",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.181/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.181/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f04bdfe1-03ee-41ce-b7ae-44e609f676a4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535255,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  34 62 64 66 65 31 2d 30  |d\":\"f04bdfe1-0|
              00000090  33 65 65 2d 34 31 63 65  2d 62 37 61 65 2d 34 34  |3ee-41ce-b7ae-44|
              000000a0  65 36 30 39 66 36 37 36  61 34 5c 22 7d 22 3a 7b  |e609f676a4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535257,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 38 31 5c 22 7d 22  |.200.131.181\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z8smw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z8smw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535255,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535255,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.181",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.181"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535255,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850535257,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7b830f2ea2f3589ab2788083ef743676ae0a0d24a0d648425599ef893b0e79f7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:44.363: INFO: Pod "webserver-deployment-557759b7c7-5b772" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5b772",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5a4d9795-c28e-48f8-87cf-09d8d7b6aa11",
      ResourceVersion: (string) (len=5) "49185",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f04bdfe1-03ee-41ce-b7ae-44e609f676a4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  34 62 64 66 65 31 2d 30  |d\":\"f04bdfe1-0|
              00000090  33 65 65 2d 34 31 63 65  2d 62 37 61 65 2d 34 34  |3ee-41ce-b7ae-44|
              000000a0  65 36 30 39 66 36 37 36  61 34 5c 22 7d 22 3a 7b  |e609f676a4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7pnql",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7pnql",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:44.404: INFO: Pod "webserver-deployment-557759b7c7-69j7b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-69j7b",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b9c8f140-8d2e-41bc-885e-4218e15573f5",
      ResourceVersion: (string) (len=5) "49250",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d281b19b42b0d705b48265affa065c01501a11a932a90fd3a7e611db5c64082d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.143/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.143/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f04bdfe1-03ee-41ce-b7ae-44e609f676a4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  34 62 64 66 65 31 2d 30  |d\":\"f04bdfe1-0|
              00000090  33 65 65 2d 34 31 63 65  2d 62 37 61 65 2d 34 34  |3ee-41ce-b7ae-44|
              000000a0  65 36 30 39 66 36 37 36  61 34 5c 22 7d 22 3a 7b  |e609f676a4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535263,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xk42d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xk42d",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:44.526: INFO: Pod "webserver-deployment-557759b7c7-6x8wx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-6x8wx",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ee6064c5-9722-4b14-9cb3-c9f3316557d2",
      ResourceVersion: (string) (len=5) "49231",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "bff538c8f7ede34e6ddefcc84d307132b545d6d84521b44784d9bf633e840864",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.174/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.174/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f04bdfe1-03ee-41ce-b7ae-44e609f676a4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  34 62 64 66 65 31 2d 30  |d\":\"f04bdfe1-0|
              00000090  33 65 65 2d 34 31 63 65  2d 62 37 61 65 2d 34 34  |3ee-41ce-b7ae-44|
              000000a0  65 36 30 39 66 36 37 36  61 34 5c 22 7d 22 3a 7b  |e609f676a4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535263,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kwn7p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kwn7p",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:44.580: INFO: Pod "webserver-deployment-557759b7c7-9w8pr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-9w8pr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "492cffa4-52d3-467b-a261-904318eb6c9e",
      ResourceVersion: (string) (len=5) "49173",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f04bdfe1-03ee-41ce-b7ae-44e609f676a4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  34 62 64 66 65 31 2d 30  |d\":\"f04bdfe1-0|
              00000090  33 65 65 2d 34 31 63 65  2d 62 37 61 65 2d 34 34  |3ee-41ce-b7ae-44|
              000000a0  65 36 30 39 66 36 37 36  61 34 5c 22 7d 22 3a 7b  |e609f676a4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fnm98",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fnm98",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:44.588: INFO: Pod "webserver-deployment-557759b7c7-bc2b6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-bc2b6",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c7f4b8b9-9669-4986-a695-f72eb38a500e",
      ResourceVersion: (string) (len=5) "49234",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "5dd4b2299f9259037e53b977921b80b97d86c68868e1dd2ae3f5fab3051cd3da",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.12/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.12/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f04bdfe1-03ee-41ce-b7ae-44e609f676a4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  34 62 64 66 65 31 2d 30  |d\":\"f04bdfe1-0|
              00000090  33 65 65 2d 34 31 63 65  2d 62 37 61 65 2d 34 34  |3ee-41ce-b7ae-44|
              000000a0  65 36 30 39 66 36 37 36  61 34 5c 22 7d 22 3a 7b  |e609f676a4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535263,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l66hg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l66hg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:44.600: INFO: Pod "webserver-deployment-557759b7c7-cjr7r" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-cjr7r",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1f6762a3-17d5-4ea2-bf4b-a868ccc349b0",
      ResourceVersion: (string) (len=5) "49177",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f04bdfe1-03ee-41ce-b7ae-44e609f676a4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  34 62 64 66 65 31 2d 30  |d\":\"f04bdfe1-0|
              00000090  33 65 65 2d 34 31 63 65  2d 62 37 61 65 2d 34 34  |3ee-41ce-b7ae-44|
              000000a0  65 36 30 39 66 36 37 36  61 34 5c 22 7d 22 3a 7b  |e609f676a4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rzgv6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rzgv6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:44.674: INFO: Pod "webserver-deployment-557759b7c7-ddbln" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-ddbln",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "08263233-529d-4e15-8940-20a68826bfc5",
      ResourceVersion: (string) (len=5) "48914",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535255,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f671ea448aac237c85f17fc8819dffeaf61c0ef5f74740e50af4cfdaa53d3b93",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.188/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.188/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f04bdfe1-03ee-41ce-b7ae-44e609f676a4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535255,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  34 62 64 66 65 31 2d 30  |d\":\"f04bdfe1-0|
              00000090  33 65 65 2d 34 31 63 65  2d 62 37 61 65 2d 34 34  |3ee-41ce-b7ae-44|
              000000a0  65 36 30 39 66 36 37 36  61 34 5c 22 7d 22 3a 7b  |e609f676a4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535256,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535257,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 38 38 5c 22 7d 22  |.200.131.188\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j4trf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j4trf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535257,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535255,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535257,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535257,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535255,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.188",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.188"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535255,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850535257,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://fa01e26cf823a743d4d0de03807d2f3aaede1144647efebabeef2c552ecee800",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:44.762: INFO: Pod "webserver-deployment-557759b7c7-dgrnf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-dgrnf",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "18831a81-dc78-45dd-add0-23b544f30f65",
      ResourceVersion: (string) (len=5) "48935",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535255,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "1738db248f8a6db74d5da4a6bbe35db7e7f2af4d9a52ce4140c208f442e33c44",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.57/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.57/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f04bdfe1-03ee-41ce-b7ae-44e609f676a4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535255,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  34 62 64 66 65 31 2d 30  |d\":\"f04bdfe1-0|
              00000090  33 65 65 2d 34 31 63 65  2d 62 37 61 65 2d 34 34  |3ee-41ce-b7ae-44|
              000000a0  65 36 30 39 66 36 37 36  61 34 5c 22 7d 22 3a 7b  |e609f676a4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535256,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 35  37 5c 22 7d 22 3a 7b 22  |.200.5.57\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-htk6b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-htk6b",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535255,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535255,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.57",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.57"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535255,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850535257,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3f8eb9f2fb5925ff1f026f109e6efdfe889764f880d2a08c07f1584ea5de6571",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:44.777: INFO: Pod "webserver-deployment-557759b7c7-gfm5b" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-gfm5b",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a958ca30-6343-4a3f-858d-9d55e6610981",
      ResourceVersion: (string) (len=5) "48949",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535255,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "46886f80f1ce832beb4b5f4dfd2faa1220e7d3e093094fad57407570acd1a347",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.144/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.144/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f04bdfe1-03ee-41ce-b7ae-44e609f676a4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535255,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  34 62 64 66 65 31 2d 30  |d\":\"f04bdfe1-0|
              00000090  33 65 65 2d 34 31 63 65  2d 62 37 61 65 2d 34 34  |3ee-41ce-b7ae-44|
              000000a0  65 36 30 39 66 36 37 36  61 34 5c 22 7d 22 3a 7b  |e609f676a4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535257,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 34 34 5c 22 7d 22  |.200.131.144\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qwm7z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qwm7z",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535256,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535255,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.144",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.144"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535256,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850535257,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8a2c1060fd65ad61d763273b5aa99a05bddd2d03da4049ba19375c54562fc677",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:44.809: INFO: Pod "webserver-deployment-557759b7c7-jrsdd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-jrsdd",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "64568a6b-4756-496d-b256-96bd423116a8",
      ResourceVersion: (string) (len=5) "49193",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f04bdfe1-03ee-41ce-b7ae-44e609f676a4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  34 62 64 66 65 31 2d 30  |d\":\"f04bdfe1-0|
              00000090  33 65 65 2d 34 31 63 65  2d 62 37 61 65 2d 34 34  |3ee-41ce-b7ae-44|
              000000a0  65 36 30 39 66 36 37 36  61 34 5c 22 7d 22 3a 7b  |e609f676a4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p76hx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p76hx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:44.834: INFO: Pod "webserver-deployment-557759b7c7-kxc2j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-kxc2j",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f7ab323c-7b02-4a71-a514-f6b3f9009391",
      ResourceVersion: (string) (len=5) "49241",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "eefe8aa08df063fdba14d6aaa15a8338fd39c834844af6f5fd6da5ced2d67c0d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.14/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.14/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f04bdfe1-03ee-41ce-b7ae-44e609f676a4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  34 62 64 66 65 31 2d 30  |d\":\"f04bdfe1-0|
              00000090  33 65 65 2d 34 31 63 65  2d 62 37 61 65 2d 34 34  |3ee-41ce-b7ae-44|
              000000a0  65 36 30 39 66 36 37 36  61 34 5c 22 7d 22 3a 7b  |e609f676a4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535263,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-76v99",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-76v99",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:44.914: INFO: Pod "webserver-deployment-557759b7c7-pll6k" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-pll6k",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "67a29de8-59bd-4ac3-aee4-61272b91ffdb",
      ResourceVersion: (string) (len=5) "48946",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535255,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d1badf6b7e115794cc1c5a53dfaefba69ab3910a4a7854a7a0b31f7564d1e19c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.146/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.146/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f04bdfe1-03ee-41ce-b7ae-44e609f676a4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535255,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  34 62 64 66 65 31 2d 30  |d\":\"f04bdfe1-0|
              00000090  33 65 65 2d 34 31 63 65  2d 62 37 61 65 2d 34 34  |3ee-41ce-b7ae-44|
              000000a0  65 36 30 39 66 36 37 36  61 34 5c 22 7d 22 3a 7b  |e609f676a4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535257,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 34 36 5c 22 7d 22  |.200.131.146\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2426s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2426s",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535255,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535255,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.146",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.146"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535255,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850535257,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2721d1301bc4332e946f3bca4d12b783bc4f39e2f0e1168bf2823dc48b94771f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:45.105: INFO: Pod "webserver-deployment-557759b7c7-qwhlx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-qwhlx",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1c2966ed-be4d-476a-90e2-8c37d195d7aa",
      ResourceVersion: (string) (len=5) "48931",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535255,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.61/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "0f67d82bea7005c42eee01d578e05325e7a10fd6216e6a649b6db2ca13dae324",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.61/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f04bdfe1-03ee-41ce-b7ae-44e609f676a4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535255,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  34 62 64 66 65 31 2d 30  |d\":\"f04bdfe1-0|
              00000090  33 65 65 2d 34 31 63 65  2d 62 37 61 65 2d 34 34  |3ee-41ce-b7ae-44|
              000000a0  65 36 30 39 66 36 37 36  61 34 5c 22 7d 22 3a 7b  |e609f676a4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535257,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535257,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 36  31 5c 22 7d 22 3a 7b 22  |.200.5.61\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hk84m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hk84m",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535257,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535255,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535257,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535257,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535255,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.61",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.61"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535255,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850535257,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5de6e4c414f2f8ffe5e2bd7b01f81fa15f5fe35cf9c8c2f609d9c667a99fbd1d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:45.168: INFO: Pod "webserver-deployment-557759b7c7-rs6d4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-rs6d4",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5a87f52a-5f0b-47b9-8112-9ddb69a48ebf",
      ResourceVersion: (string) (len=5) "49167",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f04bdfe1-03ee-41ce-b7ae-44e609f676a4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  34 62 64 66 65 31 2d 30  |d\":\"f04bdfe1-0|
              00000090  33 65 65 2d 34 31 63 65  2d 62 37 61 65 2d 34 34  |3ee-41ce-b7ae-44|
              000000a0  65 36 30 39 66 36 37 36  61 34 5c 22 7d 22 3a 7b  |e609f676a4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hwwdr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hwwdr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:45.184: INFO: Pod "webserver-deployment-557759b7c7-rw79m" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-rw79m",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e8c3ec41-44f7-4e16-92f2-53718b7eee77",
      ResourceVersion: (string) (len=5) "49272",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "bece78b57493ebf19bc8e4bad72fe805eb9b18f80098da1d249d44f328837b29",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.16/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.16/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f04bdfe1-03ee-41ce-b7ae-44e609f676a4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  34 62 64 66 65 31 2d 30  |d\":\"f04bdfe1-0|
              00000090  33 65 65 2d 34 31 63 65  2d 62 37 61 65 2d 34 34  |3ee-41ce-b7ae-44|
              000000a0  65 36 30 39 66 36 37 36  61 34 5c 22 7d 22 3a 7b  |e609f676a4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535263,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535264,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 31  36 5c 22 7d 22 3a 7b 22  |.200.5.16\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pdx96",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pdx96",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535264,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535264,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535264,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.16",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.16"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850535263,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b5062e7dc036219ef61c648641cf6b9f30a24f5195a0a6868efe7596c5de994a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:45.205: INFO: Pod "webserver-deployment-557759b7c7-sxsj8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-sxsj8",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "510b7cc5-95d3-401c-bd12-dd7d6dfd51e1",
      ResourceVersion: (string) (len=5) "48944",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535255,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.160/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.160/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "07d7e51d9a4459eb098a57c3d622e428b925f77740141923f2c1b8258175d3c8"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f04bdfe1-03ee-41ce-b7ae-44e609f676a4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535255,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  34 62 64 66 65 31 2d 30  |d\":\"f04bdfe1-0|
              00000090  33 65 65 2d 34 31 63 65  2d 62 37 61 65 2d 34 34  |3ee-41ce-b7ae-44|
              000000a0  65 36 30 39 66 36 37 36  61 34 5c 22 7d 22 3a 7b  |e609f676a4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535257,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 36 30 5c 22 7d 22  |.200.131.160\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k4dhr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k4dhr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535255,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535255,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.160",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.160"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535255,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850535257,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1029c68dddc53a0773944c1a91b5af370f615bcd36f586987e8218fe0e843c64",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:45.248: INFO: Pod "webserver-deployment-557759b7c7-tvxs5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-tvxs5",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f5e5b0d0-4053-4adc-a254-eae3bdb40769",
      ResourceVersion: (string) (len=5) "49253",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "686a98561d20ea35d8133699544c11924f1dd6ca65775b9ab297927e13246d92",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.47/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.47/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f04bdfe1-03ee-41ce-b7ae-44e609f676a4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  34 62 64 66 65 31 2d 30  |d\":\"f04bdfe1-0|
              00000090  33 65 65 2d 34 31 63 65  2d 62 37 61 65 2d 34 34  |3ee-41ce-b7ae-44|
              000000a0  65 36 30 39 66 36 37 36  61 34 5c 22 7d 22 3a 7b  |e609f676a4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535263,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5x44l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5x44l",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:45.284: INFO: Pod "webserver-deployment-557759b7c7-tzm7b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-tzm7b",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "324e7e5d-b62a-4550-92d5-ef0c6e833baa",
      ResourceVersion: (string) (len=5) "49207",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "87cb9a84a6da2e1401fe8ff6559618c30d481ca9f7abaeb5e4105295e3ee1f1d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.15/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.15/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f04bdfe1-03ee-41ce-b7ae-44e609f676a4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  34 62 64 66 65 31 2d 30  |d\":\"f04bdfe1-0|
              00000090  33 65 65 2d 34 31 63 65  2d 62 37 61 65 2d 34 34  |3ee-41ce-b7ae-44|
              000000a0  65 36 30 39 66 36 37 36  61 34 5c 22 7d 22 3a 7b  |e609f676a4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xlnm8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xlnm8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:45.309: INFO: Pod "webserver-deployment-557759b7c7-vpxpd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vpxpd",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "864869da-e818-4596-a621-2ebd921db327",
      ResourceVersion: (string) (len=5) "48939",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535255,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "8033eb036894b154672a778dc64dd4bf8a375dce619039bff6978c5073b7e157",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.56/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.56/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f04bdfe1-03ee-41ce-b7ae-44e609f676a4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535255,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  34 62 64 66 65 31 2d 30  |d\":\"f04bdfe1-0|
              00000090  33 65 65 2d 34 31 63 65  2d 62 37 61 65 2d 34 34  |3ee-41ce-b7ae-44|
              000000a0  65 36 30 39 66 36 37 36  61 34 5c 22 7d 22 3a 7b  |e609f676a4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535257,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535258,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 35  36 5c 22 7d 22 3a 7b 22  |.200.5.56\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mdnwx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mdnwx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535257,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535255,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535257,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535257,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535255,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.56",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.56"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535255,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850535257,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1da1ad5ddc2dbbeab4527cb1b422fac06f909b708ab38f7e0b439205367e35a2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:45.480: INFO: Pod "webserver-deployment-9b4f5bf69-7p889" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-7p889",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "70206af0-e3e4-4b10-8d79-57b15f0c5bc5",
      ResourceVersion: (string) (len=5) "49169",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "79c26ad3-28b2-4dfb-851b-810b4e293d55",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 39  63 32 36 61 64 33 2d 32  |d\":\"79c26ad3-2|
              00000090  38 62 32 2d 34 64 66 62  2d 38 35 31 62 2d 38 31  |8b2-4dfb-851b-81|
              000000a0  30 62 34 65 32 39 33 64  35 35 5c 22 7d 22 3a 7b  |0b4e293d55\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8m2pw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8m2pw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:45.627: INFO: Pod "webserver-deployment-9b4f5bf69-gksl6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-gksl6",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "84832634-1cb3-4ee0-b9c6-01faaf93d4b5",
      ResourceVersion: (string) (len=5) "49252",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535259,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "aee66f17df0afdfe83b1a1691c294d71f2cd4cf59657f5af651fd492c53b6ac1",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.156/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.156/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "79c26ad3-28b2-4dfb-851b-810b4e293d55",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 39  63 32 36 61 64 33 2d 32  |d\":\"79c26ad3-2|
              00000090  38 62 32 2d 34 64 66 62  2d 38 35 31 62 2d 38 31  |8b2-4dfb-851b-81|
              000000a0  30 62 34 65 32 39 33 64  35 35 5c 22 7d 22 3a 7b  |0b4e293d55\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535263,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 30  |:{\"ip\":\"10.20|
              00000290  30 2e 31 33 31 2e 31 35  36 5c 22 7d 22 3a 7b 22  |0.131.156\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4gvcs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4gvcs",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535263,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.156",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.156"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535259,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:45.745: INFO: Pod "webserver-deployment-9b4f5bf69-j9t6m" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-j9t6m",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8d73141f-b783-4be1-8c45-a9fac9b71e1e",
      ResourceVersion: (string) (len=5) "49042",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535260,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "80645a5c5d55cd192cf77111f5e15d5f81b610fa1614b4d1d9cbc713a176bad3",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.153/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.153/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "79c26ad3-28b2-4dfb-851b-810b4e293d55",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 39  63 32 36 61 64 33 2d 32  |d\":\"79c26ad3-2|
              00000090  38 62 32 2d 34 64 66 62  2d 38 35 31 62 2d 38 31  |8b2-4dfb-851b-81|
              000000a0  30 62 34 65 32 39 33 64  35 35 5c 22 7d 22 3a 7b  |0b4e293d55\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k2s2t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k2s2t",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535260,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:45.974: INFO: Pod "webserver-deployment-9b4f5bf69-kbpkt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-kbpkt",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d1b32b68-35a1-450b-863f-509cb63942f9",
      ResourceVersion: (string) (len=5) "49044",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535260,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7f46a8690c9495e292f08e12ae3a50b96df03e5ee025fbbcb205a88f4f6d0a9f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.52/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.52/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "79c26ad3-28b2-4dfb-851b-810b4e293d55",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 39  63 32 36 61 64 33 2d 32  |d\":\"79c26ad3-2|
              00000090  38 62 32 2d 34 64 66 62  2d 38 35 31 62 2d 38 31  |8b2-4dfb-851b-81|
              000000a0  30 62 34 65 32 39 33 64  35 35 5c 22 7d 22 3a 7b  |0b4e293d55\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xf6bx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xf6bx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535260,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:46.113: INFO: Pod "webserver-deployment-9b4f5bf69-lr7w5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-lr7w5",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f9a5067c-9fc4-4598-b2c4-544c3a30d2dd",
      ResourceVersion: (string) (len=5) "49162",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "79c26ad3-28b2-4dfb-851b-810b4e293d55",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 39  63 32 36 61 64 33 2d 32  |d\":\"79c26ad3-2|
              00000090  38 62 32 2d 34 64 66 62  2d 38 35 31 62 2d 38 31  |8b2-4dfb-851b-81|
              000000a0  30 62 34 65 32 39 33 64  35 35 5c 22 7d 22 3a 7b  |0b4e293d55\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6tcmq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6tcmq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:46.200: INFO: Pod "webserver-deployment-9b4f5bf69-m457l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-m457l",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0f09a091-d953-4b2c-bf9a-c287ebecbcff",
      ResourceVersion: (string) (len=5) "49174",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "79c26ad3-28b2-4dfb-851b-810b4e293d55",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 39  63 32 36 61 64 33 2d 32  |d\":\"79c26ad3-2|
              00000090  38 62 32 2d 34 64 66 62  2d 38 35 31 62 2d 38 31  |8b2-4dfb-851b-81|
              000000a0  30 62 34 65 32 39 33 64  35 35 5c 22 7d 22 3a 7b  |0b4e293d55\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jv9gp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jv9gp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:46.213: INFO: Pod "webserver-deployment-9b4f5bf69-nl7vm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-nl7vm",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6546ab48-dab7-4abd-9b5e-7925b50df9b6",
      ResourceVersion: (string) (len=5) "49267",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "930e5cf81ff2a4fa860a104202f8b09268e0e36661587653ff9dc3abf4b4d2dd",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.48/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.48/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "79c26ad3-28b2-4dfb-851b-810b4e293d55",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 39  63 32 36 61 64 33 2d 32  |d\":\"79c26ad3-2|
              00000090  38 62 32 2d 34 64 66 62  2d 38 35 31 62 2d 38 31  |8b2-4dfb-851b-81|
              000000a0  30 62 34 65 32 39 33 64  35 35 5c 22 7d 22 3a 7b  |0b4e293d55\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535263,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h44xc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h44xc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:46.240: INFO: Pod "webserver-deployment-9b4f5bf69-nz9r8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-nz9r8",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0e2c1988-7fd1-4d8e-a975-b9152368e69e",
      ResourceVersion: (string) (len=5) "49224",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f77d6ddf41daf67457731232b2b1c75904a19813dd95cd93caf1aad455df6cc9",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.26/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.26/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "79c26ad3-28b2-4dfb-851b-810b4e293d55",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 39  63 32 36 61 64 33 2d 32  |d\":\"79c26ad3-2|
              00000090  38 62 32 2d 34 64 66 62  2d 38 35 31 62 2d 38 31  |8b2-4dfb-851b-81|
              000000a0  30 62 34 65 32 39 33 64  35 35 5c 22 7d 22 3a 7b  |0b4e293d55\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535263,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vcvbh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vcvbh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:46.411: INFO: Pod "webserver-deployment-9b4f5bf69-r7cmg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-r7cmg",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8b087268-ff3e-4ced-ae49-6779053e2757",
      ResourceVersion: (string) (len=5) "49268",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a98491c494d95421c9e7c69dbbbe224557379dc444ffcdff0e62e533e5ea203d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.163/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.163/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "79c26ad3-28b2-4dfb-851b-810b4e293d55",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 39  63 32 36 61 64 33 2d 32  |d\":\"79c26ad3-2|
              00000090  38 62 32 2d 34 64 66 62  2d 38 35 31 62 2d 38 31  |8b2-4dfb-851b-81|
              000000a0  30 62 34 65 32 39 33 64  35 35 5c 22 7d 22 3a 7b  |0b4e293d55\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535264,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hc4nz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hc4nz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:46.573: INFO: Pod "webserver-deployment-9b4f5bf69-rrtpp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-rrtpp",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5bbfcc6f-142c-4c99-bf18-154ddfe73e1a",
      ResourceVersion: (string) (len=5) "49222",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "74491eda9396fbe7c5508b93afc822904b7af08f534623c2b0b986e540c39ef3",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.167/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.167/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "79c26ad3-28b2-4dfb-851b-810b4e293d55",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 39  63 32 36 61 64 33 2d 32  |d\":\"79c26ad3-2|
              00000090  38 62 32 2d 34 64 66 62  2d 38 35 31 62 2d 38 31  |8b2-4dfb-851b-81|
              000000a0  30 62 34 65 32 39 33 64  35 35 5c 22 7d 22 3a 7b  |0b4e293d55\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535263,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r5zph",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r5zph",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:46.706: INFO: Pod "webserver-deployment-9b4f5bf69-trczv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-trczv",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e6e37d96-d080-42a6-92ea-e442d70eb00d",
      ResourceVersion: (string) (len=5) "49036",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535259,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "8d0be708e41d67f1cac935e129c75a95646b8c8a60d81bddc6396f0a784889ab",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.37/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.37/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "79c26ad3-28b2-4dfb-851b-810b4e293d55",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 39  63 32 36 61 64 33 2d 32  |d\":\"79c26ad3-2|
              00000090  38 62 32 2d 34 64 66 62  2d 38 35 31 62 2d 38 31  |8b2-4dfb-851b-81|
              000000a0  30 62 34 65 32 39 33 64  35 35 5c 22 7d 22 3a 7b  |0b4e293d55\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-txxjz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-txxjz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535259,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:46.837: INFO: Pod "webserver-deployment-9b4f5bf69-wf47r" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-wf47r",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bb3ddceb-23d1-4a01-b8d1-e548cf602173",
      ResourceVersion: (string) (len=5) "49217",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535259,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.59/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.59/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "4b538de2bb1b9dddc7c595b9de142caf6528406e9c00ad05701036ee4219de5f"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "79c26ad3-28b2-4dfb-851b-810b4e293d55",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 39  63 32 36 61 64 33 2d 32  |d\":\"79c26ad3-2|
              00000090  38 62 32 2d 34 64 66 62  2d 38 35 31 62 2d 38 31  |8b2-4dfb-851b-81|
              000000a0  30 62 34 65 32 39 33 64  35 35 5c 22 7d 22 3a 7b  |0b4e293d55\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535263,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 30  |:{\"ip\":\"10.20|
              00000290  30 2e 35 2e 35 39 5c 22  7d 22 3a 7b 22 2e 22 3a  |0.5.59\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h8j27",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h8j27",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535263,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.59",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.59"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535259,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:46.870: INFO: Pod "webserver-deployment-9b4f5bf69-xkj46" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-xkj46",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9184",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9bc1276b-2b44-409c-9fd3-ed27affeac57",
      ResourceVersion: (string) (len=5) "49240",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "125cb8fb21ef04be85fc9bccec83fbb1eb691aac36492d2b5b9dd4c68fb65be1",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.176/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.176/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "79c26ad3-28b2-4dfb-851b-810b4e293d55",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 39  63 32 36 61 64 33 2d 32  |d\":\"79c26ad3-2|
              00000090  38 62 32 2d 34 64 66 62  2d 38 35 31 62 2d 38 31  |8b2-4dfb-851b-81|
              000000a0  30 62 34 65 32 39 33 64  35 35 5c 22 7d 22 3a 7b  |0b4e293d55\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535263,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sln86",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sln86",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  5 19:47:46.986: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9184" for this suite. @ 05/05/24 19:47:47.088
• [11.399 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:40
  STEP: Creating a kubernetes client @ 05/05/24 19:47:47.326
  May  5 19:47:47.327: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename server-version @ 05/05/24 19:47:47.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:47:47.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:47:47.546
  STEP: Request ServerVersion @ 05/05/24 19:47:47.578
  STEP: Confirm major version @ 05/05/24 19:47:47.611
  May  5 19:47:47.613: INFO: Major version: 1
  STEP: Confirm minor version @ 05/05/24 19:47:47.613
  May  5 19:47:47.613: INFO: cleanMinorVersion: 28
  May  5 19:47:47.615: INFO: Minor version: 28
  May  5 19:47:47.617: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-2279" for this suite. @ 05/05/24 19:47:47.651
• [0.362 seconds]
------------------------------
SS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 05/05/24 19:47:47.688
  May  5 19:47:47.688: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename disruption @ 05/05/24 19:47:47.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:47:47.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:47:47.827
  STEP: Waiting for the pdb to be processed @ 05/05/24 19:47:47.931
  STEP: Updating PodDisruptionBudget status @ 05/05/24 19:47:48.041
  STEP: Waiting for all pods to be running @ 05/05/24 19:47:48.144
  May  5 19:47:48.187: INFO: running pods: 0 < 1
  May  5 19:47:50.191: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 05/05/24 19:47:52.19
  STEP: Waiting for the pdb to be processed @ 05/05/24 19:47:52.2
  STEP: Patching PodDisruptionBudget status @ 05/05/24 19:47:52.212
  STEP: Waiting for the pdb to be processed @ 05/05/24 19:47:52.22
  May  5 19:47:52.224: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9540" for this suite. @ 05/05/24 19:47:52.232
• [4.558 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:197
  STEP: Creating a kubernetes client @ 05/05/24 19:47:52.248
  May  5 19:47:52.248: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename emptydir @ 05/05/24 19:47:52.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:47:52.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:47:52.276
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/05/24 19:47:52.284
  STEP: Saw pod success @ 05/05/24 19:47:58.324
  May  5 19:47:58.328: INFO: Trying to get logs from node worker01 pod pod-c8c88d52-044c-4662-b1d5-0f010a83625a container test-container: <nil>
  STEP: delete the pod @ 05/05/24 19:47:58.337
  May  5 19:47:58.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1283" for this suite. @ 05/05/24 19:47:58.372
• [6.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 05/05/24 19:47:58.38
  May  5 19:47:58.380: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename kubelet-test @ 05/05/24 19:47:58.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:47:58.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:47:58.403
  May  5 19:48:02.427: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2339" for this suite. @ 05/05/24 19:48:02.432
• [4.068 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 05/05/24 19:48:02.449
  May  5 19:48:02.449: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename secrets @ 05/05/24 19:48:02.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:48:02.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:48:02.475
  May  5 19:48:02.508: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7364" for this suite. @ 05/05/24 19:48:02.511
• [0.066 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:112
  STEP: Creating a kubernetes client @ 05/05/24 19:48:02.516
  May  5 19:48:02.516: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename replication-controller @ 05/05/24 19:48:02.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:48:02.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:48:02.536
  STEP: creating a ReplicationController @ 05/05/24 19:48:02.541
  STEP: waiting for RC to be added @ 05/05/24 19:48:02.552
  STEP: waiting for available Replicas @ 05/05/24 19:48:02.554
  STEP: patching ReplicationController @ 05/05/24 19:48:03.715
  STEP: waiting for RC to be modified @ 05/05/24 19:48:03.724
  STEP: patching ReplicationController status @ 05/05/24 19:48:03.724
  STEP: waiting for RC to be modified @ 05/05/24 19:48:03.731
  STEP: waiting for available Replicas @ 05/05/24 19:48:03.733
  STEP: fetching ReplicationController status @ 05/05/24 19:48:03.739
  STEP: patching ReplicationController scale @ 05/05/24 19:48:03.742
  STEP: waiting for RC to be modified @ 05/05/24 19:48:03.751
  STEP: waiting for ReplicationController's scale to be the max amount @ 05/05/24 19:48:03.754
  STEP: fetching ReplicationController; ensuring that it's patched @ 05/05/24 19:48:04.694
  STEP: updating ReplicationController status @ 05/05/24 19:48:04.699
  STEP: waiting for RC to be modified @ 05/05/24 19:48:04.707
  STEP: listing all ReplicationControllers @ 05/05/24 19:48:04.711
  STEP: checking that ReplicationController has expected values @ 05/05/24 19:48:04.718
  STEP: deleting ReplicationControllers by collection @ 05/05/24 19:48:04.718
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 05/05/24 19:48:04.73
  May  5 19:48:04.789: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0505 19:48:04.791155      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-7242" for this suite. @ 05/05/24 19:48:04.791
• [2.281 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 05/05/24 19:48:04.798
  May  5 19:48:04.798: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename kubelet-test @ 05/05/24 19:48:04.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:48:04.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:48:04.816
  E0505 19:48:05.792663      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:06.792839      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  5 19:48:06.868: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7365" for this suite. @ 05/05/24 19:48:06.872
• [2.082 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 05/05/24 19:48:06.892
  May  5 19:48:06.892: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename projected @ 05/05/24 19:48:06.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:48:06.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:48:06.921
  STEP: Creating a pod to test downward API volume plugin @ 05/05/24 19:48:06.928
  E0505 19:48:07.793234      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:08.793263      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:09.800252      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:10.800244      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 19:48:10.962
  May  5 19:48:10.967: INFO: Trying to get logs from node worker00 pod downwardapi-volume-f2c1b4ce-ffd4-4969-8a25-998b283d3e23 container client-container: <nil>
  STEP: delete the pod @ 05/05/24 19:48:10.979
  May  5 19:48:11.001: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4241" for this suite. @ 05/05/24 19:48:11.008
• [4.125 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 05/05/24 19:48:11.018
  May  5 19:48:11.018: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename taint-single-pod @ 05/05/24 19:48:11.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:48:11.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:48:11.055
  May  5 19:48:11.060: INFO: Waiting up to 1m0s for all nodes to be ready
  E0505 19:48:11.800629      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:12.801119      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:13.804609      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:14.804693      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:15.805157      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:16.805444      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:17.806182      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:18.807145      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:19.808406      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:20.810441      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:21.810483      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:22.810831      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:23.811502      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:24.811862      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:25.812039      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:26.812741      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:27.814282      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:28.815272      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:29.815930      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:30.817744      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:31.818600      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:32.820178      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:33.820108      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:34.820960      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:35.822255      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:36.822316      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:37.823311      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:38.824245      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:39.825016      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:40.825040      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:41.827206      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:42.828337      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:43.829000      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:44.829181      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:45.829801      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:46.831559      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:47.834217      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:48.835656      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:49.836754      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:50.838097      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:51.838135      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:52.840935      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:53.840771      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:54.841410      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:55.842387      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:56.843607      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:57.847510      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:58.847564      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:48:59.847786      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:00.851021      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:01.854855      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:02.855110      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:03.855710      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:04.857550      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:05.860534      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:06.861027      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:07.861394      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:08.861530      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:09.861919      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:10.862034      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  5 19:49:11.109: INFO: Waiting for terminating namespaces to be deleted...
  May  5 19:49:11.111: INFO: Starting informer...
  STEP: Starting pod... @ 05/05/24 19:49:11.111
  May  5 19:49:11.338: INFO: Pod is running on worker01. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/05/24 19:49:11.338
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/05/24 19:49:11.349
  STEP: Waiting short time to make sure Pod is queued for deletion @ 05/05/24 19:49:11.359
  May  5 19:49:11.359: INFO: Pod wasn't evicted. Proceeding
  May  5 19:49:11.360: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/05/24 19:49:11.403
  STEP: Waiting some time to make sure that toleration time passed. @ 05/05/24 19:49:11.437
  E0505 19:49:11.871405      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:12.874570      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:13.876071      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:14.876479      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:15.877056      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:16.878218      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:17.879769      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:18.879612      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:19.879796      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:20.880353      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:21.881136      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:22.890032      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:23.890884      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:24.891458      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:25.892680      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:26.892758      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:27.892997      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:28.893858      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:29.894235      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:30.894909      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:31.895963      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:32.896336      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:33.897298      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:34.897997      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:35.898229      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:36.898599      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:37.900124      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:38.900238      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:39.901098      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:40.901428      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:41.901869      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:42.903171      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:43.903760      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:44.904608      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:45.905164      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:46.905918      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:47.907431      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:48.911758      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:49.914247      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:50.914376      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:51.915217      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:52.915226      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:53.915758      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:54.916482      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:55.917756      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:56.918183      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:57.919153      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:58.919186      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:49:59.919522      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:00.921188      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:01.921403      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:02.922114      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:03.922259      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:04.922804      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:05.923250      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:06.924209      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:07.924352      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:08.925470      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:09.925708      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:10.928239      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:11.928160      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:12.928567      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:13.929404      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:14.932017      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:15.933053      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:16.933057      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:17.935031      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:18.991531      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:19.992111      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:20.993359      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:21.995596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:22.995833      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:23.998194      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:24.998698      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:25.999678      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  5 19:50:26.437: INFO: Pod wasn't evicted. Test successful
  May  5 19:50:26.437: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-9010" for this suite. @ 05/05/24 19:50:26.446
• [135.441 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 05/05/24 19:50:26.461
  May  5 19:50:26.461: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename conformance-tests @ 05/05/24 19:50:26.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:50:26.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:50:26.492
  STEP: Getting node addresses @ 05/05/24 19:50:26.496
  May  5 19:50:26.496: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  May  5 19:50:26.506: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-2321" for this suite. @ 05/05/24 19:50:26.512
• [0.061 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:213
  STEP: Creating a kubernetes client @ 05/05/24 19:50:26.522
  May  5 19:50:26.523: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/05/24 19:50:26.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:50:26.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:50:26.547
  STEP: create the container to handle the HTTPGet hook request. @ 05/05/24 19:50:26.56
  E0505 19:50:27.000050      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:28.001020      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 05/05/24 19:50:28.587
  E0505 19:50:29.001384      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:30.001670      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 05/05/24 19:50:30.615
  E0505 19:50:31.002224      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:32.002355      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 05/05/24 19:50:32.641
  May  5 19:50:32.649: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7044" for this suite. @ 05/05/24 19:50:32.655
• [6.145 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:129
  STEP: Creating a kubernetes client @ 05/05/24 19:50:32.668
  May  5 19:50:32.668: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename security-context @ 05/05/24 19:50:32.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:50:32.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:50:32.698
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/05/24 19:50:32.705
  E0505 19:50:33.003948      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:34.004228      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:35.005255      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:36.005307      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 19:50:36.743
  May  5 19:50:36.746: INFO: Trying to get logs from node worker01 pod security-context-9d6e884f-6b90-4ecb-892f-35efd16f1f88 container test-container: <nil>
  STEP: delete the pod @ 05/05/24 19:50:36.76
  May  5 19:50:36.791: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-3008" for this suite. @ 05/05/24 19:50:36.796
• [4.136 seconds]
------------------------------
SSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:218
  STEP: Creating a kubernetes client @ 05/05/24 19:50:36.804
  May  5 19:50:36.804: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename downward-api @ 05/05/24 19:50:36.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:50:36.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:50:36.831
  STEP: Creating a pod to test downward api env vars @ 05/05/24 19:50:36.838
  E0505 19:50:37.007056      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:38.007672      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:39.007759      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:40.008169      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/05/24 19:50:40.871
  May  5 19:50:40.876: INFO: Trying to get logs from node worker01 pod downward-api-4e4a5b7c-3f7a-49b1-8078-e7d7e02db36b container dapi-container: <nil>
  STEP: delete the pod @ 05/05/24 19:50:40.886
  May  5 19:50:40.905: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5490" for this suite. @ 05/05/24 19:50:40.909
• [4.113 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 05/05/24 19:50:40.918
  May  5 19:50:40.918: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename deployment @ 05/05/24 19:50:40.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:50:40.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:50:40.938
  STEP: creating a Deployment @ 05/05/24 19:50:40.95
  STEP: waiting for Deployment to be created @ 05/05/24 19:50:40.962
  STEP: waiting for all Replicas to be Ready @ 05/05/24 19:50:40.969
  May  5 19:50:40.974: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May  5 19:50:40.975: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May  5 19:50:40.988: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May  5 19:50:40.988: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May  5 19:50:41.008: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May  5 19:50:41.008: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0505 19:50:41.009217      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  5 19:50:41.061: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May  5 19:50:41.061: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0505 19:50:42.010479      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  5 19:50:42.385: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  May  5 19:50:42.386: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  May  5 19:50:42.522: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 05/05/24 19:50:42.522
  May  5 19:50:42.550: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 05/05/24 19:50:42.55
  May  5 19:50:42.558: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 0
  May  5 19:50:42.558: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 0
  May  5 19:50:42.558: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 0
  May  5 19:50:42.558: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 0
  May  5 19:50:42.558: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 0
  May  5 19:50:42.559: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 0
  May  5 19:50:42.559: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 0
  May  5 19:50:42.559: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 0
  May  5 19:50:42.559: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 1
  May  5 19:50:42.559: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 1
  May  5 19:50:42.559: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 2
  May  5 19:50:42.559: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 2
  May  5 19:50:42.559: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 2
  May  5 19:50:42.559: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 2
  May  5 19:50:42.597: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 2
  May  5 19:50:42.597: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 2
  May  5 19:50:42.653: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 2
  May  5 19:50:42.653: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 2
  May  5 19:50:42.688: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 1
  May  5 19:50:42.688: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 1
  May  5 19:50:42.736: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 1
  May  5 19:50:42.737: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 1
  E0505 19:50:43.011592      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:44.012979      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  5 19:50:44.461: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 2
  May  5 19:50:44.461: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 2
  May  5 19:50:44.531: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 1
  STEP: listing Deployments @ 05/05/24 19:50:44.532
  May  5 19:50:44.548: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 05/05/24 19:50:44.548
  May  5 19:50:44.620: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 05/05/24 19:50:44.62
  May  5 19:50:44.673: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  May  5 19:50:44.690: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  May  5 19:50:44.791: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  May  5 19:50:44.855: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  May  5 19:50:44.883: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0505 19:50:45.013640      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:46.014197      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  5 19:50:46.530: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  May  5 19:50:46.590: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  May  5 19:50:46.622: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  May  5 19:50:46.656: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  May  5 19:50:46.674: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0505 19:50:47.014028      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  5 19:50:47.591: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 05/05/24 19:50:47.618
  STEP: fetching the DeploymentStatus @ 05/05/24 19:50:47.63
  May  5 19:50:47.645: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 1
  May  5 19:50:47.646: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 1
  May  5 19:50:47.646: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 1
  May  5 19:50:47.646: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 1
  May  5 19:50:47.646: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 1
  May  5 19:50:47.646: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 2
  May  5 19:50:47.646: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 2
  May  5 19:50:47.646: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 2
  May  5 19:50:47.647: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 2
  May  5 19:50:47.647: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 2
  May  5 19:50:47.647: INFO: observed Deployment test-deployment in namespace deployment-8860 with ReadyReplicas 3
  STEP: deleting the Deployment @ 05/05/24 19:50:47.647
  May  5 19:50:47.662: INFO: observed event type MODIFIED
  May  5 19:50:47.662: INFO: observed event type MODIFIED
  May  5 19:50:47.662: INFO: observed event type MODIFIED
  May  5 19:50:47.662: INFO: observed event type MODIFIED
  May  5 19:50:47.663: INFO: observed event type MODIFIED
  May  5 19:50:47.663: INFO: observed event type MODIFIED
  May  5 19:50:47.663: INFO: observed event type MODIFIED
  May  5 19:50:47.663: INFO: observed event type MODIFIED
  May  5 19:50:47.663: INFO: observed event type MODIFIED
  May  5 19:50:47.663: INFO: observed event type MODIFIED
  May  5 19:50:47.663: INFO: observed event type MODIFIED
  May  5 19:50:47.663: INFO: observed event type MODIFIED
  May  5 19:50:47.663: INFO: observed event type MODIFIED
  May  5 19:50:47.663: INFO: observed event type MODIFIED
  May  5 19:50:47.669: INFO: Log out all the ReplicaSets if there is no deployment created
  May  5 19:50:47.677: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8860",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "47c08791-039b-4d34-84c3-93c2afe0f2dc",
      ResourceVersion: (string) (len=5) "51492",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535442,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "867153a9-5663-4664-8d34-7c4a2d60c99c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535447,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 38 36 37 31  35 33 61 39 2d 35 36 36  |":\"867153a9-566|
              00000130  33 2d 34 36 36 34 2d 38  64 33 34 2d 37 63 34 61  |3-4664-8d34-7c4a|
              00000140  32 64 36 30 63 39 39 63  5c 22 7d 22 3a 7b 7d 7d  |2d60c99c\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535447,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  May  5 19:50:47.709: INFO: pod: "test-deployment-64fd565c98-7khqf":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-7khqf",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-8860",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "85b00b29-4d6b-4899-9399-279b2292a0a2",
      ResourceVersion: (string) (len=5) "51460",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535444,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535448,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "1483e83f3d5853877cb452a38b368803b736838bfde16246ddb02ddfbffa1933",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.166/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.166/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "47c08791-039b-4d34-84c3-93c2afe0f2dc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535444,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  34 37 63 30 38 37 39 31  |uid\":\"47c08791|
              000000a0  2d 30 33 39 62 2d 34 64  33 34 2d 38 34 63 33 2d  |-039b-4d34-84c3-|
              000000b0  39 33 63 32 61 66 65 30  66 32 64 63 5c 22 7d 22  |93c2afe0f2dc\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535445,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 36 36 5c 22 7d 22  |.200.131.166\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2t2vc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2t2vc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535444,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535444,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.166",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.166"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535444,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850535446,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://b1e5a20aa9cd0bcf5cf82eca176adabf0288c343bf7bca9aa8de6be467133729",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  May  5 19:50:47.720: INFO: pod: "test-deployment-64fd565c98-wp7cb":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-wp7cb",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-8860",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d4ff347f-1920-410f-8539-40371f5a2f4e",
      ResourceVersion: (string) (len=5) "51488",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535442,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535449,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.54/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7de2d4e137fd090917f15e0ed80f106914b94e1c293fff10790fba9475feafc7",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.54/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "47c08791-039b-4d34-84c3-93c2afe0f2dc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535442,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  34 37 63 30 38 37 39 31  |uid\":\"47c08791|
              000000a0  2d 30 33 39 62 2d 34 64  33 34 2d 38 34 63 33 2d  |-039b-4d34-84c3-|
              000000b0  39 33 63 32 61 66 65 30  66 32 64 63 5c 22 7d 22  |93c2afe0f2dc\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535443,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535444,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 35  34 5c 22 7d 22 3a 7b 22  |.200.5.54\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-25c5r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-25c5r",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535444,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535442,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535444,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535444,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535442,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.54",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.54"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535442,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850535443,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://15e2918d010674019b215a609c0870633864677679be03d172e654f4009b00e3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  May  5 19:50:47.740: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8860",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bde542e3-20ef-4618-a622-78f7072087c5",
      ResourceVersion: (string) (len=5) "51484",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535444,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "867153a9-5663-4664-8d34-7c4a2d60c99c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 38 36 37 31  35 33 61 39 2d 35 36 36  |":\"867153a9-566|
              00000130  33 2d 34 36 36 34 2d 38  64 33 34 2d 37 63 34 61  |3-4664-8d34-7c4a|
              00000140  32 64 36 30 63 39 39 63  5c 22 7d 22 3a 7b 7d 7d  |2d60c99c\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535447,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  May  5 19:50:47.759: INFO: pod: "test-deployment-79ff746c4-6hlb2":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-6hlb2",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-8860",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c1ed7103-a000-4db2-ace4-789b2a44680a",
      ResourceVersion: (string) (len=5) "51501",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535446,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535448,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.190/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.190/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "0ed03e5e74b50f5609b02f3254562153f69fe88e5d358682bce20ba39ff78935"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "bde542e3-20ef-4618-a622-78f7072087c5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  62 64 65 35 34 32 65 33  |uid\":\"bde542e3|
              000000a0  2d 32 30 65 66 2d 34 36  31 38 2d 61 36 32 32 2d  |-20ef-4618-a622-|
              000000b0  37 38 66 37 30 37 32 30  38 37 63 35 5c 22 7d 22  |78f7072087c5\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535447,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535447,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 39 30 5c 22 7d 22  |.200.131.190\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c8vhp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c8vhp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535447,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535447,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535447,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.190",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.190"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535446,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850535447,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6fd6570066e105008aeb7b8c706228b43bf9a46ba0f67477bba92d2a23835564",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  May  5 19:50:47.767: INFO: pod: "test-deployment-79ff746c4-nzlvm":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-nzlvm",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-8860",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "19e5feca-80b0-4dd1-a707-02e35c48fecb",
      ResourceVersion: (string) (len=5) "51500",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535444,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535448,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a9e9290b45a11c2fd2cae290a2c5dfdd65e8d42d5d9ec007769fc76f72bdf9df",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.25/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.25/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "bde542e3-20ef-4618-a622-78f7072087c5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535444,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  62 64 65 35 34 32 65 33  |uid\":\"bde542e3|
              000000a0  2d 32 30 65 66 2d 34 36  31 38 2d 61 36 32 32 2d  |-20ef-4618-a622-|
              000000b0  37 38 66 37 30 37 32 30  38 37 63 35 5c 22 7d 22  |78f7072087c5\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535445,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 32  35 5c 22 7d 22 3a 7b 22  |.200.5.25\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n45kt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n45kt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535444,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535444,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.25",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.25"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535444,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850535445,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://59d952625dd078da2c15126eee840b5ee2f86909610618de6dcbf78779c15362",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  May  5 19:50:47.777: INFO: ReplicaSet "test-deployment-7fcc79b8c7":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-7fcc79b8c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8860",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ebab127a-b91f-4221-82cc-7da9d30dc021",
      ResourceVersion: (string) (len=5) "51381",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850535440,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "867153a9-5663-4664-8d34-7c4a2d60c99c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535444,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 38 36 37 31  35 33 61 39 2d 35 36 36  |":\"867153a9-566|
              00000130  33 2d 34 36 36 34 2d 38  64 33 34 2d 37 63 34 61  |3-4664-8d34-7c4a|
              00000140  32 64 36 30 63 39 39 63  5c 22 7d 22 3a 7b 7d 7d  |2d60c99c\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850535444,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  May  5 19:50:47.786: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8860" for this suite. @ 05/05/24 19:50:47.795
• [6.903 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 05/05/24 19:50:47.835
  May  5 19:50:47.838: INFO: >>> kubeConfig: /tmp/kubeconfig-2130508071
  STEP: Building a namespace api object, basename services @ 05/05/24 19:50:47.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/05/24 19:50:47.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/05/24 19:50:47.884
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-5773 @ 05/05/24 19:50:47.892
  STEP: changing the ExternalName service to type=NodePort @ 05/05/24 19:50:47.907
  STEP: creating replication controller externalname-service in namespace services-5773 @ 05/05/24 19:50:47.963
  I0505 19:50:47.995510      20 runners.go:197] Created replication controller with name: externalname-service, namespace: services-5773, replica count: 2
  E0505 19:50:48.016456      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:49.021103      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:50.022753      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:51.023080      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0505 19:50:51.066621      20 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May  5 19:50:51.066: INFO: Creating new exec pod
  E0505 19:50:52.023495      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:53.023890      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0505 19:50:54.024950      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  5 19:50:54.092: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-5773 exec execpodhm6zz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  May  5 19:50:54.261: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  May  5 19:50:54.261: INFO: stdout: "externalname-service-mzg54"
  May  5 19:50:54.261: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-5773 exec execpodhm6zz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.132 80'
  May  5 19:50:54.410: INFO: stderr: "+ nc -v -t -w 2 10.32.0.132 80\n+ echo hostName\nConnection to 10.32.0.132 80 port [tcp/http] succeeded!\n"
  May  5 19:50:54.411: INFO: stdout: ""
  E0505 19:50:55.025173      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  5 19:50:55.411: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-5773 exec execpodhm6zz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.132 80'
  May  5 19:50:55.599: INFO: stderr: "+ nc -v -t -w 2 10.32.0.132 80\n+ echo hostName\nConnection to 10.32.0.132 80 port [tcp/http] succeeded!\n"
  May  5 19:50:55.599: INFO: stdout: "externalname-service-m98rx"
  May  5 19:50:55.599: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-5773 exec execpodhm6zz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.100 31737'
  May  5 19:50:55.761: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.100 31737\nConnection to 192.168.58.100 31737 port [tcp/*] succeeded!\n"
  May  5 19:50:55.761: INFO: stdout: "externalname-service-m98rx"
  May  5 19:50:55.761: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-5773 exec execpodhm6zz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.101 31737'
  May  5 19:50:55.899: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.101 31737\nConnection to 192.168.58.101 31737 port [tcp/*] succeeded!\n"
  May  5 19:50:55.899: INFO: stdout: ""
  E0505 19:50:56.026762      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  5 19:50:56.899: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2130508071 --namespace=services-5773 exec execpodhm6zz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.101 31737'
  E0505 19:50:57.027292      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  5 19:50:57.058: INFO: stderr: "+ nc -v -t -w 2 192.168.58.101 31737\n+ echo hostName\nConnection to 192.168.58.101 31737 port [tcp/*] succeeded!\n"
  May  5 19:50:57.059: INFO: stdout: "externalname-service-m98rx"
  May  5 19:50:57.059: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May  5 19:50:57.064: INFO: Cleaning up the ExternalName to NodePort test service
  STEP: Destroying namespace "services-5773" for this suite. @ 05/05/24 19:50:57.1
• [9.277 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:88
  May  5 19:50:57.115: INFO: Running AfterSuite actions on node 1
  May  5 19:50:57.115: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:585
[ReportAfterSuite] PASSED [0.055 seconds]
------------------------------

Ran 380 of 7389 Specs in 5723.468 seconds
SUCCESS! -- 380 Passed | 0 Failed | 0 Pending | 7009 Skipped
PASS

Ginkgo ran 1 suite in 1h35m23.728569594s
Test Suite Passed
