  I0618 05:35:35.116717      18 e2e.go:117] Starting e2e run "bcbdb549-fee7-4e87-b55e-cc2aa2e8e91b" on Ginkgo node 1
  Jun 18 05:35:35.154: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1718688935 - will randomize all specs

Will run 380 of 7390 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:77
  Jun 18 05:35:35.423: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 05:35:35.425: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Jun 18 05:35:35.477: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Jun 18 05:35:35.483: INFO: 4 / 4 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  Jun 18 05:35:35.483: INFO: 4 / 4 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  Jun 18 05:35:35.484: INFO: e2e test version: v1.28.11
  Jun 18 05:35:35.485: INFO: kube-apiserver version: v1.28.11
  Jun 18 05:35:35.485: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 05:35:35.490: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.067 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 06/18/24 05:35:35.847
  Jun 18 05:35:35.847: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename services @ 06/18/24 05:35:35.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:35:35.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:35:35.865
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-2364 @ 06/18/24 05:35:35.868
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 06/18/24 05:35:35.878
  STEP: creating service externalsvc in namespace services-2364 @ 06/18/24 05:35:35.878
  STEP: creating replication controller externalsvc in namespace services-2364 @ 06/18/24 05:35:35.896
  I0618 05:35:35.904407      18 runners.go:197] Created replication controller with name: externalsvc, namespace: services-2364, replica count: 2
  I0618 05:35:38.954865      18 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 06/18/24 05:35:38.958
  Jun 18 05:35:38.978: INFO: Creating new exec pod
  Jun 18 05:35:40.994: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-2364 exec execpod9tjm4 -- /bin/sh -x -c nslookup nodeport-service.services-2364.svc.cluster.local'
  Jun 18 05:35:41.171: INFO: stderr: "+ nslookup nodeport-service.services-2364.svc.cluster.local\n"
  Jun 18 05:35:41.171: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nnodeport-service.services-2364.svc.cluster.local\tcanonical name = externalsvc.services-2364.svc.cluster.local.\nName:\texternalsvc.services-2364.svc.cluster.local\nAddress: 10.111.189.59\n\n"
  Jun 18 05:35:41.171: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-2364, will wait for the garbage collector to delete the pods @ 06/18/24 05:35:41.177
  Jun 18 05:35:41.236: INFO: Deleting ReplicationController externalsvc took: 5.020039ms
  Jun 18 05:35:41.337: INFO: Terminating ReplicationController externalsvc pods took: 101.014651ms
  Jun 18 05:35:44.856: INFO: Cleaning up the NodePort to ExternalName test service
  STEP: Destroying namespace "services-2364" for this suite. @ 06/18/24 05:35:44.87
• [9.028 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:94
  STEP: Creating a kubernetes client @ 06/18/24 05:35:44.881
  Jun 18 05:35:44.882: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename replication-controller @ 06/18/24 05:35:44.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:35:44.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:35:44.898
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 06/18/24 05:35:44.901
  STEP: When a replication controller with a matching selector is created @ 06/18/24 05:35:46.919
  STEP: Then the orphan pod is adopted @ 06/18/24 05:35:46.927
  Jun 18 05:35:47.936: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8271" for this suite. @ 06/18/24 05:35:47.942
• [3.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3117
  STEP: Creating a kubernetes client @ 06/18/24 05:35:47.952
  Jun 18 05:35:47.952: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename services @ 06/18/24 05:35:47.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:35:47.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:35:47.977
  STEP: fetching services @ 06/18/24 05:35:47.982
  Jun 18 05:35:47.986: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2881" for this suite. @ 06/18/24 05:35:47.992
• [0.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:167
  STEP: Creating a kubernetes client @ 06/18/24 05:35:48.006
  Jun 18 05:35:48.006: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename emptydir @ 06/18/24 05:35:48.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:35:48.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:35:48.024
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 06/18/24 05:35:48.027
  STEP: Saw pod success @ 06/18/24 05:35:52.045
  Jun 18 05:35:52.048: INFO: Trying to get logs from node ck-128-worker-1 pod pod-e6b98e35-901f-4990-958d-453596c7dabe container test-container: <nil>
  STEP: delete the pod @ 06/18/24 05:35:52.071
  Jun 18 05:35:52.083: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5012" for this suite. @ 06/18/24 05:35:52.087
• [4.086 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 06/18/24 05:35:52.091
  Jun 18 05:35:52.091: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename daemonsets @ 06/18/24 05:35:52.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:35:52.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:35:52.106
  STEP: Creating a simple DaemonSet "daemon-set" @ 06/18/24 05:35:52.129
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/18/24 05:35:52.135
  Jun 18 05:35:52.139: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 05:35:52.141: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 05:35:52.141: INFO: Node ck-128-worker-1 is running 0 daemon pod, expected 1
  Jun 18 05:35:53.146: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 05:35:53.151: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 18 05:35:53.151: INFO: Node ck-128-worker-2 is running 0 daemon pod, expected 1
  Jun 18 05:35:54.146: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 05:35:54.149: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 18 05:35:54.149: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 06/18/24 05:35:54.151
  Jun 18 05:35:54.166: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 05:35:54.170: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 18 05:35:54.170: INFO: Node ck-128-worker-1 is running 0 daemon pod, expected 1
  Jun 18 05:35:55.176: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 05:35:55.179: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 18 05:35:55.179: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 06/18/24 05:35:55.179
  STEP: Deleting DaemonSet "daemon-set" @ 06/18/24 05:35:55.184
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4776, will wait for the garbage collector to delete the pods @ 06/18/24 05:35:55.184
  Jun 18 05:35:55.241: INFO: Deleting DaemonSet.extensions daemon-set took: 4.85982ms
  Jun 18 05:35:55.342: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.620261ms
  Jun 18 05:35:57.847: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 05:35:57.847: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 18 05:35:57.853: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"3330"},"items":null}

  Jun 18 05:35:57.856: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"3330"},"items":null}

  Jun 18 05:35:57.869: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4776" for this suite. @ 06/18/24 05:35:57.879
• [5.793 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 06/18/24 05:35:57.888
  Jun 18 05:35:57.888: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/18/24 05:35:57.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:35:57.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:35:57.911
  Jun 18 05:35:57.914: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/18/24 05:35:59.539
  Jun 18 05:35:59.539: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=crd-publish-openapi-6217 --namespace=crd-publish-openapi-6217 create -f -'
  Jun 18 05:36:00.222: INFO: stderr: ""
  Jun 18 05:36:00.222: INFO: stdout: "e2e-test-crd-publish-openapi-9647-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Jun 18 05:36:00.222: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=crd-publish-openapi-6217 --namespace=crd-publish-openapi-6217 delete e2e-test-crd-publish-openapi-9647-crds test-cr'
  Jun 18 05:36:00.340: INFO: stderr: ""
  Jun 18 05:36:00.340: INFO: stdout: "e2e-test-crd-publish-openapi-9647-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Jun 18 05:36:00.340: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=crd-publish-openapi-6217 --namespace=crd-publish-openapi-6217 apply -f -'
  Jun 18 05:36:00.536: INFO: stderr: ""
  Jun 18 05:36:00.536: INFO: stdout: "e2e-test-crd-publish-openapi-9647-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Jun 18 05:36:00.536: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=crd-publish-openapi-6217 --namespace=crd-publish-openapi-6217 delete e2e-test-crd-publish-openapi-9647-crds test-cr'
  Jun 18 05:36:00.612: INFO: stderr: ""
  Jun 18 05:36:00.612: INFO: stdout: "e2e-test-crd-publish-openapi-9647-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 06/18/24 05:36:00.612
  Jun 18 05:36:00.612: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=crd-publish-openapi-6217 explain e2e-test-crd-publish-openapi-9647-crds'
  Jun 18 05:36:00.793: INFO: stderr: ""
  Jun 18 05:36:00.793: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-9647-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Jun 18 05:36:02.187: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6217" for this suite. @ 06/18/24 05:36:02.199
• [4.316 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 06/18/24 05:36:02.209
  Jun 18 05:36:02.209: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename watch @ 06/18/24 05:36:02.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:36:02.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:36:02.236
  STEP: getting a starting resourceVersion @ 06/18/24 05:36:02.24
  STEP: starting a background goroutine to produce watch events @ 06/18/24 05:36:02.244
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 06/18/24 05:36:02.244
  Jun 18 05:36:05.020: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5381" for this suite. @ 06/18/24 05:36:05.071
• [2.913 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 06/18/24 05:36:05.123
  Jun 18 05:36:05.123: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename projected @ 06/18/24 05:36:05.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:36:05.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:36:05.14
  STEP: Creating configMap with name projected-configmap-test-volume-0a1f9082-05ba-4833-8f3b-14ffbd303337 @ 06/18/24 05:36:05.143
  STEP: Creating a pod to test consume configMaps @ 06/18/24 05:36:05.146
  STEP: Saw pod success @ 06/18/24 05:36:09.167
  Jun 18 05:36:09.171: INFO: Trying to get logs from node ck-128-worker-2 pod pod-projected-configmaps-88076855-a028-484e-b723-01f4a5f10f26 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 06/18/24 05:36:09.191
  Jun 18 05:36:09.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6251" for this suite. @ 06/18/24 05:36:09.218
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1741
  STEP: Creating a kubernetes client @ 06/18/24 05:36:09.225
  Jun 18 05:36:09.225: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename kubectl @ 06/18/24 05:36:09.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:36:09.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:36:09.244
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/18/24 05:36:09.248
  Jun 18 05:36:09.248: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-146 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Jun 18 05:36:09.360: INFO: stderr: ""
  Jun 18 05:36:09.360: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 06/18/24 05:36:09.36
  STEP: verifying the pod e2e-test-httpd-pod was created @ 06/18/24 05:36:14.411
  Jun 18 05:36:14.411: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-146 get pod e2e-test-httpd-pod -o json'
  Jun 18 05:36:14.506: INFO: stderr: ""
  Jun 18 05:36:14.506: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"cb36fcdddeca7dc091f4024910844d16d13783e7afa2a3f666a897ece40a95e2\",\n            \"cni.projectcalico.org/podIP\": \"172.17.196.198/32\",\n            \"cni.projectcalico.org/podIPs\": \"172.17.196.198/32\"\n        },\n        \"creationTimestamp\": \"2024-06-18T05:36:09Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-146\",\n        \"resourceVersion\": \"3568\",\n        \"uid\": \"cb07d3bf-4115-40d3-acc1-f115366443e6\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-stqr7\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ck-128-worker-2\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-stqr7\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-18T05:36:09Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-18T05:36:10Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-18T05:36:10Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-18T05:36:09Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"cri-o://42c25ab697db19795331cf42d0a326fbc5e193fb8b0757bd6026fbe079ae87d5\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-06-18T05:36:09Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"192.168.190.166\",\n        \"phase\": \"Running\",\n        \"podIP\": \"172.17.196.198\",\n        \"podIPs\": [\n            {\n                \"ip\": \"172.17.196.198\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-06-18T05:36:09Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 06/18/24 05:36:14.507
  Jun 18 05:36:14.507: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-146 replace -f -'
  Jun 18 05:36:15.245: INFO: stderr: ""
  Jun 18 05:36:15.245: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 @ 06/18/24 05:36:15.245
  Jun 18 05:36:15.249: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-146 delete pods e2e-test-httpd-pod'
  Jun 18 05:36:18.727: INFO: stderr: ""
  Jun 18 05:36:18.727: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jun 18 05:36:18.727: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-146" for this suite. @ 06/18/24 05:36:18.736
• [9.519 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 06/18/24 05:36:18.744
  Jun 18 05:36:18.744: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename projected @ 06/18/24 05:36:18.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:36:18.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:36:18.76
  STEP: Creating the pod @ 06/18/24 05:36:18.764
  Jun 18 05:36:21.301: INFO: Successfully updated pod "labelsupdate7fdf4ffc-3fac-4c06-b585-1f4634947e6f"
  Jun 18 05:36:25.324: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9439" for this suite. @ 06/18/24 05:36:25.328
• [6.590 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:396
  STEP: Creating a kubernetes client @ 06/18/24 05:36:25.337
  Jun 18 05:36:25.337: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename kubectl @ 06/18/24 05:36:25.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:36:25.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:36:25.358
  STEP: creating all guestbook components @ 06/18/24 05:36:25.361
  Jun 18 05:36:25.361: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Jun 18 05:36:25.362: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6515 create -f -'
  Jun 18 05:36:25.708: INFO: stderr: ""
  Jun 18 05:36:25.708: INFO: stdout: "service/agnhost-replica created\n"
  Jun 18 05:36:25.708: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Jun 18 05:36:25.708: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6515 create -f -'
  Jun 18 05:36:25.963: INFO: stderr: ""
  Jun 18 05:36:25.963: INFO: stdout: "service/agnhost-primary created\n"
  Jun 18 05:36:25.963: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Jun 18 05:36:25.964: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6515 create -f -'
  Jun 18 05:36:26.275: INFO: stderr: ""
  Jun 18 05:36:26.275: INFO: stdout: "service/frontend created\n"
  Jun 18 05:36:26.276: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Jun 18 05:36:26.276: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6515 create -f -'
  Jun 18 05:36:26.483: INFO: stderr: ""
  Jun 18 05:36:26.483: INFO: stdout: "deployment.apps/frontend created\n"
  Jun 18 05:36:26.484: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Jun 18 05:36:26.484: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6515 create -f -'
  Jun 18 05:36:26.701: INFO: stderr: ""
  Jun 18 05:36:26.701: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Jun 18 05:36:26.701: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Jun 18 05:36:26.701: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6515 create -f -'
  Jun 18 05:36:26.919: INFO: stderr: ""
  Jun 18 05:36:26.919: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 06/18/24 05:36:26.92
  Jun 18 05:36:26.920: INFO: Waiting for all frontend pods to be Running.
  Jun 18 05:36:31.972: INFO: Waiting for frontend to serve content.
  Jun 18 05:36:31.986: INFO: Trying to add a new entry to the guestbook.
  Jun 18 05:36:32.004: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 06/18/24 05:36:32.013
  Jun 18 05:36:32.013: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6515 delete --grace-period=0 --force -f -'
  Jun 18 05:36:32.146: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 18 05:36:32.146: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 06/18/24 05:36:32.146
  Jun 18 05:36:32.146: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6515 delete --grace-period=0 --force -f -'
  Jun 18 05:36:32.232: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 18 05:36:32.232: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 06/18/24 05:36:32.232
  Jun 18 05:36:32.232: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6515 delete --grace-period=0 --force -f -'
  Jun 18 05:36:32.319: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 18 05:36:32.319: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 06/18/24 05:36:32.319
  Jun 18 05:36:32.319: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6515 delete --grace-period=0 --force -f -'
  Jun 18 05:36:32.395: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 18 05:36:32.395: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 06/18/24 05:36:32.395
  Jun 18 05:36:32.396: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6515 delete --grace-period=0 --force -f -'
  Jun 18 05:36:32.502: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 18 05:36:32.502: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 06/18/24 05:36:32.503
  Jun 18 05:36:32.503: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6515 delete --grace-period=0 --force -f -'
  Jun 18 05:36:32.587: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 18 05:36:32.587: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Jun 18 05:36:32.587: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6515" for this suite. @ 06/18/24 05:36:32.596
• [7.267 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 06/18/24 05:36:32.605
  Jun 18 05:36:32.605: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename projected @ 06/18/24 05:36:32.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:36:32.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:36:32.629
  STEP: Creating projection with secret that has name projected-secret-test-eb94341d-458d-4632-8f9f-ab79a6acfd68 @ 06/18/24 05:36:32.632
  STEP: Creating a pod to test consume secrets @ 06/18/24 05:36:32.636
  STEP: Saw pod success @ 06/18/24 05:36:36.654
  Jun 18 05:36:36.656: INFO: Trying to get logs from node ck-128-worker-3 pod pod-projected-secrets-4d83fabd-9582-4e31-bed9-7355008f9abb container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/18/24 05:36:36.663
  Jun 18 05:36:36.677: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3933" for this suite. @ 06/18/24 05:36:36.681
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 06/18/24 05:36:36.689
  Jun 18 05:36:36.689: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename subpath @ 06/18/24 05:36:36.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:36:36.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:36:36.71
  STEP: Setting up data @ 06/18/24 05:36:36.713
  STEP: Creating pod pod-subpath-test-downwardapi-9ppl @ 06/18/24 05:36:36.722
  STEP: Creating a pod to test atomic-volume-subpath @ 06/18/24 05:36:36.722
  STEP: Saw pod success @ 06/18/24 05:37:00.796
  Jun 18 05:37:00.799: INFO: Trying to get logs from node ck-128-worker-2 pod pod-subpath-test-downwardapi-9ppl container test-container-subpath-downwardapi-9ppl: <nil>
  STEP: delete the pod @ 06/18/24 05:37:00.806
  STEP: Deleting pod pod-subpath-test-downwardapi-9ppl @ 06/18/24 05:37:00.818
  Jun 18 05:37:00.818: INFO: Deleting pod "pod-subpath-test-downwardapi-9ppl" in namespace "subpath-5147"
  Jun 18 05:37:00.821: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5147" for this suite. @ 06/18/24 05:37:00.825
• [24.143 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:46
  STEP: Creating a kubernetes client @ 06/18/24 05:37:00.832
  Jun 18 05:37:00.832: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename secrets @ 06/18/24 05:37:00.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:37:00.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:37:00.856
  STEP: Creating secret with name secret-test-b98c6a09-ebf5-43ff-bc19-0b0b43b1b774 @ 06/18/24 05:37:00.86
  STEP: Creating a pod to test consume secrets @ 06/18/24 05:37:00.864
  STEP: Saw pod success @ 06/18/24 05:37:04.886
  Jun 18 05:37:04.889: INFO: Trying to get logs from node ck-128-worker-2 pod pod-secrets-96e70e25-545c-4c30-8591-3419b9d6102c container secret-env-test: <nil>
  STEP: delete the pod @ 06/18/24 05:37:04.896
  Jun 18 05:37:04.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4206" for this suite. @ 06/18/24 05:37:04.927
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 06/18/24 05:37:04.936
  Jun 18 05:37:04.936: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename configmap @ 06/18/24 05:37:04.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:37:04.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:37:04.959
  STEP: Creating configMap with name configmap-test-volume-map-8ae52d7f-d7ca-4ec5-bcda-8a94b508b9aa @ 06/18/24 05:37:04.963
  STEP: Creating a pod to test consume configMaps @ 06/18/24 05:37:04.967
  STEP: Saw pod success @ 06/18/24 05:37:08.991
  Jun 18 05:37:08.994: INFO: Trying to get logs from node ck-128-worker-1 pod pod-configmaps-0b6562b9-4585-47ea-b434-ebf78b1edf27 container agnhost-container: <nil>
  STEP: delete the pod @ 06/18/24 05:37:09.002
  Jun 18 05:37:09.017: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3282" for this suite. @ 06/18/24 05:37:09.023
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:49
  STEP: Creating a kubernetes client @ 06/18/24 05:37:09.036
  Jun 18 05:37:09.036: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename csistoragecapacity @ 06/18/24 05:37:09.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:37:09.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:37:09.051
  STEP: getting /apis @ 06/18/24 05:37:09.054
  STEP: getting /apis/storage.k8s.io @ 06/18/24 05:37:09.061
  STEP: getting /apis/storage.k8s.io/v1 @ 06/18/24 05:37:09.063
  STEP: creating @ 06/18/24 05:37:09.065
  STEP: watching @ 06/18/24 05:37:09.079
  Jun 18 05:37:09.079: INFO: starting watch
  STEP: getting @ 06/18/24 05:37:09.086
  STEP: listing in namespace @ 06/18/24 05:37:09.089
  STEP: listing across namespaces @ 06/18/24 05:37:09.092
  STEP: patching @ 06/18/24 05:37:09.095
  STEP: updating @ 06/18/24 05:37:09.099
  Jun 18 05:37:09.104: INFO: waiting for watch events with expected annotations in namespace
  Jun 18 05:37:09.104: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 06/18/24 05:37:09.105
  STEP: deleting a collection @ 06/18/24 05:37:09.113
  Jun 18 05:37:09.125: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-4002" for this suite. @ 06/18/24 05:37:09.13
• [0.099 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 06/18/24 05:37:09.135
  Jun 18 05:37:09.136: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename daemonsets @ 06/18/24 05:37:09.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:37:09.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:37:09.151
  Jun 18 05:37:09.174: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 06/18/24 05:37:09.186
  Jun 18 05:37:09.190: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 05:37:09.190: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 06/18/24 05:37:09.19
  Jun 18 05:37:09.229: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 05:37:09.229: INFO: Node ck-128-worker-3 is running 0 daemon pod, expected 1
  Jun 18 05:37:10.233: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 05:37:10.233: INFO: Node ck-128-worker-3 is running 0 daemon pod, expected 1
  Jun 18 05:37:11.236: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 18 05:37:11.236: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 06/18/24 05:37:11.24
  Jun 18 05:37:11.257: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 18 05:37:11.257: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  Jun 18 05:37:12.261: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 05:37:12.261: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 06/18/24 05:37:12.261
  Jun 18 05:37:12.274: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 05:37:12.274: INFO: Node ck-128-worker-3 is running 0 daemon pod, expected 1
  Jun 18 05:37:13.279: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 05:37:13.279: INFO: Node ck-128-worker-3 is running 0 daemon pod, expected 1
  Jun 18 05:37:14.278: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 18 05:37:14.279: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/18/24 05:37:14.286
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8907, will wait for the garbage collector to delete the pods @ 06/18/24 05:37:14.287
  Jun 18 05:37:14.344: INFO: Deleting DaemonSet.extensions daemon-set took: 4.866389ms
  Jun 18 05:37:14.444: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.313741ms
  Jun 18 05:37:16.950: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 05:37:16.950: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 18 05:37:16.953: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"4224"},"items":null}

  Jun 18 05:37:16.956: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"4224"},"items":null}

  Jun 18 05:37:16.988: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8907" for this suite. @ 06/18/24 05:37:16.996
• [7.867 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:125
  STEP: Creating a kubernetes client @ 06/18/24 05:37:17.016
  Jun 18 05:37:17.016: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename discovery @ 06/18/24 05:37:17.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:37:17.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:37:17.043
  STEP: Setting up server cert @ 06/18/24 05:37:17.051
  Jun 18 05:37:17.898: INFO: Checking APIGroup: apiregistration.k8s.io
  Jun 18 05:37:17.901: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Jun 18 05:37:17.901: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Jun 18 05:37:17.902: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Jun 18 05:37:17.902: INFO: Checking APIGroup: apps
  Jun 18 05:37:17.904: INFO: PreferredVersion.GroupVersion: apps/v1
  Jun 18 05:37:17.904: INFO: Versions found [{apps/v1 v1}]
  Jun 18 05:37:17.904: INFO: apps/v1 matches apps/v1
  Jun 18 05:37:17.904: INFO: Checking APIGroup: events.k8s.io
  Jun 18 05:37:17.906: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Jun 18 05:37:17.906: INFO: Versions found [{events.k8s.io/v1 v1}]
  Jun 18 05:37:17.907: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Jun 18 05:37:17.907: INFO: Checking APIGroup: authentication.k8s.io
  Jun 18 05:37:17.909: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Jun 18 05:37:17.909: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Jun 18 05:37:17.909: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Jun 18 05:37:17.910: INFO: Checking APIGroup: authorization.k8s.io
  Jun 18 05:37:17.911: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Jun 18 05:37:17.911: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Jun 18 05:37:17.912: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Jun 18 05:37:17.912: INFO: Checking APIGroup: autoscaling
  Jun 18 05:37:17.914: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Jun 18 05:37:17.914: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Jun 18 05:37:17.914: INFO: autoscaling/v2 matches autoscaling/v2
  Jun 18 05:37:17.914: INFO: Checking APIGroup: batch
  Jun 18 05:37:17.916: INFO: PreferredVersion.GroupVersion: batch/v1
  Jun 18 05:37:17.916: INFO: Versions found [{batch/v1 v1}]
  Jun 18 05:37:17.916: INFO: batch/v1 matches batch/v1
  Jun 18 05:37:17.916: INFO: Checking APIGroup: certificates.k8s.io
  Jun 18 05:37:17.917: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Jun 18 05:37:17.918: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Jun 18 05:37:17.918: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Jun 18 05:37:17.918: INFO: Checking APIGroup: networking.k8s.io
  Jun 18 05:37:17.919: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Jun 18 05:37:17.920: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Jun 18 05:37:17.920: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Jun 18 05:37:17.920: INFO: Checking APIGroup: policy
  Jun 18 05:37:17.922: INFO: PreferredVersion.GroupVersion: policy/v1
  Jun 18 05:37:17.922: INFO: Versions found [{policy/v1 v1}]
  Jun 18 05:37:17.922: INFO: policy/v1 matches policy/v1
  Jun 18 05:37:17.922: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Jun 18 05:37:17.924: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Jun 18 05:37:17.924: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Jun 18 05:37:17.924: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Jun 18 05:37:17.924: INFO: Checking APIGroup: storage.k8s.io
  Jun 18 05:37:17.925: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Jun 18 05:37:17.925: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Jun 18 05:37:17.925: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Jun 18 05:37:17.925: INFO: Checking APIGroup: admissionregistration.k8s.io
  Jun 18 05:37:17.927: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Jun 18 05:37:17.927: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Jun 18 05:37:17.927: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Jun 18 05:37:17.927: INFO: Checking APIGroup: apiextensions.k8s.io
  Jun 18 05:37:17.929: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Jun 18 05:37:17.929: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Jun 18 05:37:17.929: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Jun 18 05:37:17.929: INFO: Checking APIGroup: scheduling.k8s.io
  Jun 18 05:37:17.930: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Jun 18 05:37:17.930: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Jun 18 05:37:17.930: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Jun 18 05:37:17.931: INFO: Checking APIGroup: coordination.k8s.io
  Jun 18 05:37:17.932: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Jun 18 05:37:17.932: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Jun 18 05:37:17.932: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Jun 18 05:37:17.932: INFO: Checking APIGroup: node.k8s.io
  Jun 18 05:37:17.933: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Jun 18 05:37:17.933: INFO: Versions found [{node.k8s.io/v1 v1}]
  Jun 18 05:37:17.933: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Jun 18 05:37:17.934: INFO: Checking APIGroup: discovery.k8s.io
  Jun 18 05:37:17.936: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Jun 18 05:37:17.936: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Jun 18 05:37:17.936: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Jun 18 05:37:17.936: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Jun 18 05:37:17.937: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
  Jun 18 05:37:17.937: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
  Jun 18 05:37:17.937: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
  Jun 18 05:37:17.937: INFO: Checking APIGroup: crd.projectcalico.org
  Jun 18 05:37:17.940: INFO: PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  Jun 18 05:37:17.940: INFO: Versions found [{crd.projectcalico.org/v1 v1}]
  Jun 18 05:37:17.940: INFO: crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  Jun 18 05:37:17.940: INFO: Checking APIGroup: gitlab.secloudit.io
  Jun 18 05:37:17.942: INFO: PreferredVersion.GroupVersion: gitlab.secloudit.io/v1
  Jun 18 05:37:17.942: INFO: Versions found [{gitlab.secloudit.io/v1 v1}]
  Jun 18 05:37:17.942: INFO: gitlab.secloudit.io/v1 matches gitlab.secloudit.io/v1
  Jun 18 05:37:17.942: INFO: Checking APIGroup: workload.secloudit.io
  Jun 18 05:37:17.944: INFO: PreferredVersion.GroupVersion: workload.secloudit.io/v1
  Jun 18 05:37:17.944: INFO: Versions found [{workload.secloudit.io/v1 v1}]
  Jun 18 05:37:17.944: INFO: workload.secloudit.io/v1 matches workload.secloudit.io/v1
  Jun 18 05:37:17.944: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-561" for this suite. @ 06/18/24 05:37:17.951
• [0.942 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:207
  STEP: Creating a kubernetes client @ 06/18/24 05:37:17.959
  Jun 18 05:37:17.959: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename endpointslice @ 06/18/24 05:37:17.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:37:17.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:37:17.977
  STEP: referencing a single matching pod @ 06/18/24 05:37:23.047
  STEP: referencing matching pods with named port @ 06/18/24 05:37:28.062
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 06/18/24 05:37:33.073
  STEP: recreating EndpointSlices after they've been deleted @ 06/18/24 05:37:38.081
  Jun 18 05:37:38.097: INFO: EndpointSlice for Service endpointslice-3556/example-named-port not found
  Jun 18 05:37:48.107: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3556" for this suite. @ 06/18/24 05:37:48.114
• [30.161 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:169
  STEP: Creating a kubernetes client @ 06/18/24 05:37:48.12
  Jun 18 05:37:48.120: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename discovery @ 06/18/24 05:37:48.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:37:48.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:37:48.139
  STEP: Setting up server cert @ 06/18/24 05:37:48.145
  STEP: Requesting APIResourceList from "/api/v1" @ 06/18/24 05:37:48.522
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 06/18/24 05:37:48.524
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 06/18/24 05:37:48.526
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 06/18/24 05:37:48.527
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 06/18/24 05:37:48.529
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 06/18/24 05:37:48.53
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 06/18/24 05:37:48.532
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 06/18/24 05:37:48.533
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 06/18/24 05:37:48.535
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 06/18/24 05:37:48.536
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 06/18/24 05:37:48.537
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 06/18/24 05:37:48.539
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 06/18/24 05:37:48.54
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 06/18/24 05:37:48.542
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 06/18/24 05:37:48.543
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 06/18/24 05:37:48.544
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 06/18/24 05:37:48.546
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 06/18/24 05:37:48.547
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 06/18/24 05:37:48.548
  Jun 18 05:37:48.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-1112" for this suite. @ 06/18/24 05:37:48.554
• [0.440 seconds]
------------------------------
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:152
  STEP: Creating a kubernetes client @ 06/18/24 05:37:48.56
  Jun 18 05:37:48.560: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/18/24 05:37:48.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:37:48.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:37:48.576
  STEP: create the container to handle the HTTPGet hook request. @ 06/18/24 05:37:48.585
  STEP: create the pod with lifecycle hook @ 06/18/24 05:37:50.603
  STEP: delete the pod with lifecycle hook @ 06/18/24 05:37:52.625
  STEP: check prestop hook @ 06/18/24 05:37:56.645
  Jun 18 05:37:56.652: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9637" for this suite. @ 06/18/24 05:37:56.658
• [8.102 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 06/18/24 05:37:56.663
  Jun 18 05:37:56.663: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename secrets @ 06/18/24 05:37:56.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:37:56.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:37:56.684
  STEP: Creating secret with name secret-test-8f959df0-47a3-456c-8a28-9878b330fa70 @ 06/18/24 05:37:56.688
  STEP: Creating a pod to test consume secrets @ 06/18/24 05:37:56.693
  STEP: Saw pod success @ 06/18/24 05:38:00.715
  Jun 18 05:38:00.718: INFO: Trying to get logs from node ck-128-worker-2 pod pod-secrets-8f86760e-3df5-44fc-a852-15df82d58753 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/18/24 05:38:00.726
  Jun 18 05:38:00.740: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1574" for this suite. @ 06/18/24 05:38:00.745
• [4.087 seconds]
------------------------------
SS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 06/18/24 05:38:00.751
  Jun 18 05:38:00.751: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename disruption @ 06/18/24 05:38:00.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:38:00.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:38:00.77
  STEP: Waiting for the pdb to be processed @ 06/18/24 05:38:00.777
  STEP: Waiting for all pods to be running @ 06/18/24 05:38:02.806
  Jun 18 05:38:02.810: INFO: running pods: 0 < 3
  Jun 18 05:38:04.819: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5890" for this suite. @ 06/18/24 05:38:04.825
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:103
  STEP: Creating a kubernetes client @ 06/18/24 05:38:04.834
  Jun 18 05:38:04.834: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename replication-controller @ 06/18/24 05:38:04.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:38:04.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:38:04.856
  STEP: Given a ReplicationController is created @ 06/18/24 05:38:04.861
  STEP: When the matched label of one of its pods change @ 06/18/24 05:38:04.867
  Jun 18 05:38:04.870: INFO: Pod name pod-release: Found 0 pods out of 1
  Jun 18 05:38:09.875: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 06/18/24 05:38:09.888
  Jun 18 05:38:10.895: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5177" for this suite. @ 06/18/24 05:38:10.901
• [6.073 seconds]
------------------------------
SSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 06/18/24 05:38:10.907
  Jun 18 05:38:10.907: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename init-container @ 06/18/24 05:38:10.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:38:10.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:38:10.925
  STEP: creating the pod @ 06/18/24 05:38:10.928
  Jun 18 05:38:10.928: INFO: PodSpec: initContainers in spec.initContainers
  Jun 18 05:38:16.441: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7630" for this suite. @ 06/18/24 05:38:16.448
• [5.547 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 06/18/24 05:38:16.455
  Jun 18 05:38:16.455: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/18/24 05:38:16.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:38:16.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:38:16.476
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 06/18/24 05:38:16.481
  Jun 18 05:38:16.484: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 05:38:17.973: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 05:38:23.754: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9232" for this suite. @ 06/18/24 05:38:23.764
• [7.313 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:104
  STEP: Creating a kubernetes client @ 06/18/24 05:38:23.781
  Jun 18 05:38:23.781: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename endpointslice @ 06/18/24 05:38:23.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:38:23.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:38:23.8
  Jun 18 05:38:25.857: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5557" for this suite. @ 06/18/24 05:38:25.863
• [2.088 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 06/18/24 05:38:25.87
  Jun 18 05:38:25.870: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename projected @ 06/18/24 05:38:25.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:38:25.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:38:25.888
  STEP: Creating projection with secret that has name projected-secret-test-61ac8865-2d51-40f6-b2a5-1f996dd11fe6 @ 06/18/24 05:38:25.891
  STEP: Creating a pod to test consume secrets @ 06/18/24 05:38:25.896
  STEP: Saw pod success @ 06/18/24 05:38:29.922
  Jun 18 05:38:29.924: INFO: Trying to get logs from node ck-128-worker-1 pod pod-projected-secrets-7abf2d8a-11be-4cd3-87a6-e920021bb287 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/18/24 05:38:29.931
  Jun 18 05:38:29.944: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3148" for this suite. @ 06/18/24 05:38:29.949
• [4.085 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1027
  STEP: Creating a kubernetes client @ 06/18/24 05:38:29.955
  Jun 18 05:38:29.955: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename kubectl @ 06/18/24 05:38:29.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:38:29.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:38:29.971
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/18/24 05:38:29.976
  Jun 18 05:38:29.976: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-3864 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Jun 18 05:38:30.090: INFO: stderr: ""
  Jun 18 05:38:30.090: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 06/18/24 05:38:30.09
  Jun 18 05:38:30.090: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-3864 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
  Jun 18 05:38:30.184: INFO: stderr: ""
  Jun 18 05:38:30.184: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/18/24 05:38:30.184
  Jun 18 05:38:30.187: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-3864 delete pods e2e-test-httpd-pod'
  Jun 18 05:38:32.157: INFO: stderr: ""
  Jun 18 05:38:32.157: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jun 18 05:38:32.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3864" for this suite. @ 06/18/24 05:38:32.165
• [2.215 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 06/18/24 05:38:32.171
  Jun 18 05:38:32.171: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename kubelet-test @ 06/18/24 05:38:32.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:38:32.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:38:32.192
  Jun 18 05:38:32.220: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6364" for this suite. @ 06/18/24 05:38:32.226
• [0.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 06/18/24 05:38:32.237
  Jun 18 05:38:32.237: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename dns @ 06/18/24 05:38:32.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:38:32.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:38:32.256
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 06/18/24 05:38:32.259
  Jun 18 05:38:32.267: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-5342  b10e6780-6693-4f34-abab-dd118b3542cc 4864 0 2024-06-18 05:38:32 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-06-18 05:38:32 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-78jmp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-78jmp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 06/18/24 05:38:34.276
  Jun 18 05:38:34.276: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-5342 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 05:38:34.276: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 05:38:34.277: INFO: ExecWithOptions: Clientset creation
  Jun 18 05:38:34.277: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-5342/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 06/18/24 05:38:34.349
  Jun 18 05:38:34.349: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-5342 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 05:38:34.349: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 05:38:34.350: INFO: ExecWithOptions: Clientset creation
  Jun 18 05:38:34.350: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-5342/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 18 05:38:34.409: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Jun 18 05:38:34.414: INFO: Deleting pod test-dns-nameservers...
  STEP: Destroying namespace "dns-5342" for this suite. @ 06/18/24 05:38:34.424
• [2.191 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:156
  STEP: Creating a kubernetes client @ 06/18/24 05:38:34.434
  Jun 18 05:38:34.434: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename runtimeclass @ 06/18/24 05:38:34.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:38:34.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:38:34.454
  STEP: Deleting RuntimeClass runtimeclass-9393-delete-me @ 06/18/24 05:38:34.46
  STEP: Waiting for the RuntimeClass to disappear @ 06/18/24 05:38:34.464
  Jun 18 05:38:34.471: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9393" for this suite. @ 06/18/24 05:38:34.474
• [0.045 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 06/18/24 05:38:34.479
  Jun 18 05:38:34.479: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/18/24 05:38:34.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:38:34.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:38:34.495
  Jun 18 05:38:34.498: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/18/24 05:38:36.01
  Jun 18 05:38:36.010: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=crd-publish-openapi-36 --namespace=crd-publish-openapi-36 create -f -'
  Jun 18 05:38:36.795: INFO: stderr: ""
  Jun 18 05:38:36.795: INFO: stdout: "e2e-test-crd-publish-openapi-5806-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Jun 18 05:38:36.795: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=crd-publish-openapi-36 --namespace=crd-publish-openapi-36 delete e2e-test-crd-publish-openapi-5806-crds test-cr'
  Jun 18 05:38:36.890: INFO: stderr: ""
  Jun 18 05:38:36.890: INFO: stdout: "e2e-test-crd-publish-openapi-5806-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Jun 18 05:38:36.890: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=crd-publish-openapi-36 --namespace=crd-publish-openapi-36 apply -f -'
  Jun 18 05:38:37.091: INFO: stderr: ""
  Jun 18 05:38:37.092: INFO: stdout: "e2e-test-crd-publish-openapi-5806-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Jun 18 05:38:37.092: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=crd-publish-openapi-36 --namespace=crd-publish-openapi-36 delete e2e-test-crd-publish-openapi-5806-crds test-cr'
  Jun 18 05:38:37.168: INFO: stderr: ""
  Jun 18 05:38:37.168: INFO: stdout: "e2e-test-crd-publish-openapi-5806-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 06/18/24 05:38:37.169
  Jun 18 05:38:37.169: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=crd-publish-openapi-36 explain e2e-test-crd-publish-openapi-5806-crds'
  Jun 18 05:38:37.339: INFO: stderr: ""
  Jun 18 05:38:37.339: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-5806-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  Jun 18 05:38:38.788: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-36" for this suite. @ 06/18/24 05:38:38.8
• [4.326 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:91
  STEP: Creating a kubernetes client @ 06/18/24 05:38:38.806
  Jun 18 05:38:38.807: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename downward-api @ 06/18/24 05:38:38.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:38:38.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:38:38.826
  STEP: Creating a pod to test downward api env vars @ 06/18/24 05:38:38.83
  STEP: Saw pod success @ 06/18/24 05:38:42.852
  Jun 18 05:38:42.855: INFO: Trying to get logs from node ck-128-worker-2 pod downward-api-4fcdbff3-83f6-4a47-8f51-4cc6f1ded728 container dapi-container: <nil>
  STEP: delete the pod @ 06/18/24 05:38:42.863
  Jun 18 05:38:42.876: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1822" for this suite. @ 06/18/24 05:38:42.88
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 06/18/24 05:38:42.9
  Jun 18 05:38:42.901: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename projected @ 06/18/24 05:38:42.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:38:42.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:38:42.92
  STEP: Creating secret with name projected-secret-test-fc4ef9bd-2a00-433c-8acf-d44dbeaa5bec @ 06/18/24 05:38:42.922
  STEP: Creating a pod to test consume secrets @ 06/18/24 05:38:42.933
  STEP: Saw pod success @ 06/18/24 05:38:46.956
  Jun 18 05:38:46.959: INFO: Trying to get logs from node ck-128-worker-2 pod pod-projected-secrets-d0b05d41-0186-4acd-8452-939283cfffe3 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/18/24 05:38:46.965
  Jun 18 05:38:46.977: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6035" for this suite. @ 06/18/24 05:38:46.982
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:642
  STEP: Creating a kubernetes client @ 06/18/24 05:38:46.988
  Jun 18 05:38:46.988: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename job @ 06/18/24 05:38:46.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:38:47.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:38:47.003
  STEP: Creating a job @ 06/18/24 05:38:47.006
  STEP: Ensure pods equal to parallelism count is attached to the job @ 06/18/24 05:38:47.012
  STEP: patching /status @ 06/18/24 05:38:49.017
  STEP: updating /status @ 06/18/24 05:38:49.025
  STEP: get /status @ 06/18/24 05:38:49.032
  Jun 18 05:38:49.035: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-594" for this suite. @ 06/18/24 05:38:49.039
• [2.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 06/18/24 05:38:49.049
  Jun 18 05:38:49.049: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/18/24 05:38:49.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:38:49.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:38:49.064
  Jun 18 05:38:49.068: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 06/18/24 05:38:50.424
  Jun 18 05:38:50.424: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=crd-publish-openapi-1057 --namespace=crd-publish-openapi-1057 create -f -'
  Jun 18 05:38:52.998: INFO: stderr: ""
  Jun 18 05:38:52.998: INFO: stdout: "e2e-test-crd-publish-openapi-1129-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Jun 18 05:38:52.998: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=crd-publish-openapi-1057 --namespace=crd-publish-openapi-1057 delete e2e-test-crd-publish-openapi-1129-crds test-foo'
  Jun 18 05:38:53.085: INFO: stderr: ""
  Jun 18 05:38:53.086: INFO: stdout: "e2e-test-crd-publish-openapi-1129-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Jun 18 05:38:53.086: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=crd-publish-openapi-1057 --namespace=crd-publish-openapi-1057 apply -f -'
  Jun 18 05:38:53.260: INFO: stderr: ""
  Jun 18 05:38:53.260: INFO: stdout: "e2e-test-crd-publish-openapi-1129-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Jun 18 05:38:53.260: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=crd-publish-openapi-1057 --namespace=crd-publish-openapi-1057 delete e2e-test-crd-publish-openapi-1129-crds test-foo'
  Jun 18 05:38:53.341: INFO: stderr: ""
  Jun 18 05:38:53.341: INFO: stdout: "e2e-test-crd-publish-openapi-1129-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 06/18/24 05:38:53.341
  Jun 18 05:38:53.341: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=crd-publish-openapi-1057 --namespace=crd-publish-openapi-1057 create -f -'
  Jun 18 05:38:53.493: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 06/18/24 05:38:53.493
  Jun 18 05:38:53.493: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=crd-publish-openapi-1057 --namespace=crd-publish-openapi-1057 create -f -'
  Jun 18 05:38:53.672: INFO: rc: 1
  Jun 18 05:38:53.672: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=crd-publish-openapi-1057 --namespace=crd-publish-openapi-1057 apply -f -'
  Jun 18 05:38:53.839: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 06/18/24 05:38:53.839
  Jun 18 05:38:53.840: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=crd-publish-openapi-1057 --namespace=crd-publish-openapi-1057 create -f -'
  Jun 18 05:38:54.002: INFO: rc: 1
  Jun 18 05:38:54.003: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=crd-publish-openapi-1057 --namespace=crd-publish-openapi-1057 apply -f -'
  Jun 18 05:38:54.192: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 06/18/24 05:38:54.192
  Jun 18 05:38:54.193: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=crd-publish-openapi-1057 explain e2e-test-crd-publish-openapi-1129-crds'
  Jun 18 05:38:54.399: INFO: stderr: ""
  Jun 18 05:38:54.399: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1129-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 06/18/24 05:38:54.4
  Jun 18 05:38:54.400: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=crd-publish-openapi-1057 explain e2e-test-crd-publish-openapi-1129-crds.metadata'
  Jun 18 05:38:54.555: INFO: stderr: ""
  Jun 18 05:38:54.555: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1129-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Jun 18 05:38:54.556: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=crd-publish-openapi-1057 explain e2e-test-crd-publish-openapi-1129-crds.spec'
  Jun 18 05:38:54.721: INFO: stderr: ""
  Jun 18 05:38:54.721: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1129-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Jun 18 05:38:54.722: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=crd-publish-openapi-1057 explain e2e-test-crd-publish-openapi-1129-crds.spec.bars'
  Jun 18 05:38:54.900: INFO: stderr: ""
  Jun 18 05:38:54.900: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1129-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 06/18/24 05:38:54.901
  Jun 18 05:38:54.901: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=crd-publish-openapi-1057 explain e2e-test-crd-publish-openapi-1129-crds.spec.bars2'
  Jun 18 05:38:55.052: INFO: rc: 1
  Jun 18 05:38:56.442: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1057" for this suite. @ 06/18/24 05:38:56.451
• [7.407 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:269
  STEP: Creating a kubernetes client @ 06/18/24 05:38:56.457
  Jun 18 05:38:56.457: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/18/24 05:38:56.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:38:56.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:38:56.473
  Jun 18 05:38:56.476: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 05:38:59.678: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5636" for this suite. @ 06/18/24 05:38:59.683
• [3.231 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:528
  STEP: Creating a kubernetes client @ 06/18/24 05:38:59.693
  Jun 18 05:38:59.693: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename security-context-test @ 06/18/24 05:38:59.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:38:59.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:38:59.709
  Jun 18 05:39:03.743: INFO: Got logs for pod "busybox-privileged-false-9b71b319-609e-4bdf-b4bb-815325939a04": "ip: RTNETLINK answers: Operation not permitted\n"
  Jun 18 05:39:03.743: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2140" for this suite. @ 06/18/24 05:39:03.752
• [4.070 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 06/18/24 05:39:03.763
  Jun 18 05:39:03.763: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename field-validation @ 06/18/24 05:39:03.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:39:03.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:39:03.783
  STEP: apply creating a deployment @ 06/18/24 05:39:03.787
  Jun 18 05:39:03.790: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9789" for this suite. @ 06/18/24 05:39:03.805
• [0.048 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2165
  STEP: Creating a kubernetes client @ 06/18/24 05:39:03.811
  Jun 18 05:39:03.811: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename services @ 06/18/24 05:39:03.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:39:03.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:39:03.829
  STEP: creating service in namespace services-6507 @ 06/18/24 05:39:03.833
  STEP: creating service affinity-clusterip in namespace services-6507 @ 06/18/24 05:39:03.833
  STEP: creating replication controller affinity-clusterip in namespace services-6507 @ 06/18/24 05:39:03.847
  I0618 05:39:03.854786      18 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-6507, replica count: 3
  I0618 05:39:06.906356      18 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 18 05:39:06.913: INFO: Creating new exec pod
  Jun 18 05:39:09.933: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-6507 exec execpod-affinityhfpbb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Jun 18 05:39:10.065: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Jun 18 05:39:10.065: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 05:39:10.065: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-6507 exec execpod-affinityhfpbb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.110.89.50 80'
  Jun 18 05:39:10.192: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.110.89.50 80\nConnection to 10.110.89.50 80 port [tcp/http] succeeded!\n"
  Jun 18 05:39:10.192: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 05:39:10.192: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-6507 exec execpod-affinityhfpbb -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.110.89.50:80/ ; done'
  Jun 18 05:39:10.429: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.89.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.89.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.89.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.89.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.89.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.89.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.89.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.89.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.89.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.89.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.89.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.89.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.89.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.89.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.89.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.89.50:80/\n"
  Jun 18 05:39:10.430: INFO: stdout: "\naffinity-clusterip-v8bcc\naffinity-clusterip-v8bcc\naffinity-clusterip-v8bcc\naffinity-clusterip-v8bcc\naffinity-clusterip-v8bcc\naffinity-clusterip-v8bcc\naffinity-clusterip-v8bcc\naffinity-clusterip-v8bcc\naffinity-clusterip-v8bcc\naffinity-clusterip-v8bcc\naffinity-clusterip-v8bcc\naffinity-clusterip-v8bcc\naffinity-clusterip-v8bcc\naffinity-clusterip-v8bcc\naffinity-clusterip-v8bcc\naffinity-clusterip-v8bcc"
  Jun 18 05:39:10.430: INFO: Received response from host: affinity-clusterip-v8bcc
  Jun 18 05:39:10.430: INFO: Received response from host: affinity-clusterip-v8bcc
  Jun 18 05:39:10.430: INFO: Received response from host: affinity-clusterip-v8bcc
  Jun 18 05:39:10.430: INFO: Received response from host: affinity-clusterip-v8bcc
  Jun 18 05:39:10.430: INFO: Received response from host: affinity-clusterip-v8bcc
  Jun 18 05:39:10.430: INFO: Received response from host: affinity-clusterip-v8bcc
  Jun 18 05:39:10.430: INFO: Received response from host: affinity-clusterip-v8bcc
  Jun 18 05:39:10.430: INFO: Received response from host: affinity-clusterip-v8bcc
  Jun 18 05:39:10.430: INFO: Received response from host: affinity-clusterip-v8bcc
  Jun 18 05:39:10.430: INFO: Received response from host: affinity-clusterip-v8bcc
  Jun 18 05:39:10.430: INFO: Received response from host: affinity-clusterip-v8bcc
  Jun 18 05:39:10.430: INFO: Received response from host: affinity-clusterip-v8bcc
  Jun 18 05:39:10.430: INFO: Received response from host: affinity-clusterip-v8bcc
  Jun 18 05:39:10.430: INFO: Received response from host: affinity-clusterip-v8bcc
  Jun 18 05:39:10.430: INFO: Received response from host: affinity-clusterip-v8bcc
  Jun 18 05:39:10.430: INFO: Received response from host: affinity-clusterip-v8bcc
  Jun 18 05:39:10.430: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Jun 18 05:39:10.436: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-6507, will wait for the garbage collector to delete the pods @ 06/18/24 05:39:10.448
  Jun 18 05:39:10.509: INFO: Deleting ReplicationController affinity-clusterip took: 6.962464ms
  Jun 18 05:39:10.609: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.197698ms
  STEP: Destroying namespace "services-6507" for this suite. @ 06/18/24 05:39:14.234
• [10.428 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod  [Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 06/18/24 05:39:14.242
  Jun 18 05:39:14.242: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename prestop @ 06/18/24 05:39:14.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:39:14.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:39:14.258
  STEP: Creating server pod server in namespace prestop-3514 @ 06/18/24 05:39:14.261
  STEP: Waiting for pods to come up. @ 06/18/24 05:39:14.267
  STEP: Creating tester pod tester in namespace prestop-3514 @ 06/18/24 05:39:16.276
  STEP: Deleting pre-stop pod @ 06/18/24 05:39:18.289
  Jun 18 05:39:23.301: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  Jun 18 05:39:23.303: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Deleting the server pod @ 06/18/24 05:39:23.308
  STEP: Destroying namespace "prestop-3514" for this suite. @ 06/18/24 05:39:23.324
• [9.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 06/18/24 05:39:23.341
  Jun 18 05:39:23.341: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename webhook @ 06/18/24 05:39:23.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:39:23.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:39:23.384
  STEP: Setting up server cert @ 06/18/24 05:39:23.423
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 05:39:24.291
  STEP: Deploying the webhook pod @ 06/18/24 05:39:24.301
  STEP: Wait for the deployment to be ready @ 06/18/24 05:39:24.315
  Jun 18 05:39:24.323: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/18/24 05:39:26.334
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 05:39:26.346
  Jun 18 05:39:27.346: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 06/18/24 05:39:27.354
  STEP: create a pod that should be denied by the webhook @ 06/18/24 05:39:27.378
  STEP: create a pod that causes the webhook to hang @ 06/18/24 05:39:27.39
  STEP: create a configmap that should be denied by the webhook @ 06/18/24 05:39:37.4
  STEP: create a configmap that should be admitted by the webhook @ 06/18/24 05:39:37.432
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 06/18/24 05:39:37.441
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 06/18/24 05:39:37.449
  STEP: create a namespace that bypass the webhook @ 06/18/24 05:39:37.455
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 06/18/24 05:39:37.468
  Jun 18 05:39:37.478: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7322" for this suite. @ 06/18/24 05:39:37.529
  STEP: Destroying namespace "webhook-markers-17" for this suite. @ 06/18/24 05:39:37.536
  STEP: Destroying namespace "exempted-namespace-8767" for this suite. @ 06/18/24 05:39:37.541
• [14.205 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:198
  STEP: Creating a kubernetes client @ 06/18/24 05:39:37.552
  Jun 18 05:39:37.552: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/18/24 05:39:37.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:39:37.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:39:37.575
  STEP: fetching the /apis discovery document @ 06/18/24 05:39:37.578
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 06/18/24 05:39:37.58
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 06/18/24 05:39:37.58
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 06/18/24 05:39:37.58
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 06/18/24 05:39:37.581
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 06/18/24 05:39:37.581
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 06/18/24 05:39:37.583
  Jun 18 05:39:37.583: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8754" for this suite. @ 06/18/24 05:39:37.587
• [0.040 seconds]
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 06/18/24 05:39:37.594
  Jun 18 05:39:37.594: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename csiinlinevolumes @ 06/18/24 05:39:37.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:39:37.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:39:37.615
  STEP: Creating two CSIDrivers @ 06/18/24 05:39:37.619
  STEP: Getting "inline-driver-611735c0-b793-4b52-a9d6-d2e91f0f2bc4" & "inline-driver-bc9faf88-9d34-4b34-95b5-62f1829033ca" @ 06/18/24 05:39:37.633
  STEP: Patching the CSIDriver "inline-driver-bc9faf88-9d34-4b34-95b5-62f1829033ca" @ 06/18/24 05:39:37.637
  STEP: Updating the CSIDriver "inline-driver-bc9faf88-9d34-4b34-95b5-62f1829033ca" @ 06/18/24 05:39:37.643
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-27" @ 06/18/24 05:39:37.649
  STEP: Deleting CSIDriver "inline-driver-611735c0-b793-4b52-a9d6-d2e91f0f2bc4" @ 06/18/24 05:39:37.651
  STEP: Confirm deletion of CSIDriver "inline-driver-611735c0-b793-4b52-a9d6-d2e91f0f2bc4" @ 06/18/24 05:39:37.655
  STEP: Deleting CSIDriver "inline-driver-bc9faf88-9d34-4b34-95b5-62f1829033ca" via DeleteCollection @ 06/18/24 05:39:37.658
  STEP: Confirm deletion of CSIDriver "inline-driver-bc9faf88-9d34-4b34-95b5-62f1829033ca" @ 06/18/24 05:39:37.664
  Jun 18 05:39:37.667: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-27" for this suite. @ 06/18/24 05:39:37.672
• [0.083 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 06/18/24 05:39:37.677
  Jun 18 05:39:37.677: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename configmap @ 06/18/24 05:39:37.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:39:37.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:39:37.694
  STEP: Creating configMap with name configmap-test-volume-map-51ffe776-d47c-4f33-8860-1742229158ac @ 06/18/24 05:39:37.697
  STEP: Creating a pod to test consume configMaps @ 06/18/24 05:39:37.702
  STEP: Saw pod success @ 06/18/24 05:39:41.723
  Jun 18 05:39:41.726: INFO: Trying to get logs from node ck-128-worker-2 pod pod-configmaps-0c9e0435-91c5-4776-94cf-7ef9d41ec544 container agnhost-container: <nil>
  STEP: delete the pod @ 06/18/24 05:39:41.733
  Jun 18 05:39:41.742: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5150" for this suite. @ 06/18/24 05:39:41.747
• [4.075 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 06/18/24 05:39:41.753
  Jun 18 05:39:41.753: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 06/18/24 05:39:41.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:39:41.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:39:41.77
  STEP: Setting up the test @ 06/18/24 05:39:41.773
  STEP: Creating hostNetwork=false pod @ 06/18/24 05:39:41.773
  STEP: Creating hostNetwork=true pod @ 06/18/24 05:39:43.792
  STEP: Running the test @ 06/18/24 05:39:45.808
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 06/18/24 05:39:45.808
  Jun 18 05:39:45.808: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9604 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 05:39:45.808: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 05:39:45.809: INFO: ExecWithOptions: Clientset creation
  Jun 18 05:39:45.809: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9604/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jun 18 05:39:45.865: INFO: Exec stderr: ""
  Jun 18 05:39:45.865: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9604 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 05:39:45.865: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 05:39:45.866: INFO: ExecWithOptions: Clientset creation
  Jun 18 05:39:45.866: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9604/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jun 18 05:39:45.903: INFO: Exec stderr: ""
  Jun 18 05:39:45.903: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9604 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 05:39:45.903: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 05:39:45.904: INFO: ExecWithOptions: Clientset creation
  Jun 18 05:39:45.904: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9604/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun 18 05:39:45.946: INFO: Exec stderr: ""
  Jun 18 05:39:45.946: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9604 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 05:39:45.946: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 05:39:45.947: INFO: ExecWithOptions: Clientset creation
  Jun 18 05:39:45.947: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9604/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun 18 05:39:45.984: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 06/18/24 05:39:45.985
  Jun 18 05:39:45.985: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9604 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 05:39:45.985: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 05:39:45.985: INFO: ExecWithOptions: Clientset creation
  Jun 18 05:39:45.985: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9604/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Jun 18 05:39:46.018: INFO: Exec stderr: ""
  Jun 18 05:39:46.018: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9604 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 05:39:46.018: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 05:39:46.019: INFO: ExecWithOptions: Clientset creation
  Jun 18 05:39:46.019: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9604/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Jun 18 05:39:46.058: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 06/18/24 05:39:46.058
  Jun 18 05:39:46.058: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9604 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 05:39:46.058: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 05:39:46.059: INFO: ExecWithOptions: Clientset creation
  Jun 18 05:39:46.060: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9604/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jun 18 05:39:46.110: INFO: Exec stderr: ""
  Jun 18 05:39:46.110: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9604 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 05:39:46.110: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 05:39:46.111: INFO: ExecWithOptions: Clientset creation
  Jun 18 05:39:46.111: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9604/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jun 18 05:39:46.144: INFO: Exec stderr: ""
  Jun 18 05:39:46.144: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9604 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 05:39:46.144: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 05:39:46.145: INFO: ExecWithOptions: Clientset creation
  Jun 18 05:39:46.145: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9604/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun 18 05:39:46.177: INFO: Exec stderr: ""
  Jun 18 05:39:46.177: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9604 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 05:39:46.177: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 05:39:46.178: INFO: ExecWithOptions: Clientset creation
  Jun 18 05:39:46.178: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9604/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun 18 05:39:46.237: INFO: Exec stderr: ""
  Jun 18 05:39:46.238: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-9604" for this suite. @ 06/18/24 05:39:46.243
• [4.495 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:97
  STEP: Creating a kubernetes client @ 06/18/24 05:39:46.25
  Jun 18 05:39:46.250: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename emptydir @ 06/18/24 05:39:46.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:39:46.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:39:46.265
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 06/18/24 05:39:46.267
  STEP: Saw pod success @ 06/18/24 05:39:50.285
  Jun 18 05:39:50.287: INFO: Trying to get logs from node ck-128-worker-1 pod pod-d243df11-d9c9-43ba-a8ca-81cc0f74f244 container test-container: <nil>
  STEP: delete the pod @ 06/18/24 05:39:50.293
  Jun 18 05:39:50.305: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-806" for this suite. @ 06/18/24 05:39:50.311
• [4.066 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 06/18/24 05:39:50.32
  Jun 18 05:39:50.320: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename webhook @ 06/18/24 05:39:50.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:39:50.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:39:50.335
  STEP: Setting up server cert @ 06/18/24 05:39:50.354
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 05:39:50.657
  STEP: Deploying the webhook pod @ 06/18/24 05:39:50.662
  STEP: Wait for the deployment to be ready @ 06/18/24 05:39:50.669
  Jun 18 05:39:50.673: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 06/18/24 05:39:52.684
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 05:39:52.694
  Jun 18 05:39:53.694: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun 18 05:39:53.702: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5529-crds.webhook.example.com via the AdmissionRegistration API @ 06/18/24 05:39:54.217
  STEP: Creating a custom resource that should be mutated by the webhook @ 06/18/24 05:39:54.237
  Jun 18 05:39:56.290: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8178" for this suite. @ 06/18/24 05:39:56.897
  STEP: Destroying namespace "webhook-markers-7077" for this suite. @ 06/18/24 05:39:56.902
• [6.593 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 06/18/24 05:39:56.914
  Jun 18 05:39:56.914: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename configmap @ 06/18/24 05:39:56.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:39:56.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:39:56.929
  STEP: Creating configMap with name configmap-test-volume-050ea58b-6a12-4ee7-bc3e-acdf000dc896 @ 06/18/24 05:39:56.932
  STEP: Creating a pod to test consume configMaps @ 06/18/24 05:39:56.937
  STEP: Saw pod success @ 06/18/24 05:40:00.958
  Jun 18 05:40:00.961: INFO: Trying to get logs from node ck-128-worker-2 pod pod-configmaps-3e287c46-ac6c-414c-a1a4-4b7bc66128bf container agnhost-container: <nil>
  STEP: delete the pod @ 06/18/24 05:40:00.967
  Jun 18 05:40:00.978: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4186" for this suite. @ 06/18/24 05:40:00.984
• [4.076 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 06/18/24 05:40:00.992
  Jun 18 05:40:00.992: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename cronjob @ 06/18/24 05:40:00.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:40:01.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:40:01.008
  STEP: Creating a ReplaceConcurrent cronjob @ 06/18/24 05:40:01.011
  STEP: Ensuring a job is scheduled @ 06/18/24 05:40:01.017
  STEP: Ensuring exactly one is scheduled @ 06/18/24 05:41:01.022
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 06/18/24 05:41:01.025
  STEP: Ensuring the job is replaced with a new one @ 06/18/24 05:41:01.029
  STEP: Removing cronjob @ 06/18/24 05:42:01.033
  Jun 18 05:42:01.039: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5116" for this suite. @ 06/18/24 05:42:01.043
• [120.057 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 06/18/24 05:42:01.051
  Jun 18 05:42:01.051: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename webhook @ 06/18/24 05:42:01.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:42:01.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:42:01.071
  STEP: Setting up server cert @ 06/18/24 05:42:01.089
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 05:42:01.688
  STEP: Deploying the webhook pod @ 06/18/24 05:42:01.695
  STEP: Wait for the deployment to be ready @ 06/18/24 05:42:01.706
  Jun 18 05:42:01.713: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 06/18/24 05:42:03.725
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 05:42:03.737
  Jun 18 05:42:04.738: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 06/18/24 05:42:04.743
  STEP: create a configmap that should be updated by the webhook @ 06/18/24 05:42:04.762
  Jun 18 05:42:04.776: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7575" for this suite. @ 06/18/24 05:42:04.824
  STEP: Destroying namespace "webhook-markers-4589" for this suite. @ 06/18/24 05:42:04.835
• [3.794 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 06/18/24 05:42:04.846
  Jun 18 05:42:04.846: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename var-expansion @ 06/18/24 05:42:04.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:42:04.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:42:04.888
  STEP: Creating a pod to test env composition @ 06/18/24 05:42:04.892
  STEP: Saw pod success @ 06/18/24 05:42:08.929
  Jun 18 05:42:08.931: INFO: Trying to get logs from node ck-128-worker-2 pod var-expansion-3c6c122a-12c8-4ca6-9e5c-74e8682fe2f9 container dapi-container: <nil>
  STEP: delete the pod @ 06/18/24 05:42:08.953
  Jun 18 05:42:08.967: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-274" for this suite. @ 06/18/24 05:42:08.972
• [4.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 06/18/24 05:42:08.98
  Jun 18 05:42:08.980: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 06/18/24 05:42:08.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:42:08.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:42:08.999
  STEP: creating a target pod @ 06/18/24 05:42:09.002
  STEP: adding an ephemeral container @ 06/18/24 05:42:13.028
  STEP: checking pod container endpoints @ 06/18/24 05:42:17.058
  Jun 18 05:42:17.058: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-8824 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 05:42:17.058: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 05:42:17.059: INFO: ExecWithOptions: Clientset creation
  Jun 18 05:42:17.060: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-8824/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Jun 18 05:42:17.103: INFO: Exec stderr: ""
  Jun 18 05:42:17.113: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-8824" for this suite. @ 06/18/24 05:42:17.119
• [8.146 seconds]
------------------------------
SS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:556
  STEP: Creating a kubernetes client @ 06/18/24 05:42:17.127
  Jun 18 05:42:17.127: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename ingress @ 06/18/24 05:42:17.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:42:17.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:42:17.144
  STEP: getting /apis @ 06/18/24 05:42:17.148
  STEP: getting /apis/networking.k8s.io @ 06/18/24 05:42:17.156
  STEP: getting /apis/networking.k8s.iov1 @ 06/18/24 05:42:17.157
  STEP: creating @ 06/18/24 05:42:17.159
  STEP: getting @ 06/18/24 05:42:17.174
  STEP: listing @ 06/18/24 05:42:17.176
  STEP: watching @ 06/18/24 05:42:17.179
  Jun 18 05:42:17.179: INFO: starting watch
  STEP: cluster-wide listing @ 06/18/24 05:42:17.181
  STEP: cluster-wide watching @ 06/18/24 05:42:17.184
  Jun 18 05:42:17.184: INFO: starting watch
  STEP: patching @ 06/18/24 05:42:17.186
  STEP: updating @ 06/18/24 05:42:17.192
  Jun 18 05:42:17.199: INFO: waiting for watch events with expected annotations
  Jun 18 05:42:17.199: INFO: saw patched and updated annotations
  STEP: patching /status @ 06/18/24 05:42:17.199
  STEP: updating /status @ 06/18/24 05:42:17.206
  STEP: get /status @ 06/18/24 05:42:17.215
  STEP: deleting @ 06/18/24 05:42:17.218
  STEP: deleting a collection @ 06/18/24 05:42:17.228
  Jun 18 05:42:17.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-8259" for this suite. @ 06/18/24 05:42:17.245
• [0.124 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1316
  STEP: Creating a kubernetes client @ 06/18/24 05:42:17.251
  Jun 18 05:42:17.251: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename kubectl @ 06/18/24 05:42:17.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:42:17.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:42:17.268
  STEP: validating cluster-info @ 06/18/24 05:42:17.272
  Jun 18 05:42:17.272: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-3781 cluster-info'
  Jun 18 05:42:17.372: INFO: stderr: ""
  Jun 18 05:42:17.372: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.96.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Jun 18 05:42:17.372: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3781" for this suite. @ 06/18/24 05:42:17.377
• [0.131 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:137
  STEP: Creating a kubernetes client @ 06/18/24 05:42:17.383
  Jun 18 05:42:17.383: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename emptydir @ 06/18/24 05:42:17.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:42:17.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:42:17.401
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 06/18/24 05:42:17.404
  STEP: Saw pod success @ 06/18/24 05:42:21.425
  Jun 18 05:42:21.429: INFO: Trying to get logs from node ck-128-worker-2 pod pod-20d28f85-4be4-44b6-8d3a-b7e737e3bb0e container test-container: <nil>
  STEP: delete the pod @ 06/18/24 05:42:21.437
  Jun 18 05:42:21.450: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5587" for this suite. @ 06/18/24 05:42:21.457
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:647
  STEP: Creating a kubernetes client @ 06/18/24 05:42:21.466
  Jun 18 05:42:21.466: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename svcaccounts @ 06/18/24 05:42:21.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:42:21.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:42:21.485
  STEP: creating a ServiceAccount @ 06/18/24 05:42:21.489
  STEP: watching for the ServiceAccount to be added @ 06/18/24 05:42:21.495
  STEP: patching the ServiceAccount @ 06/18/24 05:42:21.497
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 06/18/24 05:42:21.503
  STEP: deleting the ServiceAccount @ 06/18/24 05:42:21.508
  Jun 18 05:42:21.517: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-632" for this suite. @ 06/18/24 05:42:21.522
• [0.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:78
  STEP: Creating a kubernetes client @ 06/18/24 05:42:21.537
  Jun 18 05:42:21.537: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename svcaccounts @ 06/18/24 05:42:21.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:42:21.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:42:21.555
  STEP: reading a file in the container @ 06/18/24 05:42:23.578
  Jun 18 05:42:23.578: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9565 pod-service-account-f0fff93b-dc82-479b-a017-836aa832724c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 06/18/24 05:42:23.689
  Jun 18 05:42:23.690: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9565 pod-service-account-f0fff93b-dc82-479b-a017-836aa832724c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 06/18/24 05:42:23.828
  Jun 18 05:42:23.828: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9565 pod-service-account-f0fff93b-dc82-479b-a017-836aa832724c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Jun 18 05:42:23.941: INFO: Got root ca configmap in namespace "svcaccounts-9565"
  Jun 18 05:42:23.944: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9565" for this suite. @ 06/18/24 05:42:23.949
• [2.416 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 06/18/24 05:42:23.955
  Jun 18 05:42:23.955: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename subpath @ 06/18/24 05:42:23.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:42:23.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:42:23.972
  STEP: Setting up data @ 06/18/24 05:42:23.975
  STEP: Creating pod pod-subpath-test-secret-ltk7 @ 06/18/24 05:42:23.983
  STEP: Creating a pod to test atomic-volume-subpath @ 06/18/24 05:42:23.983
  STEP: Saw pod success @ 06/18/24 05:42:48.049
  Jun 18 05:42:48.052: INFO: Trying to get logs from node ck-128-worker-1 pod pod-subpath-test-secret-ltk7 container test-container-subpath-secret-ltk7: <nil>
  STEP: delete the pod @ 06/18/24 05:42:48.073
  STEP: Deleting pod pod-subpath-test-secret-ltk7 @ 06/18/24 05:42:48.084
  Jun 18 05:42:48.084: INFO: Deleting pod "pod-subpath-test-secret-ltk7" in namespace "subpath-4467"
  Jun 18 05:42:48.086: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4467" for this suite. @ 06/18/24 05:42:48.091
• [24.141 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1013
  STEP: Creating a kubernetes client @ 06/18/24 05:42:48.097
  Jun 18 05:42:48.097: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename resourcequota @ 06/18/24 05:42:48.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:42:48.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:42:48.122
  STEP: Creating resourceQuota "e2e-rq-status-pcrzp" @ 06/18/24 05:42:48.128
  Jun 18 05:42:48.135: INFO: Resource quota "e2e-rq-status-pcrzp" reports spec: hard cpu limit of 500m
  Jun 18 05:42:48.135: INFO: Resource quota "e2e-rq-status-pcrzp" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-pcrzp" /status @ 06/18/24 05:42:48.135
  STEP: Confirm /status for "e2e-rq-status-pcrzp" resourceQuota via watch @ 06/18/24 05:42:48.161
  Jun 18 05:42:48.163: INFO: observed resourceQuota "e2e-rq-status-pcrzp" in namespace "resourcequota-2345" with hard status: v1.ResourceList(nil)
  Jun 18 05:42:48.163: INFO: Found resourceQuota "e2e-rq-status-pcrzp" in namespace "resourcequota-2345" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Jun 18 05:42:48.163: INFO: ResourceQuota "e2e-rq-status-pcrzp" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 06/18/24 05:42:48.166
  Jun 18 05:42:48.173: INFO: Resource quota "e2e-rq-status-pcrzp" reports spec: hard cpu limit of 1
  Jun 18 05:42:48.173: INFO: Resource quota "e2e-rq-status-pcrzp" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-pcrzp" /status @ 06/18/24 05:42:48.173
  STEP: Confirm /status for "e2e-rq-status-pcrzp" resourceQuota via watch @ 06/18/24 05:42:48.179
  Jun 18 05:42:48.180: INFO: observed resourceQuota "e2e-rq-status-pcrzp" in namespace "resourcequota-2345" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Jun 18 05:42:48.180: INFO: Found resourceQuota "e2e-rq-status-pcrzp" in namespace "resourcequota-2345" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Jun 18 05:42:48.180: INFO: ResourceQuota "e2e-rq-status-pcrzp" /status was patched
  STEP: Get "e2e-rq-status-pcrzp" /status @ 06/18/24 05:42:48.181
  Jun 18 05:42:48.184: INFO: Resourcequota "e2e-rq-status-pcrzp" reports status: hard cpu of 1
  Jun 18 05:42:48.184: INFO: Resourcequota "e2e-rq-status-pcrzp" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-pcrzp" /status before checking Spec is unchanged @ 06/18/24 05:42:48.187
  Jun 18 05:42:48.194: INFO: Resourcequota "e2e-rq-status-pcrzp" reports status: hard cpu of 2
  Jun 18 05:42:48.194: INFO: Resourcequota "e2e-rq-status-pcrzp" reports status: hard memory of 2Gi
  Jun 18 05:42:48.196: INFO: observed resourceQuota "e2e-rq-status-pcrzp" in namespace "resourcequota-2345" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Jun 18 05:42:48.196: INFO: Found resourceQuota "e2e-rq-status-pcrzp" in namespace "resourcequota-2345" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Jun 18 05:46:33.206: INFO: ResourceQuota "e2e-rq-status-pcrzp" Spec was unchanged and /status reset
  Jun 18 05:46:33.207: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2345" for this suite. @ 06/18/24 05:46:33.215
• [225.126 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:243
  STEP: Creating a kubernetes client @ 06/18/24 05:46:33.224
  Jun 18 05:46:33.225: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename namespaces @ 06/18/24 05:46:33.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:46:33.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:46:33.243
  STEP: Creating a test namespace @ 06/18/24 05:46:33.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:46:33.258
  STEP: Creating a pod in the namespace @ 06/18/24 05:46:33.261
  STEP: Waiting for the pod to have running status @ 06/18/24 05:46:33.27
  STEP: Deleting the namespace @ 06/18/24 05:46:35.277
  STEP: Waiting for the namespace to be removed. @ 06/18/24 05:46:35.282
  STEP: Recreating the namespace @ 06/18/24 05:46:46.287
  STEP: Verifying there are no pods in the namespace @ 06/18/24 05:46:46.3
  Jun 18 05:46:46.303: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4212" for this suite. @ 06/18/24 05:46:46.31
  STEP: Destroying namespace "nsdeletetest-1077" for this suite. @ 06/18/24 05:46:46.315
  Jun 18 05:46:46.318: INFO: Namespace nsdeletetest-1077 was already deleted
  STEP: Destroying namespace "nsdeletetest-2354" for this suite. @ 06/18/24 05:46:46.318
• [13.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:275
  STEP: Creating a kubernetes client @ 06/18/24 05:46:46.335
  Jun 18 05:46:46.335: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename svcaccounts @ 06/18/24 05:46:46.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:46:46.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:46:46.354
  STEP: Creating a pod to test service account token:  @ 06/18/24 05:46:46.357
  STEP: Saw pod success @ 06/18/24 05:46:50.379
  Jun 18 05:46:50.381: INFO: Trying to get logs from node ck-128-worker-2 pod test-pod-f2c1d7ee-8d25-4162-aa25-124f85587c3b container agnhost-container: <nil>
  STEP: delete the pod @ 06/18/24 05:46:50.397
  Jun 18 05:46:50.413: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4394" for this suite. @ 06/18/24 05:46:50.417
• [4.090 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 06/18/24 05:46:50.426
  Jun 18 05:46:50.426: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename downward-api @ 06/18/24 05:46:50.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:46:50.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:46:50.446
  STEP: Creating the pod @ 06/18/24 05:46:50.456
  Jun 18 05:46:53.028: INFO: Successfully updated pod "annotationupdate3fc09550-cb72-4690-a668-811e474909ab"
  Jun 18 05:46:57.052: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7563" for this suite. @ 06/18/24 05:46:57.056
• [6.635 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:961
  STEP: Creating a kubernetes client @ 06/18/24 05:46:57.064
  Jun 18 05:46:57.064: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename statefulset @ 06/18/24 05:46:57.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:46:57.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:46:57.084
  STEP: Creating service test in namespace statefulset-5901 @ 06/18/24 05:46:57.087
  Jun 18 05:46:57.106: INFO: Found 0 stateful pods, waiting for 1
  Jun 18 05:47:07.112: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 06/18/24 05:47:07.119
  W0618 05:47:07.132403      18 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Jun 18 05:47:07.139: INFO: Found 1 stateful pods, waiting for 2
  Jun 18 05:47:17.145: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 18 05:47:17.145: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 06/18/24 05:47:17.152
  STEP: Delete all of the StatefulSets @ 06/18/24 05:47:17.155
  STEP: Verify that StatefulSets have been deleted @ 06/18/24 05:47:17.161
  Jun 18 05:47:17.164: INFO: Deleting all statefulset in ns statefulset-5901
  Jun 18 05:47:17.174: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5901" for this suite. @ 06/18/24 05:47:17.18
• [20.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 06/18/24 05:47:17.195
  Jun 18 05:47:17.195: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename projected @ 06/18/24 05:47:17.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:47:17.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:47:17.213
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 05:47:17.217
  STEP: Saw pod success @ 06/18/24 05:47:21.24
  Jun 18 05:47:21.243: INFO: Trying to get logs from node ck-128-worker-3 pod downwardapi-volume-35ddc2e8-5822-4e0d-9e37-68e16dd74f05 container client-container: <nil>
  STEP: delete the pod @ 06/18/24 05:47:21.255
  Jun 18 05:47:21.270: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-448" for this suite. @ 06/18/24 05:47:21.275
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 06/18/24 05:47:21.281
  Jun 18 05:47:21.281: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename webhook @ 06/18/24 05:47:21.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:47:21.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:47:21.299
  STEP: Setting up server cert @ 06/18/24 05:47:21.324
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 05:47:22.024
  STEP: Deploying the webhook pod @ 06/18/24 05:47:22.039
  STEP: Wait for the deployment to be ready @ 06/18/24 05:47:22.065
  Jun 18 05:47:22.075: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 06/18/24 05:47:24.083
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 05:47:24.094
  Jun 18 05:47:25.095: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 06/18/24 05:47:25.102
  STEP: create a pod that should be updated by the webhook @ 06/18/24 05:47:25.12
  Jun 18 05:47:25.137: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2371" for this suite. @ 06/18/24 05:47:25.186
  STEP: Destroying namespace "webhook-markers-2163" for this suite. @ 06/18/24 05:47:25.192
• [3.916 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 06/18/24 05:47:25.205
  Jun 18 05:47:25.205: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename conformance-tests @ 06/18/24 05:47:25.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:47:25.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:47:25.226
  STEP: Getting node addresses @ 06/18/24 05:47:25.228
  Jun 18 05:47:25.228: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Jun 18 05:47:25.234: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-4134" for this suite. @ 06/18/24 05:47:25.238
• [0.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:72
  STEP: Creating a kubernetes client @ 06/18/24 05:47:25.249
  Jun 18 05:47:25.249: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename lease-test @ 06/18/24 05:47:25.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:47:25.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:47:25.27
  Jun 18 05:47:25.312: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-9528" for this suite. @ 06/18/24 05:47:25.315
• [0.071 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 06/18/24 05:47:25.321
  Jun 18 05:47:25.321: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename downward-api @ 06/18/24 05:47:25.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:47:25.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:47:25.337
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 05:47:25.341
  STEP: Saw pod success @ 06/18/24 05:47:29.36
  Jun 18 05:47:29.363: INFO: Trying to get logs from node ck-128-worker-1 pod downwardapi-volume-c8c4fc6c-cd58-4698-8f9d-6d2343c0fbfc container client-container: <nil>
  STEP: delete the pod @ 06/18/24 05:47:29.37
  Jun 18 05:47:29.384: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9611" for this suite. @ 06/18/24 05:47:29.39
• [4.074 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 06/18/24 05:47:29.395
  Jun 18 05:47:29.395: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename field-validation @ 06/18/24 05:47:29.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:47:29.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:47:29.41
  STEP: apply creating a deployment @ 06/18/24 05:47:29.414
  Jun 18 05:47:29.416: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8828" for this suite. @ 06/18/24 05:47:29.428
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:750
  STEP: Creating a kubernetes client @ 06/18/24 05:47:29.435
  Jun 18 05:47:29.435: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename statefulset @ 06/18/24 05:47:29.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:47:29.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:47:29.456
  STEP: Creating service test in namespace statefulset-1591 @ 06/18/24 05:47:29.458
  STEP: Creating stateful set ss in namespace statefulset-1591 @ 06/18/24 05:47:29.462
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-1591 @ 06/18/24 05:47:29.469
  Jun 18 05:47:29.471: INFO: Found 0 stateful pods, waiting for 1
  Jun 18 05:47:39.479: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 06/18/24 05:47:39.479
  Jun 18 05:47:39.483: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=statefulset-1591 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 18 05:47:39.653: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 18 05:47:39.653: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 18 05:47:39.653: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 18 05:47:39.657: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Jun 18 05:47:49.666: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun 18 05:47:49.666: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun 18 05:47:49.679: INFO: POD   NODE             PHASE    GRACE  CONDITIONS
  Jun 18 05:47:49.680: INFO: ss-0  ck-128-worker-1  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 05:47:29 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-18 05:47:39 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-18 05:47:39 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 05:47:29 +0000 UTC  }]
  Jun 18 05:47:49.680: INFO: 
  Jun 18 05:47:49.680: INFO: StatefulSet ss has not reached scale 3, at 1
  Jun 18 05:47:50.686: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.995380287s
  Jun 18 05:47:51.691: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.990577053s
  Jun 18 05:47:52.696: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.98577427s
  Jun 18 05:47:53.700: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.980621189s
  Jun 18 05:47:54.705: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.976358928s
  Jun 18 05:47:55.713: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.970071499s
  Jun 18 05:47:56.718: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.963875397s
  Jun 18 05:47:57.724: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.957877076s
  Jun 18 05:47:58.733: INFO: Verifying statefulset ss doesn't scale past 3 for another 952.997868ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-1591 @ 06/18/24 05:47:59.734
  Jun 18 05:47:59.743: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=statefulset-1591 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 18 05:47:59.895: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 18 05:47:59.896: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 18 05:47:59.896: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 18 05:47:59.896: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=statefulset-1591 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 18 05:48:00.027: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Jun 18 05:48:00.027: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 18 05:48:00.027: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 18 05:48:00.027: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=statefulset-1591 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 18 05:48:00.152: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Jun 18 05:48:00.152: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 18 05:48:00.152: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 18 05:48:00.156: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  Jun 18 05:48:10.161: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 18 05:48:10.161: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 18 05:48:10.161: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 06/18/24 05:48:10.161
  Jun 18 05:48:10.165: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=statefulset-1591 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 18 05:48:10.297: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 18 05:48:10.297: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 18 05:48:10.297: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 18 05:48:10.297: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=statefulset-1591 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 18 05:48:10.446: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 18 05:48:10.446: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 18 05:48:10.446: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 18 05:48:10.446: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=statefulset-1591 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 18 05:48:10.571: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 18 05:48:10.571: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 18 05:48:10.571: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 18 05:48:10.571: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun 18 05:48:10.575: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  Jun 18 05:48:20.585: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun 18 05:48:20.585: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Jun 18 05:48:20.585: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Jun 18 05:48:20.599: INFO: POD   NODE             PHASE    GRACE  CONDITIONS
  Jun 18 05:48:20.599: INFO: ss-0  ck-128-worker-1  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 05:47:29 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-18 05:48:10 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-18 05:48:10 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 05:47:29 +0000 UTC  }]
  Jun 18 05:48:20.599: INFO: ss-1  ck-128-worker-2  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 05:47:49 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-18 05:48:11 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-18 05:48:11 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 05:47:49 +0000 UTC  }]
  Jun 18 05:48:20.599: INFO: ss-2  ck-128-worker-3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 05:47:49 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-18 05:48:11 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-18 05:48:11 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 05:47:49 +0000 UTC  }]
  Jun 18 05:48:20.599: INFO: 
  Jun 18 05:48:20.599: INFO: StatefulSet ss has not reached scale 0, at 3
  Jun 18 05:48:21.604: INFO: POD   NODE             PHASE      GRACE  CONDITIONS
  Jun 18 05:48:21.604: INFO: ss-1  ck-128-worker-2  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 05:47:49 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-18 05:48:11 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-18 05:48:11 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 05:47:49 +0000 UTC  }]
  Jun 18 05:48:21.604: INFO: ss-2  ck-128-worker-3  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 05:47:49 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-18 05:48:11 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-18 05:48:11 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 05:47:49 +0000 UTC  }]
  Jun 18 05:48:21.604: INFO: 
  Jun 18 05:48:21.604: INFO: StatefulSet ss has not reached scale 0, at 2
  Jun 18 05:48:22.608: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.989786599s
  Jun 18 05:48:23.613: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.985338099s
  Jun 18 05:48:24.617: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.980396259s
  Jun 18 05:48:25.623: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.976127655s
  Jun 18 05:48:26.627: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.970967746s
  Jun 18 05:48:27.631: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.966851363s
  Jun 18 05:48:28.639: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.962606761s
  Jun 18 05:48:29.642: INFO: Verifying statefulset ss doesn't scale past 0 for another 954.86084ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-1591 @ 06/18/24 05:48:30.643
  Jun 18 05:48:30.647: INFO: Scaling statefulset ss to 0
  Jun 18 05:48:30.653: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 18 05:48:30.657: INFO: Deleting all statefulset in ns statefulset-1591
  Jun 18 05:48:30.661: INFO: Scaling statefulset ss to 0
  Jun 18 05:48:30.668: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 18 05:48:30.671: INFO: Deleting statefulset ss
  Jun 18 05:48:30.685: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1591" for this suite. @ 06/18/24 05:48:30.692
• [61.264 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 06/18/24 05:48:30.703
  Jun 18 05:48:30.703: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename webhook @ 06/18/24 05:48:30.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:48:30.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:48:30.722
  STEP: Setting up server cert @ 06/18/24 05:48:30.746
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 05:48:31.761
  STEP: Deploying the webhook pod @ 06/18/24 05:48:31.769
  STEP: Wait for the deployment to be ready @ 06/18/24 05:48:31.78
  Jun 18 05:48:31.789: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/18/24 05:48:33.8
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 05:48:33.814
  Jun 18 05:48:34.814: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 06/18/24 05:48:34.822
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/18/24 05:48:34.845
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 06/18/24 05:48:34.857
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/18/24 05:48:34.866
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 06/18/24 05:48:34.875
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/18/24 05:48:34.883
  Jun 18 05:48:34.892: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6706" for this suite. @ 06/18/24 05:48:34.934
  STEP: Destroying namespace "webhook-markers-2763" for this suite. @ 06/18/24 05:48:34.938
• [4.247 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:445
  STEP: Creating a kubernetes client @ 06/18/24 05:48:34.951
  Jun 18 05:48:34.951: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename sched-pred @ 06/18/24 05:48:34.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:48:34.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:48:34.967
  Jun 18 05:48:34.971: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun 18 05:48:34.982: INFO: Waiting for terminating namespaces to be deleted...
  Jun 18 05:48:34.985: INFO: 
  Logging pods the apiserver thinks is on node ck-128-worker-1 before test
  Jun 18 05:48:34.999: INFO: calico-kube-controllers-8d76c5f9b-r6nmr from kube-system started at 2024-06-18 05:29:18 +0000 UTC (1 container statuses recorded)
  Jun 18 05:48:34.999: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Jun 18 05:48:34.999: INFO: calico-node-g84th from kube-system started at 2024-06-18 05:29:18 +0000 UTC (1 container statuses recorded)
  Jun 18 05:48:34.999: INFO: 	Container calico-node ready: true, restart count 0
  Jun 18 05:48:34.999: INFO: kube-proxy-rm957 from kube-system started at 2024-06-18 05:17:10 +0000 UTC (1 container statuses recorded)
  Jun 18 05:48:34.999: INFO: 	Container kube-proxy ready: true, restart count 0
  Jun 18 05:48:34.999: INFO: secloudit-registry-agent-5skw6 from secloudit started at 2024-06-18 05:25:53 +0000 UTC (1 container statuses recorded)
  Jun 18 05:48:34.999: INFO: 	Container secloudit-registry-agent ready: false, restart count 0
  Jun 18 05:48:34.999: INFO: sonobuoy-systemd-logs-daemon-set-d21185bcb31b4ec9-zbzc8 from sonobuoy started at 2024-06-18 05:35:24 +0000 UTC (2 container statuses recorded)
  Jun 18 05:48:34.999: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 18 05:48:34.999: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 18 05:48:34.999: INFO: 
  Logging pods the apiserver thinks is on node ck-128-worker-2 before test
  Jun 18 05:48:35.007: INFO: calico-node-r67nr from kube-system started at 2024-06-18 05:29:18 +0000 UTC (1 container statuses recorded)
  Jun 18 05:48:35.007: INFO: 	Container calico-node ready: true, restart count 0
  Jun 18 05:48:35.007: INFO: kube-proxy-9s677 from kube-system started at 2024-06-18 05:17:10 +0000 UTC (1 container statuses recorded)
  Jun 18 05:48:35.007: INFO: 	Container kube-proxy ready: true, restart count 0
  Jun 18 05:48:35.007: INFO: secloudit-registry-agent-b5sd7 from secloudit started at 2024-06-18 05:25:53 +0000 UTC (1 container statuses recorded)
  Jun 18 05:48:35.007: INFO: 	Container secloudit-registry-agent ready: false, restart count 0
  Jun 18 05:48:35.008: INFO: sonobuoy from sonobuoy started at 2024-06-18 05:35:23 +0000 UTC (1 container statuses recorded)
  Jun 18 05:48:35.008: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun 18 05:48:35.008: INFO: sonobuoy-systemd-logs-daemon-set-d21185bcb31b4ec9-nnwvq from sonobuoy started at 2024-06-18 05:35:24 +0000 UTC (2 container statuses recorded)
  Jun 18 05:48:35.008: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 18 05:48:35.008: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 18 05:48:35.008: INFO: 
  Logging pods the apiserver thinks is on node ck-128-worker-3 before test
  Jun 18 05:48:35.018: INFO: calico-node-f85nn from kube-system started at 2024-06-18 05:29:18 +0000 UTC (1 container statuses recorded)
  Jun 18 05:48:35.018: INFO: 	Container calico-node ready: true, restart count 0
  Jun 18 05:48:35.018: INFO: kube-proxy-tn5dc from kube-system started at 2024-06-18 05:17:10 +0000 UTC (1 container statuses recorded)
  Jun 18 05:48:35.018: INFO: 	Container kube-proxy ready: true, restart count 0
  Jun 18 05:48:35.018: INFO: secloudit-registry-agent-vh54z from secloudit started at 2024-06-18 05:25:53 +0000 UTC (1 container statuses recorded)
  Jun 18 05:48:35.018: INFO: 	Container secloudit-registry-agent ready: false, restart count 0
  Jun 18 05:48:35.019: INFO: sonobuoy-e2e-job-1e0b3c84f5ad40e5 from sonobuoy started at 2024-06-18 05:35:24 +0000 UTC (2 container statuses recorded)
  Jun 18 05:48:35.019: INFO: 	Container e2e ready: true, restart count 0
  Jun 18 05:48:35.019: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 18 05:48:35.019: INFO: sonobuoy-systemd-logs-daemon-set-d21185bcb31b4ec9-65bjg from sonobuoy started at 2024-06-18 05:35:24 +0000 UTC (2 container statuses recorded)
  Jun 18 05:48:35.019: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 18 05:48:35.019: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 06/18/24 05:48:35.019
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17da033098e303ac], Reason = [FailedScheduling], Message = [0/4 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/4 nodes are available: 4 Preemption is not helpful for scheduling..] @ 06/18/24 05:48:35.062
  Jun 18 05:48:36.058: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1616" for this suite. @ 06/18/24 05:48:36.064
• [1.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:239
  STEP: Creating a kubernetes client @ 06/18/24 05:48:36.078
  Jun 18 05:48:36.078: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename limitrange @ 06/18/24 05:48:36.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:48:36.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:48:36.095
  STEP: Creating LimitRange "e2e-limitrange-qx2z9" in namespace "limitrange-624" @ 06/18/24 05:48:36.099
  STEP: Creating another limitRange in another namespace @ 06/18/24 05:48:36.106
  Jun 18 05:48:36.116: INFO: Namespace "e2e-limitrange-qx2z9-5858" created
  Jun 18 05:48:36.117: INFO: Creating LimitRange "e2e-limitrange-qx2z9" in namespace "e2e-limitrange-qx2z9-5858"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-qx2z9" @ 06/18/24 05:48:36.122
  Jun 18 05:48:36.125: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-qx2z9" in "limitrange-624" namespace @ 06/18/24 05:48:36.125
  Jun 18 05:48:36.133: INFO: LimitRange "e2e-limitrange-qx2z9" has been patched
  STEP: Delete LimitRange "e2e-limitrange-qx2z9" by Collection with labelSelector: "e2e-limitrange-qx2z9=patched" @ 06/18/24 05:48:36.133
  STEP: Confirm that the limitRange "e2e-limitrange-qx2z9" has been deleted @ 06/18/24 05:48:36.138
  Jun 18 05:48:36.138: INFO: Requesting list of LimitRange to confirm quantity
  Jun 18 05:48:36.140: INFO: Found 0 LimitRange with label "e2e-limitrange-qx2z9=patched"
  Jun 18 05:48:36.140: INFO: LimitRange "e2e-limitrange-qx2z9" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-qx2z9" @ 06/18/24 05:48:36.14
  Jun 18 05:48:36.148: INFO: Found 1 limitRange
  Jun 18 05:48:36.148: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-624" for this suite. @ 06/18/24 05:48:36.153
  STEP: Destroying namespace "e2e-limitrange-qx2z9-5858" for this suite. @ 06/18/24 05:48:36.16
• [0.089 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 06/18/24 05:48:36.168
  Jun 18 05:48:36.168: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename container-runtime @ 06/18/24 05:48:36.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:48:36.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:48:36.186
  STEP: create the container @ 06/18/24 05:48:36.188
  W0618 05:48:36.195479      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 06/18/24 05:48:36.195
  STEP: get the container status @ 06/18/24 05:48:39.216
  STEP: the container should be terminated @ 06/18/24 05:48:39.22
  STEP: the termination message should be set @ 06/18/24 05:48:39.22
  Jun 18 05:48:39.220: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 06/18/24 05:48:39.221
  Jun 18 05:48:39.230: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6392" for this suite. @ 06/18/24 05:48:39.24
• [3.078 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Service endpoints latency should not be very high  [Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 06/18/24 05:48:39.248
  Jun 18 05:48:39.248: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename svc-latency @ 06/18/24 05:48:39.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:48:39.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:48:39.267
  Jun 18 05:48:39.270: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-2820 @ 06/18/24 05:48:39.272
  I0618 05:48:39.279061      18 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-2820, replica count: 1
  I0618 05:48:40.329643      18 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0618 05:48:41.330582      18 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 18 05:48:41.442: INFO: Created: latency-svc-jqtcf
  Jun 18 05:48:41.446: INFO: Got endpoints: latency-svc-jqtcf [15.584252ms]
  Jun 18 05:48:41.462: INFO: Created: latency-svc-jx9l2
  Jun 18 05:48:41.473: INFO: Got endpoints: latency-svc-jx9l2 [26.058822ms]
  Jun 18 05:48:41.478: INFO: Created: latency-svc-gqcrz
  Jun 18 05:48:41.482: INFO: Got endpoints: latency-svc-gqcrz [35.074219ms]
  Jun 18 05:48:41.485: INFO: Created: latency-svc-p625t
  Jun 18 05:48:41.490: INFO: Got endpoints: latency-svc-p625t [43.151699ms]
  Jun 18 05:48:41.500: INFO: Created: latency-svc-5hbzj
  Jun 18 05:48:41.506: INFO: Got endpoints: latency-svc-5hbzj [58.488617ms]
  Jun 18 05:48:41.508: INFO: Created: latency-svc-rns79
  Jun 18 05:48:41.516: INFO: Got endpoints: latency-svc-rns79 [68.212066ms]
  Jun 18 05:48:41.519: INFO: Created: latency-svc-5bllp
  Jun 18 05:48:41.527: INFO: Got endpoints: latency-svc-5bllp [80.888873ms]
  Jun 18 05:48:41.532: INFO: Created: latency-svc-46zql
  Jun 18 05:48:41.544: INFO: Got endpoints: latency-svc-46zql [96.552937ms]
  Jun 18 05:48:41.554: INFO: Created: latency-svc-7mj4w
  Jun 18 05:48:41.560: INFO: Got endpoints: latency-svc-7mj4w [112.850604ms]
  Jun 18 05:48:41.566: INFO: Created: latency-svc-2gzc5
  Jun 18 05:48:41.572: INFO: Got endpoints: latency-svc-2gzc5 [124.718442ms]
  Jun 18 05:48:41.574: INFO: Created: latency-svc-82m6x
  Jun 18 05:48:41.582: INFO: Got endpoints: latency-svc-82m6x [134.272117ms]
  Jun 18 05:48:41.586: INFO: Created: latency-svc-x8psk
  Jun 18 05:48:41.592: INFO: Got endpoints: latency-svc-x8psk [143.789954ms]
  Jun 18 05:48:41.598: INFO: Created: latency-svc-6frtq
  Jun 18 05:48:41.606: INFO: Got endpoints: latency-svc-6frtq [158.213026ms]
  Jun 18 05:48:41.616: INFO: Created: latency-svc-k9m7q
  Jun 18 05:48:41.622: INFO: Created: latency-svc-tqrrg
  Jun 18 05:48:41.622: INFO: Got endpoints: latency-svc-k9m7q [174.928908ms]
  Jun 18 05:48:41.626: INFO: Got endpoints: latency-svc-tqrrg [177.9497ms]
  Jun 18 05:48:41.632: INFO: Created: latency-svc-9cx4g
  Jun 18 05:48:41.638: INFO: Got endpoints: latency-svc-9cx4g [190.592163ms]
  Jun 18 05:48:41.643: INFO: Created: latency-svc-mkck4
  Jun 18 05:48:41.652: INFO: Got endpoints: latency-svc-mkck4 [178.707055ms]
  Jun 18 05:48:41.655: INFO: Created: latency-svc-6978t
  Jun 18 05:48:41.660: INFO: Got endpoints: latency-svc-6978t [177.964626ms]
  Jun 18 05:48:41.667: INFO: Created: latency-svc-w87hh
  Jun 18 05:48:41.672: INFO: Got endpoints: latency-svc-w87hh [182.387527ms]
  Jun 18 05:48:41.678: INFO: Created: latency-svc-qm6fh
  Jun 18 05:48:41.685: INFO: Got endpoints: latency-svc-qm6fh [179.461885ms]
  Jun 18 05:48:41.823: INFO: Created: latency-svc-cfpxl
  Jun 18 05:48:41.825: INFO: Created: latency-svc-wqsrw
  Jun 18 05:48:41.825: INFO: Created: latency-svc-wljzc
  Jun 18 05:48:41.826: INFO: Created: latency-svc-7vkkt
  Jun 18 05:48:41.826: INFO: Created: latency-svc-pclj4
  Jun 18 05:48:41.826: INFO: Created: latency-svc-v42gz
  Jun 18 05:48:41.826: INFO: Created: latency-svc-pp6w9
  Jun 18 05:48:41.826: INFO: Created: latency-svc-vzlkk
  Jun 18 05:48:41.828: INFO: Created: latency-svc-hzkpv
  Jun 18 05:48:41.829: INFO: Created: latency-svc-wrkwn
  Jun 18 05:48:41.830: INFO: Created: latency-svc-lwff7
  Jun 18 05:48:41.830: INFO: Created: latency-svc-m9hzq
  Jun 18 05:48:41.830: INFO: Created: latency-svc-klzjr
  Jun 18 05:48:41.831: INFO: Created: latency-svc-mnzvt
  Jun 18 05:48:41.833: INFO: Created: latency-svc-x6l8k
  Jun 18 05:48:41.837: INFO: Got endpoints: latency-svc-lwff7 [321.178755ms]
  Jun 18 05:48:41.841: INFO: Got endpoints: latency-svc-hzkpv [202.530135ms]
  Jun 18 05:48:41.844: INFO: Got endpoints: latency-svc-pclj4 [316.138171ms]
  Jun 18 05:48:41.844: INFO: Got endpoints: latency-svc-cfpxl [217.889631ms]
  Jun 18 05:48:41.849: INFO: Got endpoints: latency-svc-pp6w9 [197.608261ms]
  Jun 18 05:48:41.855: INFO: Got endpoints: latency-svc-x6l8k [263.275013ms]
  Jun 18 05:48:41.855: INFO: Got endpoints: latency-svc-mnzvt [169.826934ms]
  Jun 18 05:48:41.855: INFO: Got endpoints: latency-svc-v42gz [273.52257ms]
  Jun 18 05:48:41.855: INFO: Got endpoints: latency-svc-m9hzq [283.097905ms]
  Jun 18 05:48:41.871: INFO: Got endpoints: latency-svc-wqsrw [248.110524ms]
  Jun 18 05:48:41.871: INFO: Got endpoints: latency-svc-7vkkt [326.319236ms]
  Jun 18 05:48:41.871: INFO: Got endpoints: latency-svc-klzjr [211.119925ms]
  Jun 18 05:48:41.872: INFO: Got endpoints: latency-svc-wljzc [265.920813ms]
  Jun 18 05:48:41.872: INFO: Got endpoints: latency-svc-vzlkk [200.102404ms]
  Jun 18 05:48:41.877: INFO: Created: latency-svc-7dg2f
  Jun 18 05:48:41.878: INFO: Got endpoints: latency-svc-wrkwn [317.6069ms]
  Jun 18 05:48:41.879: INFO: Got endpoints: latency-svc-7dg2f [42.500403ms]
  Jun 18 05:48:41.890: INFO: Created: latency-svc-rzdwn
  Jun 18 05:48:41.897: INFO: Got endpoints: latency-svc-rzdwn [56.026875ms]
  Jun 18 05:48:41.900: INFO: Created: latency-svc-hk4s4
  Jun 18 05:48:41.904: INFO: Got endpoints: latency-svc-hk4s4 [60.471127ms]
  Jun 18 05:48:41.912: INFO: Created: latency-svc-2tw6t
  Jun 18 05:48:41.917: INFO: Got endpoints: latency-svc-2tw6t [72.821951ms]
  Jun 18 05:48:41.922: INFO: Created: latency-svc-nnxmx
  Jun 18 05:48:41.933: INFO: Created: latency-svc-7rph8
  Jun 18 05:48:41.945: INFO: Created: latency-svc-kp4l4
  Jun 18 05:48:41.952: INFO: Got endpoints: latency-svc-nnxmx [102.107892ms]
  Jun 18 05:48:41.956: INFO: Created: latency-svc-ffv2j
  Jun 18 05:48:41.982: INFO: Created: latency-svc-xp7m2
  Jun 18 05:48:41.984: INFO: Created: latency-svc-4dtwk
  Jun 18 05:48:42.004: INFO: Created: latency-svc-r7snd
  Jun 18 05:48:42.008: INFO: Got endpoints: latency-svc-7rph8 [152.87546ms]
  Jun 18 05:48:42.056: INFO: Got endpoints: latency-svc-kp4l4 [200.353066ms]
  Jun 18 05:48:42.057: INFO: Created: latency-svc-vrcqg
  Jun 18 05:48:42.063: INFO: Created: latency-svc-6wvxg
  Jun 18 05:48:42.074: INFO: Created: latency-svc-qbk7t
  Jun 18 05:48:42.081: INFO: Created: latency-svc-jqmfq
  Jun 18 05:48:42.094: INFO: Created: latency-svc-j6xtq
  Jun 18 05:48:42.099: INFO: Got endpoints: latency-svc-ffv2j [243.579627ms]
  Jun 18 05:48:42.104: INFO: Created: latency-svc-v6mqr
  Jun 18 05:48:42.110: INFO: Created: latency-svc-tj5gp
  Jun 18 05:48:42.119: INFO: Created: latency-svc-6v6vl
  Jun 18 05:48:42.131: INFO: Created: latency-svc-krvjs
  Jun 18 05:48:42.141: INFO: Created: latency-svc-92nrv
  Jun 18 05:48:42.152: INFO: Got endpoints: latency-svc-xp7m2 [296.951095ms]
  Jun 18 05:48:42.155: INFO: Created: latency-svc-8pknx
  Jun 18 05:48:42.176: INFO: Created: latency-svc-6tvtz
  Jun 18 05:48:42.184: INFO: Created: latency-svc-c5btp
  Jun 18 05:48:42.201: INFO: Got endpoints: latency-svc-4dtwk [330.162622ms]
  Jun 18 05:48:42.219: INFO: Created: latency-svc-h4z6d
  Jun 18 05:48:42.248: INFO: Got endpoints: latency-svc-r7snd [377.333515ms]
  Jun 18 05:48:42.264: INFO: Created: latency-svc-hnthh
  Jun 18 05:48:42.298: INFO: Got endpoints: latency-svc-vrcqg [425.462843ms]
  Jun 18 05:48:42.314: INFO: Created: latency-svc-6c6lz
  Jun 18 05:48:42.347: INFO: Got endpoints: latency-svc-6wvxg [475.373103ms]
  Jun 18 05:48:42.362: INFO: Created: latency-svc-t2tbh
  Jun 18 05:48:42.397: INFO: Got endpoints: latency-svc-qbk7t [525.006004ms]
  Jun 18 05:48:42.414: INFO: Created: latency-svc-c2jz7
  Jun 18 05:48:42.448: INFO: Got endpoints: latency-svc-jqmfq [569.876795ms]
  Jun 18 05:48:42.462: INFO: Created: latency-svc-vxbq2
  Jun 18 05:48:42.497: INFO: Got endpoints: latency-svc-j6xtq [617.78524ms]
  Jun 18 05:48:42.510: INFO: Created: latency-svc-n2p6d
  Jun 18 05:48:42.549: INFO: Got endpoints: latency-svc-v6mqr [652.013346ms]
  Jun 18 05:48:42.565: INFO: Created: latency-svc-q72l9
  Jun 18 05:48:42.596: INFO: Got endpoints: latency-svc-tj5gp [692.122498ms]
  Jun 18 05:48:42.613: INFO: Created: latency-svc-848cq
  Jun 18 05:48:42.648: INFO: Got endpoints: latency-svc-6v6vl [731.130167ms]
  Jun 18 05:48:42.663: INFO: Created: latency-svc-mq4hz
  Jun 18 05:48:42.697: INFO: Got endpoints: latency-svc-krvjs [745.230984ms]
  Jun 18 05:48:42.711: INFO: Created: latency-svc-rgpv5
  Jun 18 05:48:42.748: INFO: Got endpoints: latency-svc-92nrv [740.233559ms]
  Jun 18 05:48:42.760: INFO: Created: latency-svc-t9qnk
  Jun 18 05:48:42.801: INFO: Got endpoints: latency-svc-8pknx [745.462604ms]
  Jun 18 05:48:42.814: INFO: Created: latency-svc-xgbbs
  Jun 18 05:48:42.849: INFO: Got endpoints: latency-svc-6tvtz [750.121851ms]
  Jun 18 05:48:42.862: INFO: Created: latency-svc-57xrt
  Jun 18 05:48:42.897: INFO: Got endpoints: latency-svc-c5btp [744.87124ms]
  Jun 18 05:48:42.911: INFO: Created: latency-svc-x2mlz
  Jun 18 05:48:42.947: INFO: Got endpoints: latency-svc-h4z6d [745.940423ms]
  Jun 18 05:48:42.959: INFO: Created: latency-svc-mv68k
  Jun 18 05:48:42.997: INFO: Got endpoints: latency-svc-hnthh [749.076999ms]
  Jun 18 05:48:43.012: INFO: Created: latency-svc-cbzxj
  Jun 18 05:48:43.047: INFO: Got endpoints: latency-svc-6c6lz [749.361028ms]
  Jun 18 05:48:43.060: INFO: Created: latency-svc-k5jfw
  Jun 18 05:48:43.097: INFO: Got endpoints: latency-svc-t2tbh [749.825582ms]
  Jun 18 05:48:43.110: INFO: Created: latency-svc-6rkqb
  Jun 18 05:48:43.147: INFO: Got endpoints: latency-svc-c2jz7 [749.745132ms]
  Jun 18 05:48:43.165: INFO: Created: latency-svc-q4p8r
  Jun 18 05:48:43.198: INFO: Got endpoints: latency-svc-vxbq2 [750.373565ms]
  Jun 18 05:48:43.214: INFO: Created: latency-svc-zvxdw
  Jun 18 05:48:43.250: INFO: Got endpoints: latency-svc-n2p6d [752.284035ms]
  Jun 18 05:48:43.260: INFO: Created: latency-svc-72ldd
  Jun 18 05:48:43.297: INFO: Got endpoints: latency-svc-q72l9 [744.416119ms]
  Jun 18 05:48:43.310: INFO: Created: latency-svc-lp6ns
  Jun 18 05:48:43.347: INFO: Got endpoints: latency-svc-848cq [751.099088ms]
  Jun 18 05:48:43.363: INFO: Created: latency-svc-flxkg
  Jun 18 05:48:43.397: INFO: Got endpoints: latency-svc-mq4hz [749.232372ms]
  Jun 18 05:48:43.412: INFO: Created: latency-svc-b96hk
  Jun 18 05:48:43.448: INFO: Got endpoints: latency-svc-rgpv5 [750.824358ms]
  Jun 18 05:48:43.464: INFO: Created: latency-svc-x8l6s
  Jun 18 05:48:43.497: INFO: Got endpoints: latency-svc-t9qnk [748.544378ms]
  Jun 18 05:48:43.509: INFO: Created: latency-svc-7j7q6
  Jun 18 05:48:43.547: INFO: Got endpoints: latency-svc-xgbbs [745.698192ms]
  Jun 18 05:48:43.562: INFO: Created: latency-svc-bzlg2
  Jun 18 05:48:43.599: INFO: Got endpoints: latency-svc-57xrt [749.34391ms]
  Jun 18 05:48:43.612: INFO: Created: latency-svc-g6j9r
  Jun 18 05:48:43.649: INFO: Got endpoints: latency-svc-x2mlz [751.734718ms]
  Jun 18 05:48:43.662: INFO: Created: latency-svc-79mgt
  Jun 18 05:48:43.698: INFO: Got endpoints: latency-svc-mv68k [750.561467ms]
  Jun 18 05:48:43.711: INFO: Created: latency-svc-p2pdl
  Jun 18 05:48:43.749: INFO: Got endpoints: latency-svc-cbzxj [751.866854ms]
  Jun 18 05:48:43.761: INFO: Created: latency-svc-8cdh6
  Jun 18 05:48:43.797: INFO: Got endpoints: latency-svc-k5jfw [750.152076ms]
  Jun 18 05:48:43.808: INFO: Created: latency-svc-shxl2
  Jun 18 05:48:43.848: INFO: Got endpoints: latency-svc-6rkqb [750.676696ms]
  Jun 18 05:48:43.862: INFO: Created: latency-svc-lldj9
  Jun 18 05:48:43.897: INFO: Got endpoints: latency-svc-q4p8r [749.791732ms]
  Jun 18 05:48:43.913: INFO: Created: latency-svc-hr6c6
  Jun 18 05:48:43.947: INFO: Got endpoints: latency-svc-zvxdw [748.845772ms]
  Jun 18 05:48:43.959: INFO: Created: latency-svc-wmgsb
  Jun 18 05:48:43.998: INFO: Got endpoints: latency-svc-72ldd [747.978711ms]
  Jun 18 05:48:44.021: INFO: Created: latency-svc-746dj
  Jun 18 05:48:44.048: INFO: Got endpoints: latency-svc-lp6ns [750.336269ms]
  Jun 18 05:48:44.062: INFO: Created: latency-svc-qgw5q
  Jun 18 05:48:44.097: INFO: Got endpoints: latency-svc-flxkg [749.645524ms]
  Jun 18 05:48:44.111: INFO: Created: latency-svc-kk8mh
  Jun 18 05:48:44.148: INFO: Got endpoints: latency-svc-b96hk [751.040171ms]
  Jun 18 05:48:44.167: INFO: Created: latency-svc-fltgw
  Jun 18 05:48:44.197: INFO: Got endpoints: latency-svc-x8l6s [749.154193ms]
  Jun 18 05:48:44.216: INFO: Created: latency-svc-trqhd
  Jun 18 05:48:44.247: INFO: Got endpoints: latency-svc-7j7q6 [750.562734ms]
  Jun 18 05:48:44.262: INFO: Created: latency-svc-rxljs
  Jun 18 05:48:44.298: INFO: Got endpoints: latency-svc-bzlg2 [751.102748ms]
  Jun 18 05:48:44.313: INFO: Created: latency-svc-dbg6b
  Jun 18 05:48:44.348: INFO: Got endpoints: latency-svc-g6j9r [748.803175ms]
  Jun 18 05:48:44.363: INFO: Created: latency-svc-jrpqf
  Jun 18 05:48:44.397: INFO: Got endpoints: latency-svc-79mgt [747.757364ms]
  Jun 18 05:48:44.418: INFO: Created: latency-svc-9wzc4
  Jun 18 05:48:44.449: INFO: Got endpoints: latency-svc-p2pdl [750.611702ms]
  Jun 18 05:48:44.462: INFO: Created: latency-svc-msr69
  Jun 18 05:48:44.499: INFO: Got endpoints: latency-svc-8cdh6 [749.898061ms]
  Jun 18 05:48:44.625: INFO: Got endpoints: latency-svc-lldj9 [777.787419ms]
  Jun 18 05:48:44.626: INFO: Got endpoints: latency-svc-shxl2 [828.16866ms]
  Jun 18 05:48:44.657: INFO: Got endpoints: latency-svc-hr6c6 [760.320257ms]
  Jun 18 05:48:44.664: INFO: Created: latency-svc-5mh9l
  Jun 18 05:48:44.671: INFO: Created: latency-svc-sxp98
  Jun 18 05:48:44.681: INFO: Created: latency-svc-h57gw
  Jun 18 05:48:44.687: INFO: Created: latency-svc-zfm8k
  Jun 18 05:48:44.697: INFO: Got endpoints: latency-svc-wmgsb [749.4326ms]
  Jun 18 05:48:44.716: INFO: Created: latency-svc-2jgzq
  Jun 18 05:48:44.747: INFO: Got endpoints: latency-svc-746dj [749.666269ms]
  Jun 18 05:48:44.763: INFO: Created: latency-svc-wjr9h
  Jun 18 05:48:44.798: INFO: Got endpoints: latency-svc-qgw5q [749.904288ms]
  Jun 18 05:48:44.812: INFO: Created: latency-svc-79m89
  Jun 18 05:48:44.847: INFO: Got endpoints: latency-svc-kk8mh [750.026508ms]
  Jun 18 05:48:44.861: INFO: Created: latency-svc-jd5gl
  Jun 18 05:48:44.899: INFO: Got endpoints: latency-svc-fltgw [750.823206ms]
  Jun 18 05:48:44.911: INFO: Created: latency-svc-cgsjb
  Jun 18 05:48:44.947: INFO: Got endpoints: latency-svc-trqhd [750.19128ms]
  Jun 18 05:48:44.959: INFO: Created: latency-svc-b8k2m
  Jun 18 05:48:44.997: INFO: Got endpoints: latency-svc-rxljs [750.041483ms]
  Jun 18 05:48:45.013: INFO: Created: latency-svc-c4zng
  Jun 18 05:48:45.047: INFO: Got endpoints: latency-svc-dbg6b [748.386022ms]
  Jun 18 05:48:45.063: INFO: Created: latency-svc-sqtgr
  Jun 18 05:48:45.103: INFO: Got endpoints: latency-svc-jrpqf [755.090414ms]
  Jun 18 05:48:45.118: INFO: Created: latency-svc-wfqfv
  Jun 18 05:48:45.149: INFO: Got endpoints: latency-svc-9wzc4 [752.521356ms]
  Jun 18 05:48:45.162: INFO: Created: latency-svc-drr45
  Jun 18 05:48:45.197: INFO: Got endpoints: latency-svc-msr69 [747.969195ms]
  Jun 18 05:48:45.209: INFO: Created: latency-svc-rb9nr
  Jun 18 05:48:45.247: INFO: Got endpoints: latency-svc-5mh9l [748.130737ms]
  Jun 18 05:48:45.265: INFO: Created: latency-svc-knkmc
  Jun 18 05:48:45.298: INFO: Got endpoints: latency-svc-sxp98 [672.46454ms]
  Jun 18 05:48:45.316: INFO: Created: latency-svc-tl4pw
  Jun 18 05:48:45.346: INFO: Got endpoints: latency-svc-h57gw [720.747694ms]
  Jun 18 05:48:45.363: INFO: Created: latency-svc-l4dvm
  Jun 18 05:48:45.397: INFO: Got endpoints: latency-svc-zfm8k [739.721647ms]
  Jun 18 05:48:45.413: INFO: Created: latency-svc-8ckjk
  Jun 18 05:48:45.448: INFO: Got endpoints: latency-svc-2jgzq [750.830877ms]
  Jun 18 05:48:45.466: INFO: Created: latency-svc-l9j8r
  Jun 18 05:48:45.497: INFO: Got endpoints: latency-svc-wjr9h [749.978263ms]
  Jun 18 05:48:45.510: INFO: Created: latency-svc-ptlbm
  Jun 18 05:48:45.550: INFO: Got endpoints: latency-svc-79m89 [751.863493ms]
  Jun 18 05:48:45.561: INFO: Created: latency-svc-l6rbb
  Jun 18 05:48:45.597: INFO: Got endpoints: latency-svc-jd5gl [750.001345ms]
  Jun 18 05:48:45.609: INFO: Created: latency-svc-5qv8s
  Jun 18 05:48:45.647: INFO: Got endpoints: latency-svc-cgsjb [747.661399ms]
  Jun 18 05:48:45.658: INFO: Created: latency-svc-rqjxt
  Jun 18 05:48:45.698: INFO: Got endpoints: latency-svc-b8k2m [750.602422ms]
  Jun 18 05:48:45.711: INFO: Created: latency-svc-qvx8v
  Jun 18 05:48:45.747: INFO: Got endpoints: latency-svc-c4zng [749.67457ms]
  Jun 18 05:48:45.760: INFO: Created: latency-svc-544wf
  Jun 18 05:48:45.796: INFO: Got endpoints: latency-svc-sqtgr [749.5656ms]
  Jun 18 05:48:45.810: INFO: Created: latency-svc-9znxw
  Jun 18 05:48:45.849: INFO: Got endpoints: latency-svc-wfqfv [746.332275ms]
  Jun 18 05:48:45.863: INFO: Created: latency-svc-wwr26
  Jun 18 05:48:45.897: INFO: Got endpoints: latency-svc-drr45 [747.80344ms]
  Jun 18 05:48:45.910: INFO: Created: latency-svc-6gpvc
  Jun 18 05:48:45.947: INFO: Got endpoints: latency-svc-rb9nr [750.740733ms]
  Jun 18 05:48:45.962: INFO: Created: latency-svc-kxx77
  Jun 18 05:48:45.998: INFO: Got endpoints: latency-svc-knkmc [750.323855ms]
  Jun 18 05:48:46.015: INFO: Created: latency-svc-fbt5d
  Jun 18 05:48:46.047: INFO: Got endpoints: latency-svc-tl4pw [749.363371ms]
  Jun 18 05:48:46.059: INFO: Created: latency-svc-7dh5k
  Jun 18 05:48:46.096: INFO: Got endpoints: latency-svc-l4dvm [749.845488ms]
  Jun 18 05:48:46.108: INFO: Created: latency-svc-fps6z
  Jun 18 05:48:46.146: INFO: Got endpoints: latency-svc-8ckjk [749.252359ms]
  Jun 18 05:48:46.160: INFO: Created: latency-svc-mwjg4
  Jun 18 05:48:46.198: INFO: Got endpoints: latency-svc-l9j8r [750.036177ms]
  Jun 18 05:48:46.218: INFO: Created: latency-svc-czq6c
  Jun 18 05:48:46.248: INFO: Got endpoints: latency-svc-ptlbm [750.086148ms]
  Jun 18 05:48:46.260: INFO: Created: latency-svc-v9phl
  Jun 18 05:48:46.303: INFO: Got endpoints: latency-svc-l6rbb [753.448434ms]
  Jun 18 05:48:46.316: INFO: Created: latency-svc-8kt75
  Jun 18 05:48:46.348: INFO: Got endpoints: latency-svc-5qv8s [750.11015ms]
  Jun 18 05:48:46.360: INFO: Created: latency-svc-5nmfn
  Jun 18 05:48:46.398: INFO: Got endpoints: latency-svc-rqjxt [751.371187ms]
  Jun 18 05:48:46.411: INFO: Created: latency-svc-chdv7
  Jun 18 05:48:46.448: INFO: Got endpoints: latency-svc-qvx8v [749.543738ms]
  Jun 18 05:48:46.458: INFO: Created: latency-svc-rkm5l
  Jun 18 05:48:46.497: INFO: Got endpoints: latency-svc-544wf [749.752572ms]
  Jun 18 05:48:46.517: INFO: Created: latency-svc-db7wt
  Jun 18 05:48:46.548: INFO: Got endpoints: latency-svc-9znxw [751.798852ms]
  Jun 18 05:48:46.561: INFO: Created: latency-svc-wdgv4
  Jun 18 05:48:46.598: INFO: Got endpoints: latency-svc-wwr26 [749.228068ms]
  Jun 18 05:48:46.612: INFO: Created: latency-svc-gs52x
  Jun 18 05:48:46.647: INFO: Got endpoints: latency-svc-6gpvc [749.750917ms]
  Jun 18 05:48:46.663: INFO: Created: latency-svc-ndvp9
  Jun 18 05:48:46.697: INFO: Got endpoints: latency-svc-kxx77 [749.258451ms]
  Jun 18 05:48:46.708: INFO: Created: latency-svc-84pbd
  Jun 18 05:48:46.747: INFO: Got endpoints: latency-svc-fbt5d [749.855282ms]
  Jun 18 05:48:46.760: INFO: Created: latency-svc-gpkjj
  Jun 18 05:48:46.797: INFO: Got endpoints: latency-svc-7dh5k [749.902514ms]
  Jun 18 05:48:46.808: INFO: Created: latency-svc-596n2
  Jun 18 05:48:46.851: INFO: Got endpoints: latency-svc-fps6z [754.212005ms]
  Jun 18 05:48:46.862: INFO: Created: latency-svc-42btr
  Jun 18 05:48:46.898: INFO: Got endpoints: latency-svc-mwjg4 [751.289605ms]
  Jun 18 05:48:46.910: INFO: Created: latency-svc-b8rr7
  Jun 18 05:48:46.948: INFO: Got endpoints: latency-svc-czq6c [750.154726ms]
  Jun 18 05:48:46.962: INFO: Created: latency-svc-56bds
  Jun 18 05:48:46.998: INFO: Got endpoints: latency-svc-v9phl [750.395033ms]
  Jun 18 05:48:47.018: INFO: Created: latency-svc-7wjhm
  Jun 18 05:48:47.048: INFO: Got endpoints: latency-svc-8kt75 [744.900681ms]
  Jun 18 05:48:47.060: INFO: Created: latency-svc-xv5gt
  Jun 18 05:48:47.099: INFO: Got endpoints: latency-svc-5nmfn [751.315371ms]
  Jun 18 05:48:47.111: INFO: Created: latency-svc-7bcnj
  Jun 18 05:48:47.147: INFO: Got endpoints: latency-svc-chdv7 [749.158953ms]
  Jun 18 05:48:47.162: INFO: Created: latency-svc-5nj87
  Jun 18 05:48:47.197: INFO: Got endpoints: latency-svc-rkm5l [749.23617ms]
  Jun 18 05:48:47.229: INFO: Created: latency-svc-jz6j4
  Jun 18 05:48:47.262: INFO: Got endpoints: latency-svc-db7wt [764.613246ms]
  Jun 18 05:48:47.275: INFO: Created: latency-svc-8psh7
  Jun 18 05:48:47.296: INFO: Got endpoints: latency-svc-wdgv4 [748.107778ms]
  Jun 18 05:48:47.311: INFO: Created: latency-svc-sgsgf
  Jun 18 05:48:47.346: INFO: Got endpoints: latency-svc-gs52x [747.835242ms]
  Jun 18 05:48:47.360: INFO: Created: latency-svc-kcwbr
  Jun 18 05:48:47.398: INFO: Got endpoints: latency-svc-ndvp9 [750.396945ms]
  Jun 18 05:48:47.419: INFO: Created: latency-svc-hrcd4
  Jun 18 05:48:47.448: INFO: Got endpoints: latency-svc-84pbd [751.53027ms]
  Jun 18 05:48:47.462: INFO: Created: latency-svc-4q77d
  Jun 18 05:48:47.499: INFO: Got endpoints: latency-svc-gpkjj [751.365799ms]
  Jun 18 05:48:47.513: INFO: Created: latency-svc-lwgjx
  Jun 18 05:48:47.550: INFO: Got endpoints: latency-svc-596n2 [752.259023ms]
  Jun 18 05:48:47.560: INFO: Created: latency-svc-z8vh4
  Jun 18 05:48:47.597: INFO: Got endpoints: latency-svc-42btr [746.556153ms]
  Jun 18 05:48:47.609: INFO: Created: latency-svc-nqtt6
  Jun 18 05:48:47.648: INFO: Got endpoints: latency-svc-b8rr7 [750.651544ms]
  Jun 18 05:48:47.665: INFO: Created: latency-svc-mtkns
  Jun 18 05:48:47.699: INFO: Got endpoints: latency-svc-56bds [750.438578ms]
  Jun 18 05:48:47.714: INFO: Created: latency-svc-nshln
  Jun 18 05:48:47.750: INFO: Got endpoints: latency-svc-7wjhm [751.432061ms]
  Jun 18 05:48:47.762: INFO: Created: latency-svc-2lclz
  Jun 18 05:48:47.797: INFO: Got endpoints: latency-svc-xv5gt [749.135742ms]
  Jun 18 05:48:47.812: INFO: Created: latency-svc-8qb8s
  Jun 18 05:48:47.847: INFO: Got endpoints: latency-svc-7bcnj [748.111448ms]
  Jun 18 05:48:47.859: INFO: Created: latency-svc-clr5d
  Jun 18 05:48:47.897: INFO: Got endpoints: latency-svc-5nj87 [749.419081ms]
  Jun 18 05:48:47.910: INFO: Created: latency-svc-fk29q
  Jun 18 05:48:47.948: INFO: Got endpoints: latency-svc-jz6j4 [750.626553ms]
  Jun 18 05:48:47.965: INFO: Created: latency-svc-xhzdc
  Jun 18 05:48:47.999: INFO: Got endpoints: latency-svc-8psh7 [737.051876ms]
  Jun 18 05:48:48.011: INFO: Created: latency-svc-8s26r
  Jun 18 05:48:48.048: INFO: Got endpoints: latency-svc-sgsgf [751.105415ms]
  Jun 18 05:48:48.060: INFO: Created: latency-svc-k79p2
  Jun 18 05:48:48.100: INFO: Got endpoints: latency-svc-kcwbr [753.759267ms]
  Jun 18 05:48:48.113: INFO: Created: latency-svc-dw6nd
  Jun 18 05:48:48.147: INFO: Got endpoints: latency-svc-hrcd4 [748.840845ms]
  Jun 18 05:48:48.162: INFO: Created: latency-svc-6mzns
  Jun 18 05:48:48.197: INFO: Got endpoints: latency-svc-4q77d [748.798587ms]
  Jun 18 05:48:48.215: INFO: Created: latency-svc-779p2
  Jun 18 05:48:48.249: INFO: Got endpoints: latency-svc-lwgjx [750.255888ms]
  Jun 18 05:48:48.261: INFO: Created: latency-svc-jz26z
  Jun 18 05:48:48.297: INFO: Got endpoints: latency-svc-z8vh4 [747.603282ms]
  Jun 18 05:48:48.312: INFO: Created: latency-svc-x58qm
  Jun 18 05:48:48.346: INFO: Got endpoints: latency-svc-nqtt6 [748.501163ms]
  Jun 18 05:48:48.359: INFO: Created: latency-svc-sx6lm
  Jun 18 05:48:48.397: INFO: Got endpoints: latency-svc-mtkns [748.943606ms]
  Jun 18 05:48:48.416: INFO: Created: latency-svc-pj2nr
  Jun 18 05:48:48.447: INFO: Got endpoints: latency-svc-nshln [748.165284ms]
  Jun 18 05:48:48.460: INFO: Created: latency-svc-2pcqf
  Jun 18 05:48:48.497: INFO: Got endpoints: latency-svc-2lclz [747.625018ms]
  Jun 18 05:48:48.515: INFO: Created: latency-svc-524rh
  Jun 18 05:48:48.547: INFO: Got endpoints: latency-svc-8qb8s [749.69726ms]
  Jun 18 05:48:48.559: INFO: Created: latency-svc-scf54
  Jun 18 05:48:48.598: INFO: Got endpoints: latency-svc-clr5d [750.977826ms]
  Jun 18 05:48:48.613: INFO: Created: latency-svc-qdfl9
  Jun 18 05:48:48.653: INFO: Got endpoints: latency-svc-fk29q [755.697474ms]
  Jun 18 05:48:48.673: INFO: Created: latency-svc-z7nj2
  Jun 18 05:48:48.700: INFO: Got endpoints: latency-svc-xhzdc [752.28098ms]
  Jun 18 05:48:48.732: INFO: Created: latency-svc-bpspg
  Jun 18 05:48:48.747: INFO: Got endpoints: latency-svc-8s26r [748.65869ms]
  Jun 18 05:48:48.758: INFO: Created: latency-svc-l9wvv
  Jun 18 05:48:48.797: INFO: Got endpoints: latency-svc-k79p2 [749.503196ms]
  Jun 18 05:48:48.808: INFO: Created: latency-svc-5p94v
  Jun 18 05:48:48.848: INFO: Got endpoints: latency-svc-dw6nd [748.024368ms]
  Jun 18 05:48:48.866: INFO: Created: latency-svc-pmmgb
  Jun 18 05:48:48.900: INFO: Got endpoints: latency-svc-6mzns [753.446221ms]
  Jun 18 05:48:48.913: INFO: Created: latency-svc-pkxmt
  Jun 18 05:48:48.947: INFO: Got endpoints: latency-svc-779p2 [749.827028ms]
  Jun 18 05:48:48.960: INFO: Created: latency-svc-ww95c
  Jun 18 05:48:48.998: INFO: Got endpoints: latency-svc-jz26z [748.648753ms]
  Jun 18 05:48:49.012: INFO: Created: latency-svc-t9m72
  Jun 18 05:48:49.051: INFO: Got endpoints: latency-svc-x58qm [753.167225ms]
  Jun 18 05:48:49.062: INFO: Created: latency-svc-hmd2r
  Jun 18 05:48:49.097: INFO: Got endpoints: latency-svc-sx6lm [750.878737ms]
  Jun 18 05:48:49.109: INFO: Created: latency-svc-c479d
  Jun 18 05:48:49.148: INFO: Got endpoints: latency-svc-pj2nr [750.69375ms]
  Jun 18 05:48:49.163: INFO: Created: latency-svc-4srlk
  Jun 18 05:48:49.198: INFO: Got endpoints: latency-svc-2pcqf [751.527873ms]
  Jun 18 05:48:49.211: INFO: Created: latency-svc-tdqd7
  Jun 18 05:48:49.247: INFO: Got endpoints: latency-svc-524rh [750.142997ms]
  Jun 18 05:48:49.261: INFO: Created: latency-svc-4kk5k
  Jun 18 05:48:49.299: INFO: Got endpoints: latency-svc-scf54 [751.833639ms]
  Jun 18 05:48:49.346: INFO: Got endpoints: latency-svc-qdfl9 [748.229788ms]
  Jun 18 05:48:49.398: INFO: Got endpoints: latency-svc-z7nj2 [745.685961ms]
  Jun 18 05:48:49.448: INFO: Got endpoints: latency-svc-bpspg [747.435838ms]
  Jun 18 05:48:49.502: INFO: Got endpoints: latency-svc-l9wvv [754.845366ms]
  Jun 18 05:48:49.549: INFO: Got endpoints: latency-svc-5p94v [751.763797ms]
  Jun 18 05:48:49.599: INFO: Got endpoints: latency-svc-pmmgb [750.311186ms]
  Jun 18 05:48:49.646: INFO: Got endpoints: latency-svc-pkxmt [746.372884ms]
  Jun 18 05:48:49.701: INFO: Got endpoints: latency-svc-ww95c [754.200252ms]
  Jun 18 05:48:49.750: INFO: Got endpoints: latency-svc-t9m72 [751.511166ms]
  Jun 18 05:48:49.801: INFO: Got endpoints: latency-svc-hmd2r [750.132683ms]
  Jun 18 05:48:49.848: INFO: Got endpoints: latency-svc-c479d [751.409373ms]
  Jun 18 05:48:49.898: INFO: Got endpoints: latency-svc-4srlk [749.342466ms]
  Jun 18 05:48:49.947: INFO: Got endpoints: latency-svc-tdqd7 [748.742221ms]
  Jun 18 05:48:50.000: INFO: Got endpoints: latency-svc-4kk5k [752.162196ms]
  Jun 18 05:48:50.000: INFO: Latencies: [26.058822ms 35.074219ms 42.500403ms 43.151699ms 56.026875ms 58.488617ms 60.471127ms 68.212066ms 72.821951ms 80.888873ms 96.552937ms 102.107892ms 112.850604ms 124.718442ms 134.272117ms 143.789954ms 152.87546ms 158.213026ms 169.826934ms 174.928908ms 177.9497ms 177.964626ms 178.707055ms 179.461885ms 182.387527ms 190.592163ms 197.608261ms 200.102404ms 200.353066ms 202.530135ms 211.119925ms 217.889631ms 243.579627ms 248.110524ms 263.275013ms 265.920813ms 273.52257ms 283.097905ms 296.951095ms 316.138171ms 317.6069ms 321.178755ms 326.319236ms 330.162622ms 377.333515ms 425.462843ms 475.373103ms 525.006004ms 569.876795ms 617.78524ms 652.013346ms 672.46454ms 692.122498ms 720.747694ms 731.130167ms 737.051876ms 739.721647ms 740.233559ms 744.416119ms 744.87124ms 744.900681ms 745.230984ms 745.462604ms 745.685961ms 745.698192ms 745.940423ms 746.332275ms 746.372884ms 746.556153ms 747.435838ms 747.603282ms 747.625018ms 747.661399ms 747.757364ms 747.80344ms 747.835242ms 747.969195ms 747.978711ms 748.024368ms 748.107778ms 748.111448ms 748.130737ms 748.165284ms 748.229788ms 748.386022ms 748.501163ms 748.544378ms 748.648753ms 748.65869ms 748.742221ms 748.798587ms 748.803175ms 748.840845ms 748.845772ms 748.943606ms 749.076999ms 749.135742ms 749.154193ms 749.158953ms 749.228068ms 749.232372ms 749.23617ms 749.252359ms 749.258451ms 749.342466ms 749.34391ms 749.361028ms 749.363371ms 749.419081ms 749.4326ms 749.503196ms 749.543738ms 749.5656ms 749.645524ms 749.666269ms 749.67457ms 749.69726ms 749.745132ms 749.750917ms 749.752572ms 749.791732ms 749.825582ms 749.827028ms 749.845488ms 749.855282ms 749.898061ms 749.902514ms 749.904288ms 749.978263ms 750.001345ms 750.026508ms 750.036177ms 750.041483ms 750.086148ms 750.11015ms 750.121851ms 750.132683ms 750.142997ms 750.152076ms 750.154726ms 750.19128ms 750.255888ms 750.311186ms 750.323855ms 750.336269ms 750.373565ms 750.395033ms 750.396945ms 750.438578ms 750.561467ms 750.562734ms 750.602422ms 750.611702ms 750.626553ms 750.651544ms 750.676696ms 750.69375ms 750.740733ms 750.823206ms 750.824358ms 750.830877ms 750.878737ms 750.977826ms 751.040171ms 751.099088ms 751.102748ms 751.105415ms 751.289605ms 751.315371ms 751.365799ms 751.371187ms 751.409373ms 751.432061ms 751.511166ms 751.527873ms 751.53027ms 751.734718ms 751.763797ms 751.798852ms 751.833639ms 751.863493ms 751.866854ms 752.162196ms 752.259023ms 752.28098ms 752.284035ms 752.521356ms 753.167225ms 753.446221ms 753.448434ms 753.759267ms 754.200252ms 754.212005ms 754.845366ms 755.090414ms 755.697474ms 760.320257ms 764.613246ms 777.787419ms 828.16866ms]
  Jun 18 05:48:50.000: INFO: 50 %ile: 749.232372ms
  Jun 18 05:48:50.000: INFO: 90 %ile: 751.863493ms
  Jun 18 05:48:50.000: INFO: 99 %ile: 777.787419ms
  Jun 18 05:48:50.000: INFO: Total sample count: 200
  Jun 18 05:48:50.000: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-2820" for this suite. @ 06/18/24 05:48:50.013
• [10.772 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:131
  STEP: Creating a kubernetes client @ 06/18/24 05:48:50.021
  Jun 18 05:48:50.021: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename replicaset @ 06/18/24 05:48:50.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:48:50.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:48:50.039
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 06/18/24 05:48:50.043
  STEP: When a replicaset with a matching selector is created @ 06/18/24 05:48:52.06
  STEP: Then the orphan pod is adopted @ 06/18/24 05:48:52.065
  STEP: When the matched label of one of its pods change @ 06/18/24 05:48:53.073
  Jun 18 05:48:53.076: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 06/18/24 05:48:53.088
  Jun 18 05:48:54.096: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9389" for this suite. @ 06/18/24 05:48:54.101
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:117
  STEP: Creating a kubernetes client @ 06/18/24 05:48:54.111
  Jun 18 05:48:54.111: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename emptydir @ 06/18/24 05:48:54.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:48:54.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:48:54.137
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 06/18/24 05:48:54.141
  STEP: Saw pod success @ 06/18/24 05:48:58.173
  Jun 18 05:48:58.180: INFO: Trying to get logs from node ck-128-worker-3 pod pod-bcb6bfb4-f85a-4d27-bf91-32b47b226202 container test-container: <nil>
  STEP: delete the pod @ 06/18/24 05:48:58.193
  Jun 18 05:48:58.220: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-170" for this suite. @ 06/18/24 05:48:58.226
• [4.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:887
  STEP: Creating a kubernetes client @ 06/18/24 05:48:58.236
  Jun 18 05:48:58.236: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename resourcequota @ 06/18/24 05:48:58.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:48:58.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:48:58.259
  STEP: Creating a ResourceQuota @ 06/18/24 05:48:58.263
  STEP: Getting a ResourceQuota @ 06/18/24 05:48:58.268
  STEP: Updating a ResourceQuota @ 06/18/24 05:48:58.272
  STEP: Verifying a ResourceQuota was modified @ 06/18/24 05:48:58.278
  STEP: Deleting a ResourceQuota @ 06/18/24 05:48:58.28
  STEP: Verifying the deleted ResourceQuota @ 06/18/24 05:48:58.286
  Jun 18 05:48:58.288: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1403" for this suite. @ 06/18/24 05:48:58.293
• [0.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:370
  STEP: Creating a kubernetes client @ 06/18/24 05:48:58.3
  Jun 18 05:48:58.301: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename namespaces @ 06/18/24 05:48:58.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:48:58.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:48:58.321
  STEP: Updating Namespace "namespaces-6696" @ 06/18/24 05:48:58.325
  Jun 18 05:48:58.331: INFO: Namespace "namespaces-6696" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"bcbdb549-fee7-4e87-b55e-cc2aa2e8e91b", "kubernetes.io/metadata.name":"namespaces-6696", "namespaces-6696":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Jun 18 05:48:58.331: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6696" for this suite. @ 06/18/24 05:48:58.336
• [0.041 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 06/18/24 05:48:58.341
  Jun 18 05:48:58.342: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename container-probe @ 06/18/24 05:48:58.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:48:58.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:48:58.363
  STEP: Creating pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587 @ 06/18/24 05:48:58.37
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/18/24 05:49:00.384
  Jun 18 05:49:00.387: INFO: Initial restart count of pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 is 0
  Jun 18 05:49:00.390: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:49:02.397: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:49:04.402: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:49:06.407: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:49:08.413: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:49:10.418: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:49:12.422: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:49:14.428: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:49:16.435: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:49:18.439: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:49:20.444: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:49:22.451: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:49:24.457: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:49:26.461: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:49:28.466: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:49:30.471: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:49:32.476: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:49:34.481: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:49:36.486: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:49:38.492: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:49:40.498: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:49:42.504: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:49:44.511: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:49:46.517: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:49:48.523: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:49:50.528: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:49:52.542: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:49:54.549: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:49:56.553: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:49:58.558: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:50:00.563: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:50:02.569: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:50:04.579: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:50:06.585: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:50:08.591: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:50:10.596: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:50:12.602: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:50:14.608: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:50:16.615: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:50:18.621: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:50:20.627: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:50:22.632: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:50:24.638: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:50:26.643: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:50:28.648: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:50:30.652: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:50:32.657: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:50:34.662: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:50:36.674: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:50:38.684: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:50:40.689: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:50:42.696: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:50:44.702: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:50:46.707: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:50:48.713: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:50:50.718: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:50:52.724: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:50:54.729: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:50:56.735: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:50:58.740: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:51:00.745: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:51:02.751: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:51:04.757: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:51:06.763: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:51:08.769: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:51:10.775: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:51:12.781: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:51:14.787: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:51:16.793: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:51:18.797: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:51:20.803: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:51:22.812: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:51:24.818: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:51:26.823: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:51:28.828: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:51:30.833: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:51:32.839: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:51:34.846: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:51:36.851: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:51:38.856: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:51:40.860: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:51:42.866: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:51:44.871: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:51:46.877: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:51:48.882: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:51:50.887: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:51:52.896: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:51:54.901: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:51:56.907: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:51:58.913: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:52:00.918: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:52:02.923: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:52:04.930: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:52:06.937: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:52:08.945: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:52:10.950: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:52:12.957: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:52:14.963: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:52:16.971: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:52:18.977: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:52:20.984: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:52:22.989: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:52:24.995: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:52:27.001: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:52:29.007: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:52:31.011: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:52:33.018: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:52:35.024: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:52:37.030: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:52:39.036: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:52:41.041: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:52:43.047: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:52:45.052: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:52:47.057: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:52:49.063: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:52:51.068: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:52:53.073: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:52:55.078: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:52:57.083: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:52:59.088: INFO: Get pod test-grpc-3d8a861d-da68-4655-9c81-3be571d020b7 in namespace container-probe-8587
  Jun 18 05:53:01.089: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 06/18/24 05:53:01.097
  STEP: Destroying namespace "container-probe-8587" for this suite. @ 06/18/24 05:53:01.113
• [242.780 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 06/18/24 05:53:01.122
  Jun 18 05:53:01.122: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename projected @ 06/18/24 05:53:01.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:53:01.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:53:01.146
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 05:53:01.152
  STEP: Saw pod success @ 06/18/24 05:53:05.179
  Jun 18 05:53:05.182: INFO: Trying to get logs from node ck-128-worker-2 pod downwardapi-volume-67d91184-e4fe-40a2-b3fd-b5308b629d79 container client-container: <nil>
  STEP: delete the pod @ 06/18/24 05:53:05.205
  Jun 18 05:53:05.219: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3365" for this suite. @ 06/18/24 05:53:05.227
• [4.111 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:55
  STEP: Creating a kubernetes client @ 06/18/24 05:53:05.234
  Jun 18 05:53:05.234: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename runtimeclass @ 06/18/24 05:53:05.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:53:05.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:53:05.252
  Jun 18 05:53:05.263: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9244" for this suite. @ 06/18/24 05:53:05.269
• [0.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 06/18/24 05:53:05.278
  Jun 18 05:53:05.278: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename dns @ 06/18/24 05:53:05.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:53:05.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:53:05.297
  STEP: Creating a test headless service @ 06/18/24 05:53:05.301
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2598.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-2598.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 06/18/24 05:53:05.306
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2598.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-2598.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 06/18/24 05:53:05.306
  STEP: creating a pod to probe DNS @ 06/18/24 05:53:05.306
  STEP: submitting the pod to kubernetes @ 06/18/24 05:53:05.306
  STEP: retrieving the pod @ 06/18/24 05:53:07.327
  STEP: looking for the results for each expected name from probers @ 06/18/24 05:53:07.33
  Jun 18 05:53:07.348: INFO: DNS probes using dns-2598/dns-test-768db969-f2d8-4314-96df-98c7a08a0ff4 succeeded

  Jun 18 05:53:07.348: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 06/18/24 05:53:07.357
  STEP: deleting the test headless service @ 06/18/24 05:53:07.371
  STEP: Destroying namespace "dns-2598" for this suite. @ 06/18/24 05:53:07.391
• [2.125 seconds]
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 06/18/24 05:53:07.403
  Jun 18 05:53:07.403: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename cronjob @ 06/18/24 05:53:07.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:53:07.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:53:07.428
  STEP: Creating a cronjob @ 06/18/24 05:53:07.431
  STEP: creating @ 06/18/24 05:53:07.432
  STEP: getting @ 06/18/24 05:53:07.438
  STEP: listing @ 06/18/24 05:53:07.44
  STEP: watching @ 06/18/24 05:53:07.443
  Jun 18 05:53:07.443: INFO: starting watch
  STEP: cluster-wide listing @ 06/18/24 05:53:07.444
  STEP: cluster-wide watching @ 06/18/24 05:53:07.447
  Jun 18 05:53:07.448: INFO: starting watch
  STEP: patching @ 06/18/24 05:53:07.45
  STEP: updating @ 06/18/24 05:53:07.457
  Jun 18 05:53:07.464: INFO: waiting for watch events with expected annotations
  Jun 18 05:53:07.464: INFO: saw patched and updated annotations
  STEP: patching /status @ 06/18/24 05:53:07.464
  STEP: updating /status @ 06/18/24 05:53:07.47
  STEP: get /status @ 06/18/24 05:53:07.476
  STEP: deleting @ 06/18/24 05:53:07.479
  STEP: deleting a collection @ 06/18/24 05:53:07.49
  Jun 18 05:53:07.499: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4131" for this suite. @ 06/18/24 05:53:07.504
• [0.107 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:53
  STEP: Creating a kubernetes client @ 06/18/24 05:53:07.513
  Jun 18 05:53:07.513: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename podtemplate @ 06/18/24 05:53:07.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:53:07.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:53:07.529
  Jun 18 05:53:07.563: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4901" for this suite. @ 06/18/24 05:53:07.568
• [0.059 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 06/18/24 05:53:07.575
  Jun 18 05:53:07.575: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename projected @ 06/18/24 05:53:07.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:53:07.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:53:07.593
  STEP: Creating projection with secret that has name projected-secret-test-a3cfa006-80c3-4962-965a-b9954df8c6e6 @ 06/18/24 05:53:07.596
  STEP: Creating a pod to test consume secrets @ 06/18/24 05:53:07.601
  STEP: Saw pod success @ 06/18/24 05:53:11.624
  Jun 18 05:53:11.627: INFO: Trying to get logs from node ck-128-worker-2 pod pod-projected-secrets-33ba0574-f719-4de5-9e9f-25e1857bb5dc container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/18/24 05:53:11.633
  Jun 18 05:53:11.651: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1188" for this suite. @ 06/18/24 05:53:11.656
• [4.088 seconds]
------------------------------
SS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:176
  STEP: Creating a kubernetes client @ 06/18/24 05:53:11.666
  Jun 18 05:53:11.666: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename podtemplate @ 06/18/24 05:53:11.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:53:11.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:53:11.69
  STEP: Create a pod template @ 06/18/24 05:53:11.695
  STEP: Replace a pod template @ 06/18/24 05:53:11.7
  Jun 18 05:53:11.708: INFO: Found updated podtemplate annotation: "true"

  Jun 18 05:53:11.708: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7036" for this suite. @ 06/18/24 05:53:11.714
• [0.054 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 06/18/24 05:53:11.727
  Jun 18 05:53:11.727: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename emptydir-wrapper @ 06/18/24 05:53:11.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:53:11.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:53:11.745
  Jun 18 05:53:13.777: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Cleaning up the secret @ 06/18/24 05:53:13.783
  STEP: Cleaning up the configmap @ 06/18/24 05:53:13.789
  STEP: Cleaning up the pod @ 06/18/24 05:53:13.794
  STEP: Destroying namespace "emptydir-wrapper-7645" for this suite. @ 06/18/24 05:53:13.805
• [2.085 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 06/18/24 05:53:13.812
  Jun 18 05:53:13.812: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename container-runtime @ 06/18/24 05:53:13.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:53:13.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:53:13.832
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 06/18/24 05:53:13.844
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 06/18/24 05:53:29.916
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 06/18/24 05:53:29.919
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 06/18/24 05:53:29.924
  STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] @ 06/18/24 05:53:29.924
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 06/18/24 05:53:29.939
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 06/18/24 05:53:31.951
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 06/18/24 05:53:33.963
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 06/18/24 05:53:33.971
  STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] @ 06/18/24 05:53:33.971
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 06/18/24 05:53:33.99
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 06/18/24 05:53:34.999
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 06/18/24 05:53:37.012
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 06/18/24 05:53:37.017
  STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] @ 06/18/24 05:53:37.017
  Jun 18 05:53:37.029: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2307" for this suite. @ 06/18/24 05:53:37.043
• [23.235 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1481
  STEP: Creating a kubernetes client @ 06/18/24 05:53:37.049
  Jun 18 05:53:37.049: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename kubectl @ 06/18/24 05:53:37.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:53:37.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:53:37.066
  STEP: creating Agnhost RC @ 06/18/24 05:53:37.07
  Jun 18 05:53:37.070: INFO: namespace kubectl-8608
  Jun 18 05:53:37.070: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-8608 create -f -'
  Jun 18 05:53:37.848: INFO: stderr: ""
  Jun 18 05:53:37.848: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/18/24 05:53:37.849
  Jun 18 05:53:38.854: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 18 05:53:38.855: INFO: Found 0 / 1
  Jun 18 05:53:39.854: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 18 05:53:39.854: INFO: Found 1 / 1
  Jun 18 05:53:39.854: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Jun 18 05:53:39.859: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 18 05:53:39.859: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun 18 05:53:39.859: INFO: wait on agnhost-primary startup in kubectl-8608 
  Jun 18 05:53:39.860: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-8608 logs agnhost-primary-xjn6j agnhost-primary'
  Jun 18 05:53:39.971: INFO: stderr: ""
  Jun 18 05:53:39.971: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 06/18/24 05:53:39.971
  Jun 18 05:53:39.971: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-8608 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Jun 18 05:53:40.076: INFO: stderr: ""
  Jun 18 05:53:40.076: INFO: stdout: "service/rm2 exposed\n"
  Jun 18 05:53:40.080: INFO: Service rm2 in namespace kubectl-8608 found.
  STEP: exposing service @ 06/18/24 05:53:42.085
  Jun 18 05:53:42.085: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-8608 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Jun 18 05:53:42.181: INFO: stderr: ""
  Jun 18 05:53:42.181: INFO: stdout: "service/rm3 exposed\n"
  Jun 18 05:53:42.185: INFO: Service rm3 in namespace kubectl-8608 found.
  Jun 18 05:53:44.193: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8608" for this suite. @ 06/18/24 05:53:44.199
• [7.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 06/18/24 05:53:44.207
  Jun 18 05:53:44.207: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename projected @ 06/18/24 05:53:44.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:53:44.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:53:44.226
  STEP: Creating configMap with name configmap-projected-all-test-volume-a4d17481-600c-491d-a10a-069c7a496b1f @ 06/18/24 05:53:44.23
  STEP: Creating secret with name secret-projected-all-test-volume-ce6c68d2-aeaf-45ee-9911-e4ff2fbea327 @ 06/18/24 05:53:44.234
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 06/18/24 05:53:44.238
  STEP: Saw pod success @ 06/18/24 05:53:48.262
  Jun 18 05:53:48.265: INFO: Trying to get logs from node ck-128-worker-2 pod projected-volume-7e5de463-0d1b-4516-9cc0-5569abb1bd66 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 06/18/24 05:53:48.272
  Jun 18 05:53:48.283: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-107" for this suite. @ 06/18/24 05:53:48.289
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 06/18/24 05:53:48.297
  Jun 18 05:53:48.297: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename downward-api @ 06/18/24 05:53:48.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:53:48.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:53:48.312
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 05:53:48.315
  STEP: Saw pod success @ 06/18/24 05:53:52.337
  Jun 18 05:53:52.340: INFO: Trying to get logs from node ck-128-worker-2 pod downwardapi-volume-4d2949af-31c3-4daa-9040-72d9ea4bfaae container client-container: <nil>
  STEP: delete the pod @ 06/18/24 05:53:52.346
  Jun 18 05:53:52.365: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8636" for this suite. @ 06/18/24 05:53:52.371
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 06/18/24 05:53:52.38
  Jun 18 05:53:52.380: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename deployment @ 06/18/24 05:53:52.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:53:52.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:53:52.4
  Jun 18 05:53:52.403: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Jun 18 05:53:52.412: INFO: Pod name sample-pod: Found 0 pods out of 1
  Jun 18 05:53:57.418: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/18/24 05:53:57.418
  Jun 18 05:53:57.418: INFO: Creating deployment "test-rolling-update-deployment"
  Jun 18 05:53:57.426: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Jun 18 05:53:57.432: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  Jun 18 05:53:59.442: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Jun 18 05:53:59.447: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Jun 18 05:53:59.456: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1736",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "df9ae8c0-5437-49e2-a900-c73aa6bae0dd",
      ResourceVersion: (string) (len=5) "10608",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854286837,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854286837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854286838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854286837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854286837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854286838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854286837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-7ddb77f68b\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 18 05:53:59.462: INFO: New ReplicaSet "test-rolling-update-deployment-7ddb77f68b" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1736",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "91104029-abe1-4d56-b8f6-a736c587861d",
      ResourceVersion: (string) (len=5) "10598",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854286837,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "df9ae8c0-5437-49e2-a900-c73aa6bae0dd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854286837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 66 39 61 65 38  63 30 2d 35 34 33 37 2d  |\"df9ae8c0-5437-|
              00000120  34 39 65 32 2d 61 39 30  30 2d 63 37 33 61 61 36  |49e2-a900-c73aa6|
              00000130  62 61 65 30 64 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |bae0dd\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854286838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 18 05:53:59.464: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Jun 18 05:53:59.464: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1736",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a4963100-c250-40bf-95b4-94ee43fe2df2",
      ResourceVersion: (string) (len=5) "10607",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854286832,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "df9ae8c0-5437-49e2-a900-c73aa6bae0dd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854286832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854286838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 64 66 39 61 65 38 63  |"uid\":\"df9ae8c|
              000000b0  30 2d 35 34 33 37 2d 34  39 65 32 2d 61 39 30 30  |0-5437-49e2-a900|
              000000c0  2d 63 37 33 61 61 36 62  61 65 30 64 64 5c 22 7d  |-c73aa6bae0dd\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854286838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 18 05:53:59.473: INFO: Pod "test-rolling-update-deployment-7ddb77f68b-nqxqw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-7ddb77f68b-nqxqw",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-7ddb77f68b-",
      Namespace: (string) (len=15) "deployment-1736",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5b261324-7734-47b5-a670-f17795271544",
      ResourceVersion: (string) (len=5) "10597",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854286837,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "ab88756986e004852ed8b079ce717d18b00ebde8419b8ce26e8142b4316f79a7",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "172.17.196.237/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "172.17.196.237/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
          UID: (types.UID) (len=36) "91104029-abe1-4d56-b8f6-a736c587861d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854286837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854286837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 31  31 30 34 30 32 39 2d 61  |d\":\"91104029-a|
              00000090  62 65 31 2d 34 64 35 36  2d 62 38 66 36 2d 61 37  |be1-4d56-b8f6-a7|
              000000a0  33 36 63 35 38 37 38 36  31 64 5c 22 7d 22 3a 7b  |36c587861d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854286838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 31 37 2e 31  39 36 2e 32 33 37 5c 22  |172.17.196.237\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pvfpg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pvfpg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854286837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854286838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854286838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854286837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.166",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "172.17.196.237",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.17.196.237"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854286837,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854286838,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:c9997bf8d2e223d7d2a0078dcfb11a653e9b16cf09418829ec03e1d57ca9628a",
          ContainerID: (string) (len=72) "cri-o://51f61e91943ee3905f1f9f46103ad8d2af87fbf9daa2b18083d495202ec4dc69",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 05:53:59.477: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1736" for this suite. @ 06/18/24 05:53:59.482
• [7.106 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:538
  STEP: Creating a kubernetes client @ 06/18/24 05:53:59.487
  Jun 18 05:53:59.487: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename gc @ 06/18/24 05:53:59.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:53:59.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:53:59.506
  STEP: create the deployment @ 06/18/24 05:53:59.508
  W0618 05:53:59.512324      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 06/18/24 05:53:59.512
  STEP: delete the deployment @ 06/18/24 05:54:00.024
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 06/18/24 05:54:00.029
  STEP: Gathering metrics @ 06/18/24 05:54:00.546
  Jun 18 05:54:00.661: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 18 05:54:00.661: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3740" for this suite. @ 06/18/24 05:54:00.667
• [1.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:76
  STEP: Creating a kubernetes client @ 06/18/24 05:54:00.672
  Jun 18 05:54:00.672: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename resourcequota @ 06/18/24 05:54:00.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:54:00.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:54:00.69
  STEP: Counting existing ResourceQuota @ 06/18/24 05:54:00.694
  STEP: Creating a ResourceQuota @ 06/18/24 05:54:05.698
  STEP: Ensuring resource quota status is calculated @ 06/18/24 05:54:05.706
  Jun 18 05:54:07.711: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5441" for this suite. @ 06/18/24 05:54:07.719
• [7.052 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 06/18/24 05:54:07.726
  Jun 18 05:54:07.726: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename cronjob @ 06/18/24 05:54:07.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:54:07.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:54:07.743
  STEP: Creating a cronjob @ 06/18/24 05:54:07.746
  STEP: Ensuring more than one job is running at a time @ 06/18/24 05:54:07.752
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 06/18/24 05:56:01.756
  STEP: Removing cronjob @ 06/18/24 05:56:01.76
  Jun 18 05:56:01.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5250" for this suite. @ 06/18/24 05:56:01.773
• [114.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 06/18/24 05:56:01.787
  Jun 18 05:56:01.787: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename pods @ 06/18/24 05:56:01.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:56:01.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:56:01.815
  Jun 18 05:56:01.821: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: creating the pod @ 06/18/24 05:56:01.823
  STEP: submitting the pod to kubernetes @ 06/18/24 05:56:01.823
  Jun 18 05:56:03.866: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5656" for this suite. @ 06/18/24 05:56:03.872
• [2.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 06/18/24 05:56:03.879
  Jun 18 05:56:03.879: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename sched-preemption @ 06/18/24 05:56:03.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:56:03.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:56:03.902
  Jun 18 05:56:03.919: INFO: Waiting up to 1m0s for all nodes to be ready
  Jun 18 05:57:03.958: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 06/18/24 05:57:03.961
  Jun 18 05:57:03.993: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Jun 18 05:57:04.000: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Jun 18 05:57:04.025: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Jun 18 05:57:04.033: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Jun 18 05:57:04.054: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Jun 18 05:57:04.064: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 06/18/24 05:57:04.064
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 06/18/24 05:57:06.094
  Jun 18 05:57:12.159: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2949" for this suite. @ 06/18/24 05:57:12.203
• [68.331 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 06/18/24 05:57:12.219
  Jun 18 05:57:12.219: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename downward-api @ 06/18/24 05:57:12.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:57:12.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:57:12.237
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 05:57:12.241
  STEP: Saw pod success @ 06/18/24 05:57:16.263
  Jun 18 05:57:16.266: INFO: Trying to get logs from node ck-128-worker-1 pod downwardapi-volume-ac302f6f-ae51-416a-b4c0-a3aa06f97d49 container client-container: <nil>
  STEP: delete the pod @ 06/18/24 05:57:16.278
  Jun 18 05:57:16.297: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-84" for this suite. @ 06/18/24 05:57:16.304
• [4.092 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:355
  STEP: Creating a kubernetes client @ 06/18/24 05:57:16.312
  Jun 18 05:57:16.312: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename endpointslice @ 06/18/24 05:57:16.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:57:16.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:57:16.339
  STEP: getting /apis @ 06/18/24 05:57:16.344
  STEP: getting /apis/discovery.k8s.io @ 06/18/24 05:57:16.352
  STEP: getting /apis/discovery.k8s.iov1 @ 06/18/24 05:57:16.354
  STEP: creating @ 06/18/24 05:57:16.355
  STEP: getting @ 06/18/24 05:57:16.368
  STEP: listing @ 06/18/24 05:57:16.371
  STEP: watching @ 06/18/24 05:57:16.374
  Jun 18 05:57:16.374: INFO: starting watch
  STEP: cluster-wide listing @ 06/18/24 05:57:16.376
  STEP: cluster-wide watching @ 06/18/24 05:57:16.379
  Jun 18 05:57:16.379: INFO: starting watch
  STEP: patching @ 06/18/24 05:57:16.38
  STEP: updating @ 06/18/24 05:57:16.385
  Jun 18 05:57:16.393: INFO: waiting for watch events with expected annotations
  Jun 18 05:57:16.394: INFO: saw patched and updated annotations
  STEP: deleting @ 06/18/24 05:57:16.394
  STEP: deleting a collection @ 06/18/24 05:57:16.404
  Jun 18 05:57:16.417: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6987" for this suite. @ 06/18/24 05:57:16.422
• [0.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 06/18/24 05:57:16.429
  Jun 18 05:57:16.429: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename webhook @ 06/18/24 05:57:16.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:57:16.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:57:16.445
  STEP: Setting up server cert @ 06/18/24 05:57:16.465
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 05:57:16.74
  STEP: Deploying the webhook pod @ 06/18/24 05:57:16.745
  STEP: Wait for the deployment to be ready @ 06/18/24 05:57:16.758
  Jun 18 05:57:16.765: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/18/24 05:57:18.773
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 05:57:18.789
  Jun 18 05:57:19.790: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun 18 05:57:19.798: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 06/18/24 05:57:20.313
  STEP: Creating a custom resource that should be denied by the webhook @ 06/18/24 05:57:20.333
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 06/18/24 05:57:22.361
  STEP: Updating the custom resource with disallowed data should be denied @ 06/18/24 05:57:22.369
  STEP: Deleting the custom resource should be denied @ 06/18/24 05:57:22.376
  STEP: Remove the offending key and value from the custom resource data @ 06/18/24 05:57:22.384
  STEP: Deleting the updated custom resource should be successful @ 06/18/24 05:57:22.392
  Jun 18 05:57:22.399: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-75" for this suite. @ 06/18/24 05:57:22.96
  STEP: Destroying namespace "webhook-markers-8436" for this suite. @ 06/18/24 05:57:22.966
• [6.542 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:187
  STEP: Creating a kubernetes client @ 06/18/24 05:57:22.972
  Jun 18 05:57:22.972: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename emptydir @ 06/18/24 05:57:22.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:57:22.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:57:22.992
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 06/18/24 05:57:22.995
  STEP: Saw pod success @ 06/18/24 05:57:27.012
  Jun 18 05:57:27.016: INFO: Trying to get logs from node ck-128-worker-1 pod pod-406553c5-4a28-494e-bd1c-806bd4741b05 container test-container: <nil>
  STEP: delete the pod @ 06/18/24 05:57:27.028
  Jun 18 05:57:27.042: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7921" for this suite. @ 06/18/24 05:57:27.048
• [4.081 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 06/18/24 05:57:27.053
  Jun 18 05:57:27.053: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename projected @ 06/18/24 05:57:27.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:57:27.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:57:27.077
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 05:57:27.08
  STEP: Saw pod success @ 06/18/24 05:57:31.1
  Jun 18 05:57:31.104: INFO: Trying to get logs from node ck-128-worker-2 pod downwardapi-volume-c3076f3e-fa29-42b2-bcbf-b804d7ff9b92 container client-container: <nil>
  STEP: delete the pod @ 06/18/24 05:57:31.123
  Jun 18 05:57:31.137: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2104" for this suite. @ 06/18/24 05:57:31.142
• [4.095 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 06/18/24 05:57:31.149
  Jun 18 05:57:31.149: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename pods @ 06/18/24 05:57:31.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:57:31.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:57:31.171
  STEP: creating the pod @ 06/18/24 05:57:31.174
  STEP: submitting the pod to kubernetes @ 06/18/24 05:57:31.174
  STEP: verifying the pod is in kubernetes @ 06/18/24 05:57:33.192
  STEP: updating the pod @ 06/18/24 05:57:33.194
  Jun 18 05:57:33.710: INFO: Successfully updated pod "pod-update-7b21e512-0551-4428-a0bf-a9fb560dd9ac"
  STEP: verifying the updated pod is in kubernetes @ 06/18/24 05:57:33.714
  Jun 18 05:57:33.718: INFO: Pod update OK
  Jun 18 05:57:33.718: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6979" for this suite. @ 06/18/24 05:57:33.728
• [2.586 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 06/18/24 05:57:33.741
  Jun 18 05:57:33.741: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename taint-multiple-pods @ 06/18/24 05:57:33.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:57:33.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:57:33.76
  Jun 18 05:57:33.763: INFO: Waiting up to 1m0s for all nodes to be ready
  Jun 18 05:58:33.795: INFO: Waiting for terminating namespaces to be deleted...
  Jun 18 05:58:33.799: INFO: Starting informer...
  STEP: Starting pods... @ 06/18/24 05:58:33.799
  Jun 18 05:58:34.017: INFO: Pod1 is running on ck-128-worker-2. Tainting Node
  Jun 18 05:58:36.243: INFO: Pod2 is running on ck-128-worker-2. Tainting Node
  STEP: Trying to apply a taint on the Node @ 06/18/24 05:58:36.243
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/18/24 05:58:36.259
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 06/18/24 05:58:36.265
  Jun 18 05:58:42.456: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  Jun 18 05:59:02.520: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  Jun 18 05:59:02.521: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/18/24 05:59:02.543
  STEP: Destroying namespace "taint-multiple-pods-4208" for this suite. @ 06/18/24 05:59:02.549
• [88.814 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2187
  STEP: Creating a kubernetes client @ 06/18/24 05:59:02.563
  Jun 18 05:59:02.563: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename services @ 06/18/24 05:59:02.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:59:02.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:59:02.599
  STEP: creating service in namespace services-5256 @ 06/18/24 05:59:02.604
  STEP: creating service affinity-clusterip-transition in namespace services-5256 @ 06/18/24 05:59:02.605
  STEP: creating replication controller affinity-clusterip-transition in namespace services-5256 @ 06/18/24 05:59:02.619
  I0618 05:59:02.626080      18 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-5256, replica count: 3
  I0618 05:59:05.677907      18 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 18 05:59:05.683: INFO: Creating new exec pod
  Jun 18 05:59:08.695: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-5256 exec execpod-affinity9lvvx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Jun 18 05:59:08.860: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Jun 18 05:59:08.860: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 05:59:08.860: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-5256 exec execpod-affinity9lvvx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.110.167.1 80'
  Jun 18 05:59:08.968: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.110.167.1 80\nConnection to 10.110.167.1 80 port [tcp/http] succeeded!\n"
  Jun 18 05:59:08.968: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 05:59:08.976: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-5256 exec execpod-affinity9lvvx -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.110.167.1:80/ ; done'
  Jun 18 05:59:09.193: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.167.1:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.167.1:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.167.1:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.167.1:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.167.1:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.167.1:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.167.1:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.167.1:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.167.1:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.167.1:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.167.1:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.167.1:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.167.1:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.167.1:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.167.1:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.167.1:80/\n"
  Jun 18 05:59:09.193: INFO: stdout: "\naffinity-clusterip-transition-pkxkz\naffinity-clusterip-transition-z2fpx\naffinity-clusterip-transition-z2fpx\naffinity-clusterip-transition-pkxkz\naffinity-clusterip-transition-z2fpx\naffinity-clusterip-transition-pkxkz\naffinity-clusterip-transition-pkxkz\naffinity-clusterip-transition-rgzkp\naffinity-clusterip-transition-z2fpx\naffinity-clusterip-transition-rgzkp\naffinity-clusterip-transition-pkxkz\naffinity-clusterip-transition-pkxkz\naffinity-clusterip-transition-z2fpx\naffinity-clusterip-transition-rgzkp\naffinity-clusterip-transition-z2fpx\naffinity-clusterip-transition-rgzkp"
  Jun 18 05:59:09.193: INFO: Received response from host: affinity-clusterip-transition-pkxkz
  Jun 18 05:59:09.193: INFO: Received response from host: affinity-clusterip-transition-z2fpx
  Jun 18 05:59:09.193: INFO: Received response from host: affinity-clusterip-transition-z2fpx
  Jun 18 05:59:09.193: INFO: Received response from host: affinity-clusterip-transition-pkxkz
  Jun 18 05:59:09.193: INFO: Received response from host: affinity-clusterip-transition-z2fpx
  Jun 18 05:59:09.193: INFO: Received response from host: affinity-clusterip-transition-pkxkz
  Jun 18 05:59:09.193: INFO: Received response from host: affinity-clusterip-transition-pkxkz
  Jun 18 05:59:09.193: INFO: Received response from host: affinity-clusterip-transition-rgzkp
  Jun 18 05:59:09.193: INFO: Received response from host: affinity-clusterip-transition-z2fpx
  Jun 18 05:59:09.193: INFO: Received response from host: affinity-clusterip-transition-rgzkp
  Jun 18 05:59:09.193: INFO: Received response from host: affinity-clusterip-transition-pkxkz
  Jun 18 05:59:09.193: INFO: Received response from host: affinity-clusterip-transition-pkxkz
  Jun 18 05:59:09.193: INFO: Received response from host: affinity-clusterip-transition-z2fpx
  Jun 18 05:59:09.193: INFO: Received response from host: affinity-clusterip-transition-rgzkp
  Jun 18 05:59:09.193: INFO: Received response from host: affinity-clusterip-transition-z2fpx
  Jun 18 05:59:09.193: INFO: Received response from host: affinity-clusterip-transition-rgzkp
  Jun 18 05:59:09.201: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-5256 exec execpod-affinity9lvvx -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.110.167.1:80/ ; done'
  Jun 18 05:59:09.408: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.167.1:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.167.1:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.167.1:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.167.1:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.167.1:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.167.1:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.167.1:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.167.1:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.167.1:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.167.1:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.167.1:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.167.1:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.167.1:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.167.1:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.167.1:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.167.1:80/\n"
  Jun 18 05:59:09.408: INFO: stdout: "\naffinity-clusterip-transition-rgzkp\naffinity-clusterip-transition-rgzkp\naffinity-clusterip-transition-rgzkp\naffinity-clusterip-transition-rgzkp\naffinity-clusterip-transition-rgzkp\naffinity-clusterip-transition-rgzkp\naffinity-clusterip-transition-rgzkp\naffinity-clusterip-transition-rgzkp\naffinity-clusterip-transition-rgzkp\naffinity-clusterip-transition-rgzkp\naffinity-clusterip-transition-rgzkp\naffinity-clusterip-transition-rgzkp\naffinity-clusterip-transition-rgzkp\naffinity-clusterip-transition-rgzkp\naffinity-clusterip-transition-rgzkp\naffinity-clusterip-transition-rgzkp"
  Jun 18 05:59:09.408: INFO: Received response from host: affinity-clusterip-transition-rgzkp
  Jun 18 05:59:09.408: INFO: Received response from host: affinity-clusterip-transition-rgzkp
  Jun 18 05:59:09.408: INFO: Received response from host: affinity-clusterip-transition-rgzkp
  Jun 18 05:59:09.408: INFO: Received response from host: affinity-clusterip-transition-rgzkp
  Jun 18 05:59:09.408: INFO: Received response from host: affinity-clusterip-transition-rgzkp
  Jun 18 05:59:09.408: INFO: Received response from host: affinity-clusterip-transition-rgzkp
  Jun 18 05:59:09.408: INFO: Received response from host: affinity-clusterip-transition-rgzkp
  Jun 18 05:59:09.408: INFO: Received response from host: affinity-clusterip-transition-rgzkp
  Jun 18 05:59:09.408: INFO: Received response from host: affinity-clusterip-transition-rgzkp
  Jun 18 05:59:09.408: INFO: Received response from host: affinity-clusterip-transition-rgzkp
  Jun 18 05:59:09.408: INFO: Received response from host: affinity-clusterip-transition-rgzkp
  Jun 18 05:59:09.408: INFO: Received response from host: affinity-clusterip-transition-rgzkp
  Jun 18 05:59:09.408: INFO: Received response from host: affinity-clusterip-transition-rgzkp
  Jun 18 05:59:09.409: INFO: Received response from host: affinity-clusterip-transition-rgzkp
  Jun 18 05:59:09.409: INFO: Received response from host: affinity-clusterip-transition-rgzkp
  Jun 18 05:59:09.409: INFO: Received response from host: affinity-clusterip-transition-rgzkp
  Jun 18 05:59:09.409: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Jun 18 05:59:09.414: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-5256, will wait for the garbage collector to delete the pods @ 06/18/24 05:59:09.426
  Jun 18 05:59:09.488: INFO: Deleting ReplicationController affinity-clusterip-transition took: 8.424882ms
  Jun 18 05:59:09.589: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.457425ms
  STEP: Destroying namespace "services-5256" for this suite. @ 06/18/24 05:59:12.613
• [10.056 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 06/18/24 05:59:12.62
  Jun 18 05:59:12.620: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename cronjob @ 06/18/24 05:59:12.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 05:59:12.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 05:59:12.635
  STEP: Creating a ForbidConcurrent cronjob @ 06/18/24 05:59:12.637
  STEP: Ensuring a job is scheduled @ 06/18/24 05:59:12.643
  STEP: Ensuring exactly one is scheduled @ 06/18/24 06:00:00.646
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 06/18/24 06:00:00.652
  STEP: Ensuring no more jobs are scheduled @ 06/18/24 06:00:00.655
  STEP: Removing cronjob @ 06/18/24 06:05:00.663
  Jun 18 06:05:00.669: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8264" for this suite. @ 06/18/24 06:05:00.674
• [348.059 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:347
  STEP: Creating a kubernetes client @ 06/18/24 06:05:00.681
  Jun 18 06:05:00.681: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename security-context-test @ 06/18/24 06:05:00.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:05:00.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:05:00.722
  Jun 18 06:05:04.746: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2290" for this suite. @ 06/18/24 06:05:04.751
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 06/18/24 06:05:04.761
  Jun 18 06:05:04.761: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename pods @ 06/18/24 06:05:04.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:05:04.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:05:04.779
  STEP: Create set of pods @ 06/18/24 06:05:04.783
  Jun 18 06:05:04.791: INFO: created test-pod-1
  Jun 18 06:05:04.797: INFO: created test-pod-2
  Jun 18 06:05:04.808: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 06/18/24 06:05:04.808
  STEP: waiting for all pods to be deleted @ 06/18/24 06:05:06.853
  Jun 18 06:05:06.856: INFO: Pod quantity 3 is different from expected quantity 0
  Jun 18 06:05:07.861: INFO: Pod quantity 3 is different from expected quantity 0
  Jun 18 06:05:08.863: INFO: Pod quantity 3 is different from expected quantity 0
  Jun 18 06:05:09.862: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7012" for this suite. @ 06/18/24 06:05:09.868
• [5.115 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 06/18/24 06:05:09.877
  Jun 18 06:05:09.877: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename container-probe @ 06/18/24 06:05:09.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:05:09.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:05:09.896
  STEP: Creating pod liveness-d3df3756-ba8e-4d52-8992-8c78030392fb in namespace container-probe-8017 @ 06/18/24 06:05:09.901
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/18/24 06:05:11.918
  Jun 18 06:05:11.921: INFO: Initial restart count of pod liveness-d3df3756-ba8e-4d52-8992-8c78030392fb is 0
  Jun 18 06:05:11.923: INFO: Get pod liveness-d3df3756-ba8e-4d52-8992-8c78030392fb in namespace container-probe-8017
  Jun 18 06:05:13.928: INFO: Get pod liveness-d3df3756-ba8e-4d52-8992-8c78030392fb in namespace container-probe-8017
  Jun 18 06:05:15.932: INFO: Get pod liveness-d3df3756-ba8e-4d52-8992-8c78030392fb in namespace container-probe-8017
  Jun 18 06:05:17.940: INFO: Get pod liveness-d3df3756-ba8e-4d52-8992-8c78030392fb in namespace container-probe-8017
  Jun 18 06:05:19.947: INFO: Get pod liveness-d3df3756-ba8e-4d52-8992-8c78030392fb in namespace container-probe-8017
  Jun 18 06:05:21.953: INFO: Get pod liveness-d3df3756-ba8e-4d52-8992-8c78030392fb in namespace container-probe-8017
  Jun 18 06:05:23.958: INFO: Get pod liveness-d3df3756-ba8e-4d52-8992-8c78030392fb in namespace container-probe-8017
  Jun 18 06:05:25.963: INFO: Get pod liveness-d3df3756-ba8e-4d52-8992-8c78030392fb in namespace container-probe-8017
  Jun 18 06:05:27.968: INFO: Get pod liveness-d3df3756-ba8e-4d52-8992-8c78030392fb in namespace container-probe-8017
  Jun 18 06:05:29.972: INFO: Get pod liveness-d3df3756-ba8e-4d52-8992-8c78030392fb in namespace container-probe-8017
  Jun 18 06:05:31.984: INFO: Get pod liveness-d3df3756-ba8e-4d52-8992-8c78030392fb in namespace container-probe-8017
  Jun 18 06:05:31.984: INFO: Restart count of pod container-probe-8017/liveness-d3df3756-ba8e-4d52-8992-8c78030392fb is now 1 (20.063567163s elapsed)
  Jun 18 06:05:31.984: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 06/18/24 06:05:31.99
  STEP: Destroying namespace "container-probe-8017" for this suite. @ 06/18/24 06:05:32.003
• [22.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 06/18/24 06:05:32.011
  Jun 18 06:05:32.011: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename hostport @ 06/18/24 06:05:32.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:05:32.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:05:32.033
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 06/18/24 06:05:32.041
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.190.166 on the node which pod1 resides and expect scheduled @ 06/18/24 06:05:34.058
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.190.166 but use UDP protocol on the node which pod2 resides @ 06/18/24 06:05:38.076
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 06/18/24 06:05:42.109
  Jun 18 06:05:42.109: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.190.166 http://127.0.0.1:54323/hostname] Namespace:hostport-7012 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 06:05:42.109: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 06:05:42.110: INFO: ExecWithOptions: Clientset creation
  Jun 18 06:05:42.110: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-7012/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.190.166+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.190.166, port: 54323 @ 06/18/24 06:05:42.18
  Jun 18 06:05:42.180: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.190.166:54323/hostname] Namespace:hostport-7012 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 06:05:42.180: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 06:05:42.182: INFO: ExecWithOptions: Clientset creation
  Jun 18 06:05:42.182: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-7012/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.190.166%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.190.166, port: 54323 UDP @ 06/18/24 06:05:42.234
  Jun 18 06:05:42.234: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.190.166 54323] Namespace:hostport-7012 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 06:05:42.234: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 06:05:42.235: INFO: ExecWithOptions: Clientset creation
  Jun 18 06:05:42.236: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-7012/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.190.166+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  Jun 18 06:05:47.280: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-7012" for this suite. @ 06/18/24 06:05:47.286
• [15.280 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 06/18/24 06:05:47.293
  Jun 18 06:05:47.293: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename deployment @ 06/18/24 06:05:47.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:05:47.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:05:47.314
  Jun 18 06:05:47.318: INFO: Creating simple deployment test-new-deployment
  Jun 18 06:05:47.330: INFO: new replicaset for deployment "test-new-deployment" is yet to be created
  STEP: getting scale subresource @ 06/18/24 06:05:49.344
  STEP: updating a scale subresource @ 06/18/24 06:05:49.347
  STEP: verifying the deployment Spec.Replicas was modified @ 06/18/24 06:05:49.356
  STEP: Patch a scale subresource @ 06/18/24 06:05:49.359
  Jun 18 06:05:49.377: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2245",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "37805a91-be11-4d52-8455-3da040caf274",
      ResourceVersion: (string) (len=5) "12953",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854287547,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854287547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854287549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854287549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854287549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854287549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854287547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 18 06:05:49.386: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2245",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "99ac2341-59fd-4e9d-bae9-f16590014056",
      ResourceVersion: (string) (len=5) "12957",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854287547,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "37805a91-be11-4d52-8455-3da040caf274",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854287549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 37 38 30 35 61  39 31 2d 62 65 31 31 2d  |\"37805a91-be11-|
              00000120  34 64 35 32 2d 38 34 35  35 2d 33 64 61 30 34 30  |4d52-8455-3da040|
              00000130  63 61 66 32 37 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |caf274\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854287549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 18 06:05:49.394: INFO: Pod "test-new-deployment-557759b7c7-9w2fp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-9w2fp",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2245",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fdf56578-c0db-4312-a73d-2e2f4fb6e2b8",
      ResourceVersion: (string) (len=5) "12958",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854287549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "99ac2341-59fd-4e9d-bae9-f16590014056",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854287549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  61 63 32 33 34 31 2d 35  |d\":\"99ac2341-5|
              00000090  39 66 64 2d 34 65 39 64  2d 62 61 65 39 2d 66 31  |9fd-4e9d-bae9-f1|
              000000a0  36 35 39 30 30 31 34 30  35 36 5c 22 7d 22 3a 7b  |6590014056\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zhz49",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zhz49",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854287549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:05:49.396: INFO: Pod "test-new-deployment-557759b7c7-nhdgs" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-nhdgs",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2245",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c954f836-8425-4ad7-8346-9af95cd6d68f",
      ResourceVersion: (string) (len=5) "12947",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854287547,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "730c8e1e184390b123221c556d569cb97c8a05700ff67022ee68236dfdfc7de8",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.17.152.53/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.17.152.53/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "99ac2341-59fd-4e9d-bae9-f16590014056",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854287547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854287547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  61 63 32 33 34 31 2d 35  |d\":\"99ac2341-5|
              00000090  39 66 64 2d 34 65 39 64  2d 62 61 65 39 2d 66 31  |9fd-4e9d-bae9-f1|
              000000a0  36 35 39 30 30 31 34 30  35 36 5c 22 7d 22 3a 7b  |6590014056\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854287549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 31 37 2e 31  35 32 2e 35 33 5c 22 7d  |172.17.152.53\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rnq8z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rnq8z",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854287547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854287548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854287548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854287547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "172.17.152.53",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.17.152.53"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854287547,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854287548,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://6ac92a96516de20a98bbf3909c12ef99138a30768826beaca448e5966658b5da",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:05:49.399: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2245" for this suite. @ 06/18/24 06:05:49.412
• [2.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 06/18/24 06:05:49.435
  Jun 18 06:05:49.435: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename configmap @ 06/18/24 06:05:49.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:05:49.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:05:49.457
  STEP: Creating configMap with name configmap-test-volume-e58c214b-8290-448a-9b75-9eb5df91039b @ 06/18/24 06:05:49.459
  STEP: Creating a pod to test consume configMaps @ 06/18/24 06:05:49.464
  STEP: Saw pod success @ 06/18/24 06:05:53.486
  Jun 18 06:05:53.489: INFO: Trying to get logs from node ck-128-worker-1 pod pod-configmaps-49359044-bd98-4ac2-8ff6-4483b047de8a container agnhost-container: <nil>
  STEP: delete the pod @ 06/18/24 06:05:53.518
  Jun 18 06:05:53.537: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9597" for this suite. @ 06/18/24 06:05:53.547
• [4.118 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:127
  STEP: Creating a kubernetes client @ 06/18/24 06:05:53.555
  Jun 18 06:05:53.555: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename emptydir @ 06/18/24 06:05:53.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:05:53.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:05:53.572
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 06/18/24 06:05:53.576
  STEP: Saw pod success @ 06/18/24 06:05:57.597
  Jun 18 06:05:57.600: INFO: Trying to get logs from node ck-128-worker-1 pod pod-8c1c556f-c764-42c7-862f-fe5343f075b3 container test-container: <nil>
  STEP: delete the pod @ 06/18/24 06:05:57.608
  Jun 18 06:05:57.623: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5289" for this suite. @ 06/18/24 06:05:57.629
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 06/18/24 06:05:57.641
  Jun 18 06:05:57.641: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename disruption @ 06/18/24 06:05:57.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:05:57.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:05:57.661
  STEP: Creating a kubernetes client @ 06/18/24 06:05:57.664
  Jun 18 06:05:57.664: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename disruption-2 @ 06/18/24 06:05:57.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:05:57.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:05:57.681
  STEP: Waiting for the pdb to be processed @ 06/18/24 06:05:57.687
  STEP: Waiting for the pdb to be processed @ 06/18/24 06:05:59.703
  STEP: Waiting for the pdb to be processed @ 06/18/24 06:06:01.714
  STEP: listing a collection of PDBs across all namespaces @ 06/18/24 06:06:01.719
  STEP: listing a collection of PDBs in namespace disruption-4747 @ 06/18/24 06:06:01.721
  STEP: deleting a collection of PDBs @ 06/18/24 06:06:01.725
  STEP: Waiting for the PDB collection to be deleted @ 06/18/24 06:06:01.732
  Jun 18 06:06:01.734: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Jun 18 06:06:01.738: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-1428" for this suite. @ 06/18/24 06:06:01.742
  STEP: Destroying namespace "disruption-4747" for this suite. @ 06/18/24 06:06:01.75
• [4.114 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 06/18/24 06:06:01.756
  Jun 18 06:06:01.756: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename webhook @ 06/18/24 06:06:01.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:06:01.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:06:01.771
  STEP: Setting up server cert @ 06/18/24 06:06:01.793
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 06:06:03.197
  STEP: Deploying the webhook pod @ 06/18/24 06:06:03.205
  STEP: Wait for the deployment to be ready @ 06/18/24 06:06:03.216
  Jun 18 06:06:03.226: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/18/24 06:06:05.237
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 06:06:05.257
  Jun 18 06:06:06.258: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 06/18/24 06:06:06.264
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/18/24 06:06:06.264
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 06/18/24 06:06:06.285
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 06/18/24 06:06:07.297
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/18/24 06:06:07.297
  STEP: Having no error when timeout is longer than webhook latency @ 06/18/24 06:06:08.329
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/18/24 06:06:08.329
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 06/18/24 06:06:13.36
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/18/24 06:06:13.36
  Jun 18 06:06:18.391: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4784" for this suite. @ 06/18/24 06:06:18.455
  STEP: Destroying namespace "webhook-markers-2208" for this suite. @ 06/18/24 06:06:18.46
• [16.709 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 06/18/24 06:06:18.472
  Jun 18 06:06:18.472: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename field-validation @ 06/18/24 06:06:18.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:06:18.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:06:18.491
  Jun 18 06:06:18.495: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  W0618 06:06:21.059475      18 warnings.go:70] unknown field "alpha"
  W0618 06:06:21.059512      18 warnings.go:70] unknown field "beta"
  W0618 06:06:21.059519      18 warnings.go:70] unknown field "delta"
  W0618 06:06:21.059525      18 warnings.go:70] unknown field "epsilon"
  W0618 06:06:21.059531      18 warnings.go:70] unknown field "gamma"
  Jun 18 06:06:21.585: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5375" for this suite. @ 06/18/24 06:06:21.6
• [3.133 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 06/18/24 06:06:21.606
  Jun 18 06:06:21.606: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename webhook @ 06/18/24 06:06:21.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:06:21.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:06:21.629
  STEP: Setting up server cert @ 06/18/24 06:06:21.646
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 06:06:22.437
  STEP: Deploying the webhook pod @ 06/18/24 06:06:22.441
  STEP: Wait for the deployment to be ready @ 06/18/24 06:06:22.451
  Jun 18 06:06:22.456: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 06/18/24 06:06:24.471
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 06:06:24.482
  Jun 18 06:06:25.482: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 06/18/24 06:06:25.489
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 06/18/24 06:06:25.491
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 06/18/24 06:06:25.491
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 06/18/24 06:06:25.491
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 06/18/24 06:06:25.492
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 06/18/24 06:06:25.492
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 06/18/24 06:06:25.493
  Jun 18 06:06:25.494: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8236" for this suite. @ 06/18/24 06:06:25.528
  STEP: Destroying namespace "webhook-markers-4127" for this suite. @ 06/18/24 06:06:25.539
• [3.939 seconds]
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:161
  STEP: Creating a kubernetes client @ 06/18/24 06:06:25.546
  Jun 18 06:06:25.546: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename svcaccounts @ 06/18/24 06:06:25.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:06:25.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:06:25.561
  Jun 18 06:06:25.577: INFO: created pod pod-service-account-defaultsa
  Jun 18 06:06:25.577: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Jun 18 06:06:25.582: INFO: created pod pod-service-account-mountsa
  Jun 18 06:06:25.582: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Jun 18 06:06:25.593: INFO: created pod pod-service-account-nomountsa
  Jun 18 06:06:25.593: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Jun 18 06:06:25.602: INFO: created pod pod-service-account-defaultsa-mountspec
  Jun 18 06:06:25.602: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Jun 18 06:06:25.610: INFO: created pod pod-service-account-mountsa-mountspec
  Jun 18 06:06:25.610: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Jun 18 06:06:25.619: INFO: created pod pod-service-account-nomountsa-mountspec
  Jun 18 06:06:25.619: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Jun 18 06:06:25.624: INFO: created pod pod-service-account-defaultsa-nomountspec
  Jun 18 06:06:25.624: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Jun 18 06:06:25.637: INFO: created pod pod-service-account-mountsa-nomountspec
  Jun 18 06:06:25.637: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Jun 18 06:06:25.647: INFO: created pod pod-service-account-nomountsa-nomountspec
  Jun 18 06:06:25.647: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Jun 18 06:06:25.647: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5447" for this suite. @ 06/18/24 06:06:25.652
• [0.113 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 06/18/24 06:06:25.659
  Jun 18 06:06:25.659: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename init-container @ 06/18/24 06:06:25.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:06:25.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:06:25.676
  STEP: creating the pod @ 06/18/24 06:06:25.68
  Jun 18 06:06:25.680: INFO: PodSpec: initContainers in spec.initContainers
  Jun 18 06:06:29.139: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5790" for this suite. @ 06/18/24 06:06:29.144
• [3.492 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 06/18/24 06:06:29.15
  Jun 18 06:06:29.150: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename downward-api @ 06/18/24 06:06:29.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:06:29.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:06:29.168
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 06:06:29.172
  STEP: Saw pod success @ 06/18/24 06:06:33.194
  Jun 18 06:06:33.197: INFO: Trying to get logs from node ck-128-worker-3 pod downwardapi-volume-c61618bb-e793-4f53-8ed2-4598c835c8f8 container client-container: <nil>
  STEP: delete the pod @ 06/18/24 06:06:33.204
  Jun 18 06:06:33.215: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6391" for this suite. @ 06/18/24 06:06:33.219
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 06/18/24 06:06:33.224
  Jun 18 06:06:33.224: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename pods @ 06/18/24 06:06:33.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:06:33.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:06:33.239
  STEP: creating a Pod with a static label @ 06/18/24 06:06:33.247
  STEP: watching for Pod to be ready @ 06/18/24 06:06:33.254
  Jun 18 06:06:33.256: INFO: observed Pod pod-test in namespace pods-176 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Jun 18 06:06:33.259: INFO: observed Pod pod-test in namespace pods-176 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 06:06:33 +0000 UTC  }]
  Jun 18 06:06:33.269: INFO: observed Pod pod-test in namespace pods-176 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 06:06:33 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-18 06:06:33 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-18 06:06:33 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 06:06:33 +0000 UTC  }]
  Jun 18 06:06:33.768: INFO: observed Pod pod-test in namespace pods-176 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 06:06:33 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-18 06:06:33 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-18 06:06:33 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 06:06:33 +0000 UTC  }]
  Jun 18 06:06:34.763: INFO: Found Pod pod-test in namespace pods-176 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 06:06:33 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 06:06:34 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 06:06:34 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 06:06:33 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 06/18/24 06:06:34.766
  STEP: getting the Pod and ensuring that it's patched @ 06/18/24 06:06:34.777
  STEP: replacing the Pod's status Ready condition to False @ 06/18/24 06:06:34.78
  STEP: check the Pod again to ensure its Ready conditions are False @ 06/18/24 06:06:34.794
  STEP: deleting the Pod via a Collection with a LabelSelector @ 06/18/24 06:06:34.794
  STEP: watching for the Pod to be deleted @ 06/18/24 06:06:34.8
  Jun 18 06:06:34.803: INFO: observed event type MODIFIED
  Jun 18 06:06:36.768: INFO: observed event type MODIFIED
  Jun 18 06:06:36.858: INFO: observed event type MODIFIED
  Jun 18 06:06:37.004: INFO: observed event type MODIFIED
  Jun 18 06:06:37.773: INFO: observed event type MODIFIED
  Jun 18 06:06:37.781: INFO: observed event type MODIFIED
  Jun 18 06:06:37.787: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-176" for this suite. @ 06/18/24 06:06:37.794
• [4.576 seconds]
------------------------------
[sig-node] Secrets should patch a secret [Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:154
  STEP: Creating a kubernetes client @ 06/18/24 06:06:37.8
  Jun 18 06:06:37.800: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename secrets @ 06/18/24 06:06:37.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:06:37.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:06:37.817
  STEP: creating a secret @ 06/18/24 06:06:37.82
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 06/18/24 06:06:37.822
  STEP: patching the secret @ 06/18/24 06:06:37.826
  STEP: deleting the secret using a LabelSelector @ 06/18/24 06:06:37.833
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 06/18/24 06:06:37.837
  Jun 18 06:06:37.841: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5670" for this suite. @ 06/18/24 06:06:37.845
• [0.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:529
  STEP: Creating a kubernetes client @ 06/18/24 06:06:37.859
  Jun 18 06:06:37.859: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename svcaccounts @ 06/18/24 06:06:37.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:06:37.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:06:37.876
  Jun 18 06:06:37.888: INFO: created pod
  STEP: Saw pod success @ 06/18/24 06:06:41.901
  Jun 18 06:07:11.901: INFO: polling logs
  Jun 18 06:07:11.910: INFO: Pod logs: 
  I0618 06:06:38.496475       1 log.go:245] OK: Got token
  I0618 06:06:38.496540       1 log.go:245] validating with in-cluster discovery
  I0618 06:06:38.496983       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0618 06:06:38.497013       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-6899:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000325990), NotBefore:(*jwt.NumericDate)(0xc000325a78), IssuedAt:(*jwt.NumericDate)(0xc0003259a0), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6899", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"a39260b1-00cd-4906-83c6-961b0afac3aa"}}}
  I0618 06:06:38.510321       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0618 06:06:38.518406       1 log.go:245] OK: Validated signature on JWT
  I0618 06:06:38.518637       1 log.go:245] OK: Got valid claims from token!
  I0618 06:06:38.518739       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-6899:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000012d28), NotBefore:(*jwt.NumericDate)(0xc000012d50), IssuedAt:(*jwt.NumericDate)(0xc000012d30), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6899", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"a39260b1-00cd-4906-83c6-961b0afac3aa"}}}

  Jun 18 06:07:11.910: INFO: completed pod
  Jun 18 06:07:11.915: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6899" for this suite. @ 06/18/24 06:07:11.921
• [34.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 06/18/24 06:07:11.93
  Jun 18 06:07:11.930: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename secrets @ 06/18/24 06:07:11.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:07:11.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:07:11.949
  STEP: Creating secret with name secret-test-map-2d050ee3-20a9-4d9b-a667-b800b84eca2d @ 06/18/24 06:07:11.953
  STEP: Creating a pod to test consume secrets @ 06/18/24 06:07:11.957
  STEP: Saw pod success @ 06/18/24 06:07:15.98
  Jun 18 06:07:15.983: INFO: Trying to get logs from node ck-128-worker-1 pod pod-secrets-bb7435ec-7946-4a27-8169-9a5fe61fb38b container secret-volume-test: <nil>
  STEP: delete the pod @ 06/18/24 06:07:15.989
  Jun 18 06:07:16.003: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4859" for this suite. @ 06/18/24 06:07:16.007
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 06/18/24 06:07:16.022
  Jun 18 06:07:16.022: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename projected @ 06/18/24 06:07:16.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:07:16.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:07:16.039
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-8736b346-2b6c-4c53-b439-6503f5249dc3 @ 06/18/24 06:07:16.046
  STEP: Creating the pod @ 06/18/24 06:07:16.05
  STEP: Updating configmap projected-configmap-test-upd-8736b346-2b6c-4c53-b439-6503f5249dc3 @ 06/18/24 06:07:18.074
  STEP: waiting to observe update in volume @ 06/18/24 06:07:18.078
  Jun 18 06:07:20.092: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-243" for this suite. @ 06/18/24 06:07:20.099
• [4.083 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 06/18/24 06:07:20.105
  Jun 18 06:07:20.105: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename container-probe @ 06/18/24 06:07:20.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:07:20.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:07:20.125
  Jun 18 06:07:42.208: INFO: Container started at 2024-06-18 06:07:20 +0000 UTC, pod became ready at 2024-06-18 06:07:40 +0000 UTC
  Jun 18 06:07:42.209: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-619" for this suite. @ 06/18/24 06:07:42.215
• [22.117 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 06/18/24 06:07:42.223
  Jun 18 06:07:42.223: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename var-expansion @ 06/18/24 06:07:42.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:07:42.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:07:42.241
  STEP: creating the pod with failed condition @ 06/18/24 06:07:42.244
  STEP: updating the pod @ 06/18/24 06:09:42.252
  Jun 18 06:09:42.766: INFO: Successfully updated pod "var-expansion-866de6b9-92ea-4dbc-afc1-a980f60d1f03"
  STEP: waiting for pod running @ 06/18/24 06:09:42.766
  STEP: deleting the pod gracefully @ 06/18/24 06:09:44.776
  Jun 18 06:09:44.776: INFO: Deleting pod "var-expansion-866de6b9-92ea-4dbc-afc1-a980f60d1f03" in namespace "var-expansion-8850"
  Jun 18 06:09:44.782: INFO: Wait up to 5m0s for pod "var-expansion-866de6b9-92ea-4dbc-afc1-a980f60d1f03" to be fully deleted
  Jun 18 06:10:16.872: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8850" for this suite. @ 06/18/24 06:10:16.879
• [154.663 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 06/18/24 06:10:16.887
  Jun 18 06:10:16.888: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename downward-api @ 06/18/24 06:10:16.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:10:16.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:10:16.911
  STEP: Creating the pod @ 06/18/24 06:10:16.915
  Jun 18 06:10:19.468: INFO: Successfully updated pod "labelsupdate1e5040d3-9c92-45b7-9a25-28ba8170e315"
  Jun 18 06:10:23.496: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3717" for this suite. @ 06/18/24 06:10:23.502
• [6.622 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 06/18/24 06:10:23.512
  Jun 18 06:10:23.512: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename webhook @ 06/18/24 06:10:23.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:10:23.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:10:23.531
  STEP: Setting up server cert @ 06/18/24 06:10:23.554
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 06:10:23.939
  STEP: Deploying the webhook pod @ 06/18/24 06:10:23.948
  STEP: Wait for the deployment to be ready @ 06/18/24 06:10:23.96
  Jun 18 06:10:23.966: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 06/18/24 06:10:25.978
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 06:10:25.992
  Jun 18 06:10:26.992: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 06/18/24 06:10:27.001
  STEP: create a namespace for the webhook @ 06/18/24 06:10:27.021
  STEP: create a configmap should be unconditionally rejected by the webhook @ 06/18/24 06:10:27.039
  Jun 18 06:10:27.047: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1214" for this suite. @ 06/18/24 06:10:27.099
  STEP: Destroying namespace "webhook-markers-5359" for this suite. @ 06/18/24 06:10:27.107
  STEP: Destroying namespace "fail-closed-namespace-9033" for this suite. @ 06/18/24 06:10:27.113
• [3.606 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 06/18/24 06:10:27.12
  Jun 18 06:10:27.120: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename webhook @ 06/18/24 06:10:27.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:10:27.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:10:27.137
  STEP: Setting up server cert @ 06/18/24 06:10:27.152
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 06:10:28.056
  STEP: Deploying the webhook pod @ 06/18/24 06:10:28.061
  STEP: Wait for the deployment to be ready @ 06/18/24 06:10:28.069
  Jun 18 06:10:28.078: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/18/24 06:10:30.09
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 06:10:30.11
  Jun 18 06:10:31.110: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun 18 06:10:31.118: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5523-crds.webhook.example.com via the AdmissionRegistration API @ 06/18/24 06:10:31.63
  STEP: Creating a custom resource that should be mutated by the webhook @ 06/18/24 06:10:31.65
  Jun 18 06:10:33.691: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1164" for this suite. @ 06/18/24 06:10:34.25
  STEP: Destroying namespace "webhook-markers-6687" for this suite. @ 06/18/24 06:10:34.257
• [7.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:176
  STEP: Creating a kubernetes client @ 06/18/24 06:10:34.266
  Jun 18 06:10:34.266: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename crd-webhook @ 06/18/24 06:10:34.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:10:34.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:10:34.282
  STEP: Setting up server cert @ 06/18/24 06:10:34.285
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 06/18/24 06:10:34.651
  STEP: Deploying the custom resource conversion webhook pod @ 06/18/24 06:10:34.655
  STEP: Wait for the deployment to be ready @ 06/18/24 06:10:34.663
  Jun 18 06:10:34.667: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 06/18/24 06:10:36.681
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 06:10:36.698
  Jun 18 06:10:37.698: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Jun 18 06:10:37.707: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Creating a v1 custom resource @ 06/18/24 06:10:40.299
  STEP: Create a v2 custom resource @ 06/18/24 06:10:40.316
  STEP: List CRs in v1 @ 06/18/24 06:10:40.365
  STEP: List CRs in v2 @ 06/18/24 06:10:40.374
  Jun 18 06:10:40.380: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-7743" for this suite. @ 06/18/24 06:10:40.942
• [6.683 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:468
  STEP: Creating a kubernetes client @ 06/18/24 06:10:40.953
  Jun 18 06:10:40.953: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename sched-pred @ 06/18/24 06:10:40.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:10:40.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:10:40.977
  Jun 18 06:10:40.981: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun 18 06:10:40.989: INFO: Waiting for terminating namespaces to be deleted...
  Jun 18 06:10:40.991: INFO: 
  Logging pods the apiserver thinks is on node ck-128-worker-1 before test
  Jun 18 06:10:40.999: INFO: calico-kube-controllers-8d76c5f9b-r6nmr from kube-system started at 2024-06-18 05:29:18 +0000 UTC (1 container statuses recorded)
  Jun 18 06:10:40.999: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Jun 18 06:10:40.999: INFO: calico-node-g84th from kube-system started at 2024-06-18 05:29:18 +0000 UTC (1 container statuses recorded)
  Jun 18 06:10:40.999: INFO: 	Container calico-node ready: true, restart count 0
  Jun 18 06:10:40.999: INFO: kube-proxy-rm957 from kube-system started at 2024-06-18 05:17:10 +0000 UTC (1 container statuses recorded)
  Jun 18 06:10:40.999: INFO: 	Container kube-proxy ready: true, restart count 0
  Jun 18 06:10:40.999: INFO: secloudit-registry-agent-5skw6 from secloudit started at 2024-06-18 05:25:53 +0000 UTC (1 container statuses recorded)
  Jun 18 06:10:40.999: INFO: 	Container secloudit-registry-agent ready: false, restart count 0
  Jun 18 06:10:40.999: INFO: sonobuoy-systemd-logs-daemon-set-d21185bcb31b4ec9-zbzc8 from sonobuoy started at 2024-06-18 05:35:24 +0000 UTC (2 container statuses recorded)
  Jun 18 06:10:40.999: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 18 06:10:40.999: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 18 06:10:40.999: INFO: 
  Logging pods the apiserver thinks is on node ck-128-worker-2 before test
  Jun 18 06:10:41.007: INFO: calico-node-r67nr from kube-system started at 2024-06-18 05:29:18 +0000 UTC (1 container statuses recorded)
  Jun 18 06:10:41.007: INFO: 	Container calico-node ready: true, restart count 0
  Jun 18 06:10:41.007: INFO: kube-proxy-9s677 from kube-system started at 2024-06-18 05:17:10 +0000 UTC (1 container statuses recorded)
  Jun 18 06:10:41.007: INFO: 	Container kube-proxy ready: true, restart count 0
  Jun 18 06:10:41.007: INFO: secloudit-registry-agent-wx8r2 from secloudit started at 2024-06-18 05:59:02 +0000 UTC (1 container statuses recorded)
  Jun 18 06:10:41.007: INFO: 	Container secloudit-registry-agent ready: false, restart count 0
  Jun 18 06:10:41.007: INFO: sonobuoy from sonobuoy started at 2024-06-18 05:35:23 +0000 UTC (1 container statuses recorded)
  Jun 18 06:10:41.007: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun 18 06:10:41.007: INFO: sonobuoy-systemd-logs-daemon-set-d21185bcb31b4ec9-nnwvq from sonobuoy started at 2024-06-18 05:35:24 +0000 UTC (2 container statuses recorded)
  Jun 18 06:10:41.007: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 18 06:10:41.007: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 18 06:10:41.007: INFO: 
  Logging pods the apiserver thinks is on node ck-128-worker-3 before test
  Jun 18 06:10:41.013: INFO: calico-node-f85nn from kube-system started at 2024-06-18 05:29:18 +0000 UTC (1 container statuses recorded)
  Jun 18 06:10:41.014: INFO: 	Container calico-node ready: true, restart count 0
  Jun 18 06:10:41.014: INFO: kube-proxy-tn5dc from kube-system started at 2024-06-18 05:17:10 +0000 UTC (1 container statuses recorded)
  Jun 18 06:10:41.014: INFO: 	Container kube-proxy ready: true, restart count 0
  Jun 18 06:10:41.014: INFO: secloudit-registry-agent-vh54z from secloudit started at 2024-06-18 05:25:53 +0000 UTC (1 container statuses recorded)
  Jun 18 06:10:41.014: INFO: 	Container secloudit-registry-agent ready: false, restart count 0
  Jun 18 06:10:41.014: INFO: sonobuoy-e2e-job-1e0b3c84f5ad40e5 from sonobuoy started at 2024-06-18 05:35:24 +0000 UTC (2 container statuses recorded)
  Jun 18 06:10:41.014: INFO: 	Container e2e ready: true, restart count 0
  Jun 18 06:10:41.014: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 18 06:10:41.014: INFO: sonobuoy-systemd-logs-daemon-set-d21185bcb31b4ec9-65bjg from sonobuoy started at 2024-06-18 05:35:24 +0000 UTC (2 container statuses recorded)
  Jun 18 06:10:41.014: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 18 06:10:41.014: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/18/24 06:10:41.015
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/18/24 06:10:43.032
  STEP: Trying to apply a random label on the found node. @ 06/18/24 06:10:43.042
  STEP: verifying the node has the label kubernetes.io/e2e-125b7ac2-efa2-4a1e-9872-3119d6003208 42 @ 06/18/24 06:10:43.056
  STEP: Trying to relaunch the pod, now with labels. @ 06/18/24 06:10:43.059
  STEP: removing the label kubernetes.io/e2e-125b7ac2-efa2-4a1e-9872-3119d6003208 off the node ck-128-worker-1 @ 06/18/24 06:10:45.074
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-125b7ac2-efa2-4a1e-9872-3119d6003208 @ 06/18/24 06:10:45.086
  Jun 18 06:10:45.090: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1034" for this suite. @ 06/18/24 06:10:45.096
• [4.149 seconds]
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 06/18/24 06:10:45.102
  Jun 18 06:10:45.102: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename watch @ 06/18/24 06:10:45.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:10:45.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:10:45.119
  STEP: creating a new configmap @ 06/18/24 06:10:45.123
  STEP: modifying the configmap once @ 06/18/24 06:10:45.127
  STEP: modifying the configmap a second time @ 06/18/24 06:10:45.133
  STEP: deleting the configmap @ 06/18/24 06:10:45.138
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 06/18/24 06:10:45.142
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 06/18/24 06:10:45.145
  Jun 18 06:10:45.145: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2282  e7452dd0-4965-44db-9851-fdce82e011ed 14532 0 2024-06-18 06:10:45 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-06-18 06:10:45 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 06:10:45.147: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2282  e7452dd0-4965-44db-9851-fdce82e011ed 14533 0 2024-06-18 06:10:45 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-06-18 06:10:45 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 06:10:45.147: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2282" for this suite. @ 06/18/24 06:10:45.151
• [0.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:176
  STEP: Creating a kubernetes client @ 06/18/24 06:10:45.158
  Jun 18 06:10:45.158: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename replicaset @ 06/18/24 06:10:45.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:10:45.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:10:45.174
  STEP: Create a Replicaset @ 06/18/24 06:10:45.183
  STEP: Verify that the required pods have come up. @ 06/18/24 06:10:45.189
  Jun 18 06:10:45.194: INFO: Pod name sample-pod: Found 0 pods out of 1
  Jun 18 06:10:50.199: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/18/24 06:10:50.199
  STEP: Getting /status @ 06/18/24 06:10:50.199
  Jun 18 06:10:50.203: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 06/18/24 06:10:50.203
  Jun 18 06:10:50.213: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 06/18/24 06:10:50.213
  Jun 18 06:10:50.215: INFO: Observed &ReplicaSet event: ADDED
  Jun 18 06:10:50.216: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 18 06:10:50.216: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 18 06:10:50.216: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 18 06:10:50.216: INFO: Found replicaset test-rs in namespace replicaset-5694 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun 18 06:10:50.217: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 06/18/24 06:10:50.217
  Jun 18 06:10:50.217: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jun 18 06:10:50.224: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 06/18/24 06:10:50.225
  Jun 18 06:10:50.228: INFO: Observed &ReplicaSet event: ADDED
  Jun 18 06:10:50.228: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 18 06:10:50.228: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 18 06:10:50.228: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 18 06:10:50.228: INFO: Observed replicaset test-rs in namespace replicaset-5694 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 18 06:10:50.229: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 18 06:10:50.229: INFO: Found replicaset test-rs in namespace replicaset-5694 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Jun 18 06:10:50.229: INFO: Replicaset test-rs has a patched status
  Jun 18 06:10:50.229: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5694" for this suite. @ 06/18/24 06:10:50.234
• [5.086 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 06/18/24 06:10:50.246
  Jun 18 06:10:50.246: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename services @ 06/18/24 06:10:50.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:10:50.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:10:50.265
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-2054 @ 06/18/24 06:10:50.268
  STEP: changing the ExternalName service to type=ClusterIP @ 06/18/24 06:10:50.275
  STEP: creating replication controller externalname-service in namespace services-2054 @ 06/18/24 06:10:50.293
  I0618 06:10:50.304641      18 runners.go:197] Created replication controller with name: externalname-service, namespace: services-2054, replica count: 2
  I0618 06:10:53.357312      18 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 18 06:10:53.357: INFO: Creating new exec pod
  Jun 18 06:10:56.374: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-2054 exec execpodskfxg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jun 18 06:10:56.559: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun 18 06:10:56.559: INFO: stdout: "externalname-service-fgq6d"
  Jun 18 06:10:56.559: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-2054 exec execpodskfxg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.111.70.123 80'
  Jun 18 06:10:56.681: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.111.70.123 80\nConnection to 10.111.70.123 80 port [tcp/http] succeeded!\n"
  Jun 18 06:10:56.681: INFO: stdout: "externalname-service-fgq6d"
  Jun 18 06:10:56.682: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Jun 18 06:10:56.687: INFO: Cleaning up the ExternalName to ClusterIP test service
  STEP: Destroying namespace "services-2054" for this suite. @ 06/18/24 06:10:56.709
• [6.470 seconds]
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 06/18/24 06:10:56.717
  Jun 18 06:10:56.717: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename containers @ 06/18/24 06:10:56.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:10:56.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:10:56.739
  Jun 18 06:10:58.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5650" for this suite. @ 06/18/24 06:10:58.77
• [2.058 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:740
  STEP: Creating a kubernetes client @ 06/18/24 06:10:58.778
  Jun 18 06:10:58.778: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename svcaccounts @ 06/18/24 06:10:58.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:10:58.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:10:58.793
  Jun 18 06:10:58.799: INFO: Got root ca configmap in namespace "svcaccounts-1457"
  Jun 18 06:10:58.803: INFO: Deleted root ca configmap in namespace "svcaccounts-1457"
  STEP: waiting for a new root ca configmap created @ 06/18/24 06:10:59.304
  Jun 18 06:10:59.308: INFO: Recreated root ca configmap in namespace "svcaccounts-1457"
  Jun 18 06:10:59.312: INFO: Updated root ca configmap in namespace "svcaccounts-1457"
  STEP: waiting for the root ca configmap reconciled @ 06/18/24 06:10:59.812
  Jun 18 06:10:59.815: INFO: Reconciled root ca configmap in namespace "svcaccounts-1457"
  Jun 18 06:10:59.816: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1457" for this suite. @ 06/18/24 06:10:59.821
• [1.051 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should delete a collection of services [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3552
  STEP: Creating a kubernetes client @ 06/18/24 06:10:59.829
  Jun 18 06:10:59.829: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename services @ 06/18/24 06:10:59.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:10:59.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:10:59.853
  STEP: creating a collection of services @ 06/18/24 06:10:59.857
  Jun 18 06:10:59.857: INFO: Creating e2e-svc-a-vtlbj
  Jun 18 06:10:59.869: INFO: Creating e2e-svc-b-dh77g
  Jun 18 06:10:59.883: INFO: Creating e2e-svc-c-t8p6s
  STEP: deleting service collection @ 06/18/24 06:10:59.903
  Jun 18 06:10:59.932: INFO: Collection of services has been deleted
  Jun 18 06:10:59.932: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6001" for this suite. @ 06/18/24 06:10:59.936
• [0.112 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:112
  STEP: Creating a kubernetes client @ 06/18/24 06:10:59.944
  Jun 18 06:10:59.944: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename replication-controller @ 06/18/24 06:10:59.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:10:59.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:10:59.958
  STEP: creating a ReplicationController @ 06/18/24 06:10:59.965
  STEP: waiting for RC to be added @ 06/18/24 06:10:59.97
  STEP: waiting for available Replicas @ 06/18/24 06:10:59.97
  STEP: patching ReplicationController @ 06/18/24 06:11:01.518
  STEP: waiting for RC to be modified @ 06/18/24 06:11:01.53
  STEP: patching ReplicationController status @ 06/18/24 06:11:01.531
  STEP: waiting for RC to be modified @ 06/18/24 06:11:01.537
  STEP: waiting for available Replicas @ 06/18/24 06:11:01.538
  STEP: fetching ReplicationController status @ 06/18/24 06:11:01.543
  STEP: patching ReplicationController scale @ 06/18/24 06:11:01.547
  STEP: waiting for RC to be modified @ 06/18/24 06:11:01.553
  STEP: waiting for ReplicationController's scale to be the max amount @ 06/18/24 06:11:01.554
  STEP: fetching ReplicationController; ensuring that it's patched @ 06/18/24 06:11:03.174
  STEP: updating ReplicationController status @ 06/18/24 06:11:03.177
  STEP: waiting for RC to be modified @ 06/18/24 06:11:03.182
  STEP: listing all ReplicationControllers @ 06/18/24 06:11:03.184
  STEP: checking that ReplicationController has expected values @ 06/18/24 06:11:03.187
  STEP: deleting ReplicationControllers by collection @ 06/18/24 06:11:03.187
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 06/18/24 06:11:03.192
  Jun 18 06:11:03.233: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0618 06:11:03.233243      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-7636" for this suite. @ 06/18/24 06:11:03.237
• [3.297 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 06/18/24 06:11:03.245
  Jun 18 06:11:03.245: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename pods @ 06/18/24 06:11:03.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:11:03.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:11:03.262
  Jun 18 06:11:03.265: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: creating the pod @ 06/18/24 06:11:03.266
  STEP: submitting the pod to kubernetes @ 06/18/24 06:11:03.266
  E0618 06:11:04.233371      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:11:05.234094      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:11:05.321: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8666" for this suite. @ 06/18/24 06:11:05.326
• [2.086 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 06/18/24 06:11:05.332
  Jun 18 06:11:05.332: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename services @ 06/18/24 06:11:05.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:11:05.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:11:05.35
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-4088 @ 06/18/24 06:11:05.354
  STEP: changing the ExternalName service to type=NodePort @ 06/18/24 06:11:05.358
  STEP: creating replication controller externalname-service in namespace services-4088 @ 06/18/24 06:11:05.374
  I0618 06:11:05.383391      18 runners.go:197] Created replication controller with name: externalname-service, namespace: services-4088, replica count: 2
  E0618 06:11:06.234723      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:11:07.235374      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:11:08.235712      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0618 06:11:08.434088      18 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 18 06:11:08.434: INFO: Creating new exec pod
  E0618 06:11:09.235882      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:11:10.236435      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:11:11.237341      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:11:11.452: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-4088 exec execpod28bxs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jun 18 06:11:11.576: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun 18 06:11:11.576: INFO: stdout: "externalname-service-wxnsv"
  Jun 18 06:11:11.576: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-4088 exec execpod28bxs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.128.184 80'
  Jun 18 06:11:11.697: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.105.128.184 80\nConnection to 10.105.128.184 80 port [tcp/http] succeeded!\n"
  Jun 18 06:11:11.697: INFO: stdout: "externalname-service-kwv97"
  Jun 18 06:11:11.697: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-4088 exec execpod28bxs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.190.166 30648'
  Jun 18 06:11:11.802: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.190.166 30648\nConnection to 192.168.190.166 30648 port [tcp/*] succeeded!\n"
  Jun 18 06:11:11.802: INFO: stdout: "externalname-service-kwv97"
  Jun 18 06:11:11.802: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-4088 exec execpod28bxs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.190.169 30648'
  Jun 18 06:11:11.898: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.190.169 30648\nConnection to 192.168.190.169 30648 port [tcp/*] succeeded!\n"
  Jun 18 06:11:11.898: INFO: stdout: "externalname-service-kwv97"
  Jun 18 06:11:11.898: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Jun 18 06:11:11.904: INFO: Cleaning up the ExternalName to NodePort test service
  STEP: Destroying namespace "services-4088" for this suite. @ 06/18/24 06:11:11.921
• [6.594 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:61
  STEP: Creating a kubernetes client @ 06/18/24 06:11:11.927
  Jun 18 06:11:11.927: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename limitrange @ 06/18/24 06:11:11.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:11:11.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:11:11.947
  STEP: Creating a LimitRange @ 06/18/24 06:11:11.951
  STEP: Setting up watch @ 06/18/24 06:11:11.951
  STEP: Submitting a LimitRange @ 06/18/24 06:11:12.055
  STEP: Verifying LimitRange creation was observed @ 06/18/24 06:11:12.06
  STEP: Fetching the LimitRange to ensure it has proper values @ 06/18/24 06:11:12.061
  Jun 18 06:11:12.063: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Jun 18 06:11:12.063: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 06/18/24 06:11:12.063
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 06/18/24 06:11:12.068
  Jun 18 06:11:12.070: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Jun 18 06:11:12.071: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 06/18/24 06:11:12.071
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 06/18/24 06:11:12.075
  Jun 18 06:11:12.078: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Jun 18 06:11:12.078: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 06/18/24 06:11:12.078
  STEP: Failing to create a Pod with more than max resources @ 06/18/24 06:11:12.08
  STEP: Updating a LimitRange @ 06/18/24 06:11:12.083
  STEP: Verifying LimitRange updating is effective @ 06/18/24 06:11:12.087
  E0618 06:11:12.237403      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:11:13.238008      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 06/18/24 06:11:14.091
  STEP: Failing to create a Pod with more than max resources @ 06/18/24 06:11:14.097
  STEP: Deleting a LimitRange @ 06/18/24 06:11:14.1
  STEP: Verifying the LimitRange was deleted @ 06/18/24 06:11:14.108
  E0618 06:11:14.238552      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:11:15.239169      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:11:16.239380      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:11:17.239747      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:11:18.240494      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:11:19.114: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 06/18/24 06:11:19.114
  Jun 18 06:11:19.123: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-9499" for this suite. @ 06/18/24 06:11:19.131
• [7.214 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 06/18/24 06:11:19.141
  Jun 18 06:11:19.141: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename var-expansion @ 06/18/24 06:11:19.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:11:19.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:11:19.166
  STEP: Creating a pod to test substitution in container's args @ 06/18/24 06:11:19.174
  E0618 06:11:19.240994      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:11:20.241925      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:11:21.242811      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:11:22.243145      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:11:23.202
  Jun 18 06:11:23.205: INFO: Trying to get logs from node ck-128-worker-2 pod var-expansion-5f704a08-cf4f-4d82-b98d-bf4065954ef3 container dapi-container: <nil>
  STEP: delete the pod @ 06/18/24 06:11:23.225
  Jun 18 06:11:23.237: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0618 06:11:23.243102      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-9805" for this suite. @ 06/18/24 06:11:23.243
• [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 06/18/24 06:11:23.258
  Jun 18 06:11:23.258: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename watch @ 06/18/24 06:11:23.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:11:23.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:11:23.286
  STEP: creating a watch on configmaps @ 06/18/24 06:11:23.289
  STEP: creating a new configmap @ 06/18/24 06:11:23.29
  STEP: modifying the configmap once @ 06/18/24 06:11:23.294
  STEP: closing the watch once it receives two notifications @ 06/18/24 06:11:23.301
  Jun 18 06:11:23.301: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8533  56fc0819-e980-47d2-84af-b9ed178b5049 15114 0 2024-06-18 06:11:23 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-18 06:11:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 06:11:23.301: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8533  56fc0819-e980-47d2-84af-b9ed178b5049 15115 0 2024-06-18 06:11:23 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-18 06:11:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 06/18/24 06:11:23.302
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 06/18/24 06:11:23.308
  STEP: deleting the configmap @ 06/18/24 06:11:23.309
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 06/18/24 06:11:23.314
  Jun 18 06:11:23.314: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8533  56fc0819-e980-47d2-84af-b9ed178b5049 15116 0 2024-06-18 06:11:23 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-18 06:11:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 06:11:23.314: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8533  56fc0819-e980-47d2-84af-b9ed178b5049 15117 0 2024-06-18 06:11:23 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-18 06:11:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 06:11:23.314: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8533" for this suite. @ 06/18/24 06:11:23.318
• [0.065 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 06/18/24 06:11:23.324
  Jun 18 06:11:23.324: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename field-validation @ 06/18/24 06:11:23.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:11:23.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:11:23.342
  Jun 18 06:11:23.345: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  E0618 06:11:24.243575      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:11:25.243642      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0618 06:11:25.905314      18 warnings.go:70] unknown field "alpha"
  W0618 06:11:25.905695      18 warnings.go:70] unknown field "beta"
  W0618 06:11:25.905818      18 warnings.go:70] unknown field "delta"
  W0618 06:11:25.905929      18 warnings.go:70] unknown field "epsilon"
  W0618 06:11:25.906056      18 warnings.go:70] unknown field "gamma"
  E0618 06:11:26.244910      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:11:26.440: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9853" for this suite. @ 06/18/24 06:11:26.454
• [3.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:638
  STEP: Creating a kubernetes client @ 06/18/24 06:11:26.465
  Jun 18 06:11:26.465: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename gc @ 06/18/24 06:11:26.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:11:26.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:11:26.483
  STEP: create the rc @ 06/18/24 06:11:26.49
  W0618 06:11:26.497436      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0618 06:11:27.245786      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:11:28.246472      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:11:29.247151      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:11:30.247775      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:11:31.252842      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:11:32.252490      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 06/18/24 06:11:32.504
  STEP: wait for the rc to be deleted @ 06/18/24 06:11:32.512
  E0618 06:11:33.253608      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:11:33.547: INFO: 80 pods remaining
  Jun 18 06:11:33.547: INFO: 80 pods has nil DeletionTimestamp
  Jun 18 06:11:33.547: INFO: 
  E0618 06:11:34.256910      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:11:34.548: INFO: 71 pods remaining
  Jun 18 06:11:34.548: INFO: 71 pods has nil DeletionTimestamp
  Jun 18 06:11:34.548: INFO: 
  E0618 06:11:35.257085      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:11:35.530: INFO: 60 pods remaining
  Jun 18 06:11:35.530: INFO: 60 pods has nil DeletionTimestamp
  Jun 18 06:11:35.530: INFO: 
  E0618 06:11:36.257638      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:11:36.530: INFO: 40 pods remaining
  Jun 18 06:11:36.530: INFO: 40 pods has nil DeletionTimestamp
  Jun 18 06:11:36.530: INFO: 
  E0618 06:11:37.258360      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:11:37.534: INFO: 31 pods remaining
  Jun 18 06:11:37.534: INFO: 30 pods has nil DeletionTimestamp
  Jun 18 06:11:37.534: INFO: 
  E0618 06:11:38.258623      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:11:38.524: INFO: 20 pods remaining
  Jun 18 06:11:38.524: INFO: 20 pods has nil DeletionTimestamp
  Jun 18 06:11:38.524: INFO: 
  E0618 06:11:39.259584      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/18/24 06:11:39.519
  Jun 18 06:11:39.665: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 18 06:11:39.665: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1726" for this suite. @ 06/18/24 06:11:39.671
• [13.212 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 06/18/24 06:11:39.678
  Jun 18 06:11:39.678: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename deployment @ 06/18/24 06:11:39.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:11:39.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:11:39.703
  STEP: creating a Deployment @ 06/18/24 06:11:39.711
  Jun 18 06:11:39.711: INFO: Creating simple deployment test-deployment-xqx44
  Jun 18 06:11:39.724: INFO: deployment "test-deployment-xqx44" doesn't have the required revision set
  E0618 06:11:40.259717      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:11:41.260047      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 06/18/24 06:11:41.737
  Jun 18 06:11:41.748: INFO: Deployment test-deployment-xqx44 has Conditions: [{Available True 2024-06-18 06:11:41 +0000 UTC 2024-06-18 06:11:41 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-06-18 06:11:41 +0000 UTC 2024-06-18 06:11:39 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-xqx44-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 06/18/24 06:11:41.748
  Jun 18 06:11:41.756: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 6, 11, 41, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 11, 41, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 6, 11, 41, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 11, 39, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-xqx44-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 06/18/24 06:11:41.756
  Jun 18 06:11:41.758: INFO: Observed &Deployment event: ADDED
  Jun 18 06:11:41.758: INFO: Observed Deployment test-deployment-xqx44 in namespace deployment-3773 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-18 06:11:39 +0000 UTC 2024-06-18 06:11:39 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-xqx44-5d576bd769"}
  Jun 18 06:11:41.759: INFO: Observed &Deployment event: MODIFIED
  Jun 18 06:11:41.759: INFO: Observed Deployment test-deployment-xqx44 in namespace deployment-3773 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-18 06:11:39 +0000 UTC 2024-06-18 06:11:39 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-xqx44-5d576bd769"}
  Jun 18 06:11:41.759: INFO: Observed Deployment test-deployment-xqx44 in namespace deployment-3773 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-18 06:11:39 +0000 UTC 2024-06-18 06:11:39 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun 18 06:11:41.759: INFO: Observed &Deployment event: MODIFIED
  Jun 18 06:11:41.759: INFO: Observed Deployment test-deployment-xqx44 in namespace deployment-3773 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-18 06:11:39 +0000 UTC 2024-06-18 06:11:39 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun 18 06:11:41.759: INFO: Observed Deployment test-deployment-xqx44 in namespace deployment-3773 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-18 06:11:39 +0000 UTC 2024-06-18 06:11:39 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-xqx44-5d576bd769" is progressing.}
  Jun 18 06:11:41.759: INFO: Observed &Deployment event: MODIFIED
  Jun 18 06:11:41.760: INFO: Observed Deployment test-deployment-xqx44 in namespace deployment-3773 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-18 06:11:41 +0000 UTC 2024-06-18 06:11:41 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun 18 06:11:41.760: INFO: Observed Deployment test-deployment-xqx44 in namespace deployment-3773 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-18 06:11:41 +0000 UTC 2024-06-18 06:11:39 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-xqx44-5d576bd769" has successfully progressed.}
  Jun 18 06:11:41.760: INFO: Observed &Deployment event: MODIFIED
  Jun 18 06:11:41.760: INFO: Observed Deployment test-deployment-xqx44 in namespace deployment-3773 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-18 06:11:41 +0000 UTC 2024-06-18 06:11:41 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun 18 06:11:41.760: INFO: Observed Deployment test-deployment-xqx44 in namespace deployment-3773 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-18 06:11:41 +0000 UTC 2024-06-18 06:11:39 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-xqx44-5d576bd769" has successfully progressed.}
  Jun 18 06:11:41.760: INFO: Found Deployment test-deployment-xqx44 in namespace deployment-3773 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 18 06:11:41.760: INFO: Deployment test-deployment-xqx44 has an updated status
  STEP: patching the Statefulset Status @ 06/18/24 06:11:41.76
  Jun 18 06:11:41.760: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jun 18 06:11:41.768: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 06/18/24 06:11:41.768
  Jun 18 06:11:41.770: INFO: Observed &Deployment event: ADDED
  Jun 18 06:11:41.770: INFO: Observed deployment test-deployment-xqx44 in namespace deployment-3773 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-18 06:11:39 +0000 UTC 2024-06-18 06:11:39 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-xqx44-5d576bd769"}
  Jun 18 06:11:41.770: INFO: Observed &Deployment event: MODIFIED
  Jun 18 06:11:41.770: INFO: Observed deployment test-deployment-xqx44 in namespace deployment-3773 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-18 06:11:39 +0000 UTC 2024-06-18 06:11:39 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-xqx44-5d576bd769"}
  Jun 18 06:11:41.771: INFO: Observed deployment test-deployment-xqx44 in namespace deployment-3773 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-18 06:11:39 +0000 UTC 2024-06-18 06:11:39 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun 18 06:11:41.771: INFO: Observed &Deployment event: MODIFIED
  Jun 18 06:11:41.771: INFO: Observed deployment test-deployment-xqx44 in namespace deployment-3773 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-18 06:11:39 +0000 UTC 2024-06-18 06:11:39 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun 18 06:11:41.771: INFO: Observed deployment test-deployment-xqx44 in namespace deployment-3773 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-18 06:11:39 +0000 UTC 2024-06-18 06:11:39 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-xqx44-5d576bd769" is progressing.}
  Jun 18 06:11:41.771: INFO: Observed &Deployment event: MODIFIED
  Jun 18 06:11:41.771: INFO: Observed deployment test-deployment-xqx44 in namespace deployment-3773 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-18 06:11:41 +0000 UTC 2024-06-18 06:11:41 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun 18 06:11:41.771: INFO: Observed deployment test-deployment-xqx44 in namespace deployment-3773 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-18 06:11:41 +0000 UTC 2024-06-18 06:11:39 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-xqx44-5d576bd769" has successfully progressed.}
  Jun 18 06:11:41.771: INFO: Observed &Deployment event: MODIFIED
  Jun 18 06:11:41.771: INFO: Observed deployment test-deployment-xqx44 in namespace deployment-3773 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-18 06:11:41 +0000 UTC 2024-06-18 06:11:41 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun 18 06:11:41.771: INFO: Observed deployment test-deployment-xqx44 in namespace deployment-3773 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-18 06:11:41 +0000 UTC 2024-06-18 06:11:39 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-xqx44-5d576bd769" has successfully progressed.}
  Jun 18 06:11:41.771: INFO: Observed deployment test-deployment-xqx44 in namespace deployment-3773 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 18 06:11:41.771: INFO: Observed &Deployment event: MODIFIED
  Jun 18 06:11:41.771: INFO: Found deployment test-deployment-xqx44 in namespace deployment-3773 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Jun 18 06:11:41.771: INFO: Deployment test-deployment-xqx44 has a patched status
  Jun 18 06:11:41.775: INFO: Deployment "test-deployment-xqx44":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-xqx44",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5354dcd7-8c7c-4c84-89ae-6682cfc00fcb",
      ResourceVersion: (string) (len=5) "17095",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854287899,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854287899,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854287901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854287901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854287901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854287901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-xqx44-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 18 06:11:41.782: INFO: New ReplicaSet "test-deployment-xqx44-5d576bd769" of Deployment "test-deployment-xqx44":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-xqx44-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "053fee3b-4d48-4dc6-93b7-d5c89363cdec",
      ResourceVersion: (string) (len=5) "17086",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854287899,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-xqx44",
          UID: (types.UID) (len=36) "5354dcd7-8c7c-4c84-89ae-6682cfc00fcb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854287899,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 35 33 35  |k:{\"uid\":\"535|
              00000120  34 64 63 64 37 2d 38 63  37 63 2d 34 63 38 34 2d  |4dcd7-8c7c-4c84-|
              00000130  38 39 61 65 2d 36 36 38  32 63 66 63 30 30 66 63  |89ae-6682cfc00fc|
              00000140  62 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |b\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854287901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 18 06:11:41.786: INFO: Pod "test-deployment-xqx44-5d576bd769-xjlsx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-xqx44-5d576bd769-xjlsx",
      GenerateName: (string) (len=33) "test-deployment-xqx44-5d576bd769-",
      Namespace: (string) (len=15) "deployment-3773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3da98527-2d76-48af-9178-27ba6ad1a177",
      ResourceVersion: (string) (len=5) "17085",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854287899,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "172.17.196.237/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "172.17.196.237/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9e108e855ff9bf9009383b0b53b9b0bcf5333b7d137f0aa2411c9a3b51b8be8b"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-xqx44-5d576bd769",
          UID: (types.UID) (len=36) "053fee3b-4d48-4dc6-93b7-d5c89363cdec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854287899,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 30 35 33 66 65 65 33  62 2d 34 64 34 38 2d 34  |"053fee3b-4d48-4|
              000000a0  64 63 36 2d 39 33 62 37  2d 64 35 63 38 39 33 36  |dc6-93b7-d5c8936|
              000000b0  33 63 64 65 63 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |3cdec\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854287900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854287901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 31 37 2e 31  39 36 2e 32 33 37 5c 22  |172.17.196.237\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h4n7m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h4n7m",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854287899,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854287901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854287901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854287899,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.166",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "172.17.196.237",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.17.196.237"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854287899,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854287900,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://3294e546a8976a4200ce3faf365ef5c91ee68eba2aa5db7c8e807b2d9b7b047b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:11:41.789: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3773" for this suite. @ 06/18/24 06:11:41.794
• [2.121 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 06/18/24 06:11:41.799
  Jun 18 06:11:41.799: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename var-expansion @ 06/18/24 06:11:41.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:11:41.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:11:41.824
  STEP: Creating a pod to test substitution in container's command @ 06/18/24 06:11:41.827
  E0618 06:11:42.260990      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:11:43.261061      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:11:43.843
  Jun 18 06:11:43.847: INFO: Trying to get logs from node ck-128-worker-1 pod var-expansion-7e071809-173d-4361-97d1-80b2750e2ba6 container dapi-container: <nil>
  STEP: delete the pod @ 06/18/24 06:11:43.854
  Jun 18 06:11:43.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5262" for this suite. @ 06/18/24 06:11:43.872
• [2.077 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 06/18/24 06:11:43.876
  Jun 18 06:11:43.876: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename container-probe @ 06/18/24 06:11:43.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:11:43.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:11:43.949
  STEP: Creating pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272 @ 06/18/24 06:11:43.951
  E0618 06:11:44.261655      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:11:45.262315      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/18/24 06:11:45.967
  Jun 18 06:11:45.970: INFO: Initial restart count of pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 is 0
  Jun 18 06:11:45.972: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:11:46.262618      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:11:47.262965      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:11:47.976: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:11:48.263621      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:11:49.263909      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:11:49.979: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:11:50.264677      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:11:51.264984      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:11:51.984: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:11:52.265300      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:11:53.265709      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:11:53.989: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:11:54.266548      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:11:55.267336      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:11:55.993: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:11:56.268056      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:11:57.268378      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:11:58.001: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:11:58.269332      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:11:59.269661      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:12:00.005: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:12:00.270287      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:12:01.270573      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:12:02.011: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:12:02.271346      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:12:03.271640      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:12:04.017: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:12:04.271883      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:12:05.272974      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:12:06.021: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:12:06.273115      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:12:07.273474      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:12:08.026: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:12:08.274565      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:12:09.275113      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:12:10.029: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:12:10.275404      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:12:11.275846      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:12:12.035: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:12:12.276837      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:12:13.277227      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:12:14.040: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:12:14.278224      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:12:15.278721      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:12:16.045: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:12:16.279797      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:12:17.280848      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:12:18.051: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:12:18.281259      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:12:19.281615      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:12:20.057: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:12:20.282672      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:12:21.282964      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:12:22.062: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:12:22.284008      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:12:23.284357      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:12:24.068: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:12:24.284863      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:12:25.285743      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:12:26.072: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:12:26.286681      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:12:27.287135      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:12:28.077: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:12:28.288314      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:12:29.288812      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:12:30.083: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:12:30.289412      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:12:31.289773      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:12:32.088: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:12:32.290467      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:12:33.290846      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:12:34.095: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:12:34.291923      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:12:35.292812      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:12:36.100: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:12:36.292979      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:12:37.293498      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:12:38.106: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:12:38.293592      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:12:39.293941      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:12:40.111: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:12:40.294646      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:12:41.295488      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:12:42.116: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:12:42.295556      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:12:43.295923      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:12:44.120: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:12:44.296569      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:12:45.297419      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:12:46.129: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:12:46.297410      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:12:47.297546      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:12:48.133: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:12:48.298165      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:12:49.298576      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:12:50.139: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:12:50.299330      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:12:51.299680      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:12:52.145: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:12:52.300351      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:12:53.301770      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:12:54.151: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:12:54.302477      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:12:55.302489      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:12:56.155: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:12:56.303522      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:12:57.304090      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:12:58.159: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:12:58.304950      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:12:59.305425      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:13:00.164: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:13:00.306496      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:13:01.307004      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:13:02.168: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:13:02.307148      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:13:03.307646      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:13:04.174: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:13:04.307959      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:13:05.308534      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:13:06.179: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:13:06.308561      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:13:07.308961      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:13:08.183: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:13:08.309071      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:13:09.309713      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:13:10.188: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:13:10.310586      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:13:11.310993      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:13:12.194: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:13:12.311099      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:13:13.311293      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:13:14.198: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:13:14.312014      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:13:15.312878      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:13:16.202: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:13:16.312895      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:13:17.313051      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:13:18.206: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:13:18.314100      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:13:19.314902      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:13:20.212: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:13:20.315259      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:13:21.315748      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:13:22.218: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:13:22.316107      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:13:23.316160      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:13:24.224: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:13:24.317061      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:13:25.316910      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:13:26.229: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:13:26.317762      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:13:27.318082      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:13:28.234: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:13:28.318248      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:13:29.318533      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:13:30.238: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:13:30.318745      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:13:31.318913      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:13:32.242: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:13:32.319342      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:13:33.319607      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:13:34.247: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:13:34.320064      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:13:35.320753      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:13:36.253: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:13:36.321907      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:13:37.322028      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:13:38.257: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:13:38.323024      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:13:39.323324      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:13:40.262: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:13:40.323639      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:13:41.323983      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:13:42.267: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:13:42.324469      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:13:43.324732      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:13:44.271: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:13:44.324979      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:13:45.325793      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:13:46.276: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:13:46.326885      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:13:47.327228      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:13:48.281: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:13:48.327404      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:13:49.327835      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:13:50.287: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:13:50.328987      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:13:51.329449      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:13:52.292: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:13:52.330536      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:13:53.330688      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:13:54.297: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:13:54.331514      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:13:55.332115      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:13:56.301: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:13:56.333024      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:13:57.333281      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:13:58.308: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:13:58.334226      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:13:59.334687      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:14:00.313: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:14:00.335316      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:14:01.335590      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:14:02.317: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:14:02.335950      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:14:03.336056      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:14:04.322: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:14:04.337091      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:14:05.337819      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:14:06.327: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:14:06.338258      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:14:07.338556      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:14:08.331: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:14:08.338849      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:14:09.339242      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:14:10.336: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:14:10.340135      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:14:11.340373      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:14:12.340: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:14:12.341027      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:14:13.341332      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:14:14.341492      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:14:14.346: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:14:15.341710      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:14:16.341998      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:14:16.351: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:14:17.342854      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:14:18.343224      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:14:18.357: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:14:19.344060      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:14:20.344712      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:14:20.361: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:14:21.346674      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:14:22.347249      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:14:22.367: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:14:23.348017      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:14:24.348571      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:14:24.372: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:14:25.348811      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:14:26.349013      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:14:26.376: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:14:27.349977      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:14:28.350438      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:14:28.382: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:14:29.350849      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:14:30.351613      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:14:30.386: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:14:31.351807      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:14:32.352209      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:14:32.391: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:14:33.352434      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:14:34.352821      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:14:34.396: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:14:35.353019      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:14:36.353438      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:14:36.401: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:14:37.353352      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:14:38.353704      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:14:38.406: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:14:39.354087      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:14:40.354703      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:14:40.410: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:14:41.355574      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:14:42.355212      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:14:42.417: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:14:43.355496      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:14:44.355873      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:14:44.423: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:14:45.356249      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:14:46.356629      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:14:46.428: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:14:47.357691      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:14:48.358092      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:14:48.433: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:14:49.358599      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:14:50.358495      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:14:50.439: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:14:51.358962      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:14:52.359306      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:14:52.444: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:14:53.359923      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:14:54.360307      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:14:54.448: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:14:55.361104      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:14:56.361454      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:14:56.454: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:14:57.361683      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:14:58.361854      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:14:58.458: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:14:59.362589      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:15:00.363357      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:15:00.463: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:15:01.363760      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:15:02.364126      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:15:02.468: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:15:03.364534      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:15:04.364903      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:15:04.474: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:15:05.365803      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:15:06.366149      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:15:06.479: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:15:07.367064      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:15:08.367480      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:15:08.485: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:15:09.367841      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:15:10.368719      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:15:10.491: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:15:11.368971      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:15:12.369424      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:15:12.495: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:15:13.369475      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:15:14.369712      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:15:14.501: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:15:15.369936      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:15:16.370341      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:15:16.507: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:15:17.370660      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:15:18.370796      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:15:18.512: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:15:19.371049      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:15:20.371690      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:15:20.517: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:15:21.372264      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:15:22.372574      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:15:22.522: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:15:23.372851      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:15:24.374056      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:15:24.526: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:15:25.374345      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:15:26.374752      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:15:26.534: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:15:27.375370      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:15:28.375658      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:15:28.538: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:15:29.375776      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:15:30.376530      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:15:30.543: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:15:31.376716      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:15:32.377017      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:15:32.548: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:15:33.377522      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:15:34.377802      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:15:34.553: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:15:35.378073      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:15:36.379230      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:15:36.559: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:15:37.380131      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:15:38.380417      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:15:38.564: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:15:39.380470      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:15:40.381033      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:15:40.570: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:15:41.381279      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:15:42.381763      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:15:42.575: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:15:43.382381      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:15:44.382684      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:15:44.582: INFO: Get pod liveness-713485ff-1342-4498-87f7-a2e888cde3c2 in namespace container-probe-7272
  E0618 06:15:45.383682      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:15:46.383978      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:15:46.582: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 06/18/24 06:15:46.59
  STEP: Destroying namespace "container-probe-7272" for this suite. @ 06/18/24 06:15:46.602
• [242.736 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 06/18/24 06:15:46.614
  Jun 18 06:15:46.615: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename init-container @ 06/18/24 06:15:46.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:15:46.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:15:46.636
  STEP: creating the pod @ 06/18/24 06:15:46.639
  Jun 18 06:15:46.640: INFO: PodSpec: initContainers in spec.initContainers
  E0618 06:15:47.384466      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:15:48.384694      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:15:49.385340      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:15:50.385501      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:15:50.926: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3111" for this suite. @ 06/18/24 06:15:50.932
• [4.324 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 06/18/24 06:15:50.945
  Jun 18 06:15:50.945: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename projected @ 06/18/24 06:15:50.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:15:50.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:15:50.966
  STEP: Creating configMap with name cm-test-opt-del-c3b24310-3cca-426c-b3b1-78caa83f25f3 @ 06/18/24 06:15:50.974
  STEP: Creating configMap with name cm-test-opt-upd-2a03c9c0-f257-4962-84e0-32ac37ff34ee @ 06/18/24 06:15:50.978
  STEP: Creating the pod @ 06/18/24 06:15:50.981
  E0618 06:15:51.386059      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:15:52.386300      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-c3b24310-3cca-426c-b3b1-78caa83f25f3 @ 06/18/24 06:15:53.035
  STEP: Updating configmap cm-test-opt-upd-2a03c9c0-f257-4962-84e0-32ac37ff34ee @ 06/18/24 06:15:53.04
  STEP: Creating configMap with name cm-test-opt-create-5944cdcb-edbc-44eb-a46a-2406307ed433 @ 06/18/24 06:15:53.045
  STEP: waiting to observe update in volume @ 06/18/24 06:15:53.049
  E0618 06:15:53.386759      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:15:54.387215      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:15:55.388005      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:15:56.388567      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:15:57.089: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8453" for this suite. @ 06/18/24 06:15:57.095
• [6.157 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 06/18/24 06:15:57.104
  Jun 18 06:15:57.104: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename webhook @ 06/18/24 06:15:57.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:15:57.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:15:57.126
  STEP: Setting up server cert @ 06/18/24 06:15:57.145
  E0618 06:15:57.389002      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 06:15:57.679
  STEP: Deploying the webhook pod @ 06/18/24 06:15:57.687
  STEP: Wait for the deployment to be ready @ 06/18/24 06:15:57.697
  Jun 18 06:15:57.705: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0618 06:15:58.389683      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:15:59.389916      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/18/24 06:15:59.714
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 06:15:59.725
  E0618 06:16:00.390914      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:16:00.726: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 06/18/24 06:16:00.732
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 06/18/24 06:16:00.75
  STEP: Creating a dummy validating-webhook-configuration object @ 06/18/24 06:16:00.763
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 06/18/24 06:16:00.771
  STEP: Creating a dummy mutating-webhook-configuration object @ 06/18/24 06:16:00.774
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 06/18/24 06:16:00.784
  Jun 18 06:16:00.788: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5498" for this suite. @ 06/18/24 06:16:00.846
  STEP: Destroying namespace "webhook-markers-8386" for this suite. @ 06/18/24 06:16:00.85
• [3.753 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:167
  STEP: Creating a kubernetes client @ 06/18/24 06:16:00.857
  Jun 18 06:16:00.857: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename downward-api @ 06/18/24 06:16:00.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:16:00.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:16:00.872
  STEP: Creating a pod to test downward api env vars @ 06/18/24 06:16:00.875
  E0618 06:16:01.391776      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:02.392169      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:03.393065      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:04.393590      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:16:04.898
  Jun 18 06:16:04.903: INFO: Trying to get logs from node ck-128-worker-1 pod downward-api-a9441772-4d7c-42c6-a2dd-0d8a88eee64c container dapi-container: <nil>
  STEP: delete the pod @ 06/18/24 06:16:04.927
  Jun 18 06:16:04.944: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2759" for this suite. @ 06/18/24 06:16:04.951
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:154
  STEP: Creating a kubernetes client @ 06/18/24 06:16:04.959
  Jun 18 06:16:04.959: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename replicaset @ 06/18/24 06:16:04.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:16:04.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:16:04.977
  Jun 18 06:16:04.991: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0618 06:16:05.394473      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:06.395066      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:07.395567      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:08.395836      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:09.395899      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:16:09.996: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/18/24 06:16:09.996
  STEP: Scaling up "test-rs" replicaset  @ 06/18/24 06:16:09.996
  Jun 18 06:16:10.008: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 06/18/24 06:16:10.008
  Jun 18 06:16:10.020: INFO: observed ReplicaSet test-rs in namespace replicaset-4953 with ReadyReplicas 1, AvailableReplicas 1
  Jun 18 06:16:10.037: INFO: observed ReplicaSet test-rs in namespace replicaset-4953 with ReadyReplicas 1, AvailableReplicas 1
  Jun 18 06:16:10.054: INFO: observed ReplicaSet test-rs in namespace replicaset-4953 with ReadyReplicas 1, AvailableReplicas 1
  Jun 18 06:16:10.060: INFO: observed ReplicaSet test-rs in namespace replicaset-4953 with ReadyReplicas 1, AvailableReplicas 1
  E0618 06:16:10.396053      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:16:10.815: INFO: observed ReplicaSet test-rs in namespace replicaset-4953 with ReadyReplicas 2, AvailableReplicas 2
  E0618 06:16:11.396046      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:16:11.451: INFO: observed Replicaset test-rs in namespace replicaset-4953 with ReadyReplicas 3 found true
  Jun 18 06:16:11.451: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4953" for this suite. @ 06/18/24 06:16:11.456
• [6.503 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 06/18/24 06:16:11.464
  Jun 18 06:16:11.464: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename init-container @ 06/18/24 06:16:11.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:16:11.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:16:11.486
  STEP: creating the pod @ 06/18/24 06:16:11.489
  Jun 18 06:16:11.489: INFO: PodSpec: initContainers in spec.initContainers
  E0618 06:16:12.396248      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:13.396717      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:14.397531      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:15.397583      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:16.397910      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:17.398313      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:18.398514      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:19.399296      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:20.401210      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:21.401507      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:22.401835      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:23.402212      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:24.402471      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:25.403313      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:26.404118      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:27.404439      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:28.404735      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:29.405104      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:30.405893      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:31.406679      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:32.407089      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:33.407599      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:34.408020      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:35.408296      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:36.408666      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:37.409100      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:38.409560      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:39.409897      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:40.410668      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:41.411108      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:42.411680      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:43.412092      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:44.412383      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:45.413488      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:46.413859      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:47.414435      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:48.414597      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:49.414997      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:50.415727      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:51.416136      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:52.416586      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:53.417057      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:54.417583      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:55.418428      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:56.418682      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:57.418888      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:58.419062      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:16:59.419381      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:00.419930      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:01.420160      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:17:01.978: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-0a297f24-3b80-440c-89db-e6ebfefb79ea", GenerateName:"", Namespace:"init-container-2066", SelfLink:"", UID:"59966432-2ac5-4824-8b94-fd8f6cc789a8", ResourceVersion:"18541", Generation:0, CreationTimestamp:time.Date(2024, time.June, 18, 6, 16, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"489426981"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"3a334e5013b69e788bcce06106d76b61d8f84b0d7a46da4b4f3b2b280ca7eb7a", "cni.projectcalico.org/podIP":"172.17.196.241/32", "cni.projectcalico.org/podIPs":"172.17.196.241/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 6, 16, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004522390), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 6, 16, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004522438), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 6, 17, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004522480), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-d7t9p", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc004471060), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-d7t9p", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-d7t9p", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-d7t9p", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0048d6f20), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ck-128-worker-2", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc00057bc00), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0048d6fb0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0048d6fd0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0048d6fd8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0048d6fdc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc001222ed0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 18, 6, 16, 11, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 18, 6, 16, 11, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 18, 6, 16, 11, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 18, 6, 16, 11, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.190.166", HostIPs:[]v1.HostIP(nil), PodIP:"172.17.196.241", PodIPs:[]v1.PodIP{v1.PodIP{IP:"172.17.196.241"}}, StartTime:time.Date(2024, time.June, 18, 6, 16, 11, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00057bf10)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000524070)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"cri-o://dbd80dd774e1624a5ba43ce9e26629a858fc94ce9327ae8710314d124044677d", Started:(*bool)(0xc0048d707f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0044710e0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(0xc0048d7085), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0044710c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc0048d7054), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Jun 18 06:17:01.979: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2066" for this suite. @ 06/18/24 06:17:01.988
• [50.531 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:129
  STEP: Creating a kubernetes client @ 06/18/24 06:17:01.995
  Jun 18 06:17:01.995: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename runtimeclass @ 06/18/24 06:17:01.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:17:02.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:17:02.014
  E0618 06:17:02.420817      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:03.421935      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:17:04.035: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1831" for this suite. @ 06/18/24 06:17:04.044
• [2.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 06/18/24 06:17:04.055
  Jun 18 06:17:04.055: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename projected @ 06/18/24 06:17:04.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:17:04.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:17:04.074
  STEP: Creating configMap with name projected-configmap-test-volume-map-1f207efa-2aa5-4d5c-8a07-bd1be3079590 @ 06/18/24 06:17:04.077
  STEP: Creating a pod to test consume configMaps @ 06/18/24 06:17:04.081
  E0618 06:17:04.421967      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:05.422506      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:06.423144      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:07.423607      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:17:08.103
  Jun 18 06:17:08.105: INFO: Trying to get logs from node ck-128-worker-1 pod pod-projected-configmaps-0876f451-eb2d-4eb4-89d8-5f139f536f6f container agnhost-container: <nil>
  STEP: delete the pod @ 06/18/24 06:17:08.112
  Jun 18 06:17:08.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8401" for this suite. @ 06/18/24 06:17:08.129
• [4.081 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 06/18/24 06:17:08.136
  Jun 18 06:17:08.136: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename kubelet-test @ 06/18/24 06:17:08.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:17:08.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:17:08.152
  E0618 06:17:08.423770      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:09.424061      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:10.424934      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:11.425258      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:17:12.176: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7073" for this suite. @ 06/18/24 06:17:12.182
• [4.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 06/18/24 06:17:12.191
  Jun 18 06:17:12.191: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename kubelet-test @ 06/18/24 06:17:12.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:17:12.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:17:12.21
  STEP: Waiting for pod completion @ 06/18/24 06:17:12.224
  E0618 06:17:12.425905      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:13.426268      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:14.426328      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:15.427257      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:17:16.249: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8620" for this suite. @ 06/18/24 06:17:16.255
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 06/18/24 06:17:16.263
  Jun 18 06:17:16.263: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename projected @ 06/18/24 06:17:16.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:17:16.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:17:16.278
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 06:17:16.281
  E0618 06:17:16.427683      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:17.428060      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:18.428608      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:19.429033      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:17:20.304
  Jun 18 06:17:20.307: INFO: Trying to get logs from node ck-128-worker-1 pod downwardapi-volume-c199a7b8-fedc-452a-8546-c8713c6994bb container client-container: <nil>
  STEP: delete the pod @ 06/18/24 06:17:20.315
  Jun 18 06:17:20.329: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1281" for this suite. @ 06/18/24 06:17:20.334
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 06/18/24 06:17:20.344
  Jun 18 06:17:20.344: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename pods @ 06/18/24 06:17:20.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:17:20.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:17:20.363
  STEP: creating the pod @ 06/18/24 06:17:20.366
  STEP: setting up watch @ 06/18/24 06:17:20.367
  E0618 06:17:20.430007      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: submitting the pod to kubernetes @ 06/18/24 06:17:20.47
  STEP: verifying the pod is in kubernetes @ 06/18/24 06:17:20.479
  STEP: verifying pod creation was observed @ 06/18/24 06:17:20.482
  E0618 06:17:21.430929      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:22.431086      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 06/18/24 06:17:22.493
  STEP: verifying pod deletion was observed @ 06/18/24 06:17:22.499
  E0618 06:17:23.431272      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:24.431374      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:17:25.064: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8802" for this suite. @ 06/18/24 06:17:25.069
• [4.731 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1575
  STEP: Creating a kubernetes client @ 06/18/24 06:17:25.077
  Jun 18 06:17:25.077: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename kubectl @ 06/18/24 06:17:25.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:17:25.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:17:25.091
  STEP: creating the pod @ 06/18/24 06:17:25.094
  Jun 18 06:17:25.094: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-691 create -f -'
  Jun 18 06:17:25.367: INFO: stderr: ""
  Jun 18 06:17:25.367: INFO: stdout: "pod/pause created\n"
  E0618 06:17:25.432151      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:26.432806      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 06/18/24 06:17:27.376
  Jun 18 06:17:27.377: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-691 label pods pause testing-label=testing-label-value'
  E0618 06:17:27.433685      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:17:27.465: INFO: stderr: ""
  Jun 18 06:17:27.465: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 06/18/24 06:17:27.465
  Jun 18 06:17:27.465: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-691 get pod pause -L testing-label'
  Jun 18 06:17:27.542: INFO: stderr: ""
  Jun 18 06:17:27.542: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 06/18/24 06:17:27.542
  Jun 18 06:17:27.542: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-691 label pods pause testing-label-'
  Jun 18 06:17:27.647: INFO: stderr: ""
  Jun 18 06:17:27.647: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 06/18/24 06:17:27.647
  Jun 18 06:17:27.647: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-691 get pod pause -L testing-label'
  Jun 18 06:17:27.719: INFO: stderr: ""
  Jun 18 06:17:27.719: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 06/18/24 06:17:27.719
  Jun 18 06:17:27.720: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-691 delete --grace-period=0 --force -f -'
  Jun 18 06:17:27.811: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 18 06:17:27.812: INFO: stdout: "pod \"pause\" force deleted\n"
  Jun 18 06:17:27.812: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-691 get rc,svc -l name=pause --no-headers'
  Jun 18 06:17:27.889: INFO: stderr: "No resources found in kubectl-691 namespace.\n"
  Jun 18 06:17:27.889: INFO: stdout: ""
  Jun 18 06:17:27.889: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-691 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jun 18 06:17:27.965: INFO: stderr: ""
  Jun 18 06:17:27.965: INFO: stdout: ""
  Jun 18 06:17:27.965: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-691" for this suite. @ 06/18/24 06:17:27.97
• [2.901 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 06/18/24 06:17:27.978
  Jun 18 06:17:27.978: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename container-probe @ 06/18/24 06:17:27.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:17:27.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:17:27.995
  STEP: Creating pod busybox-e4d40c57-55d3-484d-9ec0-9b0d3ef162ad in namespace container-probe-9847 @ 06/18/24 06:17:27.998
  E0618 06:17:28.434519      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:29.435791      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/18/24 06:17:30.013
  Jun 18 06:17:30.015: INFO: Initial restart count of pod busybox-e4d40c57-55d3-484d-9ec0-9b0d3ef162ad is 0
  Jun 18 06:17:30.018: INFO: Get pod busybox-e4d40c57-55d3-484d-9ec0-9b0d3ef162ad in namespace container-probe-9847
  E0618 06:17:30.435859      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:31.436195      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:17:32.022: INFO: Get pod busybox-e4d40c57-55d3-484d-9ec0-9b0d3ef162ad in namespace container-probe-9847
  E0618 06:17:32.437052      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:33.437338      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:17:34.027: INFO: Get pod busybox-e4d40c57-55d3-484d-9ec0-9b0d3ef162ad in namespace container-probe-9847
  E0618 06:17:34.437560      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:35.438556      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:17:36.032: INFO: Get pod busybox-e4d40c57-55d3-484d-9ec0-9b0d3ef162ad in namespace container-probe-9847
  E0618 06:17:36.439356      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:37.439420      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:17:38.038: INFO: Get pod busybox-e4d40c57-55d3-484d-9ec0-9b0d3ef162ad in namespace container-probe-9847
  E0618 06:17:38.440240      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:39.440597      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:17:40.042: INFO: Get pod busybox-e4d40c57-55d3-484d-9ec0-9b0d3ef162ad in namespace container-probe-9847
  E0618 06:17:40.441606      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:41.441996      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:17:42.047: INFO: Get pod busybox-e4d40c57-55d3-484d-9ec0-9b0d3ef162ad in namespace container-probe-9847
  E0618 06:17:42.442158      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:43.442762      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:17:44.054: INFO: Get pod busybox-e4d40c57-55d3-484d-9ec0-9b0d3ef162ad in namespace container-probe-9847
  E0618 06:17:44.443381      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:45.444476      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:17:46.060: INFO: Get pod busybox-e4d40c57-55d3-484d-9ec0-9b0d3ef162ad in namespace container-probe-9847
  E0618 06:17:46.444995      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:47.445150      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:17:48.064: INFO: Get pod busybox-e4d40c57-55d3-484d-9ec0-9b0d3ef162ad in namespace container-probe-9847
  E0618 06:17:48.445084      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:49.445502      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:17:50.068: INFO: Get pod busybox-e4d40c57-55d3-484d-9ec0-9b0d3ef162ad in namespace container-probe-9847
  E0618 06:17:50.445656      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:51.446042      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:17:52.073: INFO: Get pod busybox-e4d40c57-55d3-484d-9ec0-9b0d3ef162ad in namespace container-probe-9847
  E0618 06:17:52.446388      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:53.446813      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:17:54.078: INFO: Get pod busybox-e4d40c57-55d3-484d-9ec0-9b0d3ef162ad in namespace container-probe-9847
  E0618 06:17:54.446946      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:55.447990      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:17:56.083: INFO: Get pod busybox-e4d40c57-55d3-484d-9ec0-9b0d3ef162ad in namespace container-probe-9847
  E0618 06:17:56.449084      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:57.449935      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:17:58.088: INFO: Get pod busybox-e4d40c57-55d3-484d-9ec0-9b0d3ef162ad in namespace container-probe-9847
  E0618 06:17:58.450900      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:17:59.451564      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:18:00.092: INFO: Get pod busybox-e4d40c57-55d3-484d-9ec0-9b0d3ef162ad in namespace container-probe-9847
  E0618 06:18:00.451564      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:01.452016      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:18:02.096: INFO: Get pod busybox-e4d40c57-55d3-484d-9ec0-9b0d3ef162ad in namespace container-probe-9847
  E0618 06:18:02.453049      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:03.453416      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:18:04.105: INFO: Get pod busybox-e4d40c57-55d3-484d-9ec0-9b0d3ef162ad in namespace container-probe-9847
  E0618 06:18:04.454455      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:05.455300      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:18:06.110: INFO: Get pod busybox-e4d40c57-55d3-484d-9ec0-9b0d3ef162ad in namespace container-probe-9847
  E0618 06:18:06.456064      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:07.456158      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:18:08.114: INFO: Get pod busybox-e4d40c57-55d3-484d-9ec0-9b0d3ef162ad in namespace container-probe-9847
  E0618 06:18:08.456272      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:09.456581      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:18:10.119: INFO: Get pod busybox-e4d40c57-55d3-484d-9ec0-9b0d3ef162ad in namespace container-probe-9847
  E0618 06:18:10.457083      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:11.457322      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:18:12.125: INFO: Get pod busybox-e4d40c57-55d3-484d-9ec0-9b0d3ef162ad in namespace container-probe-9847
  E0618 06:18:12.457661      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:13.457853      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:18:14.129: INFO: Get pod busybox-e4d40c57-55d3-484d-9ec0-9b0d3ef162ad in namespace container-probe-9847
  E0618 06:18:14.458323      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:15.459286      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:18:16.133: INFO: Get pod busybox-e4d40c57-55d3-484d-9ec0-9b0d3ef162ad in namespace container-probe-9847
  E0618 06:18:16.459367      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:17.459446      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:18:18.138: INFO: Get pod busybox-e4d40c57-55d3-484d-9ec0-9b0d3ef162ad in namespace container-probe-9847
  E0618 06:18:18.459526      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:19.459891      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:18:20.142: INFO: Get pod busybox-e4d40c57-55d3-484d-9ec0-9b0d3ef162ad in namespace container-probe-9847
  Jun 18 06:18:20.142: INFO: Restart count of pod container-probe-9847/busybox-e4d40c57-55d3-484d-9ec0-9b0d3ef162ad is now 1 (50.127023001s elapsed)
  Jun 18 06:18:20.143: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 06/18/24 06:18:20.15
  STEP: Destroying namespace "container-probe-9847" for this suite. @ 06/18/24 06:18:20.167
• [52.200 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:792
  STEP: Creating a kubernetes client @ 06/18/24 06:18:20.181
  Jun 18 06:18:20.181: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename statefulset @ 06/18/24 06:18:20.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:18:20.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:18:20.203
  STEP: Creating service test in namespace statefulset-852 @ 06/18/24 06:18:20.206
  STEP: Looking for a node to schedule stateful set and pod @ 06/18/24 06:18:20.212
  STEP: Creating pod with conflicting port in namespace statefulset-852 @ 06/18/24 06:18:20.221
  STEP: Waiting until pod test-pod will start running in namespace statefulset-852 @ 06/18/24 06:18:20.229
  E0618 06:18:20.460021      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:21.460829      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-852 @ 06/18/24 06:18:22.236
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-852 @ 06/18/24 06:18:22.24
  Jun 18 06:18:22.254: INFO: Observed stateful pod in namespace: statefulset-852, name: ss-0, uid: 23590019-5a20-4601-ab9c-722a24240000, status phase: Pending. Waiting for statefulset controller to delete.
  Jun 18 06:18:22.265: INFO: Observed stateful pod in namespace: statefulset-852, name: ss-0, uid: 23590019-5a20-4601-ab9c-722a24240000, status phase: Failed. Waiting for statefulset controller to delete.
  Jun 18 06:18:22.276: INFO: Observed stateful pod in namespace: statefulset-852, name: ss-0, uid: 23590019-5a20-4601-ab9c-722a24240000, status phase: Failed. Waiting for statefulset controller to delete.
  Jun 18 06:18:22.280: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-852
  STEP: Removing pod with conflicting port in namespace statefulset-852 @ 06/18/24 06:18:22.28
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-852 and will be in running state @ 06/18/24 06:18:22.294
  E0618 06:18:22.461509      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:23.462042      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:24.462474      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:25.463398      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:18:26.312: INFO: Deleting all statefulset in ns statefulset-852
  Jun 18 06:18:26.315: INFO: Scaling statefulset ss to 0
  E0618 06:18:26.464358      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:27.464704      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:28.465104      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:29.465475      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:30.466324      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:31.466876      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:32.467258      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:33.467577      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:34.467881      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:35.468661      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:18:36.333: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 18 06:18:36.337: INFO: Deleting statefulset ss
  Jun 18 06:18:36.353: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-852" for this suite. @ 06/18/24 06:18:36.359
• [16.186 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 06/18/24 06:18:36.367
  Jun 18 06:18:36.367: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename configmap @ 06/18/24 06:18:36.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:18:36.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:18:36.386
  STEP: Creating configMap with name cm-test-opt-del-35f0ff87-4d9f-49c4-afe3-0195ecd9a79f @ 06/18/24 06:18:36.394
  STEP: Creating configMap with name cm-test-opt-upd-9de6020d-5a79-4193-a377-f9209324e37a @ 06/18/24 06:18:36.399
  STEP: Creating the pod @ 06/18/24 06:18:36.403
  E0618 06:18:36.469275      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:37.469609      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-35f0ff87-4d9f-49c4-afe3-0195ecd9a79f @ 06/18/24 06:18:38.442
  STEP: Updating configmap cm-test-opt-upd-9de6020d-5a79-4193-a377-f9209324e37a @ 06/18/24 06:18:38.446
  STEP: Creating configMap with name cm-test-opt-create-648b7862-95e7-4cdd-bae7-acabd1b2f191 @ 06/18/24 06:18:38.451
  STEP: waiting to observe update in volume @ 06/18/24 06:18:38.455
  E0618 06:18:38.469934      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:39.470273      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:40.470680      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:18:40.481: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4409" for this suite. @ 06/18/24 06:18:40.486
• [4.123 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:609
  STEP: Creating a kubernetes client @ 06/18/24 06:18:40.492
  Jun 18 06:18:40.492: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename security-context-test @ 06/18/24 06:18:40.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:18:40.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:18:40.515
  E0618 06:18:41.470782      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:42.471416      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:18:42.552: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3960" for this suite. @ 06/18/24 06:18:42.557
• [2.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 06/18/24 06:18:42.58
  Jun 18 06:18:42.580: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename downward-api @ 06/18/24 06:18:42.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:18:42.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:18:42.597
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 06:18:42.6
  E0618 06:18:43.471761      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:44.472420      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:45.473211      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:46.473971      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:18:46.624
  Jun 18 06:18:46.628: INFO: Trying to get logs from node ck-128-worker-2 pod downwardapi-volume-049558e7-6e03-4ca8-a612-ffca0892449b container client-container: <nil>
  STEP: delete the pod @ 06/18/24 06:18:46.635
  Jun 18 06:18:46.647: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9590" for this suite. @ 06/18/24 06:18:46.653
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:321
  STEP: Creating a kubernetes client @ 06/18/24 06:18:46.661
  Jun 18 06:18:46.661: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename gc @ 06/18/24 06:18:46.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:18:46.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:18:46.679
  STEP: create the rc @ 06/18/24 06:18:46.681
  W0618 06:18:46.688626      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0618 06:18:47.474487      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:48.475251      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:49.475651      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:50.476393      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:51.476774      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 06/18/24 06:18:51.692
  STEP: wait for all pods to be garbage collected @ 06/18/24 06:18:51.699
  E0618 06:18:52.477541      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:53.477872      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:54.478212      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:55.479281      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:18:56.479748      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/18/24 06:18:56.708
  Jun 18 06:18:56.836: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 18 06:18:56.836: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4168" for this suite. @ 06/18/24 06:18:56.841
• [10.186 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:424
  STEP: Creating a kubernetes client @ 06/18/24 06:18:56.847
  Jun 18 06:18:56.847: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename replication-controller @ 06/18/24 06:18:56.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:18:56.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:18:56.865
  STEP: Creating ReplicationController "e2e-rc-t5snf" @ 06/18/24 06:18:56.868
  Jun 18 06:18:56.873: INFO: Get Replication Controller "e2e-rc-t5snf" to confirm replicas
  E0618 06:18:57.480553      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:18:57.876: INFO: Get Replication Controller "e2e-rc-t5snf" to confirm replicas
  Jun 18 06:18:57.879: INFO: Found 1 replicas for "e2e-rc-t5snf" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-t5snf" @ 06/18/24 06:18:57.88
  STEP: Updating a scale subresource @ 06/18/24 06:18:57.883
  STEP: Verifying replicas where modified for replication controller "e2e-rc-t5snf" @ 06/18/24 06:18:57.89
  Jun 18 06:18:57.890: INFO: Get Replication Controller "e2e-rc-t5snf" to confirm replicas
  E0618 06:18:58.481657      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:18:58.893: INFO: Get Replication Controller "e2e-rc-t5snf" to confirm replicas
  Jun 18 06:18:58.896: INFO: Found 2 replicas for "e2e-rc-t5snf" replication controller
  Jun 18 06:18:58.897: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1123" for this suite. @ 06/18/24 06:18:58.901
• [2.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1641
  STEP: Creating a kubernetes client @ 06/18/24 06:18:58.908
  Jun 18 06:18:58.908: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename kubectl @ 06/18/24 06:18:58.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:18:58.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:18:58.926
  STEP: creating Agnhost RC @ 06/18/24 06:18:58.929
  Jun 18 06:18:58.929: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-1886 create -f -'
  Jun 18 06:18:59.195: INFO: stderr: ""
  Jun 18 06:18:59.195: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/18/24 06:18:59.195
  E0618 06:18:59.482605      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:19:00.200: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 18 06:19:00.200: INFO: Found 0 / 1
  E0618 06:19:00.483464      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:19:01.199: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 18 06:19:01.199: INFO: Found 1 / 1
  Jun 18 06:19:01.199: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 06/18/24 06:19:01.2
  Jun 18 06:19:01.203: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 18 06:19:01.203: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun 18 06:19:01.203: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-1886 patch pod agnhost-primary-9nzk7 -p {"metadata":{"annotations":{"x":"y"}}}'
  Jun 18 06:19:01.318: INFO: stderr: ""
  Jun 18 06:19:01.318: INFO: stdout: "pod/agnhost-primary-9nzk7 patched\n"
  STEP: checking annotations @ 06/18/24 06:19:01.319
  Jun 18 06:19:01.323: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 18 06:19:01.323: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun 18 06:19:01.323: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1886" for this suite. @ 06/18/24 06:19:01.329
• [2.427 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 06/18/24 06:19:01.336
  Jun 18 06:19:01.336: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename configmap @ 06/18/24 06:19:01.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:19:01.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:19:01.359
  STEP: Creating configMap with name configmap-test-volume-04cd1f79-16ee-46ad-9889-c84fd153464a @ 06/18/24 06:19:01.362
  STEP: Creating a pod to test consume configMaps @ 06/18/24 06:19:01.367
  E0618 06:19:01.484654      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:02.485557      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:03.486142      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:04.486670      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:19:05.389
  Jun 18 06:19:05.393: INFO: Trying to get logs from node ck-128-worker-2 pod pod-configmaps-15f5ff6f-00e5-4bed-a6be-15b43ed2682b container configmap-volume-test: <nil>
  STEP: delete the pod @ 06/18/24 06:19:05.403
  Jun 18 06:19:05.422: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3529" for this suite. @ 06/18/24 06:19:05.429
• [4.101 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 06/18/24 06:19:05.438
  Jun 18 06:19:05.438: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename dns @ 06/18/24 06:19:05.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:19:05.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:19:05.459
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8073.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-8073.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 06/18/24 06:19:05.463
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8073.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-8073.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 06/18/24 06:19:05.463
  STEP: creating a pod to probe /etc/hosts @ 06/18/24 06:19:05.463
  STEP: submitting the pod to kubernetes @ 06/18/24 06:19:05.463
  E0618 06:19:05.487169      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:06.487799      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/18/24 06:19:07.481
  STEP: looking for the results for each expected name from probers @ 06/18/24 06:19:07.484
  E0618 06:19:07.488375      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:19:07.503: INFO: DNS probes using dns-8073/dns-test-721161c1-b6c3-418e-8397-4d8cd916e679 succeeded

  Jun 18 06:19:07.503: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 06/18/24 06:19:07.51
  STEP: Destroying namespace "dns-8073" for this suite. @ 06/18/24 06:19:07.527
• [2.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 06/18/24 06:19:07.538
  Jun 18 06:19:07.538: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename daemonsets @ 06/18/24 06:19:07.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:19:07.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:19:07.558
  Jun 18 06:19:07.580: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/18/24 06:19:07.588
  Jun 18 06:19:07.597: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 06:19:07.602: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 06:19:07.602: INFO: Node ck-128-worker-1 is running 0 daemon pod, expected 1
  E0618 06:19:08.488774      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:19:08.607: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 06:19:08.611: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 18 06:19:08.611: INFO: Node ck-128-worker-1 is running 0 daemon pod, expected 1
  E0618 06:19:09.489359      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:19:09.608: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 06:19:09.612: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 18 06:19:09.612: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 06/18/24 06:19:09.625
  STEP: Check that daemon pods images are updated. @ 06/18/24 06:19:09.637
  Jun 18 06:19:09.641: INFO: Wrong image for pod: daemon-set-pplx2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 18 06:19:09.641: INFO: Wrong image for pod: daemon-set-pwpbt. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 18 06:19:09.641: INFO: Wrong image for pod: daemon-set-x8lfv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 18 06:19:09.645: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0618 06:19:10.490236      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:19:10.650: INFO: Wrong image for pod: daemon-set-pplx2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 18 06:19:10.650: INFO: Wrong image for pod: daemon-set-pwpbt. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 18 06:19:10.655: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0618 06:19:11.490481      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:19:11.651: INFO: Pod daemon-set-m9l67 is not available
  Jun 18 06:19:11.651: INFO: Wrong image for pod: daemon-set-pplx2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 18 06:19:11.651: INFO: Wrong image for pod: daemon-set-pwpbt. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 18 06:19:11.656: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0618 06:19:12.491505      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:19:12.650: INFO: Pod daemon-set-mlsxj is not available
  Jun 18 06:19:12.650: INFO: Wrong image for pod: daemon-set-pplx2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 18 06:19:12.655: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0618 06:19:13.492561      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:19:13.655: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0618 06:19:14.493647      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:19:14.651: INFO: Pod daemon-set-7rt9h is not available
  Jun 18 06:19:14.656: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 06/18/24 06:19:14.656
  Jun 18 06:19:14.662: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 06:19:14.666: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 18 06:19:14.666: INFO: Node ck-128-worker-3 is running 0 daemon pod, expected 1
  E0618 06:19:15.494742      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:19:15.671: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 06:19:15.674: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 18 06:19:15.674: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/18/24 06:19:15.685
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8456, will wait for the garbage collector to delete the pods @ 06/18/24 06:19:15.686
  Jun 18 06:19:15.743: INFO: Deleting DaemonSet.extensions daemon-set took: 5.108203ms
  Jun 18 06:19:15.844: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.020401ms
  E0618 06:19:16.494726      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:17.494968      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:19:18.049: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 06:19:18.049: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 18 06:19:18.051: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"19658"},"items":null}

  Jun 18 06:19:18.054: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"19658"},"items":null}

  Jun 18 06:19:18.068: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8456" for this suite. @ 06/18/24 06:19:18.072
• [10.538 seconds]
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 06/18/24 06:19:18.076
  Jun 18 06:19:18.076: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename var-expansion @ 06/18/24 06:19:18.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:19:18.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:19:18.094
  E0618 06:19:18.495728      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:19.495903      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:19:20.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Jun 18 06:19:20.117: INFO: Deleting pod "var-expansion-3b95b52f-d120-43e4-a011-6224f94f8962" in namespace "var-expansion-3054"
  Jun 18 06:19:20.125: INFO: Wait up to 5m0s for pod "var-expansion-3b95b52f-d120-43e4-a011-6224f94f8962" to be fully deleted
  E0618 06:19:20.495979      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:21.496395      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:22.496627      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:23.496727      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-3054" for this suite. @ 06/18/24 06:19:24.139
• [6.068 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 06/18/24 06:19:24.146
  Jun 18 06:19:24.146: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename events @ 06/18/24 06:19:24.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:19:24.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:19:24.165
  STEP: creating a test event @ 06/18/24 06:19:24.17
  STEP: listing events in all namespaces @ 06/18/24 06:19:24.177
  STEP: listing events in test namespace @ 06/18/24 06:19:24.189
  STEP: listing events with field selection filtering on source @ 06/18/24 06:19:24.193
  STEP: listing events with field selection filtering on reportingController @ 06/18/24 06:19:24.197
  STEP: getting the test event @ 06/18/24 06:19:24.2
  STEP: patching the test event @ 06/18/24 06:19:24.204
  STEP: getting the test event @ 06/18/24 06:19:24.218
  STEP: updating the test event @ 06/18/24 06:19:24.221
  STEP: getting the test event @ 06/18/24 06:19:24.228
  STEP: deleting the test event @ 06/18/24 06:19:24.231
  STEP: listing events in all namespaces @ 06/18/24 06:19:24.236
  STEP: listing events in test namespace @ 06/18/24 06:19:24.244
  Jun 18 06:19:24.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2333" for this suite. @ 06/18/24 06:19:24.253
• [0.112 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 06/18/24 06:19:24.259
  Jun 18 06:19:24.259: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename containers @ 06/18/24 06:19:24.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:19:24.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:19:24.281
  STEP: Creating a pod to test override arguments @ 06/18/24 06:19:24.284
  E0618 06:19:24.497235      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:25.497413      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:26.497411      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:27.497895      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:19:28.311
  Jun 18 06:19:28.315: INFO: Trying to get logs from node ck-128-worker-2 pod client-containers-a2830e8f-ccc1-4238-9c5c-3c6d4b481ce7 container agnhost-container: <nil>
  STEP: delete the pod @ 06/18/24 06:19:28.322
  Jun 18 06:19:28.337: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6411" for this suite. @ 06/18/24 06:19:28.343
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:107
  STEP: Creating a kubernetes client @ 06/18/24 06:19:28.352
  Jun 18 06:19:28.352: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename emptydir @ 06/18/24 06:19:28.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:19:28.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:19:28.369
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 06/18/24 06:19:28.373
  E0618 06:19:28.498695      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:29.499676      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:30.499935      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:31.500600      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:19:32.395
  Jun 18 06:19:32.398: INFO: Trying to get logs from node ck-128-worker-2 pod pod-e2ed8759-2301-444f-8399-48078bf6f522 container test-container: <nil>
  STEP: delete the pod @ 06/18/24 06:19:32.404
  Jun 18 06:19:32.416: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6921" for this suite. @ 06/18/24 06:19:32.426
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 06/18/24 06:19:32.437
  Jun 18 06:19:32.438: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename secrets @ 06/18/24 06:19:32.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:19:32.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:19:32.462
  STEP: Creating secret with name secret-test-b74258a1-2ef1-4694-abe6-e4d086a94d89 @ 06/18/24 06:19:32.466
  STEP: Creating a pod to test consume secrets @ 06/18/24 06:19:32.47
  E0618 06:19:32.501147      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:33.501512      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:34.501751      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:35.502701      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:19:36.49
  Jun 18 06:19:36.494: INFO: Trying to get logs from node ck-128-worker-2 pod pod-secrets-4cc1a40c-8c7e-4337-b529-5978bef80c9d container secret-volume-test: <nil>
  STEP: delete the pod @ 06/18/24 06:19:36.501
  E0618 06:19:36.503501      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:19:36.517: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8801" for this suite. @ 06/18/24 06:19:36.522
• [4.092 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:303
  STEP: Creating a kubernetes client @ 06/18/24 06:19:36.53
  Jun 18 06:19:36.530: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename namespaces @ 06/18/24 06:19:36.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:19:36.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:19:36.546
  STEP: Read namespace status @ 06/18/24 06:19:36.549
  Jun 18 06:19:36.554: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 06/18/24 06:19:36.554
  Jun 18 06:19:36.558: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 06/18/24 06:19:36.558
  Jun 18 06:19:36.569: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Jun 18 06:19:36.569: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1511" for this suite. @ 06/18/24 06:19:36.573
• [0.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 06/18/24 06:19:36.583
  Jun 18 06:19:36.583: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename subpath @ 06/18/24 06:19:36.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:19:36.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:19:36.598
  STEP: Setting up data @ 06/18/24 06:19:36.601
  STEP: Creating pod pod-subpath-test-configmap-vnlc @ 06/18/24 06:19:36.607
  STEP: Creating a pod to test atomic-volume-subpath @ 06/18/24 06:19:36.607
  E0618 06:19:37.503903      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:38.504417      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:39.504602      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:40.505691      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:41.506381      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:42.507532      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:43.508645      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:44.508934      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:45.509658      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:46.510456      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:47.510966      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:48.511129      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:49.511931      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:50.512504      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:51.512836      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:52.512988      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:53.513976      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:54.514606      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:55.514932      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:56.515109      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:57.516006      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:58.516369      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:19:59.516559      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:00.517416      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:20:00.68
  Jun 18 06:20:00.685: INFO: Trying to get logs from node ck-128-worker-2 pod pod-subpath-test-configmap-vnlc container test-container-subpath-configmap-vnlc: <nil>
  STEP: delete the pod @ 06/18/24 06:20:00.694
  STEP: Deleting pod pod-subpath-test-configmap-vnlc @ 06/18/24 06:20:00.708
  Jun 18 06:20:00.708: INFO: Deleting pod "pod-subpath-test-configmap-vnlc" in namespace "subpath-4718"
  Jun 18 06:20:00.712: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4718" for this suite. @ 06/18/24 06:20:00.717
• [24.140 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 06/18/24 06:20:00.725
  Jun 18 06:20:00.725: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename daemonsets @ 06/18/24 06:20:00.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:20:00.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:20:00.746
  STEP: Creating simple DaemonSet "daemon-set" @ 06/18/24 06:20:00.769
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/18/24 06:20:00.776
  Jun 18 06:20:00.782: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 06:20:00.786: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 06:20:00.786: INFO: Node ck-128-worker-1 is running 0 daemon pod, expected 1
  E0618 06:20:01.517716      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:20:01.792: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 06:20:01.797: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 18 06:20:01.797: INFO: Node ck-128-worker-1 is running 0 daemon pod, expected 1
  E0618 06:20:02.518653      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:20:02.792: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 06:20:02.796: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 18 06:20:02.796: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 06/18/24 06:20:02.799
  Jun 18 06:20:02.816: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 06:20:02.821: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 18 06:20:02.821: INFO: Node ck-128-worker-3 is running 0 daemon pod, expected 1
  E0618 06:20:03.519577      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:20:03.828: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 06:20:03.831: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 18 06:20:03.831: INFO: Node ck-128-worker-3 is running 0 daemon pod, expected 1
  E0618 06:20:04.520124      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:20:04.827: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 06:20:04.830: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 18 06:20:04.830: INFO: Node ck-128-worker-3 is running 0 daemon pod, expected 1
  E0618 06:20:05.520487      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:20:05.828: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 06:20:05.834: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 18 06:20:05.834: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/18/24 06:20:05.837
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-724, will wait for the garbage collector to delete the pods @ 06/18/24 06:20:05.838
  Jun 18 06:20:05.896: INFO: Deleting DaemonSet.extensions daemon-set took: 5.026278ms
  Jun 18 06:20:05.997: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.80966ms
  E0618 06:20:06.520734      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:07.521399      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:20:08.201: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 06:20:08.201: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 18 06:20:08.204: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"20073"},"items":null}

  Jun 18 06:20:08.209: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"20073"},"items":null}

  Jun 18 06:20:08.224: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-724" for this suite. @ 06/18/24 06:20:08.229
• [7.510 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 06/18/24 06:20:08.235
  Jun 18 06:20:08.235: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename dns @ 06/18/24 06:20:08.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:20:08.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:20:08.284
  STEP: Creating a test externalName service @ 06/18/24 06:20:08.289
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4051.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-4051.svc.cluster.local; sleep 1; done
   @ 06/18/24 06:20:08.307
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4051.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-4051.svc.cluster.local; sleep 1; done
   @ 06/18/24 06:20:08.307
  STEP: creating a pod to probe DNS @ 06/18/24 06:20:08.307
  STEP: submitting the pod to kubernetes @ 06/18/24 06:20:08.307
  E0618 06:20:08.521756      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:09.522690      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/18/24 06:20:10.347
  STEP: looking for the results for each expected name from probers @ 06/18/24 06:20:10.351
  Jun 18 06:20:10.361: INFO: DNS probes using dns-test-fc8d9068-6bed-412a-aadc-3c15f5f942ca succeeded

  STEP: changing the externalName to bar.example.com @ 06/18/24 06:20:10.361
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4051.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-4051.svc.cluster.local; sleep 1; done
   @ 06/18/24 06:20:10.373
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4051.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-4051.svc.cluster.local; sleep 1; done
   @ 06/18/24 06:20:10.373
  STEP: creating a second pod to probe DNS @ 06/18/24 06:20:10.373
  STEP: submitting the pod to kubernetes @ 06/18/24 06:20:10.374
  E0618 06:20:10.522710      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:11.523141      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/18/24 06:20:12.389
  STEP: looking for the results for each expected name from probers @ 06/18/24 06:20:12.392
  Jun 18 06:20:12.398: INFO: File wheezy_udp@dns-test-service-3.dns-4051.svc.cluster.local from pod  dns-4051/dns-test-493049a1-9fc5-4a82-935a-6947cc711ae1 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun 18 06:20:12.402: INFO: File jessie_udp@dns-test-service-3.dns-4051.svc.cluster.local from pod  dns-4051/dns-test-493049a1-9fc5-4a82-935a-6947cc711ae1 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun 18 06:20:12.402: INFO: Lookups using dns-4051/dns-test-493049a1-9fc5-4a82-935a-6947cc711ae1 failed for: [wheezy_udp@dns-test-service-3.dns-4051.svc.cluster.local jessie_udp@dns-test-service-3.dns-4051.svc.cluster.local]

  Jun 18 06:20:12.410: INFO: Pod client logs for webserver: 
  Jun 18 06:20:12.417: INFO: Pod client logs for querier: 
  Jun 18 06:20:12.422: INFO: Pod client logs for jessie-querier: 
  E0618 06:20:12.523812      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:13.524587      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:14.525130      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:15.526242      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:16.526743      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:20:17.429: INFO: File wheezy_udp@dns-test-service-3.dns-4051.svc.cluster.local from pod  dns-4051/dns-test-493049a1-9fc5-4a82-935a-6947cc711ae1 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun 18 06:20:17.433: INFO: File jessie_udp@dns-test-service-3.dns-4051.svc.cluster.local from pod  dns-4051/dns-test-493049a1-9fc5-4a82-935a-6947cc711ae1 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun 18 06:20:17.433: INFO: Lookups using dns-4051/dns-test-493049a1-9fc5-4a82-935a-6947cc711ae1 failed for: [wheezy_udp@dns-test-service-3.dns-4051.svc.cluster.local jessie_udp@dns-test-service-3.dns-4051.svc.cluster.local]

  Jun 18 06:20:17.439: INFO: Pod client logs for webserver: 
  Jun 18 06:20:17.445: INFO: Pod client logs for querier: 
  Jun 18 06:20:17.451: INFO: Pod client logs for jessie-querier: 
  E0618 06:20:17.527297      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:18.527897      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:19.528238      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:20.530744      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:21.531770      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:20:22.429: INFO: File wheezy_udp@dns-test-service-3.dns-4051.svc.cluster.local from pod  dns-4051/dns-test-493049a1-9fc5-4a82-935a-6947cc711ae1 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun 18 06:20:22.433: INFO: File jessie_udp@dns-test-service-3.dns-4051.svc.cluster.local from pod  dns-4051/dns-test-493049a1-9fc5-4a82-935a-6947cc711ae1 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun 18 06:20:22.433: INFO: Lookups using dns-4051/dns-test-493049a1-9fc5-4a82-935a-6947cc711ae1 failed for: [wheezy_udp@dns-test-service-3.dns-4051.svc.cluster.local jessie_udp@dns-test-service-3.dns-4051.svc.cluster.local]

  Jun 18 06:20:22.440: INFO: Pod client logs for webserver: 
  Jun 18 06:20:22.446: INFO: Pod client logs for querier: 
  Jun 18 06:20:22.452: INFO: Pod client logs for jessie-querier: 
  E0618 06:20:22.531884      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:23.532424      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:24.532769      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:25.533577      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:26.533959      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:20:27.429: INFO: File wheezy_udp@dns-test-service-3.dns-4051.svc.cluster.local from pod  dns-4051/dns-test-493049a1-9fc5-4a82-935a-6947cc711ae1 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun 18 06:20:27.436: INFO: File jessie_udp@dns-test-service-3.dns-4051.svc.cluster.local from pod  dns-4051/dns-test-493049a1-9fc5-4a82-935a-6947cc711ae1 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun 18 06:20:27.436: INFO: Lookups using dns-4051/dns-test-493049a1-9fc5-4a82-935a-6947cc711ae1 failed for: [wheezy_udp@dns-test-service-3.dns-4051.svc.cluster.local jessie_udp@dns-test-service-3.dns-4051.svc.cluster.local]

  Jun 18 06:20:27.442: INFO: Pod client logs for webserver: 
  Jun 18 06:20:27.448: INFO: Pod client logs for querier: 
  Jun 18 06:20:27.454: INFO: Pod client logs for jessie-querier: 
  E0618 06:20:27.534567      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:28.534965      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:29.535481      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:30.535630      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:31.535992      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:20:32.427: INFO: File wheezy_udp@dns-test-service-3.dns-4051.svc.cluster.local from pod  dns-4051/dns-test-493049a1-9fc5-4a82-935a-6947cc711ae1 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun 18 06:20:32.432: INFO: File jessie_udp@dns-test-service-3.dns-4051.svc.cluster.local from pod  dns-4051/dns-test-493049a1-9fc5-4a82-935a-6947cc711ae1 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun 18 06:20:32.432: INFO: Lookups using dns-4051/dns-test-493049a1-9fc5-4a82-935a-6947cc711ae1 failed for: [wheezy_udp@dns-test-service-3.dns-4051.svc.cluster.local jessie_udp@dns-test-service-3.dns-4051.svc.cluster.local]

  Jun 18 06:20:32.438: INFO: Pod client logs for webserver: 
  Jun 18 06:20:32.443: INFO: Pod client logs for querier: 
  Jun 18 06:20:32.449: INFO: Pod client logs for jessie-querier: 
  E0618 06:20:32.536886      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:33.537277      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:34.537649      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:35.538724      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:36.538811      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:20:37.428: INFO: File wheezy_udp@dns-test-service-3.dns-4051.svc.cluster.local from pod  dns-4051/dns-test-493049a1-9fc5-4a82-935a-6947cc711ae1 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun 18 06:20:37.432: INFO: File jessie_udp@dns-test-service-3.dns-4051.svc.cluster.local from pod  dns-4051/dns-test-493049a1-9fc5-4a82-935a-6947cc711ae1 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun 18 06:20:37.432: INFO: Lookups using dns-4051/dns-test-493049a1-9fc5-4a82-935a-6947cc711ae1 failed for: [wheezy_udp@dns-test-service-3.dns-4051.svc.cluster.local jessie_udp@dns-test-service-3.dns-4051.svc.cluster.local]

  Jun 18 06:20:37.438: INFO: Pod client logs for webserver: 
  Jun 18 06:20:37.444: INFO: Pod client logs for querier: 
  Jun 18 06:20:37.451: INFO: Pod client logs for jessie-querier: 
  E0618 06:20:37.539508      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:38.540602      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:39.541078      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:40.541720      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:41.542334      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:20:42.434: INFO: DNS probes using dns-test-493049a1-9fc5-4a82-935a-6947cc711ae1 succeeded

  STEP: changing the service to type=ClusterIP @ 06/18/24 06:20:42.434
  W0618 06:20:42.455855      18 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4051.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-4051.svc.cluster.local; sleep 1; done
   @ 06/18/24 06:20:42.456
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4051.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-4051.svc.cluster.local; sleep 1; done
   @ 06/18/24 06:20:42.456
  STEP: creating a third pod to probe DNS @ 06/18/24 06:20:42.456
  STEP: submitting the pod to kubernetes @ 06/18/24 06:20:42.459
  E0618 06:20:42.542871      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:43.543305      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/18/24 06:20:44.48
  STEP: looking for the results for each expected name from probers @ 06/18/24 06:20:44.484
  Jun 18 06:20:44.494: INFO: DNS probes using dns-test-c8e7a426-dc32-4c56-9d59-78478d148511 succeeded

  Jun 18 06:20:44.494: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 06/18/24 06:20:44.498
  STEP: deleting the pod @ 06/18/24 06:20:44.51
  STEP: deleting the pod @ 06/18/24 06:20:44.519
  STEP: deleting the test externalName service @ 06/18/24 06:20:44.535
  E0618 06:20:44.543648      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "dns-4051" for this suite. @ 06/18/24 06:20:44.549
• [36.319 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 06/18/24 06:20:44.557
  Jun 18 06:20:44.557: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename projected @ 06/18/24 06:20:44.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:20:44.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:20:44.575
  STEP: Creating configMap with name projected-configmap-test-volume-b86e7e45-8fd9-45fa-bc10-0ab1f36fb839 @ 06/18/24 06:20:44.578
  STEP: Creating a pod to test consume configMaps @ 06/18/24 06:20:44.582
  E0618 06:20:45.543905      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:46.544129      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:47.545331      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:48.545327      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:20:48.602
  Jun 18 06:20:48.607: INFO: Trying to get logs from node ck-128-worker-2 pod pod-projected-configmaps-f9403fbe-9a1e-40f4-93b0-a6c4f721857a container agnhost-container: <nil>
  STEP: delete the pod @ 06/18/24 06:20:48.618
  Jun 18 06:20:48.660: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1376" for this suite. @ 06/18/24 06:20:48.672
• [4.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 06/18/24 06:20:48.69
  Jun 18 06:20:48.690: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename daemonsets @ 06/18/24 06:20:48.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:20:48.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:20:48.729
  STEP: Creating simple DaemonSet "daemon-set" @ 06/18/24 06:20:48.76
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/18/24 06:20:48.765
  Jun 18 06:20:48.769: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 06:20:48.772: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 06:20:48.772: INFO: Node ck-128-worker-1 is running 0 daemon pod, expected 1
  E0618 06:20:49.545820      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:20:49.778: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 06:20:49.782: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 18 06:20:49.782: INFO: Node ck-128-worker-1 is running 0 daemon pod, expected 1
  E0618 06:20:50.546337      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:20:50.778: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 06:20:50.781: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 18 06:20:50.781: INFO: Node ck-128-worker-1 is running 0 daemon pod, expected 1
  E0618 06:20:51.546504      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:20:51.778: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 06:20:51.782: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 18 06:20:51.782: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 06/18/24 06:20:51.785
  STEP: DeleteCollection of the DaemonSets @ 06/18/24 06:20:51.789
  STEP: Verify that ReplicaSets have been deleted @ 06/18/24 06:20:51.795
  Jun 18 06:20:51.804: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"20377"},"items":null}

  Jun 18 06:20:51.809: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"20377"},"items":[{"metadata":{"name":"daemon-set-69vkh","generateName":"daemon-set-","namespace":"daemonsets-9138","uid":"43fc1faf-3f8d-41c0-974c-d55febe7c9ba","resourceVersion":"20356","creationTimestamp":"2024-06-18T06:20:48Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"5b415d34ef407203f232f3644deab0046c82a1f751c071b0c4018a4bfdbc6a44","cni.projectcalico.org/podIP":"172.17.196.200/32","cni.projectcalico.org/podIPs":"172.17.196.200/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"8e1ba8a6-2b82-4dab-99e4-09ab4e3048ce","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-06-18T06:20:48Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8e1ba8a6-2b82-4dab-99e4-09ab4e3048ce\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-06-18T06:20:49Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-06-18T06:20:49Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.17.196.200\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-5td86","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-5td86","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ck-128-worker-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ck-128-worker-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-18T06:20:48Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-18T06:20:49Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-18T06:20:49Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-18T06:20:48Z"}],"hostIP":"192.168.190.166","podIP":"172.17.196.200","podIPs":[{"ip":"172.17.196.200"}],"startTime":"2024-06-18T06:20:48Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-06-18T06:20:49Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://6f662fa74e2dce4d5502d8af27e679a2b6f2d54b3e20ad933112aae574bd6127","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-gxrn7","generateName":"daemon-set-","namespace":"daemonsets-9138","uid":"bbd4f68c-1537-412f-a36c-8d61c6dd1a86","resourceVersion":"20365","creationTimestamp":"2024-06-18T06:20:48Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"d273979cd6aa7de0de62b12e59c0dfc8a3a55225e2580a8408ce6075a212059f","cni.projectcalico.org/podIP":"172.17.66.133/32","cni.projectcalico.org/podIPs":"172.17.66.133/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"8e1ba8a6-2b82-4dab-99e4-09ab4e3048ce","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-06-18T06:20:48Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8e1ba8a6-2b82-4dab-99e4-09ab4e3048ce\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-06-18T06:20:49Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-06-18T06:20:50Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.17.66.133\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-hj7dz","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-hj7dz","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ck-128-worker-3","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ck-128-worker-3"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-18T06:20:48Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-18T06:20:50Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-18T06:20:50Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-18T06:20:48Z"}],"hostIP":"192.168.190.167","podIP":"172.17.66.133","podIPs":[{"ip":"172.17.66.133"}],"startTime":"2024-06-18T06:20:48Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-06-18T06:20:49Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://fc3a71518a63a884a5b4bf62646c31ee894e32b01faf01e2f062c9f668838622","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-xdrvk","generateName":"daemon-set-","namespace":"daemonsets-9138","uid":"4629daa8-610d-46e7-b255-02cb5140ec5d","resourceVersion":"20374","creationTimestamp":"2024-06-18T06:20:48Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"b6c76e57794c106f475a6823dfcac8d9cfbb95f9dd877c1a796ba6bb51c7776c","cni.projectcalico.org/podIP":"172.17.152.59/32","cni.projectcalico.org/podIPs":"172.17.152.59/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"8e1ba8a6-2b82-4dab-99e4-09ab4e3048ce","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-06-18T06:20:48Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8e1ba8a6-2b82-4dab-99e4-09ab4e3048ce\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-06-18T06:20:50Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-06-18T06:20:51Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.17.152.59\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-vc92n","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-vc92n","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ck-128-worker-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ck-128-worker-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-18T06:20:48Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-18T06:20:51Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-18T06:20:51Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-18T06:20:48Z"}],"hostIP":"192.168.190.169","podIP":"172.17.152.59","podIPs":[{"ip":"172.17.152.59"}],"startTime":"2024-06-18T06:20:48Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-06-18T06:20:50Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://4b8499e804c5ad72127b5026fb6603fc1ed087d162797dfb6c2d6ab6e71e5b0c","started":true}],"qosClass":"BestEffort"}}]}

  Jun 18 06:20:51.828: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9138" for this suite. @ 06/18/24 06:20:51.833
• [3.147 seconds]
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 06/18/24 06:20:51.837
  Jun 18 06:20:51.837: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename proxy @ 06/18/24 06:20:51.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:20:51.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:20:51.854
  Jun 18 06:20:51.857: INFO: Creating pod...
  E0618 06:20:52.547242      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:53.547832      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:20:53.870: INFO: Creating service...
  Jun 18 06:20:53.880: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9834/pods/agnhost/proxy/some/path/with/DELETE
  Jun 18 06:20:53.885: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun 18 06:20:53.885: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9834/pods/agnhost/proxy/some/path/with/GET
  Jun 18 06:20:53.891: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Jun 18 06:20:53.891: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9834/pods/agnhost/proxy/some/path/with/HEAD
  Jun 18 06:20:53.896: INFO: http.Client request:HEAD | StatusCode:200
  Jun 18 06:20:53.896: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9834/pods/agnhost/proxy/some/path/with/OPTIONS
  Jun 18 06:20:53.899: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun 18 06:20:53.899: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9834/pods/agnhost/proxy/some/path/with/PATCH
  Jun 18 06:20:53.903: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun 18 06:20:53.903: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9834/pods/agnhost/proxy/some/path/with/POST
  Jun 18 06:20:53.906: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun 18 06:20:53.906: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9834/pods/agnhost/proxy/some/path/with/PUT
  Jun 18 06:20:53.909: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun 18 06:20:53.909: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9834/services/test-service/proxy/some/path/with/DELETE
  Jun 18 06:20:53.913: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun 18 06:20:53.913: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9834/services/test-service/proxy/some/path/with/GET
  Jun 18 06:20:53.918: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Jun 18 06:20:53.918: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9834/services/test-service/proxy/some/path/with/HEAD
  Jun 18 06:20:53.923: INFO: http.Client request:HEAD | StatusCode:200
  Jun 18 06:20:53.923: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9834/services/test-service/proxy/some/path/with/OPTIONS
  Jun 18 06:20:53.927: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun 18 06:20:53.927: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9834/services/test-service/proxy/some/path/with/PATCH
  Jun 18 06:20:53.930: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun 18 06:20:53.930: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9834/services/test-service/proxy/some/path/with/POST
  Jun 18 06:20:53.934: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun 18 06:20:53.934: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9834/services/test-service/proxy/some/path/with/PUT
  Jun 18 06:20:53.937: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun 18 06:20:53.937: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-9834" for this suite. @ 06/18/24 06:20:53.942
• [2.109 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 06/18/24 06:20:53.947
  Jun 18 06:20:53.947: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/18/24 06:20:53.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:20:53.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:20:53.963
  STEP: set up a multi version CRD @ 06/18/24 06:20:53.966
  Jun 18 06:20:53.967: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  E0618 06:20:54.548238      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:55.548451      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:56.549110      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:20:57.549803      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 06/18/24 06:20:57.624
  STEP: check the new version name is served @ 06/18/24 06:20:57.648
  E0618 06:20:58.550535      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 06/18/24 06:20:58.686
  STEP: check the other version is not changed @ 06/18/24 06:20:59.411
  E0618 06:20:59.551217      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:21:00.551991      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:21:01.552327      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:21:02.260: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8306" for this suite. @ 06/18/24 06:21:02.269
• [8.327 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 06/18/24 06:21:02.278
  Jun 18 06:21:02.278: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename proxy @ 06/18/24 06:21:02.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:21:02.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:21:02.295
  Jun 18 06:21:02.298: INFO: Creating pod...
  E0618 06:21:02.553383      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:21:03.554120      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:21:04.311: INFO: Creating service...
  Jun 18 06:21:04.320: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4629/pods/agnhost/proxy?method=DELETE
  Jun 18 06:21:04.329: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun 18 06:21:04.329: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4629/pods/agnhost/proxy?method=OPTIONS
  Jun 18 06:21:04.336: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun 18 06:21:04.337: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4629/pods/agnhost/proxy?method=PATCH
  Jun 18 06:21:04.340: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun 18 06:21:04.340: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4629/pods/agnhost/proxy?method=POST
  Jun 18 06:21:04.344: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun 18 06:21:04.344: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4629/pods/agnhost/proxy?method=PUT
  Jun 18 06:21:04.347: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun 18 06:21:04.347: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4629/services/e2e-proxy-test-service/proxy?method=DELETE
  Jun 18 06:21:04.357: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun 18 06:21:04.357: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4629/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Jun 18 06:21:04.361: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun 18 06:21:04.362: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4629/services/e2e-proxy-test-service/proxy?method=PATCH
  Jun 18 06:21:04.367: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun 18 06:21:04.367: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4629/services/e2e-proxy-test-service/proxy?method=POST
  Jun 18 06:21:04.371: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun 18 06:21:04.371: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4629/services/e2e-proxy-test-service/proxy?method=PUT
  Jun 18 06:21:04.376: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun 18 06:21:04.376: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4629/pods/agnhost/proxy?method=GET
  Jun 18 06:21:04.379: INFO: http.Client request:GET StatusCode:301
  Jun 18 06:21:04.380: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4629/services/e2e-proxy-test-service/proxy?method=GET
  Jun 18 06:21:04.386: INFO: http.Client request:GET StatusCode:301
  Jun 18 06:21:04.386: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4629/pods/agnhost/proxy?method=HEAD
  Jun 18 06:21:04.388: INFO: http.Client request:HEAD StatusCode:301
  Jun 18 06:21:04.388: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4629/services/e2e-proxy-test-service/proxy?method=HEAD
  Jun 18 06:21:04.392: INFO: http.Client request:HEAD StatusCode:301
  Jun 18 06:21:04.392: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4629" for this suite. @ 06/18/24 06:21:04.397
• [2.126 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 06/18/24 06:21:04.404
  Jun 18 06:21:04.404: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename pods @ 06/18/24 06:21:04.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:21:04.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:21:04.424
  STEP: creating pod @ 06/18/24 06:21:04.427
  E0618 06:21:04.554543      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:21:05.555525      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:21:06.454: INFO: Pod pod-hostip-3c6ddbdf-75f2-4bc3-b8ab-a7b7706b9a29 has hostIP: 192.168.190.166
  Jun 18 06:21:06.455: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3481" for this suite. @ 06/18/24 06:21:06.46
• [2.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:96
  STEP: Creating a kubernetes client @ 06/18/24 06:21:06.472
  Jun 18 06:21:06.472: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename aggregator @ 06/18/24 06:21:06.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:21:06.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:21:06.492
  Jun 18 06:21:06.498: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Registering the sample API server. @ 06/18/24 06:21:06.499
  E0618 06:21:06.555880      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:21:07.280: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Jun 18 06:21:07.300: INFO: new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  E0618 06:21:07.556051      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:21:08.556407      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:21:09.351: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0618 06:21:09.556563      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:21:10.557373      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:21:11.355: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0618 06:21:11.557831      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:21:12.558258      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:21:13.355: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0618 06:21:13.558758      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:21:14.559247      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:21:15.355: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0618 06:21:15.559948      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:21:16.560308      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:21:17.355: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0618 06:21:17.561463      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:21:18.562060      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:21:19.355: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0618 06:21:19.562909      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:21:20.563612      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:21:21.355: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0618 06:21:21.563772      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:21:22.564137      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:21:23.355: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0618 06:21:23.564924      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:21:24.565345      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:21:25.355: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0618 06:21:25.565459      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:21:26.565975      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:21:27.357: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0618 06:21:27.566945      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:21:28.567628      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:21:29.355: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0618 06:21:29.568673      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:21:30.569343      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:21:31.355: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 21, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0618 06:21:31.570389      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:21:32.570441      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:21:33.477: INFO: Waited 116.020814ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 06/18/24 06:21:33.516
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 06/18/24 06:21:33.519
  STEP: List APIServices @ 06/18/24 06:21:33.525
  Jun 18 06:21:33.531: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 06/18/24 06:21:33.531
  Jun 18 06:21:33.543: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 06/18/24 06:21:33.543
  Jun 18 06:21:33.550: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.June, 18, 6, 21, 33, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 06/18/24 06:21:33.55
  Jun 18 06:21:33.553: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-06-18 06:21:33 +0000 UTC Passed all checks passed}
  Jun 18 06:21:33.553: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 18 06:21:33.553: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 06/18/24 06:21:33.554
  Jun 18 06:21:33.563: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete APIService "dynamic-flunder-1734222633" @ 06/18/24 06:21:33.563
  E0618 06:21:33.571095      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 06/18/24 06:21:33.575
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 06/18/24 06:21:33.581
  STEP: Patch APIService Status @ 06/18/24 06:21:33.584
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 06/18/24 06:21:33.591
  Jun 18 06:21:33.595: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-06-18 06:21:33 +0000 UTC Passed all checks passed}
  Jun 18 06:21:33.595: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 18 06:21:33.595: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Jun 18 06:21:33.595: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "e2e-apiservice=patched" @ 06/18/24 06:21:33.595
  STEP: Confirm that the generated APIService has been deleted @ 06/18/24 06:21:33.6
  Jun 18 06:21:33.600: INFO: Requesting list of APIServices to confirm quantity
  Jun 18 06:21:33.605: INFO: Found 0 APIService with label "e2e-apiservice=patched"
  Jun 18 06:21:33.605: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Jun 18 06:21:33.667: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-6127" for this suite. @ 06/18/24 06:21:33.69
• [27.223 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:266
  STEP: Creating a kubernetes client @ 06/18/24 06:21:33.704
  Jun 18 06:21:33.704: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename ingressclass @ 06/18/24 06:21:33.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:21:33.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:21:33.723
  STEP: getting /apis @ 06/18/24 06:21:33.725
  STEP: getting /apis/networking.k8s.io @ 06/18/24 06:21:33.73
  STEP: getting /apis/networking.k8s.iov1 @ 06/18/24 06:21:33.731
  STEP: creating @ 06/18/24 06:21:33.732
  STEP: getting @ 06/18/24 06:21:33.744
  STEP: listing @ 06/18/24 06:21:33.746
  STEP: watching @ 06/18/24 06:21:33.749
  Jun 18 06:21:33.749: INFO: starting watch
  STEP: patching @ 06/18/24 06:21:33.751
  STEP: updating @ 06/18/24 06:21:33.756
  Jun 18 06:21:33.760: INFO: waiting for watch events with expected annotations
  Jun 18 06:21:33.761: INFO: saw patched and updated annotations
  STEP: deleting @ 06/18/24 06:21:33.761
  STEP: deleting a collection @ 06/18/24 06:21:33.769
  Jun 18 06:21:33.780: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-2897" for this suite. @ 06/18/24 06:21:33.785
• [0.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 06/18/24 06:21:33.792
  Jun 18 06:21:33.792: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename daemonsets @ 06/18/24 06:21:33.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:21:33.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:21:33.809
  STEP: Creating simple DaemonSet "daemon-set" @ 06/18/24 06:21:33.832
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/18/24 06:21:33.837
  Jun 18 06:21:33.841: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 06:21:33.843: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 06:21:33.843: INFO: Node ck-128-worker-1 is running 0 daemon pod, expected 1
  E0618 06:21:34.571429      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:21:34.849: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 06:21:34.852: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 06:21:34.852: INFO: Node ck-128-worker-1 is running 0 daemon pod, expected 1
  E0618 06:21:35.572099      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:21:35.850: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 06:21:35.852: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 18 06:21:35.852: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 06/18/24 06:21:35.854
  Jun 18 06:21:35.858: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 06/18/24 06:21:35.858
  Jun 18 06:21:35.881: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 06/18/24 06:21:35.881
  Jun 18 06:21:35.883: INFO: Observed &DaemonSet event: ADDED
  Jun 18 06:21:35.883: INFO: Observed &DaemonSet event: MODIFIED
  Jun 18 06:21:35.884: INFO: Observed &DaemonSet event: MODIFIED
  Jun 18 06:21:35.884: INFO: Observed &DaemonSet event: MODIFIED
  Jun 18 06:21:35.884: INFO: Observed &DaemonSet event: MODIFIED
  Jun 18 06:21:35.884: INFO: Found daemon set daemon-set in namespace daemonsets-7335 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun 18 06:21:35.884: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 06/18/24 06:21:35.884
  STEP: watching for the daemon set status to be patched @ 06/18/24 06:21:35.895
  Jun 18 06:21:35.897: INFO: Observed &DaemonSet event: ADDED
  Jun 18 06:21:35.897: INFO: Observed &DaemonSet event: MODIFIED
  Jun 18 06:21:35.897: INFO: Observed &DaemonSet event: MODIFIED
  Jun 18 06:21:35.897: INFO: Observed &DaemonSet event: MODIFIED
  Jun 18 06:21:35.897: INFO: Observed &DaemonSet event: MODIFIED
  Jun 18 06:21:35.897: INFO: Observed daemon set daemon-set in namespace daemonsets-7335 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun 18 06:21:35.898: INFO: Observed &DaemonSet event: MODIFIED
  Jun 18 06:21:35.898: INFO: Found daemon set daemon-set in namespace daemonsets-7335 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Jun 18 06:21:35.898: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 06/18/24 06:21:35.903
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7335, will wait for the garbage collector to delete the pods @ 06/18/24 06:21:35.903
  Jun 18 06:21:35.962: INFO: Deleting DaemonSet.extensions daemon-set took: 5.68762ms
  Jun 18 06:21:36.062: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.767426ms
  E0618 06:21:36.573028      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:21:37.573456      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:21:38.366: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 06:21:38.366: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 18 06:21:38.368: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"20819"},"items":null}

  Jun 18 06:21:38.370: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"20819"},"items":null}

  Jun 18 06:21:38.381: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7335" for this suite. @ 06/18/24 06:21:38.384
• [4.596 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:479
  STEP: Creating a kubernetes client @ 06/18/24 06:21:38.394
  Jun 18 06:21:38.394: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename gc @ 06/18/24 06:21:38.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:21:38.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:21:38.413
  STEP: create the deployment @ 06/18/24 06:21:38.416
  W0618 06:21:38.421617      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 06/18/24 06:21:38.421
  E0618 06:21:38.573827      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 06/18/24 06:21:38.934
  STEP: wait for all rs to be garbage collected @ 06/18/24 06:21:38.942
  STEP: expected 0 rs, got 1 rs @ 06/18/24 06:21:38.95
  STEP: expected 0 pods, got 2 pods @ 06/18/24 06:21:38.954
  STEP: Gathering metrics @ 06/18/24 06:21:39.464
  Jun 18 06:21:39.565: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 18 06:21:39.567: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6768" for this suite. @ 06/18/24 06:21:39.572
  E0618 06:21:39.574744      18 retrywatcher.go:129] "Watch failed" err="context canceled"
• [1.184 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 06/18/24 06:21:39.579
  Jun 18 06:21:39.579: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename downward-api @ 06/18/24 06:21:39.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:21:39.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:21:39.597
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 06:21:39.6
  E0618 06:21:40.575138      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:21:41.575578      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:21:41.614
  Jun 18 06:21:41.617: INFO: Trying to get logs from node ck-128-worker-1 pod downwardapi-volume-9285a86b-da20-472d-846e-22263f7c0edf container client-container: <nil>
  STEP: delete the pod @ 06/18/24 06:21:41.642
  Jun 18 06:21:41.661: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1749" for this suite. @ 06/18/24 06:21:41.665
• [2.091 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:232
  STEP: Creating a kubernetes client @ 06/18/24 06:21:41.67
  Jun 18 06:21:41.670: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename resourcequota @ 06/18/24 06:21:41.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:21:41.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:21:41.688
  STEP: Counting existing ResourceQuota @ 06/18/24 06:21:41.691
  E0618 06:21:42.575712      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:21:43.576447      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:21:44.577481      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:21:45.577490      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:21:46.577766      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/18/24 06:21:46.697
  STEP: Ensuring resource quota status is calculated @ 06/18/24 06:21:46.702
  E0618 06:21:47.577863      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:21:48.578670      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 06/18/24 06:21:48.708
  STEP: Ensuring ResourceQuota status captures the pod usage @ 06/18/24 06:21:48.73
  E0618 06:21:49.578757      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:21:50.580821      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 06/18/24 06:21:50.735
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 06/18/24 06:21:50.738
  STEP: Ensuring a pod cannot update its resource requirements @ 06/18/24 06:21:50.74
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 06/18/24 06:21:50.744
  E0618 06:21:51.580961      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:21:52.581370      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 06/18/24 06:21:52.749
  STEP: Ensuring resource quota status released the pod usage @ 06/18/24 06:21:52.761
  E0618 06:21:53.581413      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:21:54.582423      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:21:54.766: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6573" for this suite. @ 06/18/24 06:21:54.771
• [13.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 06/18/24 06:21:54.779
  Jun 18 06:21:54.779: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename services @ 06/18/24 06:21:54.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:21:54.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:21:54.808
  STEP: creating service nodeport-test with type=NodePort in namespace services-3505 @ 06/18/24 06:21:54.812
  STEP: creating replication controller nodeport-test in namespace services-3505 @ 06/18/24 06:21:54.827
  I0618 06:21:54.837784      18 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-3505, replica count: 2
  E0618 06:21:55.582623      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:21:56.583143      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:21:57.583366      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0618 06:21:57.888985      18 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 18 06:21:57.889: INFO: Creating new exec pod
  E0618 06:21:58.584436      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:21:59.584684      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:00.587935      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:22:00.907: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-3505 exec execpod7xslj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Jun 18 06:22:01.055: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Jun 18 06:22:01.055: INFO: stdout: "nodeport-test-h2ptg"
  Jun 18 06:22:01.055: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-3505 exec execpod7xslj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.110.17.172 80'
  Jun 18 06:22:01.181: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.110.17.172 80\nConnection to 10.110.17.172 80 port [tcp/http] succeeded!\n"
  Jun 18 06:22:01.181: INFO: stdout: "nodeport-test-h2ptg"
  Jun 18 06:22:01.181: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-3505 exec execpod7xslj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.190.169 32638'
  Jun 18 06:22:01.303: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.190.169 32638\nConnection to 192.168.190.169 32638 port [tcp/*] succeeded!\n"
  Jun 18 06:22:01.303: INFO: stdout: "nodeport-test-h2ptg"
  Jun 18 06:22:01.303: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-3505 exec execpod7xslj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.190.166 32638'
  Jun 18 06:22:01.422: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.190.166 32638\nConnection to 192.168.190.166 32638 port [tcp/*] succeeded!\n"
  Jun 18 06:22:01.422: INFO: stdout: "nodeport-test-crvh5"
  Jun 18 06:22:01.422: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3505" for this suite. @ 06/18/24 06:22:01.428
• [6.655 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:333
  STEP: Creating a kubernetes client @ 06/18/24 06:22:01.435
  Jun 18 06:22:01.435: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename sched-pred @ 06/18/24 06:22:01.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:22:01.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:22:01.454
  Jun 18 06:22:01.458: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun 18 06:22:01.466: INFO: Waiting for terminating namespaces to be deleted...
  Jun 18 06:22:01.468: INFO: 
  Logging pods the apiserver thinks is on node ck-128-worker-1 before test
  Jun 18 06:22:01.475: INFO: calico-kube-controllers-8d76c5f9b-r6nmr from kube-system started at 2024-06-18 05:29:18 +0000 UTC (1 container statuses recorded)
  Jun 18 06:22:01.475: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Jun 18 06:22:01.475: INFO: calico-node-g84th from kube-system started at 2024-06-18 05:29:18 +0000 UTC (1 container statuses recorded)
  Jun 18 06:22:01.475: INFO: 	Container calico-node ready: true, restart count 0
  Jun 18 06:22:01.475: INFO: kube-proxy-rm957 from kube-system started at 2024-06-18 05:17:10 +0000 UTC (1 container statuses recorded)
  Jun 18 06:22:01.475: INFO: 	Container kube-proxy ready: true, restart count 0
  Jun 18 06:22:01.475: INFO: secloudit-registry-agent-5skw6 from secloudit started at 2024-06-18 05:25:53 +0000 UTC (1 container statuses recorded)
  Jun 18 06:22:01.475: INFO: 	Container secloudit-registry-agent ready: false, restart count 0
  Jun 18 06:22:01.475: INFO: nodeport-test-h2ptg from services-3505 started at 2024-06-18 06:21:54 +0000 UTC (1 container statuses recorded)
  Jun 18 06:22:01.475: INFO: 	Container nodeport-test ready: true, restart count 0
  Jun 18 06:22:01.475: INFO: sonobuoy-systemd-logs-daemon-set-d21185bcb31b4ec9-zbzc8 from sonobuoy started at 2024-06-18 05:35:24 +0000 UTC (2 container statuses recorded)
  Jun 18 06:22:01.475: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 18 06:22:01.475: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 18 06:22:01.475: INFO: 
  Logging pods the apiserver thinks is on node ck-128-worker-2 before test
  Jun 18 06:22:01.483: INFO: calico-node-r67nr from kube-system started at 2024-06-18 05:29:18 +0000 UTC (1 container statuses recorded)
  Jun 18 06:22:01.483: INFO: 	Container calico-node ready: true, restart count 0
  Jun 18 06:22:01.483: INFO: kube-proxy-9s677 from kube-system started at 2024-06-18 05:17:10 +0000 UTC (1 container statuses recorded)
  Jun 18 06:22:01.483: INFO: 	Container kube-proxy ready: true, restart count 0
  Jun 18 06:22:01.483: INFO: secloudit-registry-agent-wx8r2 from secloudit started at 2024-06-18 05:59:02 +0000 UTC (1 container statuses recorded)
  Jun 18 06:22:01.483: INFO: 	Container secloudit-registry-agent ready: false, restart count 0
  Jun 18 06:22:01.483: INFO: execpod7xslj from services-3505 started at 2024-06-18 06:21:57 +0000 UTC (1 container statuses recorded)
  Jun 18 06:22:01.483: INFO: 	Container agnhost-container ready: true, restart count 0
  Jun 18 06:22:01.483: INFO: nodeport-test-crvh5 from services-3505 started at 2024-06-18 06:21:54 +0000 UTC (1 container statuses recorded)
  Jun 18 06:22:01.483: INFO: 	Container nodeport-test ready: true, restart count 0
  Jun 18 06:22:01.483: INFO: sonobuoy from sonobuoy started at 2024-06-18 05:35:23 +0000 UTC (1 container statuses recorded)
  Jun 18 06:22:01.483: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun 18 06:22:01.483: INFO: sonobuoy-systemd-logs-daemon-set-d21185bcb31b4ec9-nnwvq from sonobuoy started at 2024-06-18 05:35:24 +0000 UTC (2 container statuses recorded)
  Jun 18 06:22:01.483: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 18 06:22:01.483: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 18 06:22:01.483: INFO: 
  Logging pods the apiserver thinks is on node ck-128-worker-3 before test
  Jun 18 06:22:01.493: INFO: calico-node-f85nn from kube-system started at 2024-06-18 05:29:18 +0000 UTC (1 container statuses recorded)
  Jun 18 06:22:01.493: INFO: 	Container calico-node ready: true, restart count 0
  Jun 18 06:22:01.493: INFO: kube-proxy-tn5dc from kube-system started at 2024-06-18 05:17:10 +0000 UTC (1 container statuses recorded)
  Jun 18 06:22:01.493: INFO: 	Container kube-proxy ready: true, restart count 0
  Jun 18 06:22:01.493: INFO: secloudit-registry-agent-vh54z from secloudit started at 2024-06-18 05:25:53 +0000 UTC (1 container statuses recorded)
  Jun 18 06:22:01.493: INFO: 	Container secloudit-registry-agent ready: false, restart count 0
  Jun 18 06:22:01.493: INFO: sonobuoy-e2e-job-1e0b3c84f5ad40e5 from sonobuoy started at 2024-06-18 05:35:24 +0000 UTC (2 container statuses recorded)
  Jun 18 06:22:01.493: INFO: 	Container e2e ready: true, restart count 0
  Jun 18 06:22:01.493: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 18 06:22:01.493: INFO: sonobuoy-systemd-logs-daemon-set-d21185bcb31b4ec9-65bjg from sonobuoy started at 2024-06-18 05:35:24 +0000 UTC (2 container statuses recorded)
  Jun 18 06:22:01.493: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 18 06:22:01.493: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ck-128-worker-1 @ 06/18/24 06:22:01.519
  STEP: verifying the node has the label node ck-128-worker-2 @ 06/18/24 06:22:01.539
  STEP: verifying the node has the label node ck-128-worker-3 @ 06/18/24 06:22:01.557
  Jun 18 06:22:01.576: INFO: Pod calico-kube-controllers-8d76c5f9b-r6nmr requesting resource cpu=0m on Node ck-128-worker-1
  Jun 18 06:22:01.576: INFO: Pod calico-node-f85nn requesting resource cpu=250m on Node ck-128-worker-3
  Jun 18 06:22:01.576: INFO: Pod calico-node-g84th requesting resource cpu=250m on Node ck-128-worker-1
  Jun 18 06:22:01.576: INFO: Pod calico-node-r67nr requesting resource cpu=250m on Node ck-128-worker-2
  Jun 18 06:22:01.576: INFO: Pod kube-proxy-9s677 requesting resource cpu=0m on Node ck-128-worker-2
  Jun 18 06:22:01.576: INFO: Pod kube-proxy-rm957 requesting resource cpu=0m on Node ck-128-worker-1
  Jun 18 06:22:01.576: INFO: Pod kube-proxy-tn5dc requesting resource cpu=0m on Node ck-128-worker-3
  Jun 18 06:22:01.576: INFO: Pod secloudit-registry-agent-5skw6 requesting resource cpu=0m on Node ck-128-worker-1
  Jun 18 06:22:01.576: INFO: Pod secloudit-registry-agent-vh54z requesting resource cpu=0m on Node ck-128-worker-3
  Jun 18 06:22:01.576: INFO: Pod secloudit-registry-agent-wx8r2 requesting resource cpu=0m on Node ck-128-worker-2
  Jun 18 06:22:01.576: INFO: Pod execpod7xslj requesting resource cpu=0m on Node ck-128-worker-2
  Jun 18 06:22:01.576: INFO: Pod nodeport-test-crvh5 requesting resource cpu=0m on Node ck-128-worker-2
  Jun 18 06:22:01.576: INFO: Pod nodeport-test-h2ptg requesting resource cpu=0m on Node ck-128-worker-1
  Jun 18 06:22:01.576: INFO: Pod sonobuoy requesting resource cpu=0m on Node ck-128-worker-2
  Jun 18 06:22:01.576: INFO: Pod sonobuoy-e2e-job-1e0b3c84f5ad40e5 requesting resource cpu=0m on Node ck-128-worker-3
  Jun 18 06:22:01.576: INFO: Pod sonobuoy-systemd-logs-daemon-set-d21185bcb31b4ec9-65bjg requesting resource cpu=0m on Node ck-128-worker-3
  Jun 18 06:22:01.576: INFO: Pod sonobuoy-systemd-logs-daemon-set-d21185bcb31b4ec9-nnwvq requesting resource cpu=0m on Node ck-128-worker-2
  Jun 18 06:22:01.576: INFO: Pod sonobuoy-systemd-logs-daemon-set-d21185bcb31b4ec9-zbzc8 requesting resource cpu=0m on Node ck-128-worker-1
  STEP: Starting Pods to consume most of the cluster CPU. @ 06/18/24 06:22:01.576
  Jun 18 06:22:01.576: INFO: Creating a pod which consumes cpu=4025m on Node ck-128-worker-1
  Jun 18 06:22:01.587: INFO: Creating a pod which consumes cpu=4025m on Node ck-128-worker-2
  E0618 06:22:01.589107      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:22:01.596: INFO: Creating a pod which consumes cpu=4025m on Node ck-128-worker-3
  E0618 06:22:02.590167      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:03.591236      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 06/18/24 06:22:03.622
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-309eb31a-1c73-45a8-978d-faeec19eedb8.17da0503c81761b7], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9701/filler-pod-309eb31a-1c73-45a8-978d-faeec19eedb8 to ck-128-worker-1] @ 06/18/24 06:22:03.626
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-309eb31a-1c73-45a8-978d-faeec19eedb8.17da0503e9859595], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 06/18/24 06:22:03.626
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-309eb31a-1c73-45a8-978d-faeec19eedb8.17da0503edadacfa], Reason = [Created], Message = [Created container filler-pod-309eb31a-1c73-45a8-978d-faeec19eedb8] @ 06/18/24 06:22:03.626
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-309eb31a-1c73-45a8-978d-faeec19eedb8.17da0503ee1889fc], Reason = [Started], Message = [Started container filler-pod-309eb31a-1c73-45a8-978d-faeec19eedb8] @ 06/18/24 06:22:03.626
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-858d99fa-862b-4904-8b03-b989e7c70704.17da0503c8c3d930], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9701/filler-pod-858d99fa-862b-4904-8b03-b989e7c70704 to ck-128-worker-2] @ 06/18/24 06:22:03.626
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-858d99fa-862b-4904-8b03-b989e7c70704.17da0503e9c7ca8d], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 06/18/24 06:22:03.626
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-858d99fa-862b-4904-8b03-b989e7c70704.17da0503ee38bb0c], Reason = [Created], Message = [Created container filler-pod-858d99fa-862b-4904-8b03-b989e7c70704] @ 06/18/24 06:22:03.626
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-858d99fa-862b-4904-8b03-b989e7c70704.17da0503eee698d4], Reason = [Started], Message = [Started container filler-pod-858d99fa-862b-4904-8b03-b989e7c70704] @ 06/18/24 06:22:03.626
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9c988f84-1a42-481f-b62d-d4c457f98310.17da0503c946e7eb], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9701/filler-pod-9c988f84-1a42-481f-b62d-d4c457f98310 to ck-128-worker-3] @ 06/18/24 06:22:03.626
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9c988f84-1a42-481f-b62d-d4c457f98310.17da0503eca0a79e], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 06/18/24 06:22:03.626
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9c988f84-1a42-481f-b62d-d4c457f98310.17da0503f106095c], Reason = [Created], Message = [Created container filler-pod-9c988f84-1a42-481f-b62d-d4c457f98310] @ 06/18/24 06:22:03.626
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9c988f84-1a42-481f-b62d-d4c457f98310.17da0503f219e6e0], Reason = [Started], Message = [Started container filler-pod-9c988f84-1a42-481f-b62d-d4c457f98310] @ 06/18/24 06:22:03.626
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17da0504419848c3], Reason = [FailedScheduling], Message = [0/4 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/4 nodes are available: 1 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod..] @ 06/18/24 06:22:03.637
  E0618 06:22:04.591847      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ck-128-worker-1 @ 06/18/24 06:22:04.64
  STEP: verifying the node doesn't have the label node @ 06/18/24 06:22:04.674
  STEP: removing the label node off the node ck-128-worker-2 @ 06/18/24 06:22:04.68
  STEP: verifying the node doesn't have the label node @ 06/18/24 06:22:04.698
  STEP: removing the label node off the node ck-128-worker-3 @ 06/18/24 06:22:04.706
  STEP: verifying the node doesn't have the label node @ 06/18/24 06:22:04.726
  Jun 18 06:22:04.730: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9701" for this suite. @ 06/18/24 06:22:04.734
• [3.305 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:398
  STEP: Creating a kubernetes client @ 06/18/24 06:22:04.741
  Jun 18 06:22:04.741: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename namespaces @ 06/18/24 06:22:04.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:22:04.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:22:04.761
  STEP: Creating namespace "e2e-ns-mmxl5" @ 06/18/24 06:22:04.765
  Jun 18 06:22:04.781: INFO: Namespace "e2e-ns-mmxl5-6656" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-mmxl5-6656" @ 06/18/24 06:22:04.781
  Jun 18 06:22:04.788: INFO: Namespace "e2e-ns-mmxl5-6656" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-mmxl5-6656" @ 06/18/24 06:22:04.789
  Jun 18 06:22:04.797: INFO: Namespace "e2e-ns-mmxl5-6656" has []v1.FinalizerName{"kubernetes"}
  Jun 18 06:22:04.797: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5302" for this suite. @ 06/18/24 06:22:04.803
  STEP: Destroying namespace "e2e-ns-mmxl5-6656" for this suite. @ 06/18/24 06:22:04.807
• [0.072 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:77
  STEP: Creating a kubernetes client @ 06/18/24 06:22:04.815
  Jun 18 06:22:04.815: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename sysctl @ 06/18/24 06:22:04.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:22:04.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:22:04.831
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 06/18/24 06:22:04.834
  STEP: Watching for error events or started pod @ 06/18/24 06:22:04.84
  E0618 06:22:05.592746      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:06.593320      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 06/18/24 06:22:06.844
  E0618 06:22:07.593939      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:08.594596      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 06/18/24 06:22:08.867
  STEP: Getting logs from the pod @ 06/18/24 06:22:08.867
  STEP: Checking that the sysctl is actually updated @ 06/18/24 06:22:08.875
  Jun 18 06:22:08.876: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-8469" for this suite. @ 06/18/24 06:22:08.884
• [4.083 seconds]
------------------------------
SSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 06/18/24 06:22:08.898
  Jun 18 06:22:08.898: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename events @ 06/18/24 06:22:08.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:22:08.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:22:08.947
  STEP: Create set of events @ 06/18/24 06:22:08.95
  STEP: get a list of Events with a label in the current namespace @ 06/18/24 06:22:08.965
  STEP: delete a list of events @ 06/18/24 06:22:08.967
  Jun 18 06:22:08.968: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 06/18/24 06:22:08.979
  Jun 18 06:22:08.982: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-202" for this suite. @ 06/18/24 06:22:08.986
• [0.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 06/18/24 06:22:08.996
  Jun 18 06:22:08.996: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename pods @ 06/18/24 06:22:08.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:22:09.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:22:09.009
  E0618 06:22:09.595678      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:10.595964      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:11.596249      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:12.596394      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:13.597523      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:14.597973      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:22:15.079
  Jun 18 06:22:15.082: INFO: Trying to get logs from node ck-128-worker-2 pod client-envvars-b7996ea5-e02e-4f90-929b-68076cb868fa container env3cont: <nil>
  STEP: delete the pod @ 06/18/24 06:22:15.091
  Jun 18 06:22:15.106: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4101" for this suite. @ 06/18/24 06:22:15.111
• [6.122 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:145
  STEP: Creating a kubernetes client @ 06/18/24 06:22:15.119
  Jun 18 06:22:15.119: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/18/24 06:22:15.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:22:15.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:22:15.142
  Jun 18 06:22:15.144: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  E0618 06:22:15.598445      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:22:15.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6261" for this suite. @ 06/18/24 06:22:15.694
• [0.582 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1781
  STEP: Creating a kubernetes client @ 06/18/24 06:22:15.702
  Jun 18 06:22:15.702: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename kubectl @ 06/18/24 06:22:15.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:22:15.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:22:15.724
  STEP: starting the proxy server @ 06/18/24 06:22:15.728
  Jun 18 06:22:15.728: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-1293 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 06/18/24 06:22:15.791
  Jun 18 06:22:15.802: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1293" for this suite. @ 06/18/24 06:22:15.807
• [0.110 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 06/18/24 06:22:15.814
  Jun 18 06:22:15.814: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename kubelet-test @ 06/18/24 06:22:15.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:22:15.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:22:15.833
  E0618 06:22:16.599400      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:17.599495      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:22:17.865: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8834" for this suite. @ 06/18/24 06:22:17.871
• [2.065 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:693
  STEP: Creating a kubernetes client @ 06/18/24 06:22:17.878
  Jun 18 06:22:17.878: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename resourcequota @ 06/18/24 06:22:17.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:22:17.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:22:17.901
  STEP: Creating a ResourceQuota with terminating scope @ 06/18/24 06:22:17.907
  STEP: Ensuring ResourceQuota status is calculated @ 06/18/24 06:22:17.914
  E0618 06:22:18.599884      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:19.600048      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 06/18/24 06:22:19.919
  STEP: Ensuring ResourceQuota status is calculated @ 06/18/24 06:22:19.924
  E0618 06:22:20.600810      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:21.601198      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 06/18/24 06:22:21.927
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 06/18/24 06:22:21.94
  E0618 06:22:22.601570      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:23.601978      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 06/18/24 06:22:23.944
  E0618 06:22:24.602699      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:25.602729      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 06/18/24 06:22:25.948
  STEP: Ensuring resource quota status released the pod usage @ 06/18/24 06:22:25.961
  E0618 06:22:26.603651      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:27.603942      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 06/18/24 06:22:27.967
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 06/18/24 06:22:27.98
  E0618 06:22:28.604682      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:29.605647      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 06/18/24 06:22:29.985
  E0618 06:22:30.605674      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:31.605946      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 06/18/24 06:22:31.988
  STEP: Ensuring resource quota status released the pod usage @ 06/18/24 06:22:31.998
  E0618 06:22:32.607889      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:33.606469      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:22:34.002: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5418" for this suite. @ 06/18/24 06:22:34.008
• [16.137 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 06/18/24 06:22:34.016
  Jun 18 06:22:34.016: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename var-expansion @ 06/18/24 06:22:34.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:22:34.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:22:34.034
  STEP: Creating a pod to test substitution in volume subpath @ 06/18/24 06:22:34.036
  E0618 06:22:34.607051      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:35.608054      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:36.609145      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:37.609288      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:22:38.056
  Jun 18 06:22:38.059: INFO: Trying to get logs from node ck-128-worker-1 pod var-expansion-343a1c77-706b-4ef4-88b1-46a9503e270a container dapi-container: <nil>
  STEP: delete the pod @ 06/18/24 06:22:38.067
  Jun 18 06:22:38.079: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1881" for this suite. @ 06/18/24 06:22:38.085
• [4.074 seconds]
------------------------------
SSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 06/18/24 06:22:38.091
  Jun 18 06:22:38.091: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename containers @ 06/18/24 06:22:38.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:22:38.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:22:38.114
  STEP: Creating a pod to test override command @ 06/18/24 06:22:38.117
  E0618 06:22:38.609447      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:39.609705      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:40.610547      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:41.610886      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:22:42.137
  Jun 18 06:22:42.141: INFO: Trying to get logs from node ck-128-worker-1 pod client-containers-ae5d67a6-7ad7-43e4-85bb-959742aecf30 container agnhost-container: <nil>
  STEP: delete the pod @ 06/18/24 06:22:42.148
  Jun 18 06:22:42.158: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6394" for this suite. @ 06/18/24 06:22:42.164
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:93
  STEP: Creating a kubernetes client @ 06/18/24 06:22:42.17
  Jun 18 06:22:42.170: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename configmap @ 06/18/24 06:22:42.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:22:42.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:22:42.192
  STEP: Creating configMap configmap-9336/configmap-test-7d76d2b5-504e-4d56-8927-d41e6c61c919 @ 06/18/24 06:22:42.199
  STEP: Creating a pod to test consume configMaps @ 06/18/24 06:22:42.204
  E0618 06:22:42.611866      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:43.612310      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:44.613005      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:45.614054      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:22:46.221
  Jun 18 06:22:46.224: INFO: Trying to get logs from node ck-128-worker-1 pod pod-configmaps-b208a450-b7c2-45b9-922d-23ef23699d5b container env-test: <nil>
  STEP: delete the pod @ 06/18/24 06:22:46.233
  Jun 18 06:22:46.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9336" for this suite. @ 06/18/24 06:22:46.253
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:197
  STEP: Creating a kubernetes client @ 06/18/24 06:22:46.262
  Jun 18 06:22:46.262: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename emptydir @ 06/18/24 06:22:46.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:22:46.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:22:46.281
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 06/18/24 06:22:46.284
  E0618 06:22:46.614619      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:47.614790      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:48.614973      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:49.616100      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:22:50.312
  Jun 18 06:22:50.316: INFO: Trying to get logs from node ck-128-worker-1 pod pod-db9ca180-ddca-40f3-9efb-89f070304b65 container test-container: <nil>
  STEP: delete the pod @ 06/18/24 06:22:50.324
  Jun 18 06:22:50.344: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4189" for this suite. @ 06/18/24 06:22:50.354
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 06/18/24 06:22:50.363
  Jun 18 06:22:50.363: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename container-probe @ 06/18/24 06:22:50.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:22:50.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:22:50.383
  STEP: Creating pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246 @ 06/18/24 06:22:50.386
  E0618 06:22:50.617214      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:51.617849      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/18/24 06:22:52.405
  Jun 18 06:22:52.408: INFO: Initial restart count of pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 is 0
  Jun 18 06:22:52.413: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:22:52.618960      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:53.619428      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:22:54.418: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:22:54.619997      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:55.621208      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:22:56.423: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:22:56.621425      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:57.621603      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:22:58.430: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:22:58.622454      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:22:59.623065      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:23:00.435: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:23:00.623341      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:23:01.623536      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:23:02.449: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:23:02.623698      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:23:03.623992      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:23:04.453: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:23:04.624475      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:23:05.624731      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:23:06.458: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:23:06.625644      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:23:07.625909      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:23:08.462: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:23:08.626962      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:23:09.627217      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:23:10.468: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:23:10.628169      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:23:11.628612      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:23:12.475: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  Jun 18 06:23:12.475: INFO: Restart count of pod container-probe-8246/liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 is now 1 (20.067049316s elapsed)
  E0618 06:23:12.628876      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:23:13.629508      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:23:14.479: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:23:14.630409      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:23:15.631439      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:23:16.486: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:23:16.632652      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:23:17.633004      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:23:18.491: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:23:18.633924      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:23:19.634395      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:23:20.496: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:23:20.634414      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:23:21.634807      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:23:22.500: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:23:22.634715      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:23:23.635036      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:23:24.505: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:23:24.636087      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:23:25.637305      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:23:26.511: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:23:26.637461      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:23:27.637859      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:23:28.515: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:23:28.637976      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:23:29.638248      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:23:30.521: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:23:30.638366      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:23:31.638764      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:23:32.525: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  Jun 18 06:23:32.525: INFO: Restart count of pod container-probe-8246/liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 is now 2 (40.116569528s elapsed)
  E0618 06:23:32.639671      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:23:33.639939      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:23:34.530: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:23:34.640504      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:23:35.641003      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:23:36.535: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:23:36.641541      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:23:37.641974      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:23:38.539: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:23:38.642056      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:23:39.642875      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:23:40.545: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:23:40.643587      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:23:41.643763      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:23:42.549: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:23:42.644269      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:23:43.644619      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:23:44.554: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:23:44.644695      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:23:45.646063      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:23:46.558: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:23:46.645956      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:23:47.646449      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:23:48.563: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:23:48.647325      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:23:49.648024      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:23:50.570: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:23:50.648444      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:23:51.648841      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:23:52.575: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  Jun 18 06:23:52.575: INFO: Restart count of pod container-probe-8246/liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 is now 3 (1m0.166739257s elapsed)
  E0618 06:23:52.649769      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:23:53.650255      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:23:54.579: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:23:54.650920      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:23:55.651760      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:23:56.585: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:23:56.652306      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:23:57.652835      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:23:58.589: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:23:58.653401      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:23:59.653785      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:24:00.595: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:24:00.654393      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:24:01.654925      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:24:02.600: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:24:02.655291      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:24:03.655724      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:24:04.605: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:24:04.655806      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:24:05.656324      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:24:06.611: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:24:06.656785      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:24:07.657269      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:24:08.616: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:24:08.657934      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:24:09.658495      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:24:10.621: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:24:10.659242      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:24:11.659636      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:24:12.626: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  Jun 18 06:24:12.626: INFO: Restart count of pod container-probe-8246/liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 is now 4 (1m20.217315514s elapsed)
  E0618 06:24:12.660414      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:24:13.660917      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:24:14.631: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:24:14.661659      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:24:15.662548      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:24:16.636: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:24:16.662808      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:24:17.663276      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:24:18.642: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:24:18.664265      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:24:19.664569      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:24:20.647: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:24:20.664734      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:24:21.665095      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:24:22.651: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:24:22.665932      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:24:23.666423      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:24:24.655: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:24:24.667057      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:24:25.668116      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:24:26.660: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:24:26.669019      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:24:27.669351      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:24:28.666: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:24:28.669816      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:24:29.670237      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:24:30.670954      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:24:30.672: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:24:31.671215      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:24:32.671762      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:24:32.676: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:24:33.672064      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:24:34.672473      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:24:34.680: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:24:35.673341      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:24:36.673699      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:24:36.685: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:24:37.674323      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:24:38.674391      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:24:38.690: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:24:39.675077      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:24:40.675297      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:24:40.695: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:24:41.675479      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:24:42.677260      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:24:42.700: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:24:43.678441      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:24:44.678861      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:24:44.705: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:24:45.679360      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:24:46.679797      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:24:46.712: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:24:47.679860      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:24:48.680486      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:24:48.718: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:24:49.681284      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:24:50.681851      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:24:50.723: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:24:51.682607      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:24:52.683079      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:24:52.728: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:24:53.683538      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:24:54.683813      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:24:54.732: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:24:55.684625      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:24:56.685654      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:24:56.738: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:24:57.685958      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:24:58.686141      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:24:58.742: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:24:59.687352      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:25:00.688252      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:25:00.746: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:25:01.688377      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:25:02.688715      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:25:02.749: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:25:03.689355      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:25:04.690124      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:25:04.753: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:25:05.691153      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:25:06.691725      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:25:06.757: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:25:07.691940      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:25:08.692381      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:25:08.763: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:25:09.692365      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:25:10.692813      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:25:10.770: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  E0618 06:25:11.692905      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:25:12.693095      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:25:12.774: INFO: Get pod liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 in namespace container-probe-8246
  Jun 18 06:25:12.774: INFO: Restart count of pod container-probe-8246/liveness-6def7607-0e24-4887-8ce9-0374f9f2d8f6 is now 5 (2m20.365890515s elapsed)
  Jun 18 06:25:12.775: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 06/18/24 06:25:12.78
  STEP: Destroying namespace "container-probe-8246" for this suite. @ 06/18/24 06:25:12.796
• [142.438 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 06/18/24 06:25:12.81
  Jun 18 06:25:12.810: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename container-runtime @ 06/18/24 06:25:12.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:25:12.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:25:12.832
  STEP: create the container @ 06/18/24 06:25:12.836
  W0618 06:25:12.843783      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 06/18/24 06:25:12.844
  E0618 06:25:13.693851      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:25:14.693987      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:25:15.694710      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 06/18/24 06:25:15.86
  STEP: the container should be terminated @ 06/18/24 06:25:15.862
  STEP: the termination message should be set @ 06/18/24 06:25:15.862
  Jun 18 06:25:15.862: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 06/18/24 06:25:15.862
  Jun 18 06:25:15.872: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1237" for this suite. @ 06/18/24 06:25:15.881
• [3.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 06/18/24 06:25:15.895
  Jun 18 06:25:15.895: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/18/24 06:25:15.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:25:15.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:25:15.911
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 06/18/24 06:25:15.914
  Jun 18 06:25:15.916: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  E0618 06:25:16.695554      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:25:17.491: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  E0618 06:25:17.696462      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:25:18.697689      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:25:19.698313      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:25:20.699237      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:25:21.700123      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:25:22.701242      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:25:23.408: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7485" for this suite. @ 06/18/24 06:25:23.423
• [7.532 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:124
  STEP: Creating a kubernetes client @ 06/18/24 06:25:23.433
  Jun 18 06:25:23.433: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename controllerrevisions @ 06/18/24 06:25:23.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:25:23.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:25:23.454
  STEP: Creating DaemonSet "e2e-pksv8-daemon-set" @ 06/18/24 06:25:23.482
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/18/24 06:25:23.487
  Jun 18 06:25:23.492: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 06:25:23.495: INFO: Number of nodes with available pods controlled by daemonset e2e-pksv8-daemon-set: 0
  Jun 18 06:25:23.495: INFO: Node ck-128-worker-1 is running 0 daemon pod, expected 1
  E0618 06:25:23.702232      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:25:24.501: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 06:25:24.504: INFO: Number of nodes with available pods controlled by daemonset e2e-pksv8-daemon-set: 0
  Jun 18 06:25:24.504: INFO: Node ck-128-worker-1 is running 0 daemon pod, expected 1
  E0618 06:25:24.703296      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:25:25.500: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 06:25:25.504: INFO: Number of nodes with available pods controlled by daemonset e2e-pksv8-daemon-set: 3
  Jun 18 06:25:25.504: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-pksv8-daemon-set
  STEP: Confirm DaemonSet "e2e-pksv8-daemon-set" successfully created with "daemonset-name=e2e-pksv8-daemon-set" label @ 06/18/24 06:25:25.506
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-pksv8-daemon-set" @ 06/18/24 06:25:25.512
  Jun 18 06:25:25.515: INFO: Located ControllerRevision: "e2e-pksv8-daemon-set-77d789cd67"
  STEP: Patching ControllerRevision "e2e-pksv8-daemon-set-77d789cd67" @ 06/18/24 06:25:25.517
  Jun 18 06:25:25.523: INFO: e2e-pksv8-daemon-set-77d789cd67 has been patched
  STEP: Create a new ControllerRevision @ 06/18/24 06:25:25.523
  Jun 18 06:25:25.529: INFO: Created ControllerRevision: e2e-pksv8-daemon-set-5cd6d7d787
  STEP: Confirm that there are two ControllerRevisions @ 06/18/24 06:25:25.529
  Jun 18 06:25:25.529: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun 18 06:25:25.532: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-pksv8-daemon-set-77d789cd67" @ 06/18/24 06:25:25.532
  STEP: Confirm that there is only one ControllerRevision @ 06/18/24 06:25:25.536
  Jun 18 06:25:25.536: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun 18 06:25:25.539: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-pksv8-daemon-set-5cd6d7d787" @ 06/18/24 06:25:25.542
  Jun 18 06:25:25.548: INFO: e2e-pksv8-daemon-set-5cd6d7d787 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 06/18/24 06:25:25.548
  W0618 06:25:25.559583      18 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 06/18/24 06:25:25.559
  Jun 18 06:25:25.559: INFO: Requesting list of ControllerRevisions to confirm quantity
  E0618 06:25:25.703676      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:25:26.562: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun 18 06:25:26.566: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-pksv8-daemon-set-5cd6d7d787=updated" @ 06/18/24 06:25:26.566
  STEP: Confirm that there is only one ControllerRevision @ 06/18/24 06:25:26.573
  Jun 18 06:25:26.573: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun 18 06:25:26.575: INFO: Found 1 ControllerRevisions
  Jun 18 06:25:26.578: INFO: ControllerRevision "e2e-pksv8-daemon-set-7dc87dcc5d" has revision 3
  STEP: Deleting DaemonSet "e2e-pksv8-daemon-set" @ 06/18/24 06:25:26.581
  STEP: deleting DaemonSet.extensions e2e-pksv8-daemon-set in namespace controllerrevisions-7052, will wait for the garbage collector to delete the pods @ 06/18/24 06:25:26.581
  Jun 18 06:25:26.640: INFO: Deleting DaemonSet.extensions e2e-pksv8-daemon-set took: 6.760762ms
  E0618 06:25:26.704510      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:25:26.741: INFO: Terminating DaemonSet.extensions e2e-pksv8-daemon-set pods took: 100.966617ms
  E0618 06:25:27.704771      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:25:28.044: INFO: Number of nodes with available pods controlled by daemonset e2e-pksv8-daemon-set: 0
  Jun 18 06:25:28.044: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-pksv8-daemon-set
  Jun 18 06:25:28.047: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"22089"},"items":null}

  Jun 18 06:25:28.049: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"22089"},"items":null}

  Jun 18 06:25:28.060: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-7052" for this suite. @ 06/18/24 06:25:28.063
• [4.635 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 06/18/24 06:25:28.068
  Jun 18 06:25:28.068: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename downward-api @ 06/18/24 06:25:28.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:25:28.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:25:28.082
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 06:25:28.084
  E0618 06:25:28.705652      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:25:29.705635      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:25:30.706676      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:25:31.706985      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:25:32.102
  Jun 18 06:25:32.105: INFO: Trying to get logs from node ck-128-worker-1 pod downwardapi-volume-2d96eaab-7464-4f32-8b9f-a3b74c07825f container client-container: <nil>
  STEP: delete the pod @ 06/18/24 06:25:32.123
  Jun 18 06:25:32.136: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5868" for this suite. @ 06/18/24 06:25:32.14
• [4.077 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:104
  STEP: Creating a kubernetes client @ 06/18/24 06:25:32.146
  Jun 18 06:25:32.146: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename runtimeclass @ 06/18/24 06:25:32.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:25:32.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:25:32.164
  E0618 06:25:32.707844      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:25:33.708408      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:25:34.187: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5749" for this suite. @ 06/18/24 06:25:34.196
• [2.056 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 06/18/24 06:25:34.203
  Jun 18 06:25:34.203: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename deployment @ 06/18/24 06:25:34.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:25:34.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:25:34.222
  Jun 18 06:25:34.236: INFO: Pod name rollover-pod: Found 0 pods out of 1
  E0618 06:25:34.709366      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:25:35.709941      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:25:36.710264      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:25:37.710553      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:25:38.711137      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:25:39.242: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/18/24 06:25:39.242
  Jun 18 06:25:39.242: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0618 06:25:39.711322      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:25:40.711565      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:25:41.248: INFO: Creating deployment "test-rollover-deployment"
  Jun 18 06:25:41.256: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  E0618 06:25:41.712132      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:25:42.712423      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:25:43.266: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Jun 18 06:25:43.272: INFO: Ensure that both replica sets have 1 created replica
  Jun 18 06:25:43.278: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Jun 18 06:25:43.289: INFO: Updating deployment test-rollover-deployment
  Jun 18 06:25:43.290: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0618 06:25:43.712584      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:25:44.712661      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:25:45.297: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Jun 18 06:25:45.305: INFO: Make sure deployment "test-rollover-deployment" is complete
  Jun 18 06:25:45.311: INFO: all replica sets need to contain the pod-template-hash label
  Jun 18 06:25:45.311: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 6, 25, 41, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 25, 41, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 6, 25, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 25, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0618 06:25:45.713424      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:25:46.714234      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:25:47.319: INFO: all replica sets need to contain the pod-template-hash label
  Jun 18 06:25:47.320: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 6, 25, 41, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 25, 41, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 6, 25, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 25, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0618 06:25:47.714276      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:25:48.714430      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:25:49.318: INFO: all replica sets need to contain the pod-template-hash label
  Jun 18 06:25:49.319: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 6, 25, 41, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 25, 41, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 6, 25, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 25, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0618 06:25:49.714570      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:25:50.715652      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:25:51.320: INFO: all replica sets need to contain the pod-template-hash label
  Jun 18 06:25:51.320: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 6, 25, 41, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 25, 41, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 6, 25, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 25, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0618 06:25:51.716507      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:25:52.717564      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:25:53.320: INFO: all replica sets need to contain the pod-template-hash label
  Jun 18 06:25:53.320: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 6, 25, 41, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 25, 41, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 6, 25, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 6, 25, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0618 06:25:53.717774      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:25:54.718160      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:25:55.318: INFO: 
  Jun 18 06:25:55.318: INFO: Ensure that both old replica sets have no replicas
  Jun 18 06:25:55.326: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3476",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "18c01069-3d39-4ba0-8975-35d825e22cba",
      ResourceVersion: (string) (len=5) "22302",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854288741,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854288743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854288754,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854288741,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854288741,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854288754,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854288741,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-68774655d5\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 18 06:25:55.333: INFO: New ReplicaSet "test-rollover-deployment-68774655d5" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-68774655d5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3476",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3f465dcf-92cf-43cb-82a3-63d9fe227f51",
      ResourceVersion: (string) (len=5) "22292",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854288743,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "18c01069-3d39-4ba0-8975-35d825e22cba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854288743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 38 63 30 31 30  36 39 2d 33 64 33 39 2d  |\"18c01069-3d39-|
              00000120  34 62 61 30 2d 38 39 37  35 2d 33 35 64 38 32 35  |4ba0-8975-35d825|
              00000130  65 32 32 63 62 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e22cba\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854288754,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 18 06:25:55.334: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Jun 18 06:25:55.334: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3476",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "525c11b7-ee4a-4c33-a069-81cd26e1d65d",
      ResourceVersion: (string) (len=5) "22301",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854288734,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "18c01069-3d39-4ba0-8975-35d825e22cba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854288734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854288754,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  31 38 63 30 31 30 36 39  2d 33 64 33 39 2d 34 62  |18c01069-3d39-4b|
              000000c0  61 30 2d 38 39 37 35 2d  33 35 64 38 32 35 65 32  |a0-8975-35d825e2|
              000000d0  32 63 62 61 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |2cba\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854288754,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 18 06:25:55.335: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3476",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "847670cd-18d7-4c3a-9321-dc437911b8b9",
      ResourceVersion: (string) (len=5) "22251",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854288741,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "18c01069-3d39-4ba0-8975-35d825e22cba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854288743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 38 63 30 31 30  36 39 2d 33 64 33 39 2d  |\"18c01069-3d39-|
              00000120  34 62 61 30 2d 38 39 37  35 2d 33 35 64 38 32 35  |4ba0-8975-35d825|
              00000130  65 32 32 63 62 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e22cba\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854288743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 18 06:25:55.344: INFO: Pod "test-rollover-deployment-68774655d5-7hvk9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-68774655d5-7hvk9",
      GenerateName: (string) (len=36) "test-rollover-deployment-68774655d5-",
      Namespace: (string) (len=15) "deployment-3476",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d0a78491-0347-4272-8ca0-2afd3457be6b",
      ResourceVersion: (string) (len=5) "22267",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854288743,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f9cb8dc07cdf4cbe33905fa501e0bf63b3c4217345be158f251c65ff092a07d9",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.17.152.31/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.17.152.31/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-68774655d5",
          UID: (types.UID) (len=36) "3f465dcf-92cf-43cb-82a3-63d9fe227f51",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854288743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854288743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 66  34 36 35 64 63 66 2d 39  |d\":\"3f465dcf-9|
              00000090  32 63 66 2d 34 33 63 62  2d 38 32 61 33 2d 36 33  |2cf-43cb-82a3-63|
              000000a0  64 39 66 65 32 32 37 66  35 31 5c 22 7d 22 3a 7b  |d9fe227f51\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854288744,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 31 37 2e 31  35 32 2e 33 31 5c 22 7d  |172.17.152.31\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g7pj9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g7pj9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854288743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854288744,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854288744,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854288743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "172.17.152.31",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.17.152.31"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854288743,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854288743,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:c9997bf8d2e223d7d2a0078dcfb11a653e9b16cf09418829ec03e1d57ca9628a",
          ContainerID: (string) (len=72) "cri-o://2d7a1d5ad9d8bb69f4b2a7072af7bdc7cfe9c927ea3d76352f6c6802b223d60e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:25:55.348: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3476" for this suite. @ 06/18/24 06:25:55.361
• [21.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service  [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 06/18/24 06:25:55.375
  Jun 18 06:25:55.375: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename services @ 06/18/24 06:25:55.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:25:55.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:25:55.398
  Jun 18 06:25:55.405: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9475" for this suite. @ 06/18/24 06:25:55.414
• [0.047 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods  [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 06/18/24 06:25:55.424
  Jun 18 06:25:55.424: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename services @ 06/18/24 06:25:55.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:25:55.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:25:55.439
  STEP: creating service multi-endpoint-test in namespace services-1120 @ 06/18/24 06:25:55.442
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1120 to expose endpoints map[] @ 06/18/24 06:25:55.455
  Jun 18 06:25:55.458: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0618 06:25:55.718740      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:25:56.466: INFO: successfully validated that service multi-endpoint-test in namespace services-1120 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-1120 @ 06/18/24 06:25:56.467
  E0618 06:25:56.718936      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:25:57.721798      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1120 to expose endpoints map[pod1:[100]] @ 06/18/24 06:25:58.49
  Jun 18 06:25:58.501: INFO: successfully validated that service multi-endpoint-test in namespace services-1120 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-1120 @ 06/18/24 06:25:58.501
  E0618 06:25:58.721389      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:25:59.721919      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1120 to expose endpoints map[pod1:[100] pod2:[101]] @ 06/18/24 06:26:00.518
  Jun 18 06:26:00.530: INFO: successfully validated that service multi-endpoint-test in namespace services-1120 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 06/18/24 06:26:00.53
  Jun 18 06:26:00.530: INFO: Creating new exec pod
  E0618 06:26:00.722057      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:01.722476      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:02.723412      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:26:03.547: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-1120 exec execpodnvrx2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Jun 18 06:26:03.693: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Jun 18 06:26:03.693: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 06:26:03.694: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-1120 exec execpodnvrx2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.107.240.200 80'
  E0618 06:26:03.723664      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:26:03.820: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.107.240.200 80\nConnection to 10.107.240.200 80 port [tcp/http] succeeded!\n"
  Jun 18 06:26:03.820: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 06:26:03.820: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-1120 exec execpodnvrx2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Jun 18 06:26:03.941: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Jun 18 06:26:03.941: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 06:26:03.941: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-1120 exec execpodnvrx2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.107.240.200 81'
  Jun 18 06:26:04.050: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.107.240.200 81\nConnection to 10.107.240.200 81 port [tcp/*] succeeded!\n"
  Jun 18 06:26:04.050: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-1120 @ 06/18/24 06:26:04.05
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1120 to expose endpoints map[pod2:[101]] @ 06/18/24 06:26:04.062
  Jun 18 06:26:04.076: INFO: successfully validated that service multi-endpoint-test in namespace services-1120 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-1120 @ 06/18/24 06:26:04.076
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1120 to expose endpoints map[] @ 06/18/24 06:26:04.097
  E0618 06:26:04.724705      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:26:05.115: INFO: successfully validated that service multi-endpoint-test in namespace services-1120 exposes endpoints map[]
  Jun 18 06:26:05.115: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1120" for this suite. @ 06/18/24 06:26:05.133
• [9.713 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:213
  STEP: Creating a kubernetes client @ 06/18/24 06:26:05.14
  Jun 18 06:26:05.140: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/18/24 06:26:05.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:26:05.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:26:05.156
  STEP: create the container to handle the HTTPGet hook request. @ 06/18/24 06:26:05.162
  E0618 06:26:05.725813      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:06.726025      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 06/18/24 06:26:07.178
  E0618 06:26:07.726702      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:08.727029      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 06/18/24 06:26:09.193
  E0618 06:26:09.728086      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:10.728676      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 06/18/24 06:26:11.205
  Jun 18 06:26:11.212: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5751" for this suite. @ 06/18/24 06:26:11.218
• [6.082 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 06/18/24 06:26:11.231
  Jun 18 06:26:11.231: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename job @ 06/18/24 06:26:11.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:26:11.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:26:11.248
  STEP: Creating a job @ 06/18/24 06:26:11.252
  STEP: Ensuring active pods == parallelism @ 06/18/24 06:26:11.256
  E0618 06:26:11.729151      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:12.729536      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 06/18/24 06:26:13.263
  STEP: deleting Job.batch foo in namespace job-269, will wait for the garbage collector to delete the pods @ 06/18/24 06:26:13.263
  Jun 18 06:26:13.324: INFO: Deleting Job.batch foo took: 6.314742ms
  Jun 18 06:26:13.425: INFO: Terminating Job.batch foo pods took: 100.815487ms
  E0618 06:26:13.729905      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:14.730893      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:15.731409      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:16.732454      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:17.733308      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:18.734358      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:19.735279      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:20.735825      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:21.736265      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:22.736806      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:23.737406      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:24.738138      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:25.738295      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:26.738542      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:27.738844      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:28.739288      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:29.740348      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:30.740430      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:31.741241      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:32.741870      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:33.742896      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:34.743855      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:35.744515      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:36.745498      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:37.746268      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:38.747345      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:39.748246      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:40.748737      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:41.749809      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:42.750435      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:43.751049      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:44.752153      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:45.752723      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 06/18/24 06:26:45.826
  Jun 18 06:26:45.829: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-269" for this suite. @ 06/18/24 06:26:45.835
• [34.610 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:169
  STEP: Creating a kubernetes client @ 06/18/24 06:26:45.843
  Jun 18 06:26:45.843: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename configmap @ 06/18/24 06:26:45.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:26:45.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:26:45.863
  STEP: creating a ConfigMap @ 06/18/24 06:26:45.866
  STEP: fetching the ConfigMap @ 06/18/24 06:26:45.87
  STEP: patching the ConfigMap @ 06/18/24 06:26:45.873
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 06/18/24 06:26:45.877
  STEP: deleting the ConfigMap by collection with a label selector @ 06/18/24 06:26:45.881
  STEP: listing all ConfigMaps in test namespace @ 06/18/24 06:26:45.886
  Jun 18 06:26:45.888: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8861" for this suite. @ 06/18/24 06:26:45.893
• [0.055 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 06/18/24 06:26:45.898
  Jun 18 06:26:45.898: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename certificates @ 06/18/24 06:26:45.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:26:45.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:26:45.918
  STEP: getting /apis @ 06/18/24 06:26:46.409
  STEP: getting /apis/certificates.k8s.io @ 06/18/24 06:26:46.415
  STEP: getting /apis/certificates.k8s.io/v1 @ 06/18/24 06:26:46.416
  STEP: creating @ 06/18/24 06:26:46.417
  STEP: getting @ 06/18/24 06:26:46.432
  STEP: listing @ 06/18/24 06:26:46.434
  STEP: watching @ 06/18/24 06:26:46.437
  Jun 18 06:26:46.437: INFO: starting watch
  STEP: patching @ 06/18/24 06:26:46.438
  STEP: updating @ 06/18/24 06:26:46.444
  Jun 18 06:26:46.448: INFO: waiting for watch events with expected annotations
  Jun 18 06:26:46.448: INFO: saw patched and updated annotations
  STEP: getting /approval @ 06/18/24 06:26:46.448
  STEP: patching /approval @ 06/18/24 06:26:46.45
  STEP: updating /approval @ 06/18/24 06:26:46.455
  STEP: getting /status @ 06/18/24 06:26:46.459
  STEP: patching /status @ 06/18/24 06:26:46.462
  STEP: updating /status @ 06/18/24 06:26:46.467
  STEP: deleting @ 06/18/24 06:26:46.472
  STEP: deleting a collection @ 06/18/24 06:26:46.484
  Jun 18 06:26:46.496: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-8294" for this suite. @ 06/18/24 06:26:46.502
• [0.609 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 06/18/24 06:26:46.51
  Jun 18 06:26:46.510: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename taint-single-pod @ 06/18/24 06:26:46.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:26:46.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:26:46.534
  Jun 18 06:26:46.538: INFO: Waiting up to 1m0s for all nodes to be ready
  E0618 06:26:46.753581      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:47.754308      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:48.754513      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:49.754859      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:50.755425      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:51.755775      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:52.756787      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:53.757068      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:54.757964      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:55.758001      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:56.759022      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:57.758753      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:58.759516      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:26:59.759976      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:00.760738      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:01.761410      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:02.762138      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:03.763047      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:04.763428      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:05.764450      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:06.765538      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:07.766558      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:08.766833      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:09.767374      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:10.767406      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:11.768021      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:12.768811      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:13.769705      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:14.769821      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:15.770775      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:16.771019      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:17.771342      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:18.772086      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:19.772413      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:20.773496      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:21.773618      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:22.774723      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:23.775108      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:24.775243      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:25.776149      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:26.776323      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:27.776674      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:28.776871      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:29.777306      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:30.778263      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:31.778594      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:32.779141      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:33.779544      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:34.779627      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:35.780578      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:36.780915      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:37.781406      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:38.782474      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:39.782823      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:40.783692      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:41.784066      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:42.784600      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:43.784940      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:44.785762      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:45.786833      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:27:46.579: INFO: Waiting for terminating namespaces to be deleted...
  Jun 18 06:27:46.585: INFO: Starting informer...
  STEP: Starting pod... @ 06/18/24 06:27:46.585
  E0618 06:27:46.787098      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:27:46.805: INFO: Pod is running on ck-128-worker-2. Tainting Node
  STEP: Trying to apply a taint on the Node @ 06/18/24 06:27:46.805
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/18/24 06:27:46.826
  STEP: Waiting short time to make sure Pod is queued for deletion @ 06/18/24 06:27:46.83
  Jun 18 06:27:46.830: INFO: Pod wasn't evicted. Proceeding
  Jun 18 06:27:46.830: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/18/24 06:27:46.855
  STEP: Waiting some time to make sure that toleration time passed. @ 06/18/24 06:27:46.863
  E0618 06:27:47.787582      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:48.788333      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:49.788758      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:50.789530      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:51.789287      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:52.790066      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:53.790584      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:54.790868      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:55.791563      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:56.792585      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:57.793160      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:58.793857      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:27:59.793897      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:00.794593      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:01.795490      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:02.795665      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:03.796025      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:04.796577      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:05.796659      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:06.796989      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:07.797369      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:08.797933      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:09.797838      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:10.798588      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:11.798727      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:12.798897      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:13.799288      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:14.800018      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:15.800855      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:16.801316      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:17.801764      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:18.802787      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:19.803081      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:20.803767      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:21.804073      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:22.804365      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:23.804755      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:24.805309      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:25.805990      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:26.805369      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:27.805819      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:28.806152      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:29.806575      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:30.806675      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:31.807061      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:32.807571      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:33.807762      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:34.808198      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:35.809230      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:36.809625      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:37.809706      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:38.810086      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:39.810433      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:40.810636      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:41.811251      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:42.811216      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:43.811590      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:44.811770      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:45.812898      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:46.814016      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:47.814419      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:48.814838      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:49.815350      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:50.815592      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:51.815626      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:52.816532      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:53.816231      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:54.816386      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:55.817418      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:56.817673      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:57.818040      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:58.818490      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:28:59.818889      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:00.819826      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:01.820467      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:29:01.864: INFO: Pod wasn't evicted. Test successful
  Jun 18 06:29:01.865: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-9499" for this suite. @ 06/18/24 06:29:01.875
• [135.370 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:370
  STEP: Creating a kubernetes client @ 06/18/24 06:29:01.881
  Jun 18 06:29:01.881: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename job @ 06/18/24 06:29:01.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:29:01.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:29:01.905
  STEP: Creating Indexed job @ 06/18/24 06:29:01.909
  STEP: Ensuring job reaches completions @ 06/18/24 06:29:01.918
  E0618 06:29:02.820963      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:03.821401      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:04.821950      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:05.823018      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:06.823410      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:07.823945      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:08.824669      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:09.825303      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 06/18/24 06:29:09.923
  Jun 18 06:29:09.929: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4433" for this suite. @ 06/18/24 06:29:09.935
• [8.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 06/18/24 06:29:09.95
  Jun 18 06:29:09.950: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename webhook @ 06/18/24 06:29:09.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:29:09.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:29:09.973
  STEP: Setting up server cert @ 06/18/24 06:29:09.998
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 06:29:10.643
  STEP: Deploying the webhook pod @ 06/18/24 06:29:10.651
  STEP: Wait for the deployment to be ready @ 06/18/24 06:29:10.663
  Jun 18 06:29:10.674: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0618 06:29:10.825029      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:11.825327      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/18/24 06:29:12.687
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 06:29:12.701
  E0618 06:29:12.825491      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:29:13.701: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 06/18/24 06:29:13.764
  STEP: Creating a configMap that should be mutated @ 06/18/24 06:29:13.782
  STEP: Deleting the collection of validation webhooks @ 06/18/24 06:29:13.811
  E0618 06:29:13.826403      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a configMap that should not be mutated @ 06/18/24 06:29:13.841
  Jun 18 06:29:13.849: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7468" for this suite. @ 06/18/24 06:29:13.903
  STEP: Destroying namespace "webhook-markers-2801" for this suite. @ 06/18/24 06:29:13.913
• [3.972 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 06/18/24 06:29:13.925
  Jun 18 06:29:13.926: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename pods @ 06/18/24 06:29:13.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:29:13.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:29:13.944
  STEP: creating the pod @ 06/18/24 06:29:13.948
  STEP: submitting the pod to kubernetes @ 06/18/24 06:29:13.949
  W0618 06:29:13.957992      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0618 06:29:14.826683      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:15.826851      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 06/18/24 06:29:15.972
  STEP: updating the pod @ 06/18/24 06:29:15.974
  Jun 18 06:29:16.487: INFO: Successfully updated pod "pod-update-activedeadlineseconds-8fb4159f-b8dc-4c1b-9917-d896bf641955"
  E0618 06:29:16.827051      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:17.827407      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:18.827593      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:19.828082      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:29:20.505: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7546" for this suite. @ 06/18/24 06:29:20.51
• [6.590 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:513
  STEP: Creating a kubernetes client @ 06/18/24 06:29:20.516
  Jun 18 06:29:20.516: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename job @ 06/18/24 06:29:20.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:29:20.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:29:20.538
  STEP: Creating a job @ 06/18/24 06:29:20.542
  STEP: Ensuring active pods == parallelism @ 06/18/24 06:29:20.547
  E0618 06:29:20.828527      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:21.829096      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 06/18/24 06:29:22.552
  E0618 06:29:22.829719      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:29:23.070: INFO: Successfully updated pod "adopt-release-6vx4b"
  STEP: Checking that the Job readopts the Pod @ 06/18/24 06:29:23.07
  E0618 06:29:23.829951      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:24.830104      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 06/18/24 06:29:25.079
  Jun 18 06:29:25.593: INFO: Successfully updated pod "adopt-release-6vx4b"
  STEP: Checking that the Job releases the Pod @ 06/18/24 06:29:25.593
  E0618 06:29:25.831076      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:26.832626      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:29:27.601: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3087" for this suite. @ 06/18/24 06:29:27.608
• [7.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 06/18/24 06:29:27.619
  Jun 18 06:29:27.619: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename container-probe @ 06/18/24 06:29:27.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:29:27.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:29:27.637
  E0618 06:29:27.832648      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:28.833585      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:29.834456      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:30.834783      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:31.835055      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:32.836047      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:33.836904      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:34.837463      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:35.838151      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:36.839057      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:37.839409      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:38.839584      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:39.839546      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:40.840010      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:41.840043      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:42.840338      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:43.840736      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:44.841835      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:45.842330      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:46.842999      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:47.843134      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:48.843216      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:49.843596      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:50.843734      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:51.844208      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:52.845285      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:53.846274      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:54.846846      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:55.847414      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:56.848074      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:57.848607      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:58.849390      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:29:59.849891      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:00.850405      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:01.851121      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:02.851157      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:03.851362      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:04.852327      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:05.853290      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:06.853732      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:07.854424      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:08.854852      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:09.855890      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:10.856041      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:11.856639      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:12.861433      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:13.857951      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:14.858931      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:15.859557      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:16.859630      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:17.860514      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:18.861388      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:19.861424      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:20.861815      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:21.862599      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:22.863047      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:23.863342      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:24.863500      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:25.864462      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:26.864758      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:30:27.653: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8993" for this suite. @ 06/18/24 06:30:27.66
• [60.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 06/18/24 06:30:27.673
  Jun 18 06:30:27.673: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename emptydir-wrapper @ 06/18/24 06:30:27.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:30:27.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:30:27.697
  STEP: Creating 50 configmaps @ 06/18/24 06:30:27.702
  E0618 06:30:27.864842      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 06/18/24 06:30:27.936
  Jun 18 06:30:28.039: INFO: Pod name wrapped-volume-race-33853597-97b4-42c3-814a-6d2d95d51845: Found 1 pods out of 5
  E0618 06:30:28.865265      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:29.865505      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:30.866099      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:31.866538      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:32.866621      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:30:33.048: INFO: Pod name wrapped-volume-race-33853597-97b4-42c3-814a-6d2d95d51845: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/18/24 06:30:33.048
  STEP: Creating RC which spawns configmap-volume pods @ 06/18/24 06:30:33.072
  Jun 18 06:30:33.088: INFO: Pod name wrapped-volume-race-065d8c53-ac4d-481b-817a-18c8938f16d7: Found 0 pods out of 5
  E0618 06:30:33.867300      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:34.867652      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:35.868498      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:36.868813      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:37.869071      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:30:38.097: INFO: Pod name wrapped-volume-race-065d8c53-ac4d-481b-817a-18c8938f16d7: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/18/24 06:30:38.097
  STEP: Creating RC which spawns configmap-volume pods @ 06/18/24 06:30:38.122
  Jun 18 06:30:38.151: INFO: Pod name wrapped-volume-race-d633759d-dd08-4b99-83ba-2b836a687790: Found 0 pods out of 5
  E0618 06:30:38.870328      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:39.870482      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:40.871018      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:41.871281      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:42.871633      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:30:43.166: INFO: Pod name wrapped-volume-race-d633759d-dd08-4b99-83ba-2b836a687790: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/18/24 06:30:43.166
  Jun 18 06:30:43.186: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController wrapped-volume-race-d633759d-dd08-4b99-83ba-2b836a687790 in namespace emptydir-wrapper-5288, will wait for the garbage collector to delete the pods @ 06/18/24 06:30:43.191
  Jun 18 06:30:43.255: INFO: Deleting ReplicationController wrapped-volume-race-d633759d-dd08-4b99-83ba-2b836a687790 took: 8.040373ms
  Jun 18 06:30:43.356: INFO: Terminating ReplicationController wrapped-volume-race-d633759d-dd08-4b99-83ba-2b836a687790 pods took: 101.207299ms
  E0618 06:30:43.872525      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:44.873260      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-065d8c53-ac4d-481b-817a-18c8938f16d7 in namespace emptydir-wrapper-5288, will wait for the garbage collector to delete the pods @ 06/18/24 06:30:45.057
  Jun 18 06:30:45.120: INFO: Deleting ReplicationController wrapped-volume-race-065d8c53-ac4d-481b-817a-18c8938f16d7 took: 7.597914ms
  Jun 18 06:30:45.221: INFO: Terminating ReplicationController wrapped-volume-race-065d8c53-ac4d-481b-817a-18c8938f16d7 pods took: 100.201673ms
  E0618 06:30:45.873726      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-33853597-97b4-42c3-814a-6d2d95d51845 in namespace emptydir-wrapper-5288, will wait for the garbage collector to delete the pods @ 06/18/24 06:30:46.222
  Jun 18 06:30:46.282: INFO: Deleting ReplicationController wrapped-volume-race-33853597-97b4-42c3-814a-6d2d95d51845 took: 5.725369ms
  Jun 18 06:30:46.383: INFO: Terminating ReplicationController wrapped-volume-race-33853597-97b4-42c3-814a-6d2d95d51845 pods took: 101.030761ms
  E0618 06:30:46.873946      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 06/18/24 06:30:47.784
  E0618 06:30:47.874907      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "emptydir-wrapper-5288" for this suite. @ 06/18/24 06:30:47.954
• [20.285 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:141
  STEP: Creating a kubernetes client @ 06/18/24 06:30:47.96
  Jun 18 06:30:47.960: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename crd-webhook @ 06/18/24 06:30:47.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:30:47.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:30:47.974
  STEP: Setting up server cert @ 06/18/24 06:30:47.98
  E0618 06:30:48.875549      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 06/18/24 06:30:48.997
  STEP: Deploying the custom resource conversion webhook pod @ 06/18/24 06:30:49.004
  STEP: Wait for the deployment to be ready @ 06/18/24 06:30:49.015
  Jun 18 06:30:49.023: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0618 06:30:49.876082      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:50.876257      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/18/24 06:30:51.034
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 06:30:51.044
  E0618 06:30:51.876874      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:30:52.045: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Jun 18 06:30:52.053: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  E0618 06:30:52.877212      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:53.877451      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 06/18/24 06:30:54.635
  STEP: v2 custom resource should be converted @ 06/18/24 06:30:54.641
  Jun 18 06:30:54.645: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0618 06:30:54.877503      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "crd-webhook-8724" for this suite. @ 06/18/24 06:30:55.196
• [7.241 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:123
  STEP: Creating a kubernetes client @ 06/18/24 06:30:55.203
  Jun 18 06:30:55.204: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename sysctl @ 06/18/24 06:30:55.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:30:55.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:30:55.221
  STEP: Creating a pod with one valid and two invalid sysctls @ 06/18/24 06:30:55.225
  Jun 18 06:30:55.230: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-8917" for this suite. @ 06/18/24 06:30:55.234
• [0.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 06/18/24 06:30:55.242
  Jun 18 06:30:55.242: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename sched-preemption @ 06/18/24 06:30:55.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:30:55.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:30:55.256
  Jun 18 06:30:55.267: INFO: Waiting up to 1m0s for all nodes to be ready
  E0618 06:30:55.877835      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:56.878260      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:57.878516      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:58.879329      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:30:59.879527      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:00.880422      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:01.881542      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:02.881644      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:03.881748      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:04.882090      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:05.882513      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:06.882631      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:07.883326      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:08.883780      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:09.884883      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:10.885564      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:11.885765      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:12.886540      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:13.887563      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:14.887995      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:15.888404      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:16.889315      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:17.889530      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:18.890080      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:19.890513      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:20.891445      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:21.892440      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:22.892772      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:23.893734      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:24.894001      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:25.894882      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:26.895140      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:27.895353      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:28.896093      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:29.896798      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:30.897484      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:31.898538      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:32.899018      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:33.899393      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:34.899673      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:35.900544      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:36.901028      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:37.901253      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:38.901605      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:39.901901      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:40.902542      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:41.903464      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:42.903818      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:43.904284      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:44.904588      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:45.904873      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:46.905296      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:47.906231      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:48.906563      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:49.906789      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:50.907444      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:51.908397      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:52.908543      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:53.909427      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:54.909688      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:31:55.302: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 06/18/24 06:31:55.305
  Jun 18 06:31:55.306: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename sched-preemption-path @ 06/18/24 06:31:55.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:31:55.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:31:55.326
  STEP: Finding an available node @ 06/18/24 06:31:55.33
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/18/24 06:31:55.33
  E0618 06:31:55.910349      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:56.910809      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/18/24 06:31:57.347
  Jun 18 06:31:57.357: INFO: found a healthy node: ck-128-worker-1
  E0618 06:31:57.911396      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:58.912268      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:31:59.913114      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:00.913272      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:01.914421      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:02.915044      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:32:03.431: INFO: pods created so far: [1 1 1]
  Jun 18 06:32:03.431: INFO: length of pods created so far: 3
  E0618 06:32:03.915891      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:04.916460      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:32:05.443: INFO: pods created so far: [2 2 1]
  E0618 06:32:05.916419      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:06.917365      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:07.918220      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:08.918557      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:09.918769      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:10.919431      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:11.919781      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:32:12.444: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Jun 18 06:32:12.478: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-5292" for this suite. @ 06/18/24 06:32:12.532
  STEP: Destroying namespace "sched-preemption-7813" for this suite. @ 06/18/24 06:32:12.539
• [77.301 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:341
  STEP: Creating a kubernetes client @ 06/18/24 06:32:12.544
  Jun 18 06:32:12.544: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename kubectl @ 06/18/24 06:32:12.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:32:12.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:32:12.563
  STEP: creating a replication controller @ 06/18/24 06:32:12.567
  Jun 18 06:32:12.567: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6392 create -f -'
  E0618 06:32:12.920655      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:32:12.933: INFO: stderr: ""
  Jun 18 06:32:12.933: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/18/24 06:32:12.933
  Jun 18 06:32:12.933: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6392 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 18 06:32:13.041: INFO: stderr: ""
  Jun 18 06:32:13.041: INFO: stdout: "update-demo-nautilus-dbdlz update-demo-nautilus-nnzwk "
  Jun 18 06:32:13.041: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6392 get pods update-demo-nautilus-dbdlz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 18 06:32:13.138: INFO: stderr: ""
  Jun 18 06:32:13.138: INFO: stdout: ""
  Jun 18 06:32:13.138: INFO: update-demo-nautilus-dbdlz is created but not running
  E0618 06:32:13.920901      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:14.922127      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:15.921952      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:16.922421      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:17.922759      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:32:18.139: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6392 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 18 06:32:18.236: INFO: stderr: ""
  Jun 18 06:32:18.236: INFO: stdout: "update-demo-nautilus-dbdlz update-demo-nautilus-nnzwk "
  Jun 18 06:32:18.236: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6392 get pods update-demo-nautilus-dbdlz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 18 06:32:18.318: INFO: stderr: ""
  Jun 18 06:32:18.318: INFO: stdout: ""
  Jun 18 06:32:18.318: INFO: update-demo-nautilus-dbdlz is created but not running
  E0618 06:32:18.923259      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:19.923646      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:20.924296      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:21.924891      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:22.925284      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:32:23.319: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6392 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 18 06:32:23.423: INFO: stderr: ""
  Jun 18 06:32:23.424: INFO: stdout: "update-demo-nautilus-dbdlz update-demo-nautilus-nnzwk "
  Jun 18 06:32:23.424: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6392 get pods update-demo-nautilus-dbdlz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 18 06:32:23.505: INFO: stderr: ""
  Jun 18 06:32:23.505: INFO: stdout: ""
  Jun 18 06:32:23.505: INFO: update-demo-nautilus-dbdlz is created but not running
  E0618 06:32:23.926328      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:24.926811      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:25.927015      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:26.927450      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:27.927887      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:32:28.506: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6392 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 18 06:32:28.602: INFO: stderr: ""
  Jun 18 06:32:28.603: INFO: stdout: "update-demo-nautilus-dbdlz update-demo-nautilus-nnzwk "
  Jun 18 06:32:28.603: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6392 get pods update-demo-nautilus-dbdlz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 18 06:32:28.717: INFO: stderr: ""
  Jun 18 06:32:28.717: INFO: stdout: ""
  Jun 18 06:32:28.717: INFO: update-demo-nautilus-dbdlz is created but not running
  E0618 06:32:28.928811      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:29.929101      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:30.930083      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:31.930444      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:32.930797      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:32:33.717: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6392 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 18 06:32:33.788: INFO: stderr: ""
  Jun 18 06:32:33.788: INFO: stdout: "update-demo-nautilus-dbdlz update-demo-nautilus-nnzwk "
  Jun 18 06:32:33.788: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6392 get pods update-demo-nautilus-dbdlz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 18 06:32:33.861: INFO: stderr: ""
  Jun 18 06:32:33.861: INFO: stdout: ""
  Jun 18 06:32:33.861: INFO: update-demo-nautilus-dbdlz is created but not running
  E0618 06:32:33.931490      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:34.931579      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:35.933532      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:36.932483      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:37.932725      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:32:38.861: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6392 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0618 06:32:38.933045      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:32:38.950: INFO: stderr: ""
  Jun 18 06:32:38.950: INFO: stdout: "update-demo-nautilus-dbdlz update-demo-nautilus-nnzwk "
  Jun 18 06:32:38.951: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6392 get pods update-demo-nautilus-dbdlz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 18 06:32:39.018: INFO: stderr: ""
  Jun 18 06:32:39.018: INFO: stdout: ""
  Jun 18 06:32:39.018: INFO: update-demo-nautilus-dbdlz is created but not running
  E0618 06:32:39.933268      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:40.933404      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:41.933626      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:42.934413      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:43.934569      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:32:44.019: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6392 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 18 06:32:44.109: INFO: stderr: ""
  Jun 18 06:32:44.109: INFO: stdout: "update-demo-nautilus-dbdlz update-demo-nautilus-nnzwk "
  Jun 18 06:32:44.109: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6392 get pods update-demo-nautilus-dbdlz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 18 06:32:44.217: INFO: stderr: ""
  Jun 18 06:32:44.217: INFO: stdout: "true"
  Jun 18 06:32:44.217: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6392 get pods update-demo-nautilus-dbdlz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 18 06:32:44.308: INFO: stderr: ""
  Jun 18 06:32:44.308: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 18 06:32:44.308: INFO: validating pod update-demo-nautilus-dbdlz
  Jun 18 06:32:44.317: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 18 06:32:44.318: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 18 06:32:44.318: INFO: update-demo-nautilus-dbdlz is verified up and running
  Jun 18 06:32:44.318: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6392 get pods update-demo-nautilus-nnzwk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 18 06:32:44.416: INFO: stderr: ""
  Jun 18 06:32:44.416: INFO: stdout: "true"
  Jun 18 06:32:44.416: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6392 get pods update-demo-nautilus-nnzwk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 18 06:32:44.486: INFO: stderr: ""
  Jun 18 06:32:44.486: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 18 06:32:44.486: INFO: validating pod update-demo-nautilus-nnzwk
  Jun 18 06:32:44.494: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 18 06:32:44.494: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 18 06:32:44.494: INFO: update-demo-nautilus-nnzwk is verified up and running
  STEP: using delete to clean up resources @ 06/18/24 06:32:44.495
  Jun 18 06:32:44.495: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6392 delete --grace-period=0 --force -f -'
  Jun 18 06:32:44.590: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 18 06:32:44.590: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Jun 18 06:32:44.590: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6392 get rc,svc -l name=update-demo --no-headers'
  Jun 18 06:32:44.674: INFO: stderr: "No resources found in kubectl-6392 namespace.\n"
  Jun 18 06:32:44.674: INFO: stdout: ""
  Jun 18 06:32:44.675: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6392 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jun 18 06:32:44.747: INFO: stderr: ""
  Jun 18 06:32:44.747: INFO: stdout: ""
  Jun 18 06:32:44.747: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6392" for this suite. @ 06/18/24 06:32:44.754
• [32.215 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:451
  STEP: Creating a kubernetes client @ 06/18/24 06:32:44.761
  Jun 18 06:32:44.761: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename resourcequota @ 06/18/24 06:32:44.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:32:44.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:32:44.784
  STEP: Counting existing ResourceQuota @ 06/18/24 06:32:44.787
  E0618 06:32:44.935116      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:45.935134      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:46.935459      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:47.936089      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:48.936605      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/18/24 06:32:49.791
  STEP: Ensuring resource quota status is calculated @ 06/18/24 06:32:49.796
  E0618 06:32:49.937477      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:50.938108      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 06/18/24 06:32:51.8
  STEP: Ensuring resource quota status captures replicaset creation @ 06/18/24 06:32:51.815
  E0618 06:32:51.938910      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:52.938871      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 06/18/24 06:32:53.819
  STEP: Ensuring resource quota status released usage @ 06/18/24 06:32:53.825
  E0618 06:32:53.939369      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:54.939675      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:32:55.830: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7342" for this suite. @ 06/18/24 06:32:55.836
• [11.082 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 06/18/24 06:32:55.844
  Jun 18 06:32:55.844: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename configmap @ 06/18/24 06:32:55.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:32:55.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:32:55.873
  Jun 18 06:32:55.903: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4501" for this suite. @ 06/18/24 06:32:55.908
• [0.069 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:140
  STEP: Creating a kubernetes client @ 06/18/24 06:32:55.914
  Jun 18 06:32:55.914: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename secrets @ 06/18/24 06:32:55.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:32:55.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:32:55.929
  STEP: Creating projection with secret that has name secret-emptykey-test-e95609b2-fb03-4358-8c17-c18c3819632e @ 06/18/24 06:32:55.932
  Jun 18 06:32:55.934: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4178" for this suite. @ 06/18/24 06:32:55.939
  E0618 06:32:55.939686      18 retrywatcher.go:129] "Watch failed" err="context canceled"
• [0.032 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:189
  STEP: Creating a kubernetes client @ 06/18/24 06:32:55.947
  Jun 18 06:32:55.947: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename runtimeclass @ 06/18/24 06:32:55.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:32:55.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:32:55.968
  STEP: getting /apis @ 06/18/24 06:32:55.971
  STEP: getting /apis/node.k8s.io @ 06/18/24 06:32:55.98
  STEP: getting /apis/node.k8s.io/v1 @ 06/18/24 06:32:55.981
  STEP: creating @ 06/18/24 06:32:55.982
  STEP: watching @ 06/18/24 06:32:55.993
  Jun 18 06:32:55.994: INFO: starting watch
  STEP: getting @ 06/18/24 06:32:55.999
  STEP: listing @ 06/18/24 06:32:56.002
  STEP: patching @ 06/18/24 06:32:56.004
  STEP: updating @ 06/18/24 06:32:56.008
  Jun 18 06:32:56.014: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 06/18/24 06:32:56.014
  STEP: deleting a collection @ 06/18/24 06:32:56.023
  Jun 18 06:32:56.033: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8238" for this suite. @ 06/18/24 06:32:56.039
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 06/18/24 06:32:56.047
  Jun 18 06:32:56.047: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename projected @ 06/18/24 06:32:56.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:32:56.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:32:56.063
  STEP: Creating secret with name s-test-opt-del-f3b2173f-1581-4e80-ba9c-313b32a654d0 @ 06/18/24 06:32:56.072
  STEP: Creating secret with name s-test-opt-upd-1b7e2a06-2810-46f7-bc8a-36036140663a @ 06/18/24 06:32:56.076
  STEP: Creating the pod @ 06/18/24 06:32:56.079
  E0618 06:32:56.940085      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:57.940712      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-f3b2173f-1581-4e80-ba9c-313b32a654d0 @ 06/18/24 06:32:58.145
  STEP: Updating secret s-test-opt-upd-1b7e2a06-2810-46f7-bc8a-36036140663a @ 06/18/24 06:32:58.153
  STEP: Creating secret with name s-test-opt-create-8b944bb6-b668-469f-829e-9a5ee94efa7e @ 06/18/24 06:32:58.16
  STEP: waiting to observe update in volume @ 06/18/24 06:32:58.164
  E0618 06:32:58.941503      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:32:59.941879      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:00.942450      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:01.942934      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:33:02.200: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3300" for this suite. @ 06/18/24 06:33:02.205
• [6.165 seconds]
------------------------------
[sig-network] DNS should provide DNS for the cluster  [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 06/18/24 06:33:02.212
  Jun 18 06:33:02.212: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename dns @ 06/18/24 06:33:02.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:33:02.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:33:02.23
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 06/18/24 06:33:02.233
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 06/18/24 06:33:02.233
  STEP: creating a pod to probe DNS @ 06/18/24 06:33:02.233
  STEP: submitting the pod to kubernetes @ 06/18/24 06:33:02.233
  E0618 06:33:02.943115      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:03.943764      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/18/24 06:33:04.252
  STEP: looking for the results for each expected name from probers @ 06/18/24 06:33:04.255
  Jun 18 06:33:04.273: INFO: DNS probes using dns-3322/dns-test-8ef66680-08cf-4929-bed0-42f675b76139 succeeded

  Jun 18 06:33:04.273: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 06/18/24 06:33:04.279
  STEP: Destroying namespace "dns-3322" for this suite. @ 06/18/24 06:33:04.291
• [2.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:143
  STEP: Creating a kubernetes client @ 06/18/24 06:33:04.303
  Jun 18 06:33:04.303: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename replicaset @ 06/18/24 06:33:04.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:33:04.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:33:04.319
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 06/18/24 06:33:04.323
  Jun 18 06:33:04.333: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0618 06:33:04.944206      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:05.944329      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:06.944790      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:07.945251      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:08.945462      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:33:09.340: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/18/24 06:33:09.34
  STEP: getting scale subresource @ 06/18/24 06:33:09.34
  STEP: updating a scale subresource @ 06/18/24 06:33:09.343
  STEP: verifying the replicaset Spec.Replicas was modified @ 06/18/24 06:33:09.353
  STEP: Patch a scale subresource @ 06/18/24 06:33:09.362
  Jun 18 06:33:09.386: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4421" for this suite. @ 06/18/24 06:33:09.395
• [5.098 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 06/18/24 06:33:09.403
  Jun 18 06:33:09.403: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename projected @ 06/18/24 06:33:09.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:33:09.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:33:09.436
  STEP: Creating projection with secret that has name projected-secret-test-map-f736b1b1-39cb-4daa-be5e-bee232c93f89 @ 06/18/24 06:33:09.44
  STEP: Creating a pod to test consume secrets @ 06/18/24 06:33:09.444
  E0618 06:33:09.945742      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:10.946521      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:11.947705      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:12.948595      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:33:13.469
  Jun 18 06:33:13.473: INFO: Trying to get logs from node ck-128-worker-3 pod pod-projected-secrets-d65cfaf1-2210-4311-8cf8-4249cb2c29ac container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/18/24 06:33:13.487
  Jun 18 06:33:13.501: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4159" for this suite. @ 06/18/24 06:33:13.506
• [4.108 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 06/18/24 06:33:13.517
  Jun 18 06:33:13.517: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename container-probe @ 06/18/24 06:33:13.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:33:13.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:33:13.533
  STEP: Creating pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531 @ 06/18/24 06:33:13.538
  E0618 06:33:13.949349      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:14.949737      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/18/24 06:33:15.553
  Jun 18 06:33:15.556: INFO: Initial restart count of pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d is 0
  Jun 18 06:33:15.558: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:33:15.950458      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:16.950861      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:33:17.565: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:33:17.951708      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:18.952551      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:33:19.569: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:33:19.953609      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:20.954645      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:33:21.574: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:33:21.954953      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:22.955749      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:33:23.578: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:33:23.956087      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:24.956485      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:33:25.583: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:33:25.957542      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:26.957882      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:33:27.588: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:33:27.958566      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:28.958688      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:33:29.592: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:33:29.959264      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:30.959895      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:33:31.598: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:33:31.960926      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:32.961735      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:33:33.606: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:33:33.961746      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:34.962454      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:33:35.610: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:33:35.963486      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:36.963841      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:33:37.616: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:33:37.964418      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:38.964910      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:33:39.621: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:33:39.965729      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:40.966480      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:33:41.625: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:33:41.967452      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:42.968154      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:33:43.630: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:33:43.969016      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:44.969351      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:33:45.635: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:33:45.969593      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:46.970028      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:33:47.640: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:33:47.970614      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:48.970948      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:33:49.646: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:33:49.971075      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:50.971850      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:33:51.652: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:33:51.972486      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:52.972773      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:33:53.657: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:33:53.972879      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:54.973292      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:33:55.661: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:33:55.974021      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:56.974514      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:33:57.667: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:33:57.975494      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:33:58.975867      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:33:59.672: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:33:59.975985      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:00.976848      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:34:01.678: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:34:01.977573      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:02.978327      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:34:03.683: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:34:03.978908      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:04.979068      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:34:05.688: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:34:05.979350      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:06.979418      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:34:07.694: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:34:07.979642      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:08.980008      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:34:09.700: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:34:09.980476      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:10.981575      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:34:11.705: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:34:11.982539      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:12.982835      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:34:13.711: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:34:13.983548      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:14.983827      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:34:15.716: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:34:15.984391      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:16.984784      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:34:17.721: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:34:17.985055      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:18.985444      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:34:19.727: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:34:19.986353      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:20.987044      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:34:21.732: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:34:21.987121      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:22.987491      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:34:23.738: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:34:23.988489      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:24.988775      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:34:25.746: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:34:25.989634      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:26.989993      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:34:27.750: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  E0618 06:34:27.990628      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:28.991435      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:34:29.755: INFO: Get pod test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d in namespace container-probe-7531
  Jun 18 06:34:29.755: INFO: Restart count of pod container-probe-7531/test-grpc-db38220e-c627-4e4c-ace1-4b5dd633255d is now 1 (1m14.198742664s elapsed)
  Jun 18 06:34:29.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 06/18/24 06:34:29.761
  STEP: Destroying namespace "container-probe-7531" for this suite. @ 06/18/24 06:34:29.776
• [76.274 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services  [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 06/18/24 06:34:29.788
  Jun 18 06:34:29.789: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename dns @ 06/18/24 06:34:29.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:34:29.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:34:29.808
  STEP: Creating a test headless service @ 06/18/24 06:34:29.811
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7058.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7058.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7058.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7058.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7058.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7058.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7058.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-7058.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7058.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-7058.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 146.205.102.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.102.205.146_udp@PTR;check="$$(dig +tcp +noall +answer +search 146.205.102.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.102.205.146_tcp@PTR;sleep 1; done
   @ 06/18/24 06:34:29.836
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7058.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7058.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7058.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7058.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7058.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7058.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7058.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7058.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7058.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7058.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 146.205.102.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.102.205.146_udp@PTR;check="$$(dig +tcp +noall +answer +search 146.205.102.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.102.205.146_tcp@PTR;sleep 1; done
   @ 06/18/24 06:34:29.836
  STEP: creating a pod to probe DNS @ 06/18/24 06:34:29.836
  STEP: submitting the pod to kubernetes @ 06/18/24 06:34:29.836
  E0618 06:34:29.992414      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:30.993127      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/18/24 06:34:31.857
  STEP: looking for the results for each expected name from probers @ 06/18/24 06:34:31.861
  Jun 18 06:34:31.866: INFO: Unable to read wheezy_udp@dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:31.870: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:31.874: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:31.877: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:31.892: INFO: Unable to read jessie_udp@dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:31.895: INFO: Unable to read jessie_tcp@dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:31.898: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:31.900: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:31.912: INFO: Lookups using dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe failed for: [wheezy_udp@dns-test-service.dns-7058.svc.cluster.local wheezy_tcp@dns-test-service.dns-7058.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local jessie_udp@dns-test-service.dns-7058.svc.cluster.local jessie_tcp@dns-test-service.dns-7058.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local]

  Jun 18 06:34:31.920: INFO: Pod client logs for webserver: 
  Jun 18 06:34:31.926: INFO: Pod client logs for querier: 
  Jun 18 06:34:31.931: INFO: Pod client logs for jessie-querier: 
  E0618 06:34:31.993992      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:32.994492      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:33.995073      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:34.995469      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:35.996580      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:34:36.937: INFO: Unable to read wheezy_udp@dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:36.940: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:36.944: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:36.949: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:36.971: INFO: Unable to read jessie_udp@dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:36.978: INFO: Unable to read jessie_tcp@dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:36.982: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:36.986: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  E0618 06:34:36.996860      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:34:37.002: INFO: Lookups using dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe failed for: [wheezy_udp@dns-test-service.dns-7058.svc.cluster.local wheezy_tcp@dns-test-service.dns-7058.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local jessie_udp@dns-test-service.dns-7058.svc.cluster.local jessie_tcp@dns-test-service.dns-7058.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local]

  Jun 18 06:34:37.009: INFO: Pod client logs for webserver: 
  Jun 18 06:34:37.019: INFO: Pod client logs for querier: 
  Jun 18 06:34:37.028: INFO: Pod client logs for jessie-querier: 
  E0618 06:34:37.997126      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:38.997592      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:39.998076      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:40.998689      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:34:41.937: INFO: Unable to read wheezy_udp@dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:41.941: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:41.945: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:41.948: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:41.966: INFO: Unable to read jessie_udp@dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:41.970: INFO: Unable to read jessie_tcp@dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:41.978: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:41.988: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  E0618 06:34:41.999084      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:34:41.999: INFO: Lookups using dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe failed for: [wheezy_udp@dns-test-service.dns-7058.svc.cluster.local wheezy_tcp@dns-test-service.dns-7058.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local jessie_udp@dns-test-service.dns-7058.svc.cluster.local jessie_tcp@dns-test-service.dns-7058.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local]

  Jun 18 06:34:42.007: INFO: Pod client logs for webserver: 
  Jun 18 06:34:42.012: INFO: Pod client logs for querier: 
  Jun 18 06:34:42.018: INFO: Pod client logs for jessie-querier: 
  E0618 06:34:42.999548      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:44.000007      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:45.000657      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:46.000841      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:34:46.936: INFO: Unable to read wheezy_udp@dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:46.940: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:46.944: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:46.948: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:46.966: INFO: Unable to read jessie_udp@dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:46.970: INFO: Unable to read jessie_tcp@dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:46.977: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:46.982: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  E0618 06:34:47.001443      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:34:47.001: INFO: Lookups using dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe failed for: [wheezy_udp@dns-test-service.dns-7058.svc.cluster.local wheezy_tcp@dns-test-service.dns-7058.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local jessie_udp@dns-test-service.dns-7058.svc.cluster.local jessie_tcp@dns-test-service.dns-7058.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local]

  Jun 18 06:34:47.009: INFO: Pod client logs for webserver: 
  Jun 18 06:34:47.017: INFO: Pod client logs for querier: 
  Jun 18 06:34:47.025: INFO: Pod client logs for jessie-querier: 
  E0618 06:34:48.001601      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:49.001803      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:50.001885      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:51.002304      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:34:51.943: INFO: Unable to read wheezy_udp@dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:51.948: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:51.951: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:51.953: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:51.970: INFO: Unable to read jessie_udp@dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:51.978: INFO: Unable to read jessie_tcp@dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:51.983: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:51.986: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:51.997: INFO: Lookups using dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe failed for: [wheezy_udp@dns-test-service.dns-7058.svc.cluster.local wheezy_tcp@dns-test-service.dns-7058.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local jessie_udp@dns-test-service.dns-7058.svc.cluster.local jessie_tcp@dns-test-service.dns-7058.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local]

  E0618 06:34:52.002333      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:34:52.004: INFO: Pod client logs for webserver: 
  Jun 18 06:34:52.009: INFO: Pod client logs for querier: 
  Jun 18 06:34:52.017: INFO: Pod client logs for jessie-querier: 
  E0618 06:34:53.003075      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:54.003629      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:55.004250      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:56.005655      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:34:56.936: INFO: Unable to read wheezy_udp@dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:56.939: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:56.943: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:56.946: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:56.964: INFO: Unable to read jessie_udp@dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:56.968: INFO: Unable to read jessie_tcp@dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:56.972: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:56.975: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local from pod dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe: the server could not find the requested resource (get pods dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe)
  Jun 18 06:34:56.990: INFO: Lookups using dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe failed for: [wheezy_udp@dns-test-service.dns-7058.svc.cluster.local wheezy_tcp@dns-test-service.dns-7058.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local jessie_udp@dns-test-service.dns-7058.svc.cluster.local jessie_tcp@dns-test-service.dns-7058.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7058.svc.cluster.local]

  Jun 18 06:34:56.998: INFO: Pod client logs for webserver: 
  Jun 18 06:34:57.005: INFO: Pod client logs for querier: 
  E0618 06:34:57.005749      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:34:57.013: INFO: Pod client logs for jessie-querier: 
  E0618 06:34:58.006070      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:34:59.006691      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:00.007247      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:01.007719      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:35:01.991: INFO: DNS probes using dns-7058/dns-test-9a0962cc-0ce8-45fe-9492-c3da7d1d23fe succeeded

  Jun 18 06:35:01.991: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 06/18/24 06:35:01.997
  E0618 06:35:02.008610      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the test service @ 06/18/24 06:35:02.015
  STEP: deleting the test headless service @ 06/18/24 06:35:02.047
  STEP: Destroying namespace "dns-7058" for this suite. @ 06/18/24 06:35:02.06
• [32.279 seconds]
------------------------------
S
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 06/18/24 06:35:02.068
  Jun 18 06:35:02.068: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename cronjob @ 06/18/24 06:35:02.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:35:02.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:35:02.09
  STEP: Creating a suspended cronjob @ 06/18/24 06:35:02.093
  STEP: Ensuring no jobs are scheduled @ 06/18/24 06:35:02.1
  E0618 06:35:03.009003      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:04.011113      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:05.010746      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:06.011262      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:07.011386      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:08.011511      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:09.012308      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:10.012667      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:11.013301      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:12.013715      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:13.014287      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:14.014773      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:15.015009      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:16.016069      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:17.016456      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:18.016900      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:19.017155      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:20.017717      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:21.017442      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:22.017919      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:23.018009      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:24.018581      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:25.018926      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:26.019090      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:27.019392      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:28.019696      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:29.019828      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:30.020308      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:31.020544      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:32.020862      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:33.021158      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:34.022964      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:35.023589      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:36.024313      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:37.024695      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:38.025424      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:39.025560      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:40.025976      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:41.026821      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:42.027424      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:43.027690      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:44.028402      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:45.029512      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:46.030496      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:47.031235      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:48.031560      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:49.032029      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:50.032557      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:51.032763      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:52.033484      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:53.033888      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:54.034653      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:55.034766      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:56.035632      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:57.036256      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:58.036520      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:35:59.037894      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:00.038331      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:01.038441      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:02.038809      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:03.039732      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:04.039919      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:05.040049      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:06.040970      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:07.041370      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:08.041725      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:09.041818      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:10.042407      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:11.042711      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:12.043128      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:13.043422      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:14.043530      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:15.044261      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:16.044484      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:17.045605      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:18.045945      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:19.046674      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:20.046845      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:21.047850      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:22.049200      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:23.049105      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:24.049298      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:25.049637      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:26.050328      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:27.050446      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:28.050834      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:29.050938      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:30.051282      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:31.051394      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:32.051740      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:33.052394      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:34.052690      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:35.053825      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:36.054030      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:37.054899      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:38.055201      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:39.056000      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:40.057163      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:41.056546      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:42.057130      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:43.057628      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:44.057838      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:45.058418      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:46.059062      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:47.059070      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:48.059278      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:49.060039      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:50.060546      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:51.060929      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:52.061548      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:53.061463      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:54.061621      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:55.062160      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:56.062962      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:57.063252      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:58.063665      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:36:59.063899      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:00.064218      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:01.064800      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:02.065379      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:03.065401      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:04.065671      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:05.065756      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:06.065921      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:07.066959      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:08.067487      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:09.067592      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:10.067871      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:11.068279      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:12.069125      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:13.069829      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:14.070152      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:15.071087      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:16.071224      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:17.071768      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:18.072140      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:19.072267      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:20.072810      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:21.073304      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:22.073495      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:23.073671      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:24.073979      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:25.074320      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:26.074721      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:27.075560      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:28.075920      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:29.076040      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:30.076376      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:31.077062      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:32.077285      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:33.077475      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:34.077958      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:35.080591      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:36.081293      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:37.081543      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:38.081902      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:39.082515      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:40.082954      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:41.083473      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:42.083805      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:43.084091      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:44.084526      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:45.085604      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:46.085501      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:47.085677      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:48.086124      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:49.086343      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:50.086752      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:51.086956      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:52.087497      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:53.087883      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:54.088348      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:55.089055      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:56.089937      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:57.089910      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:58.090300      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:37:59.090396      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:00.090797      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:01.090962      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:02.091367      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:03.091608      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:04.091994      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:05.092423      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:06.093036      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:07.093521      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:08.093848      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:09.094360      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:10.094681      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:11.095225      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:12.095517      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:13.096314      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:14.096818      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:15.097488      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:16.097988      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:17.098265      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:18.098616      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:19.099238      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:20.099846      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:21.100121      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:22.100603      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:23.101700      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:24.102002      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:25.102461      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:26.103254      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:27.103977      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:28.104615      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:29.105906      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:30.105780      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:31.106561      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:32.107317      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:33.107716      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:34.108264      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:35.108228      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:36.108582      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:37.108860      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:38.109695      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:39.112406      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:40.113049      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:41.113627      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:42.114466      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:43.115297      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:44.115329      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:45.115915      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:46.117044      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:47.117483      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:48.118119      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:49.118487      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:50.118647      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:51.118938      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:52.119379      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:53.119494      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:54.120114      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:55.120736      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:56.121553      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:57.121984      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:58.122628      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:38:59.123140      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:00.123591      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:01.123987      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:02.124112      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:03.124734      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:04.125818      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:05.126689      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:06.126942      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:07.127314      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:08.127556      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:09.127853      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:10.127962      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:11.128490      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:12.128574      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:13.128975      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:14.129554      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:15.130637      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:16.131496      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:17.131702      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:18.132677      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:19.132983      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:20.133003      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:21.133366      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:22.133731      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:23.134245      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:24.135085      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:25.135520      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:26.136196      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:27.136604      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:28.136846      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:29.137354      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:30.137538      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:31.137431      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:32.138428      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:33.138639      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:34.138967      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:35.140295      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:36.141159      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:37.141528      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:38.142975      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:39.143525      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:40.143998      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:41.144308      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:42.144941      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:43.145337      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:44.145913      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:45.147005      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:46.147720      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:47.148087      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:48.148862      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:49.149207      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:50.149673      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:51.149917      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:52.150550      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:53.150917      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:54.151686      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:55.152583      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:56.153323      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:57.153680      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:58.154102      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:39:59.154503      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:00.154740      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:01.154939      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 06/18/24 06:40:02.107
  STEP: Removing cronjob @ 06/18/24 06:40:02.11
  Jun 18 06:40:02.116: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9017" for this suite. @ 06/18/24 06:40:02.123
• [300.064 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 06/18/24 06:40:02.134
  Jun 18 06:40:02.134: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename secrets @ 06/18/24 06:40:02.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:40:02.153
  E0618 06:40:02.156110      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:40:02.158
  STEP: Creating secret with name secret-test-727d0ddb-a42c-4f37-b846-8a2f8cf8977d @ 06/18/24 06:40:02.162
  STEP: Creating a pod to test consume secrets @ 06/18/24 06:40:02.167
  E0618 06:40:03.156369      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:04.157071      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:05.157915      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:06.157911      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:40:06.195
  Jun 18 06:40:06.199: INFO: Trying to get logs from node ck-128-worker-2 pod pod-secrets-136af2a2-ec34-4b53-a4d9-d76976eaa1ee container secret-volume-test: <nil>
  STEP: delete the pod @ 06/18/24 06:40:06.229
  Jun 18 06:40:06.249: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1193" for this suite. @ 06/18/24 06:40:06.254
• [4.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 06/18/24 06:40:06.262
  Jun 18 06:40:06.262: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename projected @ 06/18/24 06:40:06.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:40:06.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:40:06.281
  STEP: Creating projection with secret that has name projected-secret-test-map-2ecc31a3-5320-4b6d-897b-58aad209e7b5 @ 06/18/24 06:40:06.286
  STEP: Creating a pod to test consume secrets @ 06/18/24 06:40:06.29
  E0618 06:40:07.158065      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:08.158530      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:09.158703      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:10.159360      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:40:10.311
  Jun 18 06:40:10.314: INFO: Trying to get logs from node ck-128-worker-1 pod pod-projected-secrets-4e2ced8a-b2a2-4229-bd86-3282b25983a1 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/18/24 06:40:10.338
  Jun 18 06:40:10.359: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4803" for this suite. @ 06/18/24 06:40:10.364
• [4.107 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:817
  STEP: Creating a kubernetes client @ 06/18/24 06:40:10.373
  Jun 18 06:40:10.373: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename gc @ 06/18/24 06:40:10.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:40:10.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:40:10.402
  Jun 18 06:40:10.435: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"9aeeba51-5d5f-45fa-9e69-e3f8d3572d4d", Controller:(*bool)(0xc0081d6e16), BlockOwnerDeletion:(*bool)(0xc0081d6e17)}}
  Jun 18 06:40:10.443: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"beeb9c82-a341-4a0f-9486-69ffa44307b2", Controller:(*bool)(0xc008137dce), BlockOwnerDeletion:(*bool)(0xc008137dcf)}}
  Jun 18 06:40:10.450: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"438d4359-508f-405b-8d21-7ac26ea53b8a", Controller:(*bool)(0xc008137fee), BlockOwnerDeletion:(*bool)(0xc008137fef)}}
  E0618 06:40:11.160116      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:12.160827      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:13.161362      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:14.161757      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:15.162668      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:40:15.463: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1718" for this suite. @ 06/18/24 06:40:15.469
• [5.102 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3326
  STEP: Creating a kubernetes client @ 06/18/24 06:40:15.475
  Jun 18 06:40:15.475: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename services @ 06/18/24 06:40:15.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:40:15.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:40:15.495
  STEP: creating a Service @ 06/18/24 06:40:15.503
  STEP: watching for the Service to be added @ 06/18/24 06:40:15.515
  Jun 18 06:40:15.519: INFO: Found Service test-service-mvfgg in namespace services-4399 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
  Jun 18 06:40:15.519: INFO: Service test-service-mvfgg created
  STEP: Getting /status @ 06/18/24 06:40:15.519
  Jun 18 06:40:15.524: INFO: Service test-service-mvfgg has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 06/18/24 06:40:15.524
  STEP: watching for the Service to be patched @ 06/18/24 06:40:15.531
  Jun 18 06:40:15.533: INFO: observed Service test-service-mvfgg in namespace services-4399 with annotations: map[] & LoadBalancer: {[]}
  Jun 18 06:40:15.533: INFO: Found Service test-service-mvfgg in namespace services-4399 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
  Jun 18 06:40:15.533: INFO: Service test-service-mvfgg has service status patched
  STEP: updating the ServiceStatus @ 06/18/24 06:40:15.533
  Jun 18 06:40:15.541: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 06/18/24 06:40:15.542
  Jun 18 06:40:15.544: INFO: Observed Service test-service-mvfgg in namespace services-4399 with annotations: map[] & Conditions: {[]}
  Jun 18 06:40:15.544: INFO: Observed event: &Service{ObjectMeta:{test-service-mvfgg  services-4399  7c552b89-b19a-417e-9286-06c5156dda64 25877 0 2024-06-18 06:40:15 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-06-18 06:40:15 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-06-18 06:40:15 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.100.124.194,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.100.124.194],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Jun 18 06:40:15.545: INFO: Found Service test-service-mvfgg in namespace services-4399 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun 18 06:40:15.546: INFO: Service test-service-mvfgg has service status updated
  STEP: patching the service @ 06/18/24 06:40:15.546
  STEP: watching for the Service to be patched @ 06/18/24 06:40:15.566
  Jun 18 06:40:15.569: INFO: observed Service test-service-mvfgg in namespace services-4399 with labels: map[test-service-static:true]
  Jun 18 06:40:15.571: INFO: observed Service test-service-mvfgg in namespace services-4399 with labels: map[test-service-static:true]
  Jun 18 06:40:15.571: INFO: observed Service test-service-mvfgg in namespace services-4399 with labels: map[test-service-static:true]
  Jun 18 06:40:15.572: INFO: Found Service test-service-mvfgg in namespace services-4399 with labels: map[test-service:patched test-service-static:true]
  Jun 18 06:40:15.572: INFO: Service test-service-mvfgg patched
  STEP: deleting the service @ 06/18/24 06:40:15.572
  STEP: watching for the Service to be deleted @ 06/18/24 06:40:15.584
  Jun 18 06:40:15.588: INFO: Observed event: ADDED
  Jun 18 06:40:15.588: INFO: Observed event: MODIFIED
  Jun 18 06:40:15.588: INFO: Observed event: MODIFIED
  Jun 18 06:40:15.588: INFO: Observed event: MODIFIED
  Jun 18 06:40:15.588: INFO: Found Service test-service-mvfgg in namespace services-4399 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Jun 18 06:40:15.588: INFO: Service test-service-mvfgg deleted
  Jun 18 06:40:15.589: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4399" for this suite. @ 06/18/24 06:40:15.596
• [0.128 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:706
  STEP: Creating a kubernetes client @ 06/18/24 06:40:15.605
  Jun 18 06:40:15.605: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename sched-pred @ 06/18/24 06:40:15.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:40:15.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:40:15.627
  Jun 18 06:40:15.631: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun 18 06:40:15.643: INFO: Waiting for terminating namespaces to be deleted...
  Jun 18 06:40:15.646: INFO: 
  Logging pods the apiserver thinks is on node ck-128-worker-1 before test
  Jun 18 06:40:15.655: INFO: calico-kube-controllers-8d76c5f9b-r6nmr from kube-system started at 2024-06-18 05:29:18 +0000 UTC (1 container statuses recorded)
  Jun 18 06:40:15.655: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Jun 18 06:40:15.655: INFO: calico-node-g84th from kube-system started at 2024-06-18 05:29:18 +0000 UTC (1 container statuses recorded)
  Jun 18 06:40:15.655: INFO: 	Container calico-node ready: true, restart count 0
  Jun 18 06:40:15.655: INFO: kube-proxy-rm957 from kube-system started at 2024-06-18 05:17:10 +0000 UTC (1 container statuses recorded)
  Jun 18 06:40:15.655: INFO: 	Container kube-proxy ready: true, restart count 0
  Jun 18 06:40:15.655: INFO: secloudit-registry-agent-5skw6 from secloudit started at 2024-06-18 05:25:53 +0000 UTC (1 container statuses recorded)
  Jun 18 06:40:15.655: INFO: 	Container secloudit-registry-agent ready: false, restart count 0
  Jun 18 06:40:15.655: INFO: sonobuoy-systemd-logs-daemon-set-d21185bcb31b4ec9-zbzc8 from sonobuoy started at 2024-06-18 05:35:24 +0000 UTC (2 container statuses recorded)
  Jun 18 06:40:15.655: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 18 06:40:15.655: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 18 06:40:15.655: INFO: 
  Logging pods the apiserver thinks is on node ck-128-worker-2 before test
  Jun 18 06:40:15.664: INFO: calico-node-r67nr from kube-system started at 2024-06-18 05:29:18 +0000 UTC (1 container statuses recorded)
  Jun 18 06:40:15.664: INFO: 	Container calico-node ready: true, restart count 0
  Jun 18 06:40:15.664: INFO: kube-proxy-9s677 from kube-system started at 2024-06-18 05:17:10 +0000 UTC (1 container statuses recorded)
  Jun 18 06:40:15.664: INFO: 	Container kube-proxy ready: true, restart count 0
  Jun 18 06:40:15.664: INFO: secloudit-registry-agent-rgjjq from secloudit started at 2024-06-18 06:27:47 +0000 UTC (1 container statuses recorded)
  Jun 18 06:40:15.664: INFO: 	Container secloudit-registry-agent ready: false, restart count 0
  Jun 18 06:40:15.664: INFO: sonobuoy from sonobuoy started at 2024-06-18 05:35:23 +0000 UTC (1 container statuses recorded)
  Jun 18 06:40:15.664: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun 18 06:40:15.664: INFO: sonobuoy-systemd-logs-daemon-set-d21185bcb31b4ec9-nnwvq from sonobuoy started at 2024-06-18 05:35:24 +0000 UTC (2 container statuses recorded)
  Jun 18 06:40:15.664: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 18 06:40:15.664: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 18 06:40:15.664: INFO: 
  Logging pods the apiserver thinks is on node ck-128-worker-3 before test
  Jun 18 06:40:15.673: INFO: calico-node-f85nn from kube-system started at 2024-06-18 05:29:18 +0000 UTC (1 container statuses recorded)
  Jun 18 06:40:15.673: INFO: 	Container calico-node ready: true, restart count 0
  Jun 18 06:40:15.673: INFO: kube-proxy-tn5dc from kube-system started at 2024-06-18 05:17:10 +0000 UTC (1 container statuses recorded)
  Jun 18 06:40:15.673: INFO: 	Container kube-proxy ready: true, restart count 0
  Jun 18 06:40:15.673: INFO: secloudit-registry-agent-vh54z from secloudit started at 2024-06-18 05:25:53 +0000 UTC (1 container statuses recorded)
  Jun 18 06:40:15.673: INFO: 	Container secloudit-registry-agent ready: false, restart count 0
  Jun 18 06:40:15.673: INFO: sonobuoy-e2e-job-1e0b3c84f5ad40e5 from sonobuoy started at 2024-06-18 05:35:24 +0000 UTC (2 container statuses recorded)
  Jun 18 06:40:15.673: INFO: 	Container e2e ready: true, restart count 0
  Jun 18 06:40:15.673: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 18 06:40:15.673: INFO: sonobuoy-systemd-logs-daemon-set-d21185bcb31b4ec9-65bjg from sonobuoy started at 2024-06-18 05:35:24 +0000 UTC (2 container statuses recorded)
  Jun 18 06:40:15.673: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 18 06:40:15.673: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/18/24 06:40:15.673
  E0618 06:40:16.163044      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:17.163602      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/18/24 06:40:17.695
  STEP: Trying to apply a random label on the found node. @ 06/18/24 06:40:17.712
  STEP: verifying the node has the label kubernetes.io/e2e-9aefddeb-7a13-42f3-a895-77b23c35df13 95 @ 06/18/24 06:40:17.727
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 06/18/24 06:40:17.733
  E0618 06:40:18.163893      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:19.164303      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.190.169 on the node which pod4 resides and expect not scheduled @ 06/18/24 06:40:19.75
  E0618 06:40:20.164574      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:21.164862      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:22.165634      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:23.166067      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:24.166449      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:25.167239      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:26.167576      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:27.167946      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:28.168798      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:29.169356      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:30.169446      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:31.169809      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:32.170130      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:33.170634      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:34.171811      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:35.172615      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:36.172887      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:37.173221      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:38.174282      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:39.174658      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:40.175292      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:41.175569      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:42.176280      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:43.177470      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:44.177750      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:45.178681      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:46.179467      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:47.179775      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:48.179974      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:49.180211      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:50.180340      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:51.180695      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:52.180872      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:53.181194      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:54.181806      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:55.182680      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:56.182795      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:57.183284      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:58.183354      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:40:59.183833      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:00.184347      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:01.184842      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:02.184949      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:03.185072      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:04.185883      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:05.186723      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:06.187323      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:07.187698      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:08.188030      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:09.188438      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:10.189398      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:11.189754      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:12.193876      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:13.190568      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:14.190886      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:15.191705      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:16.192343      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:17.192562      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:18.192736      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:19.193137      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:20.193232      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:21.193619      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:22.193800      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:23.194301      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:24.194540      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:25.195569      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:26.196238      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:27.196441      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:28.196597      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:29.197086      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:30.197086      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:31.197330      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:32.197371      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:33.197594      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:34.198726      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:35.201782      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:36.201552      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:37.201857      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:38.202871      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:39.203147      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:40.203691      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:41.203842      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:42.204952      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:43.205341      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:44.205971      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:45.206813      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:46.207254      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:47.207426      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:48.208449      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:49.208823      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:50.209934      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:51.210136      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:52.210424      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:53.210663      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:54.211369      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:55.211662      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:56.212082      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:57.212302      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:58.212363      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:41:59.212755      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:00.213343      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:01.213691      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:02.213835      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:03.214157      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:04.214373      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:05.214754      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:06.214845      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:07.215040      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:08.215393      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:09.215858      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:10.216726      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:11.216905      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:12.217904      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:13.218030      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:14.218592      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:15.219781      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:16.220370      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:17.220631      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:18.221278      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:19.222246      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:20.222867      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:21.222929      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:22.223383      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:23.223934      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:24.224482      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:25.224707      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:26.225534      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:27.225975      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:28.226045      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:29.226434      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:30.226977      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:31.227308      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:32.227333      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:33.227573      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:34.227759      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:35.228494      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:36.228879      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:37.229082      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:38.230028      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:39.230479      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:40.231374      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:41.231624      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:42.232599      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:43.233636      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:44.233899      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:45.234890      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:46.235661      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:47.236049      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:48.236435      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:49.236778      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:50.237163      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:51.237550      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:52.237840      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:53.237975      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:54.238541      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:55.239417      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:56.240504      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:57.240910      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:58.241652      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:42:59.241925      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:00.242114      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:01.242517      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:02.243296      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:03.243974      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:04.244659      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:05.245853      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:06.246702      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:07.247019      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:08.247483      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:09.247846      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:10.247961      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:11.248831      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:12.249482      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:13.250571      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:14.250674      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:15.251685      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:16.251775      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:17.252076      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:18.252976      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:19.253308      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:20.254297      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:21.254630      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:22.255252      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:23.255551      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:24.256523      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:25.257340      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:26.257424      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:27.257604      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:28.258354      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:29.258601      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:30.259460      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:31.259533      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:32.260560      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:33.260671      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:34.261254      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:35.262039      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:36.262208      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:37.262472      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:38.262779      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:39.263293      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:40.264008      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:41.264584      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:42.264743      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:43.264914      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:44.265245      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:45.265365      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:46.265549      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:47.266467      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:48.266769      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:49.267036      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:50.267805      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:51.268821      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:52.269140      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:53.269469      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:54.269654      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:55.270747      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:56.271153      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:57.271576      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:58.271983      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:43:59.273156      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:00.273721      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:01.274027      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:02.274121      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:03.274314      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:04.274805      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:05.275104      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:06.275418      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:07.276291      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:08.276582      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:09.276813      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:10.277723      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:11.278643      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:12.279009      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:13.279289      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:14.279664      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:15.280473      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:16.280824      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:17.281339      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:18.281591      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:19.282312      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:20.282911      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:21.283729      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:22.284073      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:23.284687      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:24.284990      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:25.285146      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:26.286113      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:27.286330      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:28.286411      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:29.286655      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:30.287530      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:31.287666      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:32.288069      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:33.288784      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:34.289759      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:35.289787      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:36.290313      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:37.290615      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:38.290874      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:39.291097      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:40.292010      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:41.292998      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:42.293391      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:43.294269      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:44.294287      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:45.295061      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:46.295512      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:47.295662      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:48.296029      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:49.296350      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:50.296408      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:51.296508      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:52.297359      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:53.297274      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:54.297542      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:55.298730      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:56.299060      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:57.300261      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:58.300528      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:44:59.301596      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:00.301491      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:01.301820      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:02.302977      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:03.303336      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:04.303811      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:05.304142      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:06.304979      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:07.305428      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:08.305715      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:09.306218      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:10.306885      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:11.307052      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:12.307459      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:13.308233      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:14.308698      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:15.308809      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:16.309153      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:17.309460      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:18.309981      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:19.310514      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-9aefddeb-7a13-42f3-a895-77b23c35df13 off the node ck-128-worker-1 @ 06/18/24 06:45:19.766
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-9aefddeb-7a13-42f3-a895-77b23c35df13 @ 06/18/24 06:45:19.785
  Jun 18 06:45:19.791: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6692" for this suite. @ 06/18/24 06:45:19.798
• [304.205 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:207
  STEP: Creating a kubernetes client @ 06/18/24 06:45:19.812
  Jun 18 06:45:19.812: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename emptydir @ 06/18/24 06:45:19.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:45:19.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:45:19.835
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 06/18/24 06:45:19.839
  E0618 06:45:20.311080      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:21.311657      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:22.312667      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:23.313043      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:45:23.861
  Jun 18 06:45:23.865: INFO: Trying to get logs from node ck-128-worker-2 pod pod-ba59affa-ab1f-4443-8e98-457004b12d3c container test-container: <nil>
  STEP: delete the pod @ 06/18/24 06:45:23.892
  Jun 18 06:45:23.910: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4075" for this suite. @ 06/18/24 06:45:23.917
• [4.111 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 06/18/24 06:45:23.924
  Jun 18 06:45:23.924: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename kubectl-logs @ 06/18/24 06:45:23.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:45:23.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:45:23.954
  STEP: creating an pod @ 06/18/24 06:45:23.958
  Jun 18 06:45:23.958: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-logs-1041 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Jun 18 06:45:24.075: INFO: stderr: ""
  Jun 18 06:45:24.075: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 06/18/24 06:45:24.075
  Jun 18 06:45:24.075: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0618 06:45:24.313531      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:25.314238      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:45:26.083: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 06/18/24 06:45:26.083
  Jun 18 06:45:26.083: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-logs-1041 logs logs-generator logs-generator'
  Jun 18 06:45:26.165: INFO: stderr: ""
  Jun 18 06:45:26.165: INFO: stdout: "I0618 06:45:24.693330       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/b5lv 366\nI0618 06:45:24.893377       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/kube-system/pods/vkmw 256\nI0618 06:45:25.094028       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/kmmm 574\nI0618 06:45:25.293327       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/mf8 314\nI0618 06:45:25.493539       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/c8vx 591\nI0618 06:45:25.693755       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/pl2 459\nI0618 06:45:25.894109       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/q74 200\nI0618 06:45:26.093332       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/kfj 521\n"
  STEP: limiting log lines @ 06/18/24 06:45:26.165
  Jun 18 06:45:26.165: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-logs-1041 logs logs-generator logs-generator --tail=1'
  Jun 18 06:45:26.260: INFO: stderr: ""
  Jun 18 06:45:26.260: INFO: stdout: "I0618 06:45:26.093332       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/kfj 521\n"
  Jun 18 06:45:26.260: INFO: got output "I0618 06:45:26.093332       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/kfj 521\n"
  STEP: limiting log bytes @ 06/18/24 06:45:26.26
  Jun 18 06:45:26.260: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-logs-1041 logs logs-generator logs-generator --limit-bytes=1'
  E0618 06:45:26.315192      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:45:26.345: INFO: stderr: ""
  Jun 18 06:45:26.346: INFO: stdout: "I"
  Jun 18 06:45:26.346: INFO: got output "I"
  STEP: exposing timestamps @ 06/18/24 06:45:26.346
  Jun 18 06:45:26.346: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-logs-1041 logs logs-generator logs-generator --tail=1 --timestamps'
  Jun 18 06:45:26.451: INFO: stderr: ""
  Jun 18 06:45:26.451: INFO: stdout: "2024-06-18T06:45:26.293741369Z I0618 06:45:26.293640       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/wjnr 484\n"
  Jun 18 06:45:26.451: INFO: got output "2024-06-18T06:45:26.293741369Z I0618 06:45:26.293640       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/wjnr 484\n"
  STEP: restricting to a time range @ 06/18/24 06:45:26.451
  E0618 06:45:27.315454      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:28.315940      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:45:28.952: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-logs-1041 logs logs-generator logs-generator --since=1s'
  Jun 18 06:45:29.046: INFO: stderr: ""
  Jun 18 06:45:29.046: INFO: stdout: "I0618 06:45:28.093887       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/kube-system/pods/ptr 344\nI0618 06:45:28.294322       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/fldz 333\nI0618 06:45:28.493574       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/kube-system/pods/9rv 439\nI0618 06:45:28.693973       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/dt9 398\nI0618 06:45:28.893276       1 logs_generator.go:76] 21 POST /api/v1/namespaces/kube-system/pods/7km 324\n"
  Jun 18 06:45:29.046: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-logs-1041 logs logs-generator logs-generator --since=24h'
  Jun 18 06:45:29.144: INFO: stderr: ""
  Jun 18 06:45:29.145: INFO: stdout: "I0618 06:45:24.693330       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/b5lv 366\nI0618 06:45:24.893377       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/kube-system/pods/vkmw 256\nI0618 06:45:25.094028       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/kmmm 574\nI0618 06:45:25.293327       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/mf8 314\nI0618 06:45:25.493539       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/c8vx 591\nI0618 06:45:25.693755       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/pl2 459\nI0618 06:45:25.894109       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/q74 200\nI0618 06:45:26.093332       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/kfj 521\nI0618 06:45:26.293640       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/wjnr 484\nI0618 06:45:26.494040       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/ns/pods/4br 598\nI0618 06:45:26.694289       1 logs_generator.go:76] 10 POST /api/v1/namespaces/default/pods/76h 371\nI0618 06:45:26.893618       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/kube-system/pods/bxmt 442\nI0618 06:45:27.093905       1 logs_generator.go:76] 12 GET /api/v1/namespaces/ns/pods/c4k 290\nI0618 06:45:27.294306       1 logs_generator.go:76] 13 GET /api/v1/namespaces/kube-system/pods/csp 578\nI0618 06:45:27.493639       1 logs_generator.go:76] 14 GET /api/v1/namespaces/ns/pods/kzw 317\nI0618 06:45:27.694127       1 logs_generator.go:76] 15 GET /api/v1/namespaces/kube-system/pods/9hs 586\nI0618 06:45:27.893423       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/jmg 255\nI0618 06:45:28.093887       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/kube-system/pods/ptr 344\nI0618 06:45:28.294322       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/fldz 333\nI0618 06:45:28.493574       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/kube-system/pods/9rv 439\nI0618 06:45:28.693973       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/dt9 398\nI0618 06:45:28.893276       1 logs_generator.go:76] 21 POST /api/v1/namespaces/kube-system/pods/7km 324\nI0618 06:45:29.093640       1 logs_generator.go:76] 22 PUT /api/v1/namespaces/default/pods/b46 355\n"
  Jun 18 06:45:29.146: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-logs-1041 delete pod logs-generator'
  E0618 06:45:29.316531      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:45:29.859: INFO: stderr: ""
  Jun 18 06:45:29.859: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Jun 18 06:45:29.859: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-1041" for this suite. @ 06/18/24 06:45:29.866
• [5.948 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 06/18/24 06:45:29.875
  Jun 18 06:45:29.876: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename endpointslicemirroring @ 06/18/24 06:45:29.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:45:29.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:45:29.896
  STEP: mirroring a new custom Endpoint @ 06/18/24 06:45:29.914
  Jun 18 06:45:29.923: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  E0618 06:45:30.316738      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:31.317137      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 06/18/24 06:45:31.93
  Jun 18 06:45:31.939: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E0618 06:45:32.317390      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:33.317967      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 06/18/24 06:45:33.944
  Jun 18 06:45:33.956: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-700" for this suite. @ 06/18/24 06:45:33.963
• [4.094 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:164
  STEP: Creating a kubernetes client @ 06/18/24 06:45:33.973
  Jun 18 06:45:33.973: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename security-context @ 06/18/24 06:45:33.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:45:33.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:45:33.992
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 06/18/24 06:45:33.995
  E0618 06:45:34.318776      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:35.319975      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:36.320627      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:37.322697      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:45:38.014
  Jun 18 06:45:38.022: INFO: Trying to get logs from node ck-128-worker-2 pod security-context-e30a3322-997f-4479-bcae-7b05ec545427 container test-container: <nil>
  STEP: delete the pod @ 06/18/24 06:45:38.029
  Jun 18 06:45:38.048: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-490" for this suite. @ 06/18/24 06:45:38.053
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 06/18/24 06:45:38.06
  Jun 18 06:45:38.060: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename webhook @ 06/18/24 06:45:38.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:45:38.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:45:38.085
  STEP: Setting up server cert @ 06/18/24 06:45:38.109
  E0618 06:45:38.322559      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 06:45:38.692
  STEP: Deploying the webhook pod @ 06/18/24 06:45:38.7
  STEP: Wait for the deployment to be ready @ 06/18/24 06:45:38.715
  Jun 18 06:45:38.725: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0618 06:45:39.323643      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:40.324414      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/18/24 06:45:40.739
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 06:45:40.754
  E0618 06:45:41.324626      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:45:41.755: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun 18 06:45:41.762: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3956-crds.webhook.example.com via the AdmissionRegistration API @ 06/18/24 06:45:42.278
  STEP: Creating a custom resource while v1 is storage version @ 06/18/24 06:45:42.3
  E0618 06:45:42.324838      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:43.325232      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:44.325657      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 06/18/24 06:45:44.355
  STEP: Patching the custom resource while v2 is storage version @ 06/18/24 06:45:44.384
  Jun 18 06:45:44.426: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8087" for this suite. @ 06/18/24 06:45:44.988
  STEP: Destroying namespace "webhook-markers-2843" for this suite. @ 06/18/24 06:45:44.994
• [6.941 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1806
  STEP: Creating a kubernetes client @ 06/18/24 06:45:45.004
  Jun 18 06:45:45.004: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename kubectl @ 06/18/24 06:45:45.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:45:45.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:45:45.023
  STEP: Starting the proxy @ 06/18/24 06:45:45.027
  Jun 18 06:45:45.027: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-2204 proxy --unix-socket=/tmp/kubectl-proxy-unix1476263100/test'
  STEP: retrieving proxy /api/ output @ 06/18/24 06:45:45.086
  Jun 18 06:45:45.088: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2204" for this suite. @ 06/18/24 06:45:45.094
• [0.097 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:320
  STEP: Creating a kubernetes client @ 06/18/24 06:45:45.103
  Jun 18 06:45:45.103: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename statefulset @ 06/18/24 06:45:45.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:45:45.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:45:45.124
  STEP: Creating service test in namespace statefulset-1049 @ 06/18/24 06:45:45.127
  STEP: Creating a new StatefulSet @ 06/18/24 06:45:45.132
  Jun 18 06:45:45.143: INFO: Found 0 stateful pods, waiting for 3
  E0618 06:45:45.325897      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:46.326856      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:47.328955      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:48.329148      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:49.329424      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:50.330018      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:51.330519      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:52.330930      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:53.331759      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:54.331989      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:45:55.150: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 18 06:45:55.151: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 18 06:45:55.151: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Jun 18 06:45:55.161: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=statefulset-1049 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 18 06:45:55.324: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 18 06:45:55.324: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 18 06:45:55.324: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0618 06:45:55.332872      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:56.333519      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:57.333811      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:58.334210      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:45:59.334657      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:00.335298      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:01.335576      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:02.336066      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:03.336590      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:04.337007      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:05.337279      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 06/18/24 06:46:05.339
  Jun 18 06:46:05.363: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 06/18/24 06:46:05.364
  E0618 06:46:06.337573      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:07.337899      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:08.338314      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:09.338670      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:10.339434      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:11.339782      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:12.340063      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:13.340386      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:14.340708      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:15.341691      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 06/18/24 06:46:15.382
  Jun 18 06:46:15.386: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=statefulset-1049 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 18 06:46:15.530: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 18 06:46:15.530: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 18 06:46:15.530: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0618 06:46:16.342454      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:17.342779      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:18.343149      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:19.343463      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:20.344546      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:21.344919      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:22.345249      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:23.345554      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:24.345967      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:25.346740      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 06/18/24 06:46:25.554
  Jun 18 06:46:25.554: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=statefulset-1049 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 18 06:46:25.696: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 18 06:46:25.696: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 18 06:46:25.696: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0618 06:46:26.347387      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:27.347705      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:28.347962      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:29.348240      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:30.349229      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:31.349616      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:32.349769      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:33.350290      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:34.350616      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:35.350770      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:46:35.738: INFO: Updating stateful set ss2
  E0618 06:46:36.351661      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:37.352489      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:38.353314      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:39.353856      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:40.354736      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:41.355472      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:42.356131      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:43.356519      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:44.356872      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:45.357844      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 06/18/24 06:46:45.756
  Jun 18 06:46:45.760: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=statefulset-1049 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 18 06:46:45.877: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 18 06:46:45.877: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 18 06:46:45.877: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0618 06:46:46.358209      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:47.358454      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:48.358470      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:49.359585      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:50.360448      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:51.360791      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:52.361407      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:53.361695      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:54.362000      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:55.362748      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:46:55.899: INFO: Deleting all statefulset in ns statefulset-1049
  Jun 18 06:46:55.902: INFO: Scaling statefulset ss2 to 0
  E0618 06:46:56.363612      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:57.363986      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:58.364338      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:46:59.364788      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:00.365614      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:01.365971      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:02.366484      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:03.366740      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:04.367119      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:05.367814      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:47:05.921: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 18 06:47:05.924: INFO: Deleting statefulset ss2
  Jun 18 06:47:05.937: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1049" for this suite. @ 06/18/24 06:47:05.944
• [80.849 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 06/18/24 06:47:05.961
  Jun 18 06:47:05.962: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename subjectreview @ 06/18/24 06:47:05.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:47:05.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:47:05.985
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-6737" @ 06/18/24 06:47:05.988
  Jun 18 06:47:05.992: INFO: saUsername: "system:serviceaccount:subjectreview-6737:e2e"
  Jun 18 06:47:05.992: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-6737"}
  Jun 18 06:47:05.992: INFO: saUID: "d691ed69-d841-428c-93e6-40d20006235a"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-6737:e2e" @ 06/18/24 06:47:05.992
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-6737:e2e" @ 06/18/24 06:47:05.993
  Jun 18 06:47:05.997: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-6737:e2e" api 'list' configmaps in "subjectreview-6737" namespace @ 06/18/24 06:47:05.997
  Jun 18 06:47:06.001: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-6737:e2e" @ 06/18/24 06:47:06.001
  Jun 18 06:47:06.005: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Jun 18 06:47:06.005: INFO: LocalSubjectAccessReview has been verified
  Jun 18 06:47:06.005: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-6737" for this suite. @ 06/18/24 06:47:06.013
• [0.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 06/18/24 06:47:06.024
  Jun 18 06:47:06.024: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename projected @ 06/18/24 06:47:06.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:47:06.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:47:06.039
  STEP: Creating the pod @ 06/18/24 06:47:06.042
  E0618 06:47:06.368749      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:07.369400      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:08.370108      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:47:08.592: INFO: Successfully updated pod "annotationupdate51882572-e6f8-4c12-9e6e-cac280244469"
  E0618 06:47:09.370042      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:10.370673      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:11.371466      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:12.371716      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:47:12.619: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7532" for this suite. @ 06/18/24 06:47:12.625
• [6.607 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:713
  STEP: Creating a kubernetes client @ 06/18/24 06:47:12.632
  Jun 18 06:47:12.632: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename job @ 06/18/24 06:47:12.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:47:12.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:47:12.65
  STEP: Creating a suspended job @ 06/18/24 06:47:12.658
  STEP: Patching the Job @ 06/18/24 06:47:12.664
  STEP: Watching for Job to be patched @ 06/18/24 06:47:12.692
  Jun 18 06:47:12.695: INFO: Event ADDED observed for Job e2e-p7pln in namespace job-2636 with labels: map[e2e-job-label:e2e-p7pln] and annotations: map[]
  Jun 18 06:47:12.695: INFO: Event MODIFIED observed for Job e2e-p7pln in namespace job-2636 with labels: map[e2e-job-label:e2e-p7pln] and annotations: map[]
  Jun 18 06:47:12.696: INFO: Event MODIFIED found for Job e2e-p7pln in namespace job-2636 with labels: map[e2e-job-label:e2e-p7pln e2e-p7pln:patched] and annotations: map[]
  STEP: Updating the job @ 06/18/24 06:47:12.697
  STEP: Watching for Job to be updated @ 06/18/24 06:47:12.706
  Jun 18 06:47:12.709: INFO: Event MODIFIED found for Job e2e-p7pln in namespace job-2636 with labels: map[e2e-job-label:e2e-p7pln e2e-p7pln:patched] and annotations: map[updated:true]
  Jun 18 06:47:12.709: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 06/18/24 06:47:12.709
  Jun 18 06:47:12.713: INFO: Job: e2e-p7pln as labels: map[e2e-job-label:e2e-p7pln e2e-p7pln:patched]
  STEP: Waiting for job to complete @ 06/18/24 06:47:12.713
  E0618 06:47:13.371918      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:14.372110      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:15.372867      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:16.373369      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:17.373339      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:18.373940      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:19.374379      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:20.374526      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 06/18/24 06:47:20.719
  STEP: Watching for Job to be deleted @ 06/18/24 06:47:20.726
  Jun 18 06:47:20.729: INFO: Event MODIFIED observed for Job e2e-p7pln in namespace job-2636 with labels: map[e2e-job-label:e2e-p7pln e2e-p7pln:patched] and annotations: map[updated:true]
  Jun 18 06:47:20.730: INFO: Event MODIFIED observed for Job e2e-p7pln in namespace job-2636 with labels: map[e2e-job-label:e2e-p7pln e2e-p7pln:patched] and annotations: map[updated:true]
  Jun 18 06:47:20.730: INFO: Event MODIFIED observed for Job e2e-p7pln in namespace job-2636 with labels: map[e2e-job-label:e2e-p7pln e2e-p7pln:patched] and annotations: map[updated:true]
  Jun 18 06:47:20.730: INFO: Event MODIFIED observed for Job e2e-p7pln in namespace job-2636 with labels: map[e2e-job-label:e2e-p7pln e2e-p7pln:patched] and annotations: map[updated:true]
  Jun 18 06:47:20.730: INFO: Event MODIFIED observed for Job e2e-p7pln in namespace job-2636 with labels: map[e2e-job-label:e2e-p7pln e2e-p7pln:patched] and annotations: map[updated:true]
  Jun 18 06:47:20.730: INFO: Event MODIFIED observed for Job e2e-p7pln in namespace job-2636 with labels: map[e2e-job-label:e2e-p7pln e2e-p7pln:patched] and annotations: map[updated:true]
  Jun 18 06:47:20.730: INFO: Event MODIFIED observed for Job e2e-p7pln in namespace job-2636 with labels: map[e2e-job-label:e2e-p7pln e2e-p7pln:patched] and annotations: map[updated:true]
  Jun 18 06:47:20.730: INFO: Event MODIFIED observed for Job e2e-p7pln in namespace job-2636 with labels: map[e2e-job-label:e2e-p7pln e2e-p7pln:patched] and annotations: map[updated:true]
  Jun 18 06:47:20.731: INFO: Event MODIFIED observed for Job e2e-p7pln in namespace job-2636 with labels: map[e2e-job-label:e2e-p7pln e2e-p7pln:patched] and annotations: map[updated:true]
  Jun 18 06:47:20.731: INFO: Event DELETED found for Job e2e-p7pln in namespace job-2636 with labels: map[e2e-job-label:e2e-p7pln e2e-p7pln:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 06/18/24 06:47:20.731
  Jun 18 06:47:20.735: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2636" for this suite. @ 06/18/24 06:47:20.749
• [8.127 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 06/18/24 06:47:20.76
  Jun 18 06:47:20.760: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename var-expansion @ 06/18/24 06:47:20.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:47:20.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:47:20.779
  E0618 06:47:21.374547      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:22.375233      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:47:22.795: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Jun 18 06:47:22.800: INFO: Deleting pod "var-expansion-33022bf9-1db6-45d0-9755-5887d6d1562f" in namespace "var-expansion-1063"
  Jun 18 06:47:22.807: INFO: Wait up to 5m0s for pod "var-expansion-33022bf9-1db6-45d0-9755-5887d6d1562f" to be fully deleted
  E0618 06:47:23.375319      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:24.375425      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:25.375525      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:26.375856      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-1063" for this suite. @ 06/18/24 06:47:26.819
• [6.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 06/18/24 06:47:26.828
  Jun 18 06:47:26.828: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename pods @ 06/18/24 06:47:26.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:47:26.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:47:26.85
  STEP: creating the pod @ 06/18/24 06:47:26.855
  STEP: submitting the pod to kubernetes @ 06/18/24 06:47:26.855
  STEP: verifying QOS class is set on the pod @ 06/18/24 06:47:26.865
  Jun 18 06:47:26.868: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5820" for this suite. @ 06/18/24 06:47:26.872
• [0.051 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 06/18/24 06:47:26.881
  Jun 18 06:47:26.881: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename container-probe @ 06/18/24 06:47:26.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:47:26.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:47:26.897
  STEP: Creating pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746 @ 06/18/24 06:47:26.902
  E0618 06:47:27.375962      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:28.376212      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/18/24 06:47:28.918
  Jun 18 06:47:28.920: INFO: Initial restart count of pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a is 0
  Jun 18 06:47:28.923: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:47:29.377136      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:30.377686      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:47:30.927: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:47:31.378799      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:32.379763      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:47:32.935: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:47:33.380311      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:34.380552      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:47:34.941: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:47:35.380697      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:36.381004      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:47:36.948: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:47:37.381770      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:38.383544      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:47:38.953: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:47:39.382594      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:40.383322      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:47:40.960: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:47:41.383708      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:42.383853      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:47:42.964: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:47:43.384078      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:44.384511      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:47:44.969: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:47:45.384772      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:46.385063      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:47:46.975: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:47:47.385410      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:48.385845      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:47:48.980: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:47:49.386054      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:50.386630      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:47:50.985: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:47:51.386804      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:52.387138      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:47:52.989: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:47:53.387433      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:54.387779      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:47:54.994: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:47:55.388844      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:56.389116      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:47:56.999: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:47:57.389970      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:47:58.390161      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:47:59.005: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:47:59.390560      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:48:00.391161      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:48:01.009: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:48:01.392220      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:48:02.392744      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:48:03.014: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:48:03.393562      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:48:04.394070      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:48:05.018: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:48:05.394816      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:48:06.395303      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:48:07.025: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:48:07.395387      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:48:08.395629      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:48:09.029: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:48:09.395637      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:48:10.396482      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:48:11.034: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:48:11.396759      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:48:12.397030      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:48:13.039: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:48:13.397945      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:48:14.398362      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:48:15.044: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:48:15.398625      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:48:16.398918      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:48:17.051: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:48:17.399339      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:48:18.399477      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:48:19.055: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:48:19.400424      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:48:20.401083      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:48:21.059: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:48:21.401430      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:48:22.401587      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:48:23.064: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:48:23.402361      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:48:24.402915      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:48:25.069: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:48:25.403936      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:48:26.404557      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:48:27.076: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:48:27.404485      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:48:28.404666      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:48:29.081: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:48:29.405081      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:48:30.405754      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:48:31.086: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:48:31.406645      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:48:32.406994      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:48:33.093: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:48:33.407561      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:48:34.407678      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:48:35.098: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:48:35.408485      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:48:36.408781      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:48:37.103: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:48:37.409084      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:48:38.410135      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:48:39.107: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:48:39.410674      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:48:40.411301      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:48:41.112: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:48:41.411683      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:48:42.412027      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:48:43.116: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:48:43.412499      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:48:44.413230      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:48:45.122: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:48:45.413256      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:48:46.413581      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:48:47.130: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:48:47.413582      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:48:48.413900      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:48:49.135: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:48:49.414051      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:48:50.414767      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:48:51.141: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:48:51.415484      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:48:52.415960      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:48:53.147: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:48:53.416660      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:48:54.417092      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:48:55.152: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:48:55.417578      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:48:56.417930      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:48:57.157: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:48:57.418346      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:48:58.418689      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:48:59.162: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:48:59.419062      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:49:00.419780      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:49:01.168: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:49:01.420344      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:49:02.420698      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:49:03.171: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:49:03.421313      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:49:04.421621      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:49:05.176: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:49:05.422148      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:49:06.422625      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:49:07.183: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:49:07.423566      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:49:08.424134      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:49:09.188: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:49:09.425265      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:49:10.425917      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:49:11.193: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:49:11.426627      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:49:12.426955      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:49:13.200: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:49:13.427539      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:49:14.431322      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:49:15.204: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:49:15.431896      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:49:16.432380      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:49:17.210: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:49:17.432508      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:49:18.432956      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:49:19.215: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:49:19.433839      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:49:20.434703      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:49:21.220: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:49:21.435426      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:49:22.435730      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:49:23.225: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:49:23.436541      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:49:24.436785      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:49:25.230: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:49:25.437144      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:49:26.437503      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:49:27.236: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:49:27.438105      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:49:28.438556      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:49:29.241: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:49:29.439326      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:49:30.440268      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:49:31.245: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:49:31.441319      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:49:32.441682      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:49:33.250: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:49:33.441921      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:49:34.442339      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:49:35.255: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:49:35.443450      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:49:36.443777      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:49:37.261: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:49:37.444307      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:49:38.444711      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:49:39.271: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:49:39.444931      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:49:40.445490      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:49:41.275: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:49:41.446555      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:49:42.446823      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:49:43.280: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:49:43.447690      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:49:44.447784      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:49:45.284: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:49:45.448637      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:49:46.449062      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:49:47.290: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:49:47.449854      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:49:48.450514      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:49:49.295: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:49:49.451739      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:49:50.452430      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:49:51.300: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:49:51.453075      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:49:52.453487      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:49:53.306: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:49:53.454318      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:49:54.454685      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:49:55.310: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:49:55.454737      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:49:56.455083      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:49:57.317: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:49:57.456168      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:49:58.456595      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:49:59.322: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:49:59.456841      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:50:00.457522      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:50:01.328: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:50:01.458569      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:50:02.458933      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:50:03.334: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:50:03.459453      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:50:04.459936      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:50:05.340: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:50:05.460564      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:50:06.460844      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:50:07.345: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:50:07.461123      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:50:08.461509      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:50:09.353: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:50:09.461867      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:50:10.462606      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:50:11.359: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:50:11.463668      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:50:12.463996      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:50:13.364: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:50:13.465045      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:50:14.465778      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:50:15.369: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:50:15.465885      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:50:16.466300      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:50:17.376: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:50:17.466398      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:50:18.466850      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:50:19.381: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:50:19.467688      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:50:20.468859      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:50:21.386: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:50:21.469697      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:50:22.470306      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:50:23.391: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:50:23.470704      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:50:24.473059      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:50:25.395: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:50:25.474067      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:50:26.474409      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:50:27.400: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:50:27.475326      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:50:28.475598      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:50:29.406: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:50:29.476423      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:50:30.477041      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:50:31.411: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:50:31.477404      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:50:32.477895      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:50:33.416: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:50:33.478477      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:50:34.479268      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:50:35.421: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:50:35.480066      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:50:36.480494      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:50:37.427: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:50:37.481359      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:50:38.481659      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:50:39.431: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:50:39.482745      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:50:40.483563      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:50:41.435: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:50:41.484449      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:50:42.484710      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:50:43.440: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:50:43.485299      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:50:44.485614      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:50:45.444: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:50:45.486096      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:50:46.486529      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:50:47.450: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:50:47.486642      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:50:48.486956      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:50:49.455: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:50:49.487477      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:50:50.488096      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:50:51.459: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:50:51.488660      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:50:52.488799      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:50:53.464: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:50:53.489716      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:50:54.490056      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:50:55.469: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:50:55.490779      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:50:56.491065      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:50:57.473: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:50:57.491167      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:50:58.491570      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:50:59.479: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:50:59.492385      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:00.493085      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:51:01.483: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:51:01.493693      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:02.493996      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:51:03.488: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:51:03.494981      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:04.495299      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:51:05.493: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:51:05.495867      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:06.496141      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:07.496976      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:51:07.499: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:51:08.497056      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:09.497475      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:51:09.504: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:51:10.498643      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:11.498902      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:51:11.508: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:51:12.499665      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:13.500105      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:51:13.513: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:51:14.500389      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:15.501566      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:51:15.517: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:51:16.502122      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:17.502409      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:51:17.522: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:51:18.502919      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:19.503219      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:51:19.528: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:51:20.503956      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:21.504354      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:51:21.532: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:51:22.504462      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:23.504937      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:51:23.537: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:51:24.505805      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:25.506497      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:51:25.543: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:51:26.507488      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:27.508060      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:51:27.549: INFO: Get pod test-webserver-9def45f1-99f5-4f87-aab2-ff6d181d2a4a in namespace container-probe-8746
  E0618 06:51:28.508908      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:29.509361      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:51:29.551: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 06/18/24 06:51:29.559
  STEP: Destroying namespace "container-probe-8746" for this suite. @ 06/18/24 06:51:29.578
• [242.702 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 06/18/24 06:51:29.588
  Jun 18 06:51:29.588: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename field-validation @ 06/18/24 06:51:29.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:51:29.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:51:29.61
  Jun 18 06:51:29.615: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  E0618 06:51:30.510107      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:31.510816      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:32.511413      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:51:32.701: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7555" for this suite. @ 06/18/24 06:51:32.719
• [3.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 06/18/24 06:51:32.727
  Jun 18 06:51:32.728: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename deployment @ 06/18/24 06:51:32.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:51:32.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:51:32.742
  STEP: creating a Deployment @ 06/18/24 06:51:32.75
  STEP: waiting for Deployment to be created @ 06/18/24 06:51:32.755
  STEP: waiting for all Replicas to be Ready @ 06/18/24 06:51:32.757
  Jun 18 06:51:32.759: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 18 06:51:32.759: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 18 06:51:32.775: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 18 06:51:32.775: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 18 06:51:32.792: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 18 06:51:32.792: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 18 06:51:32.816: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 18 06:51:32.816: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0618 06:51:33.512619      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:51:33.835: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Jun 18 06:51:33.835: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Jun 18 06:51:34.395: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 06/18/24 06:51:34.395
  Jun 18 06:51:34.418: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 06/18/24 06:51:34.419
  Jun 18 06:51:34.421: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 0
  Jun 18 06:51:34.421: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 0
  Jun 18 06:51:34.421: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 0
  Jun 18 06:51:34.421: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 0
  Jun 18 06:51:34.421: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 0
  Jun 18 06:51:34.421: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 0
  Jun 18 06:51:34.421: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 0
  Jun 18 06:51:34.421: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 0
  Jun 18 06:51:34.422: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 1
  Jun 18 06:51:34.422: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 1
  Jun 18 06:51:34.422: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 2
  Jun 18 06:51:34.422: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 2
  Jun 18 06:51:34.422: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 2
  Jun 18 06:51:34.422: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 2
  Jun 18 06:51:34.432: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 2
  Jun 18 06:51:34.432: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 2
  Jun 18 06:51:34.453: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 2
  Jun 18 06:51:34.453: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 2
  Jun 18 06:51:34.470: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 1
  Jun 18 06:51:34.471: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 1
  Jun 18 06:51:34.479: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 1
  Jun 18 06:51:34.479: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 1
  E0618 06:51:34.512853      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:35.512920      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:51:36.096: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 2
  Jun 18 06:51:36.096: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 2
  Jun 18 06:51:36.120: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 1
  STEP: listing Deployments @ 06/18/24 06:51:36.12
  Jun 18 06:51:36.123: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 06/18/24 06:51:36.123
  Jun 18 06:51:36.137: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 06/18/24 06:51:36.137
  Jun 18 06:51:36.145: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 18 06:51:36.148: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 18 06:51:36.168: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 18 06:51:36.181: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 18 06:51:36.187: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0618 06:51:36.513585      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:51:36.841: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 18 06:51:36.860: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 18 06:51:36.868: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 18 06:51:36.880: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 18 06:51:36.887: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0618 06:51:37.514150      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:51:38.424: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 06/18/24 06:51:38.451
  STEP: fetching the DeploymentStatus @ 06/18/24 06:51:38.463
  Jun 18 06:51:38.469: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 1
  Jun 18 06:51:38.469: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 1
  Jun 18 06:51:38.469: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 1
  Jun 18 06:51:38.470: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 1
  Jun 18 06:51:38.470: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 1
  Jun 18 06:51:38.470: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 2
  Jun 18 06:51:38.471: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 2
  Jun 18 06:51:38.471: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 2
  Jun 18 06:51:38.471: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 2
  Jun 18 06:51:38.471: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 2
  Jun 18 06:51:38.471: INFO: observed Deployment test-deployment in namespace deployment-9806 with ReadyReplicas 3
  STEP: deleting the Deployment @ 06/18/24 06:51:38.471
  Jun 18 06:51:38.481: INFO: observed event type MODIFIED
  Jun 18 06:51:38.482: INFO: observed event type MODIFIED
  Jun 18 06:51:38.482: INFO: observed event type MODIFIED
  Jun 18 06:51:38.482: INFO: observed event type MODIFIED
  Jun 18 06:51:38.482: INFO: observed event type MODIFIED
  Jun 18 06:51:38.482: INFO: observed event type MODIFIED
  Jun 18 06:51:38.482: INFO: observed event type MODIFIED
  Jun 18 06:51:38.483: INFO: observed event type MODIFIED
  Jun 18 06:51:38.483: INFO: observed event type MODIFIED
  Jun 18 06:51:38.483: INFO: observed event type MODIFIED
  Jun 18 06:51:38.483: INFO: observed event type MODIFIED
  Jun 18 06:51:38.483: INFO: observed event type MODIFIED
  Jun 18 06:51:38.483: INFO: observed event type MODIFIED
  Jun 18 06:51:38.483: INFO: observed event type MODIFIED
  Jun 18 06:51:38.488: INFO: Log out all the ReplicaSets if there is no deployment created
  Jun 18 06:51:38.494: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9806" for this suite. @ 06/18/24 06:51:38.502
• [5.782 seconds]
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 06/18/24 06:51:38.51
  Jun 18 06:51:38.510: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename secrets @ 06/18/24 06:51:38.513
  E0618 06:51:38.514307      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:51:38.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:51:38.535
  STEP: Creating secret with name secret-test-4fed4fe2-15ea-4c63-86e7-d2499828c6c5 @ 06/18/24 06:51:38.56
  STEP: Creating a pod to test consume secrets @ 06/18/24 06:51:38.565
  E0618 06:51:39.518360      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:40.518850      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:41.519249      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:42.519621      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:51:42.587
  Jun 18 06:51:42.590: INFO: Trying to get logs from node ck-128-worker-2 pod pod-secrets-ed55ee65-581d-464c-9cd1-971fddb4e3ee container secret-volume-test: <nil>
  STEP: delete the pod @ 06/18/24 06:51:42.613
  Jun 18 06:51:42.627: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5588" for this suite. @ 06/18/24 06:51:42.631
  STEP: Destroying namespace "secret-namespace-9969" for this suite. @ 06/18/24 06:51:42.635
• [4.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 06/18/24 06:51:42.647
  Jun 18 06:51:42.647: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename csiinlinevolumes @ 06/18/24 06:51:42.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:51:42.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:51:42.665
  STEP: creating @ 06/18/24 06:51:42.669
  STEP: getting @ 06/18/24 06:51:42.684
  STEP: listing in namespace @ 06/18/24 06:51:42.687
  STEP: patching @ 06/18/24 06:51:42.692
  STEP: deleting @ 06/18/24 06:51:42.705
  Jun 18 06:51:42.714: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-7533" for this suite. @ 06/18/24 06:51:42.718
• [0.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:147
  STEP: Creating a kubernetes client @ 06/18/24 06:51:42.724
  Jun 18 06:51:42.724: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename emptydir @ 06/18/24 06:51:42.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:51:42.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:51:42.74
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 06/18/24 06:51:42.743
  E0618 06:51:43.520207      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:44.520647      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:51:44.756
  Jun 18 06:51:44.759: INFO: Trying to get logs from node ck-128-worker-1 pod pod-2deaa1d6-3d52-4a81-8334-8e6236bb9112 container test-container: <nil>
  STEP: delete the pod @ 06/18/24 06:51:44.778
  Jun 18 06:51:44.794: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8460" for this suite. @ 06/18/24 06:51:44.799
• [2.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 06/18/24 06:51:44.804
  Jun 18 06:51:44.804: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/18/24 06:51:44.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:51:44.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:51:44.823
  STEP: set up a multi version CRD @ 06/18/24 06:51:44.827
  Jun 18 06:51:44.828: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  E0618 06:51:45.521002      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:46.521390      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:47.522334      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:48.522667      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 06/18/24 06:51:48.678
  STEP: check the unserved version gets removed @ 06/18/24 06:51:48.712
  E0618 06:51:49.523784      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 06/18/24 06:51:49.618
  E0618 06:51:50.524021      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:51.524281      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:52.524332      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:51:52.532: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2916" for this suite. @ 06/18/24 06:51:52.542
• [7.743 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 06/18/24 06:51:52.557
  Jun 18 06:51:52.557: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename secrets @ 06/18/24 06:51:52.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:51:52.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:51:52.575
  STEP: Creating secret with name secret-test-map-215c65e0-aa01-4000-b1f9-0238c1cfdbc1 @ 06/18/24 06:51:52.578
  STEP: Creating a pod to test consume secrets @ 06/18/24 06:51:52.581
  E0618 06:51:53.525154      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:54.525556      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:55.525881      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:56.526375      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:51:56.602
  Jun 18 06:51:56.606: INFO: Trying to get logs from node ck-128-worker-2 pod pod-secrets-1c832583-b111-4f53-83b8-c3e82c48f20f container secret-volume-test: <nil>
  STEP: delete the pod @ 06/18/24 06:51:56.614
  Jun 18 06:51:56.628: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4614" for this suite. @ 06/18/24 06:51:56.632
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:84
  STEP: Creating a kubernetes client @ 06/18/24 06:51:56.641
  Jun 18 06:51:56.641: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename pod-network-test @ 06/18/24 06:51:56.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:51:56.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:51:56.66
  STEP: Performing setup for networking test in namespace pod-network-test-9732 @ 06/18/24 06:51:56.664
  STEP: creating a selector @ 06/18/24 06:51:56.664
  STEP: Creating the service pods in kubernetes @ 06/18/24 06:51:56.664
  Jun 18 06:51:56.664: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0618 06:51:57.526905      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:58.527999      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:51:59.528579      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:00.529657      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:01.529702      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:02.529957      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:03.530105      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:04.530434      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:05.531215      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:06.531941      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:07.532333      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:08.532728      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 06/18/24 06:52:08.748
  E0618 06:52:09.533698      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:10.534436      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:52:10.767: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jun 18 06:52:10.768: INFO: Breadth first check of 172.17.152.55 on host 192.168.190.169...
  Jun 18 06:52:10.771: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.17.196.244:9080/dial?request=hostname&protocol=http&host=172.17.152.55&port=8083&tries=1'] Namespace:pod-network-test-9732 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 06:52:10.771: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 06:52:10.773: INFO: ExecWithOptions: Clientset creation
  Jun 18 06:52:10.773: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9732/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.17.196.244%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.17.152.55%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 18 06:52:10.832: INFO: Waiting for responses: map[]
  Jun 18 06:52:10.832: INFO: reached 172.17.152.55 after 0/1 tries
  Jun 18 06:52:10.832: INFO: Breadth first check of 172.17.196.243 on host 192.168.190.166...
  Jun 18 06:52:10.835: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.17.196.244:9080/dial?request=hostname&protocol=http&host=172.17.196.243&port=8083&tries=1'] Namespace:pod-network-test-9732 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 06:52:10.836: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 06:52:10.838: INFO: ExecWithOptions: Clientset creation
  Jun 18 06:52:10.838: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9732/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.17.196.244%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.17.196.243%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 18 06:52:10.881: INFO: Waiting for responses: map[]
  Jun 18 06:52:10.881: INFO: reached 172.17.196.243 after 0/1 tries
  Jun 18 06:52:10.881: INFO: Breadth first check of 172.17.66.147 on host 192.168.190.167...
  Jun 18 06:52:10.885: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.17.196.244:9080/dial?request=hostname&protocol=http&host=172.17.66.147&port=8083&tries=1'] Namespace:pod-network-test-9732 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 06:52:10.885: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 06:52:10.886: INFO: ExecWithOptions: Clientset creation
  Jun 18 06:52:10.886: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9732/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.17.196.244%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.17.66.147%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 18 06:52:10.930: INFO: Waiting for responses: map[]
  Jun 18 06:52:10.930: INFO: reached 172.17.66.147 after 0/1 tries
  Jun 18 06:52:10.930: INFO: Going to retry 0 out of 3 pods....
  Jun 18 06:52:10.930: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9732" for this suite. @ 06/18/24 06:52:10.936
• [14.301 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 06/18/24 06:52:10.943
  Jun 18 06:52:10.943: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename projected @ 06/18/24 06:52:10.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:52:10.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:52:10.967
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 06:52:10.972
  E0618 06:52:11.535315      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:12.535505      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:13.535663      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:14.536388      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:52:14.996
  Jun 18 06:52:14.999: INFO: Trying to get logs from node ck-128-worker-1 pod downwardapi-volume-2d3482ea-cfad-434a-b70b-baaa5ec92894 container client-container: <nil>
  STEP: delete the pod @ 06/18/24 06:52:15.006
  Jun 18 06:52:15.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5428" for this suite. @ 06/18/24 06:52:15.024
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 06/18/24 06:52:15.037
  Jun 18 06:52:15.037: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename webhook @ 06/18/24 06:52:15.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:52:15.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:52:15.061
  STEP: Setting up server cert @ 06/18/24 06:52:15.083
  E0618 06:52:15.536821      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 06:52:15.583
  STEP: Deploying the webhook pod @ 06/18/24 06:52:15.59
  STEP: Wait for the deployment to be ready @ 06/18/24 06:52:15.599
  Jun 18 06:52:15.608: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0618 06:52:16.537707      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:17.538242      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/18/24 06:52:17.619
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 06:52:17.629
  E0618 06:52:18.538382      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:52:18.629: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 06/18/24 06:52:18.636
  STEP: create a pod @ 06/18/24 06:52:18.659
  E0618 06:52:19.538929      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:20.539622      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 06/18/24 06:52:20.676
  Jun 18 06:52:20.676: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=webhook-2557 attach --namespace=webhook-2557 to-be-attached-pod -i -c=container1'
  Jun 18 06:52:20.806: INFO: rc: 1
  Jun 18 06:52:20.806: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2557" for this suite. @ 06/18/24 06:52:20.85
  STEP: Destroying namespace "webhook-markers-3069" for this suite. @ 06/18/24 06:52:20.856
• [5.826 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:946
  STEP: Creating a kubernetes client @ 06/18/24 06:52:20.863
  Jun 18 06:52:20.863: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename resourcequota @ 06/18/24 06:52:20.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:52:20.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:52:20.884
  STEP: Creating a ResourceQuota @ 06/18/24 06:52:20.887
  STEP: Getting a ResourceQuota @ 06/18/24 06:52:20.891
  STEP: Listing all ResourceQuotas with LabelSelector @ 06/18/24 06:52:20.893
  STEP: Patching the ResourceQuota @ 06/18/24 06:52:20.895
  STEP: Deleting a Collection of ResourceQuotas @ 06/18/24 06:52:20.904
  STEP: Verifying the deleted ResourceQuota @ 06/18/24 06:52:20.913
  Jun 18 06:52:20.915: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-362" for this suite. @ 06/18/24 06:52:20.92
• [0.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 06/18/24 06:52:20.93
  Jun 18 06:52:20.931: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename configmap @ 06/18/24 06:52:20.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:52:20.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:52:20.949
  STEP: Creating configMap with name configmap-test-upd-4181722a-b662-4ce7-b28a-6b012ab74792 @ 06/18/24 06:52:20.96
  STEP: Creating the pod @ 06/18/24 06:52:20.964
  E0618 06:52:21.540274      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:22.540962      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 06/18/24 06:52:22.984
  STEP: Waiting for pod with binary data @ 06/18/24 06:52:22.991
  Jun 18 06:52:22.998: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7091" for this suite. @ 06/18/24 06:52:23.004
• [2.079 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 06/18/24 06:52:23.009
  Jun 18 06:52:23.009: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename deployment @ 06/18/24 06:52:23.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:52:23.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:52:23.029
  Jun 18 06:52:23.032: INFO: Creating deployment "webserver-deployment"
  Jun 18 06:52:23.037: INFO: Waiting for observed generation 1
  E0618 06:52:23.541376      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:24.541473      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:52:25.045: INFO: Waiting for all required pods to come up
  Jun 18 06:52:25.049: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 06/18/24 06:52:25.05
  Jun 18 06:52:25.050: INFO: Waiting for deployment "webserver-deployment" to complete
  Jun 18 06:52:25.056: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Jun 18 06:52:25.064: INFO: Updating deployment webserver-deployment
  Jun 18 06:52:25.064: INFO: Waiting for observed generation 2
  E0618 06:52:25.542454      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:26.542665      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:52:27.071: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Jun 18 06:52:27.075: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Jun 18 06:52:27.078: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Jun 18 06:52:27.095: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Jun 18 06:52:27.095: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Jun 18 06:52:27.099: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Jun 18 06:52:27.103: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Jun 18 06:52:27.104: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Jun 18 06:52:27.113: INFO: Updating deployment webserver-deployment
  Jun 18 06:52:27.113: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Jun 18 06:52:27.118: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Jun 18 06:52:27.123: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  E0618 06:52:27.543472      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:28.543798      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:52:29.133: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a57a7696-30a8-4a8b-9731-23a561eee8d9",
      ResourceVersion: (string) (len=5) "29274",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 20,
      AvailableReplicas: (int32) 20,
      UnavailableReplicas: (int32) 13,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 18 06:52:29.138: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9dc4b0f8-511f-423c-a377-53fba4a5aef4",
      ResourceVersion: (string) (len=5) "29075",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290345,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "a57a7696-30a8-4a8b-9731-23a561eee8d9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 35 37 61 37 36  39 36 2d 33 30 61 38 2d  |\"a57a7696-30a8-|
              00000120  34 61 38 62 2d 39 37 33  31 2d 32 33 61 35 36 31  |4a8b-9731-23a561|
              00000130  65 65 65 38 64 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |eee8d9\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 18 06:52:29.142: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Jun 18 06:52:29.142: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c95a3064-874a-47b8-9fb0-a1b5ff64b4f4",
      ResourceVersion: (string) (len=5) "29273",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "a57a7696-30a8-4a8b-9731-23a561eee8d9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 35 37 61 37 36  39 36 2d 33 30 61 38 2d  |\"a57a7696-30a8-|
              00000120  34 61 38 62 2d 39 37 33  31 2d 32 33 61 35 36 31  |4a8b-9731-23a561|
              00000130  65 65 65 38 64 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |eee8d9\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 20,
      AvailableReplicas: (int32) 20,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 18 06:52:29.151: INFO: Pod "webserver-deployment-557759b7c7-44tvh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-44tvh",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bb95ee2e-e0ab-45a6-bc51-4b550c30a5b3",
      ResourceVersion: (string) (len=5) "28884",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.17.152.61/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "4ee22b31760a7622cd297d1d4209bcb357e0cbc55dc537eb54553765eba95f7d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.17.152.61/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c95a3064-874a-47b8-9fb0-a1b5ff64b4f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 39  35 61 33 30 36 34 2d 38  |d\":\"c95a3064-8|
              00000090  37 34 61 2d 34 37 62 38  2d 39 66 62 30 2d 61 31  |74a-47b8-9fb0-a1|
              000000a0  62 35 66 66 36 34 62 34  66 34 5c 22 7d 22 3a 7b  |b5ff64b4f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 31 37 2e 31  35 32 2e 36 31 5c 22 7d  |172.17.152.61\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rsjxf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rsjxf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "172.17.152.61",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.17.152.61"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854290343,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://c2a290cc92beef39d1a9c2ec2ecce11952a8327e385ce09f99101b45de5e26df",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.154: INFO: Pod "webserver-deployment-557759b7c7-5886n" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5886n",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "313513cf-2bd3-4494-966d-bfd735ee6d78",
      ResourceVersion: (string) (len=5) "28871",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "fd47b83a9db107b7c88050aacaa393f9b0098ee3a6a59038961f5271febfd762",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.17.66.149/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.17.66.149/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c95a3064-874a-47b8-9fb0-a1b5ff64b4f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 39  35 61 33 30 36 34 2d 38  |d\":\"c95a3064-8|
              00000090  37 34 61 2d 34 37 62 38  2d 39 66 62 30 2d 61 31  |74a-47b8-9fb0-a1|
              000000a0  62 35 66 66 36 34 62 34  66 34 5c 22 7d 22 3a 7b  |b5ff64b4f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 31 37 2e 36  36 2e 31 34 39 5c 22 7d  |172.17.66.149\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ndfdd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ndfdd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.167",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "172.17.66.149",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.17.66.149"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854290343,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://e2d7848b3f4610046f30f23aef4779ca9f9b8362b4a19814fcecf793c048333c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.156: INFO: Pod "webserver-deployment-557759b7c7-9d79d" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-9d79d",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5c9adedf-996d-447d-bbec-36e27a8f8bae",
      ResourceVersion: (string) (len=5) "28877",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.17.66.148/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.17.66.148/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c982e16edc2c3360b344b4a3f0dfea66a9dc2eceb26ced22f8ab9278621c796e"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c95a3064-874a-47b8-9fb0-a1b5ff64b4f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 39  35 61 33 30 36 34 2d 38  |d\":\"c95a3064-8|
              00000090  37 34 61 2d 34 37 62 38  2d 39 66 62 30 2d 61 31  |74a-47b8-9fb0-a1|
              000000a0  62 35 66 66 36 34 62 34  66 34 5c 22 7d 22 3a 7b  |b5ff64b4f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 31 37 2e 36  36 2e 31 34 38 5c 22 7d  |172.17.66.148\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w6fq4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w6fq4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.167",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "172.17.66.148",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.17.66.148"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854290343,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://de1734b9c0a6906cab0b959c71f3ef228e1c9ef29ca43ba687627bdb24b2557d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.159: INFO: Pod "webserver-deployment-557759b7c7-bh7kl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-bh7kl",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "68c4a1f6-6980-464e-b7cf-0250740c1bfc",
      ResourceVersion: (string) (len=5) "29268",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "172.17.196.195/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f288197d3e0c3aa0009ebade0323cec019fbe2fa9b1c54a8d1f08a02505e5d51",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "172.17.196.195/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c95a3064-874a-47b8-9fb0-a1b5ff64b4f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 39  35 61 33 30 36 34 2d 38  |d\":\"c95a3064-8|
              00000090  37 34 61 2d 34 37 62 38  2d 39 66 62 30 2d 61 31  |74a-47b8-9fb0-a1|
              000000a0  62 35 66 66 36 34 62 34  66 34 5c 22 7d 22 3a 7b  |b5ff64b4f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 31 37 2e 31  39 36 2e 31 39 35 5c 22  |172.17.196.195\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c7fqx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c7fqx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.166",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "172.17.196.195",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.17.196.195"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854290348,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://f626c5ed23e6074dc14930ddf3a4fcc3e9cbf50b067231fd28b88b679a0f8a03",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.163: INFO: Pod "webserver-deployment-557759b7c7-cb6zw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-cb6zw",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7e36792f-7704-4a6f-b645-9581733cf852",
      ResourceVersion: (string) (len=5) "29252",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "172.17.152.2/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c8f38b2fc4a9202c2a42db7dfe637449e4b34c35c47ca36412bc466185aff6fb",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "172.17.152.2/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c95a3064-874a-47b8-9fb0-a1b5ff64b4f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 39  35 61 33 30 36 34 2d 38  |d\":\"c95a3064-8|
              00000090  37 34 61 2d 34 37 62 38  2d 39 66 62 30 2d 61 31  |74a-47b8-9fb0-a1|
              000000a0  62 35 66 66 36 34 62 34  66 34 5c 22 7d 22 3a 7b  |b5ff64b4f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 31 37 2e 31  35 32 2e 32 5c 22 7d 22  |172.17.152.2\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hhgk4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hhgk4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "172.17.152.2",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.17.152.2"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854290348,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://61359ca0d84d2532881de1b048e6aa737ca5b3993f6c6b2a5b9075b3b3e8a70d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.166: INFO: Pod "webserver-deployment-557759b7c7-fgr4g" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-fgr4g",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0c9053bc-ff19-4074-917a-66d3ff350fcd",
      ResourceVersion: (string) (len=5) "28881",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "6e9eca651f360ed5b02ddb4c3e3a78aeff585ce44a09100f8959ec94a976079e",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.17.152.60/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.17.152.60/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c95a3064-874a-47b8-9fb0-a1b5ff64b4f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 39  35 61 33 30 36 34 2d 38  |d\":\"c95a3064-8|
              00000090  37 34 61 2d 34 37 62 38  2d 39 66 62 30 2d 61 31  |74a-47b8-9fb0-a1|
              000000a0  62 35 66 66 36 34 62 34  66 34 5c 22 7d 22 3a 7b  |b5ff64b4f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 31 37 2e 31  35 32 2e 36 30 5c 22 7d  |172.17.152.60\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zfh8w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zfh8w",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "172.17.152.60",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.17.152.60"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854290343,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://9c9a9afc381c8533fa370011add46eabb1765110978f836867e670093c3b09d5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.169: INFO: Pod "webserver-deployment-557759b7c7-fz5pj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-fz5pj",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4bc28dbb-569c-46e4-8840-675791fb4897",
      ResourceVersion: (string) (len=5) "29272",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "6d285bfe6de3ac785260d6a31930a26a8cb221a313e0e8602ab3e4005582a8df",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "172.17.196.194/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "172.17.196.194/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c95a3064-874a-47b8-9fb0-a1b5ff64b4f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 39  35 61 33 30 36 34 2d 38  |d\":\"c95a3064-8|
              00000090  37 34 61 2d 34 37 62 38  2d 39 66 62 30 2d 61 31  |74a-47b8-9fb0-a1|
              000000a0  62 35 66 66 36 34 62 34  66 34 5c 22 7d 22 3a 7b  |b5ff64b4f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 31 37 2e 31  39 36 2e 31 39 34 5c 22  |172.17.196.194\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v8gfh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v8gfh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.166",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "172.17.196.194",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.17.196.194"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854290348,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://de9911702419b53f84fd16ffa767a243af1cede2fa30052bbbd37967ad737fc8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.172: INFO: Pod "webserver-deployment-557759b7c7-gsdzl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-gsdzl",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9665072c-1f42-4c82-bc11-6c82903c153f",
      ResourceVersion: (string) (len=5) "29258",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "172.17.152.8/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "172.17.152.8/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "77b558072e8373b9440c2e980300a0ece51231145317687226bb59e8472d4866"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c95a3064-874a-47b8-9fb0-a1b5ff64b4f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 39  35 61 33 30 36 34 2d 38  |d\":\"c95a3064-8|
              00000090  37 34 61 2d 34 37 62 38  2d 39 66 62 30 2d 61 31  |74a-47b8-9fb0-a1|
              000000a0  62 35 66 66 36 34 62 34  66 34 5c 22 7d 22 3a 7b  |b5ff64b4f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 31 37 2e 31  35 32 2e 38 5c 22 7d 22  |172.17.152.8\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zftsp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zftsp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "172.17.152.8",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.17.152.8"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854290348,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://e432be0bca47441ecfd55780b893a37d694df631166573d92efea6a1616036db",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.175: INFO: Pod "webserver-deployment-557759b7c7-hzsbt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-hzsbt",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6ef9c454-f0a4-4450-bf2f-c68aeb689c28",
      ResourceVersion: (string) (len=5) "29168",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "db3ef93b1f1e59d5b1f0248b018bf69ce6b43effcc916658e0b8b16d5ccfd103",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "172.17.196.252/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "172.17.196.252/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c95a3064-874a-47b8-9fb0-a1b5ff64b4f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 39  35 61 33 30 36 34 2d 38  |d\":\"c95a3064-8|
              00000090  37 34 61 2d 34 37 62 38  2d 39 66 62 30 2d 61 31  |74a-47b8-9fb0-a1|
              000000a0  62 35 66 66 36 34 62 34  66 34 5c 22 7d 22 3a 7b  |b5ff64b4f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 31 37 2e 31  39 36 2e 32 35 32 5c 22  |172.17.196.252\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s66mh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s66mh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.166",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "172.17.196.252",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.17.196.252"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854290347,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://a2ba63a631757d6c3445c12c10009df7597d0e90619a0ffdc5acdf02180682a4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.178: INFO: Pod "webserver-deployment-557759b7c7-kkm7h" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-kkm7h",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "10bc273f-b55f-4923-bdd0-d372133941dc",
      ResourceVersion: (string) (len=5) "28858",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "897078f6a59722ef9f3144761f77c137ef29851af0f0520f0858187c8f62b7b1",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "172.17.196.247/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "172.17.196.247/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c95a3064-874a-47b8-9fb0-a1b5ff64b4f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 39  35 61 33 30 36 34 2d 38  |d\":\"c95a3064-8|
              00000090  37 34 61 2d 34 37 62 38  2d 39 66 62 30 2d 61 31  |74a-47b8-9fb0-a1|
              000000a0  62 35 66 66 36 34 62 34  66 34 5c 22 7d 22 3a 7b  |b5ff64b4f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 31 37 2e 31  39 36 2e 32 34 37 5c 22  |172.17.196.247\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wjlxq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wjlxq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.166",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "172.17.196.247",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.17.196.247"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854290343,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://3cc3c6a336182269a2466a36bd37fcc8249cc36e7efeca89a6477ce0f9994080",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.181: INFO: Pod "webserver-deployment-557759b7c7-l5mf4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-l5mf4",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "642028ea-325d-4ad4-ab3b-23a499e39e64",
      ResourceVersion: (string) (len=5) "28887",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.17.152.59/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.17.152.59/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "752836916ecc2450ba041fc9ddadaf29acb86253b6dd4c6498976ed2ef8d1bcc"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c95a3064-874a-47b8-9fb0-a1b5ff64b4f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 39  35 61 33 30 36 34 2d 38  |d\":\"c95a3064-8|
              00000090  37 34 61 2d 34 37 62 38  2d 39 66 62 30 2d 61 31  |74a-47b8-9fb0-a1|
              000000a0  62 35 66 66 36 34 62 34  66 34 5c 22 7d 22 3a 7b  |b5ff64b4f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 31 37 2e 31  35 32 2e 35 39 5c 22 7d  |172.17.152.59\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gmdkz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gmdkz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "172.17.152.59",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.17.152.59"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854290343,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://f4179fce5476904c8837f2d3ae66c379c636f6e750e023cd7cf761c8a81702f0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.184: INFO: Pod "webserver-deployment-557759b7c7-lhb45" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-lhb45",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4da9df1f-c68a-40c4-96bd-f176be0a4704",
      ResourceVersion: (string) (len=5) "28874",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9dbc73b5cb5adbec4ff35eb54d834f8bf6455bb06d512ebbfd0722176ad1f734",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.17.66.151/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.17.66.151/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c95a3064-874a-47b8-9fb0-a1b5ff64b4f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 39  35 61 33 30 36 34 2d 38  |d\":\"c95a3064-8|
              00000090  37 34 61 2d 34 37 62 38  2d 39 66 62 30 2d 61 31  |74a-47b8-9fb0-a1|
              000000a0  62 35 66 66 36 34 62 34  66 34 5c 22 7d 22 3a 7b  |b5ff64b4f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 31 37 2e 36  36 2e 31 35 31 5c 22 7d  |172.17.66.151\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5pntl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5pntl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.167",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "172.17.66.151",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.17.66.151"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854290344,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://27d263eb2961134cec6fb11d7670367f53a4702e93c7dbbec68c657e4438be49",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.186: INFO: Pod "webserver-deployment-557759b7c7-lv8dz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-lv8dz",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "afd37f2f-9d0b-4d72-aef1-f108338937b9",
      ResourceVersion: (string) (len=5) "29254",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "4ed539cfefe2d2343cd1ba29c09e883a3a8508d8d548bd54350e83defb479055",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "172.17.152.6/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "172.17.152.6/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c95a3064-874a-47b8-9fb0-a1b5ff64b4f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 39  35 61 33 30 36 34 2d 38  |d\":\"c95a3064-8|
              00000090  37 34 61 2d 34 37 62 38  2d 39 66 62 30 2d 61 31  |74a-47b8-9fb0-a1|
              000000a0  62 35 66 66 36 34 62 34  66 34 5c 22 7d 22 3a 7b  |b5ff64b4f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 31 37 2e 31  35 32 2e 36 5c 22 7d 22  |172.17.152.6\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wkw8v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wkw8v",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "172.17.152.6",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.17.152.6"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854290348,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://35aa13503adb6a0613783cedfb43c09dd4ef03f72b651dfc4c7913ff0365194d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.189: INFO: Pod "webserver-deployment-557759b7c7-mqzwb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-mqzwb",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ed401680-53d3-4f1c-8a70-48555c9e1b0b",
      ResourceVersion: (string) (len=5) "28869",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.17.66.150/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "35fff4359e48cef76381a34492fba2a2f6c4828be1c20a2c02f3005c7d42e5cc",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.17.66.150/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c95a3064-874a-47b8-9fb0-a1b5ff64b4f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 39  35 61 33 30 36 34 2d 38  |d\":\"c95a3064-8|
              00000090  37 34 61 2d 34 37 62 38  2d 39 66 62 30 2d 61 31  |74a-47b8-9fb0-a1|
              000000a0  62 35 66 66 36 34 62 34  66 34 5c 22 7d 22 3a 7b  |b5ff64b4f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 31 37 2e 36  36 2e 31 35 30 5c 22 7d  |172.17.66.150\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lvgpg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lvgpg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.167",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "172.17.66.150",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.17.66.150"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854290343,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://fa3580fbaed30dff92b72c8474ae6816b7f00db552881a3a1850066f91f30b21",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.192: INFO: Pod "webserver-deployment-557759b7c7-n84md" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-n84md",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "79986876-151c-4221-9fd7-a073bcc204a8",
      ResourceVersion: (string) (len=5) "29175",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "172.17.196.251/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "172.17.196.251/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "532903ede4852fc7c4f3a42573363b1d3e0336729323bb68fa8b7420c52e0541"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c95a3064-874a-47b8-9fb0-a1b5ff64b4f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 39  35 61 33 30 36 34 2d 38  |d\":\"c95a3064-8|
              00000090  37 34 61 2d 34 37 62 38  2d 39 66 62 30 2d 61 31  |74a-47b8-9fb0-a1|
              000000a0  62 35 66 66 36 34 62 34  66 34 5c 22 7d 22 3a 7b  |b5ff64b4f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 31 37 2e 31  39 36 2e 32 35 31 5c 22  |172.17.196.251\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j9b2g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j9b2g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.166",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "172.17.196.251",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.17.196.251"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854290347,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://edb2d9b71483928fa97909f0f297c3743af348459268875d829bbb1febfef4c2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.195: INFO: Pod "webserver-deployment-557759b7c7-ntf8p" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-ntf8p",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6d718329-2050-489b-b714-550a3630b377",
      ResourceVersion: (string) (len=5) "29216",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "2b4a073934b833f654d2f9b8d5e5ac09546865c9d0e83bf240a8220528cefe78",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.17.66.167/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.17.66.167/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c95a3064-874a-47b8-9fb0-a1b5ff64b4f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 39  35 61 33 30 36 34 2d 38  |d\":\"c95a3064-8|
              00000090  37 34 61 2d 34 37 62 38  2d 39 66 62 30 2d 61 31  |74a-47b8-9fb0-a1|
              000000a0  62 35 66 66 36 34 62 34  66 34 5c 22 7d 22 3a 7b  |b5ff64b4f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 31 37 2e 36  36 2e 31 36 37 5c 22 7d  |172.17.66.167\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k7vs5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k7vs5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.167",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "172.17.66.167",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.17.66.167"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854290347,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://5dcb6979564153a0309b9489cc87ca00a25208f22f272613781f62b8eacf25b5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.198: INFO: Pod "webserver-deployment-557759b7c7-p9qqq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-p9qqq",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "63e0b7bd-80dc-49b9-b12b-13bb96cf7648",
      ResourceVersion: (string) (len=5) "29266",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "cac92b1826916b0f09822e88972b9479d35fe753caad4219f9700c58190eda66",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "172.17.196.255/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "172.17.196.255/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c95a3064-874a-47b8-9fb0-a1b5ff64b4f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 39  35 61 33 30 36 34 2d 38  |d\":\"c95a3064-8|
              00000090  37 34 61 2d 34 37 62 38  2d 39 66 62 30 2d 61 31  |74a-47b8-9fb0-a1|
              000000a0  62 35 66 66 36 34 62 34  66 34 5c 22 7d 22 3a 7b  |b5ff64b4f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 31 37 2e 31  39 36 2e 32 35 35 5c 22  |172.17.196.255\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7plkh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7plkh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.166",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "172.17.196.255",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.17.196.255"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854290348,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://0d78f09ca783a42d451cb3420406470257bd36ae1511993d3237106333c0fd70",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.201: INFO: Pod "webserver-deployment-557759b7c7-s29vr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-s29vr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5ef4df39-876f-4415-a850-77c23846d29a",
      ResourceVersion: (string) (len=5) "29263",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "172.17.196.253/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "72011489ce0423b02208868066a6c0879bb05cf03b976a24cbfed0dbe02c1fe6",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "172.17.196.253/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c95a3064-874a-47b8-9fb0-a1b5ff64b4f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 39  35 61 33 30 36 34 2d 38  |d\":\"c95a3064-8|
              00000090  37 34 61 2d 34 37 62 38  2d 39 66 62 30 2d 61 31  |74a-47b8-9fb0-a1|
              000000a0  62 35 66 66 36 34 62 34  66 34 5c 22 7d 22 3a 7b  |b5ff64b4f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 31 37 2e 31  39 36 2e 32 35 33 5c 22  |172.17.196.253\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xx45j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xx45j",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.166",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "172.17.196.253",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.17.196.253"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854290348,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://0e9b34be5ac0a950f837af86ddbe3cb68093d8cc73d810d8e62a83382b41f73a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.205: INFO: Pod "webserver-deployment-557759b7c7-wkz2p" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-wkz2p",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "84fad700-4437-4b78-a472-66ef3cf906d5",
      ResourceVersion: (string) (len=5) "29249",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e346c06b17de7e531c676686a3d09489ca2f502f8d76dcd393b5eea3a923409c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "172.17.152.4/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "172.17.152.4/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c95a3064-874a-47b8-9fb0-a1b5ff64b4f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 39  35 61 33 30 36 34 2d 38  |d\":\"c95a3064-8|
              00000090  37 34 61 2d 34 37 62 38  2d 39 66 62 30 2d 61 31  |74a-47b8-9fb0-a1|
              000000a0  62 35 66 66 36 34 62 34  66 34 5c 22 7d 22 3a 7b  |b5ff64b4f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 31 37 2e 31  35 32 2e 34 5c 22 7d 22  |172.17.152.4\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nj87l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nj87l",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "172.17.152.4",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.17.152.4"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854290348,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://dcd88b8a25cd66b7e4ca7ce3a71fc60a718b2b874f8cf9f8328abaaa0c387c83",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.207: INFO: Pod "webserver-deployment-557759b7c7-zgc6h" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-zgc6h",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2b374be4-ba80-4b93-bdce-6cf3f656bd86",
      ResourceVersion: (string) (len=5) "29208",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "4ee84e411ce3f384ff710c7e327003d44d23f6ed2ea23a765279a66a39380099",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.17.66.168/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.17.66.168/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c95a3064-874a-47b8-9fb0-a1b5ff64b4f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 39  35 61 33 30 36 34 2d 38  |d\":\"c95a3064-8|
              00000090  37 34 61 2d 34 37 62 38  2d 39 66 62 30 2d 61 31  |74a-47b8-9fb0-a1|
              000000a0  62 35 66 66 36 34 62 34  66 34 5c 22 7d 22 3a 7b  |b5ff64b4f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 31 37 2e 36  36 2e 31 36 38 5c 22 7d  |172.17.66.168\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qztr8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qztr8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.167",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "172.17.66.168",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.17.66.168"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854290348,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://3e7a220f154434ec125a5271e58f001eea4aed0639ec9d59176a3d277e9cbcd2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.210: INFO: Pod "webserver-deployment-9b4f5bf69-6s6c7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-6s6c7",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6e6ddccc-8da7-48dd-bd1b-a22112d5cbb2",
      ResourceVersion: (string) (len=5) "29232",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "926352a2255d0853530abcff12ade2e71c85e143072cbf0707066318ef65176b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "172.17.196.196/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "172.17.196.196/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "9dc4b0f8-511f-423c-a377-53fba4a5aef4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 64  63 34 62 30 66 38 2d 35  |d\":\"9dc4b0f8-5|
              00000090  31 31 66 2d 34 32 33 63  2d 61 33 37 37 2d 35 33  |11f-423c-a377-53|
              000000a0  66 62 61 34 61 35 61 65  66 34 5c 22 7d 22 3a 7b  |fba4a5aef4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7qpwv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7qpwv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.166",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.212: INFO: Pod "webserver-deployment-9b4f5bf69-fqtmk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-fqtmk",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3d64a6ef-d431-40c0-9a02-e0594f1c33c9",
      ResourceVersion: (string) (len=5) "28958",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290345,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e53f25815773c6b20866281d9d67d26d51d85b5a0224c60e21ee41bdc44d9577",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.17.66.153/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.17.66.153/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "9dc4b0f8-511f-423c-a377-53fba4a5aef4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 64  63 34 62 30 66 38 2d 35  |d\":\"9dc4b0f8-5|
              00000090  31 31 66 2d 34 32 33 63  2d 61 33 37 37 2d 35 33  |11f-423c-a377-53|
              000000a0  66 62 61 34 61 35 61 65  66 34 5c 22 7d 22 3a 7b  |fba4a5aef4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lgfzw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lgfzw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.167",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290345,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.214: INFO: Pod "webserver-deployment-9b4f5bf69-hb4v7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-hb4v7",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "04f3b115-4887-4fd3-bbfd-9fc2b41baaa3",
      ResourceVersion: (string) (len=5) "29194",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "2c9aeb0bae5fbbd398c43a0713125044ede4bff6375c12bbca2a6aae2d0e2a17",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "172.17.152.5/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "172.17.152.5/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "9dc4b0f8-511f-423c-a377-53fba4a5aef4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 64  63 34 62 30 66 38 2d 35  |d\":\"9dc4b0f8-5|
              00000090  31 31 66 2d 34 32 33 63  2d 61 33 37 37 2d 35 33  |11f-423c-a377-53|
              000000a0  66 62 61 34 61 35 61 65  66 34 5c 22 7d 22 3a 7b  |fba4a5aef4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vzjxl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vzjxl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.217: INFO: Pod "webserver-deployment-9b4f5bf69-j2f46" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-j2f46",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dc626cf9-7b2d-4447-987c-098666a6ce55",
      ResourceVersion: (string) (len=5) "29155",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "ef3d049253ecf8650239dafc01283f9e25610e5582143f3b89fed711eda4faf3",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "172.17.196.254/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "172.17.196.254/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "9dc4b0f8-511f-423c-a377-53fba4a5aef4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 64  63 34 62 30 66 38 2d 35  |d\":\"9dc4b0f8-5|
              00000090  31 31 66 2d 34 32 33 63  2d 61 33 37 37 2d 35 33  |11f-423c-a377-53|
              000000a0  66 62 61 34 61 35 61 65  66 34 5c 22 7d 22 3a 7b  |fba4a5aef4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kpm4j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kpm4j",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.166",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.219: INFO: Pod "webserver-deployment-9b4f5bf69-jrlcr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-jrlcr",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "152d5b84-8e07-43bb-a210-b779a1413283",
      ResourceVersion: (string) (len=5) "28948",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290345,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f344e429867971eecdb903be2c712f94ae88f53013753d61576f8f1f4b14fce3",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "172.17.196.248/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "172.17.196.248/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "9dc4b0f8-511f-423c-a377-53fba4a5aef4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 64  63 34 62 30 66 38 2d 35  |d\":\"9dc4b0f8-5|
              00000090  31 31 66 2d 34 32 33 63  2d 61 33 37 37 2d 35 33  |11f-423c-a377-53|
              000000a0  66 62 61 34 61 35 61 65  66 34 5c 22 7d 22 3a 7b  |fba4a5aef4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ssssv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ssssv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.166",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290345,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.221: INFO: Pod "webserver-deployment-9b4f5bf69-k7h7r" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-k7h7r",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4924b634-4d87-4474-8fa5-e45b01095652",
      ResourceVersion: (string) (len=5) "28949",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290345,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.17.152.62/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.17.152.62/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "2f17c535af3c246c3b851a4c6aa0b493c86ef3b9edcd7d1d0f4baab5e1b75abc"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "9dc4b0f8-511f-423c-a377-53fba4a5aef4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 64  63 34 62 30 66 38 2d 35  |d\":\"9dc4b0f8-5|
              00000090  31 31 66 2d 34 32 33 63  2d 61 33 37 37 2d 35 33  |11f-423c-a377-53|
              000000a0  66 62 61 34 61 35 61 65  66 34 5c 22 7d 22 3a 7b  |fba4a5aef4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9ttwp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9ttwp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290345,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.223: INFO: Pod "webserver-deployment-9b4f5bf69-k8r25" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-k8r25",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7dfa0580-9045-45c0-a77f-bd2309515c03",
      ResourceVersion: (string) (len=5) "29134",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.17.66.166/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f34576d920f116cabdcbce31e23df638983ddb80e95006fbd836ba48be136df5",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.17.66.166/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "9dc4b0f8-511f-423c-a377-53fba4a5aef4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 64  63 34 62 30 66 38 2d 35  |d\":\"9dc4b0f8-5|
              00000090  31 31 66 2d 34 32 33 63  2d 61 33 37 37 2d 35 33  |11f-423c-a377-53|
              000000a0  66 62 61 34 61 35 61 65  66 34 5c 22 7d 22 3a 7b  |fba4a5aef4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zq74r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zq74r",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.167",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.226: INFO: Pod "webserver-deployment-9b4f5bf69-lj8j5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-lj8j5",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "37aa2726-9fb2-4ce4-a271-7f0e891307a9",
      ResourceVersion: (string) (len=5) "29170",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "174fd4243bf32bce6bdd439f4befc7bab5f752913f22af413578890eea34cc76",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "172.17.152.3/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "172.17.152.3/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "9dc4b0f8-511f-423c-a377-53fba4a5aef4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 64  63 34 62 30 66 38 2d 35  |d\":\"9dc4b0f8-5|
              00000090  31 31 66 2d 34 32 33 63  2d 61 33 37 37 2d 35 33  |11f-423c-a377-53|
              000000a0  66 62 61 34 61 35 61 65  66 34 5c 22 7d 22 3a 7b  |fba4a5aef4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g444p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g444p",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.229: INFO: Pod "webserver-deployment-9b4f5bf69-lt4r6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-lt4r6",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cf9f4c14-8095-4a44-95f3-4a260a210c99",
      ResourceVersion: (string) (len=5) "28946",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290345,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "ba9a9592e0e2aab1c60f350f1e534cbc4a7baaf87d571eb3b2c690d4cc774473",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.17.66.152/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.17.66.152/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "9dc4b0f8-511f-423c-a377-53fba4a5aef4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 64  63 34 62 30 66 38 2d 35  |d\":\"9dc4b0f8-5|
              00000090  31 31 66 2d 34 32 33 63  2d 61 33 37 37 2d 35 33  |11f-423c-a377-53|
              000000a0  66 62 61 34 61 35 61 65  66 34 5c 22 7d 22 3a 7b  |fba4a5aef4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2vqgj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2vqgj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.167",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290345,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.231: INFO: Pod "webserver-deployment-9b4f5bf69-nqj2j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-nqj2j",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bdc53af4-63aa-4d92-a7bd-86f923bf6b3b",
      ResourceVersion: (string) (len=5) "29173",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.17.66.169/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.17.66.169/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "cc9f8f238bfe12c71c342e504a13463af1e8cd48df6bf95e79f2111ec48cb701"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "9dc4b0f8-511f-423c-a377-53fba4a5aef4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 64  63 34 62 30 66 38 2d 35  |d\":\"9dc4b0f8-5|
              00000090  31 31 66 2d 34 32 33 63  2d 61 33 37 37 2d 35 33  |11f-423c-a377-53|
              000000a0  66 62 61 34 61 35 61 65  66 34 5c 22 7d 22 3a 7b  |fba4a5aef4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l28mr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l28mr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.167",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.234: INFO: Pod "webserver-deployment-9b4f5bf69-pzbpg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-pzbpg",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "671e6d63-8ce7-4e0d-9454-35aa61abfc46",
      ResourceVersion: (string) (len=5) "28957",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290345,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "2d7f3d46ddd15243aaaf787973f7cdf7db76455f4ea6627b3be9b2c32b595ba7",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "172.17.196.249/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "172.17.196.249/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "9dc4b0f8-511f-423c-a377-53fba4a5aef4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 64  63 34 62 30 66 38 2d 35  |d\":\"9dc4b0f8-5|
              00000090  31 31 66 2d 34 32 33 63  2d 61 33 37 37 2d 35 33  |11f-423c-a377-53|
              000000a0  66 62 61 34 61 35 61 65  66 34 5c 22 7d 22 3a 7b  |fba4a5aef4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bbrrw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bbrrw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.166",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290345,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.236: INFO: Pod "webserver-deployment-9b4f5bf69-r6bbq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-r6bbq",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a694f9f9-984f-428a-ae5e-630cee66e58c",
      ResourceVersion: (string) (len=5) "29120",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "6fb36620a52ba2d24699f5659f2268242968c4a25033cbbbf8042210046fda58",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.17.152.63/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.17.152.63/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "9dc4b0f8-511f-423c-a377-53fba4a5aef4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 64  63 34 62 30 66 38 2d 35  |d\":\"9dc4b0f8-5|
              00000090  31 31 66 2d 34 32 33 63  2d 61 33 37 37 2d 35 33  |11f-423c-a377-53|
              000000a0  66 62 61 34 61 35 61 65  66 34 5c 22 7d 22 3a 7b  |fba4a5aef4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c2hxw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c2hxw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.238: INFO: Pod "webserver-deployment-9b4f5bf69-w6gxp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-w6gxp",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "782269f8-4276-44b7-bedd-010176193a3c",
      ResourceVersion: (string) (len=5) "29200",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "04f6329d87161d87f4b352676059e7cad0f1affb541138cc506053ade2668923",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.17.66.158/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.17.66.158/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "9dc4b0f8-511f-423c-a377-53fba4a5aef4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 64  63 34 62 30 66 38 2d 35  |d\":\"9dc4b0f8-5|
              00000090  31 31 66 2d 34 32 33 63  2d 61 33 37 37 2d 35 33  |11f-423c-a377-53|
              000000a0  66 62 61 34 61 35 61 65  66 34 5c 22 7d 22 3a 7b  |fba4a5aef4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290348,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lj5gk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lj5gk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.167",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290347,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 06:52:29.241: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6967" for this suite. @ 06/18/24 06:52:29.246
• [6.242 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 06/18/24 06:52:29.252
  Jun 18 06:52:29.252: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename field-validation @ 06/18/24 06:52:29.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:52:29.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:52:29.268
  Jun 18 06:52:29.271: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  W0618 06:52:29.272616      18 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0010495b0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0618 06:52:29.544035      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:30.544656      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:31.545493      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0618 06:52:31.838159      18 warnings.go:70] unknown field "alpha"
  W0618 06:52:31.838286      18 warnings.go:70] unknown field "beta"
  W0618 06:52:31.838293      18 warnings.go:70] unknown field "delta"
  W0618 06:52:31.838298      18 warnings.go:70] unknown field "epsilon"
  W0618 06:52:31.838303      18 warnings.go:70] unknown field "gamma"
  Jun 18 06:52:32.361: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5071" for this suite. @ 06/18/24 06:52:32.374
• [3.127 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1342
  STEP: Creating a kubernetes client @ 06/18/24 06:52:32.38
  Jun 18 06:52:32.380: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename kubectl @ 06/18/24 06:52:32.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:52:32.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:52:32.397
  Jun 18 06:52:32.401: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-8073 create -f -'
  E0618 06:52:32.545529      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:52:32.705: INFO: stderr: ""
  Jun 18 06:52:32.705: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Jun 18 06:52:32.705: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-8073 create -f -'
  Jun 18 06:52:32.980: INFO: stderr: ""
  Jun 18 06:52:32.981: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/18/24 06:52:32.981
  E0618 06:52:33.545750      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:52:33.986: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 18 06:52:33.986: INFO: Found 0 / 1
  E0618 06:52:34.546384      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:52:34.989: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 18 06:52:34.989: INFO: Found 1 / 1
  Jun 18 06:52:34.989: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Jun 18 06:52:34.997: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 18 06:52:34.997: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun 18 06:52:34.997: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-8073 describe pod agnhost-primary-jnlqn'
  Jun 18 06:52:35.125: INFO: stderr: ""
  Jun 18 06:52:35.125: INFO: stdout: "Name:             agnhost-primary-jnlqn\nNamespace:        kubectl-8073\nPriority:         0\nService Account:  default\nNode:             ck-128-worker-2/192.168.190.166\nStart Time:       Tue, 18 Jun 2024 06:52:32 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: 9a1d62f3d544a782eb0b69af2ea8c88efed77f2a211e2e0ea26bcad333080ebd\n                  cni.projectcalico.org/podIP: 172.17.196.198/32\n                  cni.projectcalico.org/podIPs: 172.17.196.198/32\nStatus:           Running\nIP:               172.17.196.198\nIPs:\n  IP:           172.17.196.198\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   cri-o://4845b5157926390c4046b954a7cf7a1f51095fa26feb9530af32e0356a99c30e\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:c9997bf8d2e223d7d2a0078dcfb11a653e9b16cf09418829ec03e1d57ca9628a\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Tue, 18 Jun 2024 06:52:33 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-x97jm (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-x97jm:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  3s    default-scheduler  Successfully assigned kubectl-8073/agnhost-primary-jnlqn to ck-128-worker-2\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  Jun 18 06:52:35.125: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-8073 describe rc agnhost-primary'
  Jun 18 06:52:35.249: INFO: stderr: ""
  Jun 18 06:52:35.249: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-8073\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-jnlqn\n"
  Jun 18 06:52:35.249: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-8073 describe service agnhost-primary'
  Jun 18 06:52:35.408: INFO: stderr: ""
  Jun 18 06:52:35.408: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-8073\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.101.114.168\nIPs:               10.101.114.168\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         172.17.196.198:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Jun 18 06:52:35.413: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-8073 describe node ck-128-master'
  Jun 18 06:52:35.523: INFO: stderr: ""
  Jun 18 06:52:35.524: INFO: stdout: "Name:               ck-128-master\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ck-128-master\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/crio/crio.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    projectcalico.org/IPv4Address: 192.168.190.151/24\n                    projectcalico.org/IPv4IPIPTunnelAddr: 172.17.209.64\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Tue, 18 Jun 2024 05:16:20 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  ck-128-master\n  AcquireTime:     <unset>\n  RenewTime:       Tue, 18 Jun 2024 06:52:32 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Tue, 18 Jun 2024 05:29:21 +0000   Tue, 18 Jun 2024 05:29:21 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Tue, 18 Jun 2024 06:48:15 +0000   Tue, 18 Jun 2024 05:16:18 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Tue, 18 Jun 2024 06:48:15 +0000   Tue, 18 Jun 2024 05:16:18 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Tue, 18 Jun 2024 06:48:15 +0000   Tue, 18 Jun 2024 05:16:18 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Tue, 18 Jun 2024 06:48:15 +0000   Tue, 18 Jun 2024 05:16:20 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.190.151\n  Hostname:    ck-128-master\nCapacity:\n  cpu:                4\n  ephemeral-storage:  103714796Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             16117492Ki\n  pods:               110\nAllocatable:\n  cpu:                4\n  ephemeral-storage:  95583555836\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             16015092Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 37ca1cdf6f55442187f28112da093ab0\n  System UUID:                37ca1cdf-6f55-4421-87f2-8112da093ab0\n  Boot ID:                    894ede83-0ee5-4456-aeec-5d6c9a6fcb1a\n  Kernel Version:             5.14.0-284.11.1.el9_2.x86_64\n  OS Image:                   Rocky Linux 9.2 (Blue Onyx)\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  cri-o://1.31.0\n  Kubelet Version:            v1.28.11\n  Kube-Proxy Version:         v1.28.11\nNon-terminated Pods:          (10 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-node-xqhwp                                          250m (6%)     0 (0%)      0 (0%)           0 (0%)         83m\n  kube-system                 coredns-5dd5756b68-jhbvh                                   100m (2%)     0 (0%)      70Mi (0%)        170Mi (1%)     96m\n  kube-system                 coredns-5dd5756b68-mwtp9                                   100m (2%)     0 (0%)      70Mi (0%)        170Mi (1%)     96m\n  kube-system                 etcd-ck-128-master                                         100m (2%)     0 (0%)      100Mi (0%)       0 (0%)         96m\n  kube-system                 kube-apiserver-ck-128-master                               250m (6%)     0 (0%)      0 (0%)           0 (0%)         96m\n  kube-system                 kube-controller-manager-ck-128-master                      200m (5%)     0 (0%)      0 (0%)           0 (0%)         96m\n  kube-system                 kube-proxy-llwfb                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         96m\n  kube-system                 kube-scheduler-ck-128-master                               100m (2%)     0 (0%)      0 (0%)           0 (0%)         96m\n  secloudit                   secloudit-registry-agent-plrkn                             0 (0%)        0 (0%)      0 (0%)           0 (0%)         86m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-d21185bcb31b4ec9-p786w    0 (0%)        0 (0%)      0 (0%)           0 (0%)         77m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests     Limits\n  --------           --------     ------\n  cpu                1100m (27%)  0 (0%)\n  memory             240Mi (1%)   340Mi (2%)\n  ephemeral-storage  0 (0%)       0 (0%)\n  hugepages-1Gi      0 (0%)       0 (0%)\n  hugepages-2Mi      0 (0%)       0 (0%)\nEvents:              <none>\n"
  Jun 18 06:52:35.524: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-8073 describe namespace kubectl-8073'
  E0618 06:52:35.547049      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:52:35.604: INFO: stderr: ""
  Jun 18 06:52:35.604: INFO: stdout: "Name:         kubectl-8073\nLabels:       e2e-framework=kubectl\n              e2e-run=bcbdb549-fee7-4e87-b55e-cc2aa2e8e91b\n              kubernetes.io/metadata.name=kubectl-8073\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Jun 18 06:52:35.605: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8073" for this suite. @ 06/18/24 06:52:35.609
• [3.233 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 06/18/24 06:52:35.617
  Jun 18 06:52:35.617: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename projected @ 06/18/24 06:52:35.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:52:35.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:52:35.636
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 06:52:35.64
  E0618 06:52:36.547410      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:37.548106      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:38.548462      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:39.548872      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:52:39.661
  Jun 18 06:52:39.664: INFO: Trying to get logs from node ck-128-worker-1 pod downwardapi-volume-260334fc-e5ac-4e24-9715-4d0a3c550a86 container client-container: <nil>
  STEP: delete the pod @ 06/18/24 06:52:39.67
  Jun 18 06:52:39.683: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4281" for this suite. @ 06/18/24 06:52:39.687
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 06/18/24 06:52:39.694
  Jun 18 06:52:39.694: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename crd-watch @ 06/18/24 06:52:39.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:52:39.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:52:39.708
  Jun 18 06:52:39.710: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  E0618 06:52:40.549704      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:41.550892      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 06/18/24 06:52:42.263
  Jun 18 06:52:42.267: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-18T06:52:42Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-18T06:52:42Z]] name:name1 resourceVersion:29708 uid:df4b17a7-6043-41f5-8b9b-d37b64df61a0] num:map[num1:9223372036854775807 num2:1000000]]}
  E0618 06:52:42.551048      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:43.551757      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:44.552281      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:45.553218      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:46.553408      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:47.554220      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:48.554869      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:49.554876      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:50.555463      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:51.555809      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 06/18/24 06:52:52.273
  Jun 18 06:52:52.284: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-18T06:52:52Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-18T06:52:52Z]] name:name2 resourceVersion:29746 uid:9a7f0178-f7f1-4732-a9cf-8f7f534681bd] num:map[num1:9223372036854775807 num2:1000000]]}
  E0618 06:52:52.556375      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:53.556818      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:54.557292      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:55.558135      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:56.558312      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:57.558660      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:58.559738      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:52:59.559878      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:00.560619      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:01.560921      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 06/18/24 06:53:02.285
  Jun 18 06:53:02.293: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-18T06:52:42Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-18T06:53:02Z]] name:name1 resourceVersion:29764 uid:df4b17a7-6043-41f5-8b9b-d37b64df61a0] num:map[num1:9223372036854775807 num2:1000000]]}
  E0618 06:53:02.561998      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:03.562332      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:04.562658      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:05.563665      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:06.564076      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:07.564371      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:08.564728      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:09.565102      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:10.565866      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:11.566443      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 06/18/24 06:53:12.294
  Jun 18 06:53:12.302: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-18T06:52:52Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-18T06:53:12Z]] name:name2 resourceVersion:29781 uid:9a7f0178-f7f1-4732-a9cf-8f7f534681bd] num:map[num1:9223372036854775807 num2:1000000]]}
  E0618 06:53:12.567251      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:13.567800      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:14.568265      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:15.569168      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:16.570228      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:17.570722      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:18.570950      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:19.571389      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:20.572008      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:21.572459      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 06/18/24 06:53:22.303
  Jun 18 06:53:22.311: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-18T06:52:42Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-18T06:53:02Z]] name:name1 resourceVersion:29799 uid:df4b17a7-6043-41f5-8b9b-d37b64df61a0] num:map[num1:9223372036854775807 num2:1000000]]}
  E0618 06:53:22.572727      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:23.573221      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:24.573760      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:25.574694      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:26.574998      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:27.575346      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:28.575734      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:29.576282      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:30.577058      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:31.577419      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 06/18/24 06:53:32.312
  Jun 18 06:53:32.322: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-18T06:52:52Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-18T06:53:12Z]] name:name2 resourceVersion:29817 uid:9a7f0178-f7f1-4732-a9cf-8f7f534681bd] num:map[num1:9223372036854775807 num2:1000000]]}
  E0618 06:53:32.578340      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:33.578615      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:34.579628      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:35.580595      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:36.581104      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:37.581526      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:38.581893      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:39.582157      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:40.582742      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:41.583426      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:42.583605      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:53:42.834: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-3138" for this suite. @ 06/18/24 06:53:42.841
• [63.154 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 06/18/24 06:53:42.849
  Jun 18 06:53:42.849: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename container-runtime @ 06/18/24 06:53:42.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:53:42.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:53:42.883
  STEP: create the container @ 06/18/24 06:53:42.886
  W0618 06:53:42.896196      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 06/18/24 06:53:42.896
  E0618 06:53:43.584170      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:44.585026      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:45.585777      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 06/18/24 06:53:45.915
  STEP: the container should be terminated @ 06/18/24 06:53:45.918
  STEP: the termination message should be set @ 06/18/24 06:53:45.918
  Jun 18 06:53:45.918: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 06/18/24 06:53:45.919
  Jun 18 06:53:45.928: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5584" for this suite. @ 06/18/24 06:53:45.937
• [3.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 06/18/24 06:53:45.944
  Jun 18 06:53:45.944: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename container-probe @ 06/18/24 06:53:45.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:53:45.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:53:45.967
  STEP: Creating pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051 @ 06/18/24 06:53:45.971
  E0618 06:53:46.586157      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:47.587065      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/18/24 06:53:47.994
  Jun 18 06:53:47.996: INFO: Initial restart count of pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 is 0
  Jun 18 06:53:47.999: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:53:48.587898      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:49.589018      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:53:50.003: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:53:50.589439      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:51.589749      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:53:52.007: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:53:52.589822      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:53.590251      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:53:54.013: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:53:54.590307      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:55.591339      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:53:56.018: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:53:56.591978      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:57.592412      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:53:58.023: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:53:58.593551      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:53:59.593931      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:54:00.029: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:54:00.594707      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:54:01.595032      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:54:02.034: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:54:02.595524      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:54:03.595919      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:54:04.038: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:54:04.596316      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:54:05.596264      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:54:06.043: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:54:06.596395      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:54:07.596761      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:54:08.048: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:54:08.597655      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:54:09.597951      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:54:10.053: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:54:10.598102      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:54:11.598489      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:54:12.057: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:54:12.598612      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:54:13.599199      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:54:14.063: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:54:14.600491      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:54:15.601652      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:54:16.069: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:54:16.601764      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:54:17.602364      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:54:18.075: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:54:18.602742      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:54:19.603109      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:54:20.079: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:54:20.604053      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:54:21.604503      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:54:22.084: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:54:22.604520      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:54:23.604851      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:54:24.090: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:54:24.605701      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:54:25.605767      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:54:26.094: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:54:26.606697      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:54:27.607030      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:54:28.099: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:54:28.608014      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:54:29.608249      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:54:30.103: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:54:30.608381      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:54:31.608524      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:54:32.108: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:54:32.609076      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:54:33.609391      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:54:34.114: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:54:34.609673      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:54:35.610723      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:54:36.119: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:54:36.611428      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:54:37.612087      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:54:38.125: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:54:38.613200      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:54:39.613620      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:54:40.129: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:54:40.614484      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:54:41.614825      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:54:42.135: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:54:42.615645      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:54:43.616315      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:54:44.141: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:54:44.617037      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:54:45.618105      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:54:46.145: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:54:46.618591      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:54:47.619713      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:54:48.152: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:54:48.619455      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:54:49.620019      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:54:50.158: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:54:50.620616      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:54:51.620797      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:54:52.164: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:54:52.620871      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:54:53.621305      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:54:54.169: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:54:54.621392      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:54:55.622376      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:54:56.173: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:54:56.622569      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:54:57.623347      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:54:58.177: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:54:58.624143      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:54:59.624641      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:55:00.182: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:55:00.625656      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:55:01.626056      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:55:02.187: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:55:02.627045      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:55:03.627562      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:55:04.192: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:55:04.628293      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:55:05.629028      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:55:06.198: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:55:06.629988      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:55:07.630210      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:55:08.203: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:55:08.630521      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:55:09.630877      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:55:10.210: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:55:10.631252      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:55:11.631661      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:55:12.214: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:55:12.632070      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:55:13.632305      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:55:14.222: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:55:14.632502      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:55:15.632588      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:55:16.226: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:55:16.632775      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:55:17.633105      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:55:18.230: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:55:18.633337      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:55:19.633716      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:55:20.236: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:55:20.634213      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:55:21.634636      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:55:22.242: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:55:22.635323      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:55:23.635627      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:55:24.247: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:55:24.636436      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:55:25.636506      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:55:26.253: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:55:26.637099      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:55:27.637511      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:55:28.259: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:55:28.638236      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:55:29.638646      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:55:30.263: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:55:30.639410      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:55:31.639750      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:55:32.268: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:55:32.640128      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:55:33.640539      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:55:34.272: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:55:34.640937      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:55:35.641696      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:55:36.278: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:55:36.641908      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:55:37.642138      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:55:38.284: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:55:38.642425      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:55:39.642833      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:55:40.290: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:55:40.643869      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:55:41.644114      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:55:42.295: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:55:42.644799      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:55:43.645210      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:55:44.300: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:55:44.645862      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:55:45.646642      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:55:46.309: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:55:46.647922      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:55:47.647640      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:55:48.313: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:55:48.648488      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:55:49.648771      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:55:50.319: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:55:50.649552      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:55:51.650337      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:55:52.324: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:55:52.650284      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:55:53.650785      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:55:54.330: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:55:54.651376      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:55:55.652478      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:55:56.335: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:55:56.653288      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:55:57.653530      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:55:58.340: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:55:58.654435      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:55:59.654824      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:56:00.345: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:56:00.655509      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:56:01.655801      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:56:02.348: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:56:02.656395      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:56:03.656682      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:56:04.355: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:56:04.657805      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:56:05.658641      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:56:06.359: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:56:06.659475      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:56:07.659760      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:56:08.364: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:56:08.659825      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:56:09.660258      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:56:10.368: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:56:10.661140      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:56:11.661566      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:56:12.374: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:56:12.661725      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:56:13.662129      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:56:14.380: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:56:14.662918      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:56:15.663874      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:56:16.386: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:56:16.664713      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:56:17.665080      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:56:18.391: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:56:18.668123      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:56:19.668500      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:56:20.397: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:56:20.669398      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:56:21.670300      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:56:22.401: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:56:22.671265      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:56:23.672099      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:56:24.406: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:56:24.673231      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:56:25.673991      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:56:26.411: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:56:26.674925      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:56:27.675389      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:56:28.417: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:56:28.675919      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:56:29.676319      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:56:30.423: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:56:30.676290      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:56:31.676610      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:56:32.428: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:56:32.676797      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:56:33.677151      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:56:34.433: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:56:34.677339      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:56:35.678045      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:56:36.438: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:56:36.678247      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:56:37.678560      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:56:38.443: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:56:38.678880      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:56:39.679277      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:56:40.448: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:56:40.679976      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:56:41.680375      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:56:42.453: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:56:42.680798      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:56:43.681234      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:56:44.459: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:56:44.681658      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:56:45.682661      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:56:46.463: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:56:46.682862      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:56:47.683267      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:56:48.467: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:56:48.684115      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:56:49.684463      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:56:50.472: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:56:50.684965      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:56:51.685322      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:56:52.477: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:56:52.686265      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:56:53.686520      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:56:54.484: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:56:54.686854      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:56:55.687739      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:56:56.488: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:56:56.688169      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:56:57.688866      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:56:58.493: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:56:58.688911      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:56:59.689266      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:57:00.498: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:57:00.690226      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:01.690570      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:57:02.502: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:57:02.691284      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:03.691748      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:57:04.509: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:57:04.692550      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:05.695148      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:57:06.514: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:57:06.695383      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:07.695654      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:57:08.519: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:57:08.696567      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:09.696563      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:57:10.524: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:57:10.697071      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:11.697146      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:57:12.528: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:57:12.698262      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:13.698628      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:57:14.534: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:57:14.699350      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:15.700496      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:57:16.539: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:57:16.700600      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:17.700975      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:57:18.545: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:57:18.706070      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:19.706653      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:57:20.551: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:57:20.707074      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:21.707816      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:57:22.557: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:57:22.708317      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:23.708937      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:57:24.561: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:57:24.709048      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:25.709992      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:57:26.566: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:57:26.710818      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:27.711198      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:57:28.570: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:57:28.712674      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:29.713152      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:57:30.576: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:57:30.713405      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:31.713612      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:57:32.581: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:57:32.714340      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:33.714646      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:57:34.587: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:57:34.714720      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:35.715890      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:57:36.592: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:57:36.715899      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:37.716430      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:57:38.601: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:57:38.716470      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:39.716979      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:57:40.608: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:57:40.717573      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:41.718018      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:57:42.613: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:57:42.718494      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:43.718558      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:57:44.618: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:57:44.719207      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:45.719294      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:57:46.625: INFO: Get pod busybox-228022b0-36ee-46a5-9e0c-4e391bbc9db9 in namespace container-probe-3051
  E0618 06:57:46.725019      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:47.724973      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:57:48.626: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 06/18/24 06:57:48.633
  STEP: Destroying namespace "container-probe-3051" for this suite. @ 06/18/24 06:57:48.655
• [242.724 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:901
  STEP: Creating a kubernetes client @ 06/18/24 06:57:48.67
  Jun 18 06:57:48.670: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename statefulset @ 06/18/24 06:57:48.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:57:48.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:57:48.709
  STEP: Creating service test in namespace statefulset-5565 @ 06/18/24 06:57:48.716
  STEP: Creating statefulset ss in namespace statefulset-5565 @ 06/18/24 06:57:48.724
  E0618 06:57:48.725919      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:57:48.739: INFO: Found 0 stateful pods, waiting for 1
  E0618 06:57:49.726660      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:50.727325      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:51.727589      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:52.727997      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:53.728300      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:54.728612      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:55.729574      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:56.730088      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:57.730423      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:57:58.731448      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:57:58.745: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 06/18/24 06:57:58.753
  STEP: updating a scale subresource @ 06/18/24 06:57:58.756
  STEP: verifying the statefulset Spec.Replicas was modified @ 06/18/24 06:57:58.763
  STEP: Patch a scale subresource @ 06/18/24 06:57:58.767
  STEP: verifying the statefulset Spec.Replicas was modified @ 06/18/24 06:57:58.774
  Jun 18 06:57:58.778: INFO: Deleting all statefulset in ns statefulset-5565
  Jun 18 06:57:58.782: INFO: Scaling statefulset ss to 0
  E0618 06:57:59.731943      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:00.732839      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:01.733279      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:02.733554      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:03.733969      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:04.734042      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:05.734902      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:06.735102      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:07.735431      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:08.736611      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:58:08.801: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 18 06:58:08.803: INFO: Deleting statefulset ss
  Jun 18 06:58:08.813: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5565" for this suite. @ 06/18/24 06:58:08.82
• [20.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 06/18/24 06:58:08.831
  Jun 18 06:58:08.831: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename secrets @ 06/18/24 06:58:08.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:58:08.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:58:08.849
  STEP: Creating secret with name s-test-opt-del-b3e11429-eab7-40c7-807b-48f888fe196c @ 06/18/24 06:58:08.859
  STEP: Creating secret with name s-test-opt-upd-22ee5721-4100-4471-8867-1b83e61c3a9c @ 06/18/24 06:58:08.864
  STEP: Creating the pod @ 06/18/24 06:58:08.869
  E0618 06:58:09.736821      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:10.737889      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-b3e11429-eab7-40c7-807b-48f888fe196c @ 06/18/24 06:58:10.929
  STEP: Updating secret s-test-opt-upd-22ee5721-4100-4471-8867-1b83e61c3a9c @ 06/18/24 06:58:10.934
  STEP: Creating secret with name s-test-opt-create-6919da7e-0ee7-4d7b-8c6f-06115ffbebe8 @ 06/18/24 06:58:10.939
  STEP: waiting to observe update in volume @ 06/18/24 06:58:10.943
  E0618 06:58:11.741075      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:12.741230      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:13.741505      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:14.741920      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:58:14.986: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8457" for this suite. @ 06/18/24 06:58:14.994
• [6.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 06/18/24 06:58:15.01
  Jun 18 06:58:15.010: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename projected @ 06/18/24 06:58:15.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:58:15.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:58:15.034
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 06:58:15.038
  E0618 06:58:15.742110      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:16.742647      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:17.743232      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:18.743461      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:58:19.063
  Jun 18 06:58:19.066: INFO: Trying to get logs from node ck-128-worker-2 pod downwardapi-volume-68ed61d6-160f-49f7-afa1-e4c1c4ce63a0 container client-container: <nil>
  STEP: delete the pod @ 06/18/24 06:58:19.096
  Jun 18 06:58:19.116: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2586" for this suite. @ 06/18/24 06:58:19.122
• [4.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3142
  STEP: Creating a kubernetes client @ 06/18/24 06:58:19.13
  Jun 18 06:58:19.130: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename services @ 06/18/24 06:58:19.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:58:19.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:58:19.151
  STEP: creating an Endpoint @ 06/18/24 06:58:19.158
  STEP: waiting for available Endpoint @ 06/18/24 06:58:19.161
  STEP: listing all Endpoints @ 06/18/24 06:58:19.162
  STEP: updating the Endpoint @ 06/18/24 06:58:19.165
  STEP: fetching the Endpoint @ 06/18/24 06:58:19.17
  STEP: patching the Endpoint @ 06/18/24 06:58:19.173
  STEP: fetching the Endpoint @ 06/18/24 06:58:19.184
  STEP: deleting the Endpoint by Collection @ 06/18/24 06:58:19.186
  STEP: waiting for Endpoint deletion @ 06/18/24 06:58:19.192
  STEP: fetching the Endpoint @ 06/18/24 06:58:19.193
  Jun 18 06:58:19.196: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6813" for this suite. @ 06/18/24 06:58:19.203
• [0.078 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 06/18/24 06:58:19.21
  Jun 18 06:58:19.210: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename configmap @ 06/18/24 06:58:19.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:58:19.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:58:19.228
  STEP: Creating configMap with name configmap-test-volume-429f45dc-d044-49bf-82da-2da694b6bbd8 @ 06/18/24 06:58:19.231
  STEP: Creating a pod to test consume configMaps @ 06/18/24 06:58:19.236
  E0618 06:58:19.744021      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:20.745056      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:58:21.25
  Jun 18 06:58:21.253: INFO: Trying to get logs from node ck-128-worker-2 pod pod-configmaps-1eabd292-f275-4225-a099-29219e8db85e container agnhost-container: <nil>
  STEP: delete the pod @ 06/18/24 06:58:21.26
  Jun 18 06:58:21.413: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-30" for this suite. @ 06/18/24 06:58:21.417
• [2.212 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 06/18/24 06:58:21.424
  Jun 18 06:58:21.424: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename disruption @ 06/18/24 06:58:21.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:58:21.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:58:21.445
  STEP: creating the pdb @ 06/18/24 06:58:21.449
  STEP: Waiting for the pdb to be processed @ 06/18/24 06:58:21.454
  E0618 06:58:21.745798      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:22.746229      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 06/18/24 06:58:23.461
  STEP: Waiting for the pdb to be processed @ 06/18/24 06:58:23.471
  E0618 06:58:23.747198      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:24.747670      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 06/18/24 06:58:25.477
  STEP: Waiting for the pdb to be processed @ 06/18/24 06:58:25.487
  E0618 06:58:25.747668      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:26.747982      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 06/18/24 06:58:27.499
  Jun 18 06:58:27.502: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7828" for this suite. @ 06/18/24 06:58:27.507
• [6.088 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:45
  STEP: Creating a kubernetes client @ 06/18/24 06:58:27.513
  Jun 18 06:58:27.513: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename configmap @ 06/18/24 06:58:27.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:58:27.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:58:27.53
  STEP: Creating configMap configmap-4036/configmap-test-7e6800ec-0e43-4ddc-bc5a-d7def1eeebb6 @ 06/18/24 06:58:27.533
  STEP: Creating a pod to test consume configMaps @ 06/18/24 06:58:27.537
  E0618 06:58:27.748660      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:28.748729      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:29.749381      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:30.749892      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:58:31.557
  Jun 18 06:58:31.560: INFO: Trying to get logs from node ck-128-worker-2 pod pod-configmaps-60e97849-8d09-46c6-820a-b7834b48d3bd container env-test: <nil>
  STEP: delete the pod @ 06/18/24 06:58:31.567
  Jun 18 06:58:31.580: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4036" for this suite. @ 06/18/24 06:58:31.584
• [4.076 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 06/18/24 06:58:31.59
  Jun 18 06:58:31.591: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename watch @ 06/18/24 06:58:31.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:58:31.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:58:31.608
  STEP: creating a watch on configmaps with a certain label @ 06/18/24 06:58:31.611
  STEP: creating a new configmap @ 06/18/24 06:58:31.613
  STEP: modifying the configmap once @ 06/18/24 06:58:31.618
  STEP: changing the label value of the configmap @ 06/18/24 06:58:31.624
  STEP: Expecting to observe a delete notification for the watched object @ 06/18/24 06:58:31.63
  Jun 18 06:58:31.630: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8461  a3cd472a-ee82-414b-bfe9-93afec414735 30632 0 2024-06-18 06:58:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-18 06:58:31 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 06:58:31.631: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8461  a3cd472a-ee82-414b-bfe9-93afec414735 30633 0 2024-06-18 06:58:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-18 06:58:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 06:58:31.631: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8461  a3cd472a-ee82-414b-bfe9-93afec414735 30634 0 2024-06-18 06:58:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-18 06:58:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 06/18/24 06:58:31.632
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 06/18/24 06:58:31.639
  E0618 06:58:31.750397      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:32.751405      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:33.751990      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:34.752272      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:35.752306      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:36.752414      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:37.752675      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:38.753602      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:39.753969      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:40.754604      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 06/18/24 06:58:41.639
  STEP: modifying the configmap a third time @ 06/18/24 06:58:41.651
  STEP: deleting the configmap @ 06/18/24 06:58:41.658
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 06/18/24 06:58:41.664
  Jun 18 06:58:41.665: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8461  a3cd472a-ee82-414b-bfe9-93afec414735 30667 0 2024-06-18 06:58:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-18 06:58:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 06:58:41.665: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8461  a3cd472a-ee82-414b-bfe9-93afec414735 30668 0 2024-06-18 06:58:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-18 06:58:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 06:58:41.666: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8461  a3cd472a-ee82-414b-bfe9-93afec414735 30669 0 2024-06-18 06:58:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-18 06:58:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 06:58:41.668: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8461" for this suite. @ 06/18/24 06:58:41.674
• [10.089 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:996
  STEP: Creating a kubernetes client @ 06/18/24 06:58:41.68
  Jun 18 06:58:41.680: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename kubectl @ 06/18/24 06:58:41.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:58:41.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:58:41.699
  STEP: create deployment with httpd image @ 06/18/24 06:58:41.702
  Jun 18 06:58:41.703: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6203 create -f -'
  E0618 06:58:41.755420      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:58:41.988: INFO: stderr: ""
  Jun 18 06:58:41.988: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 06/18/24 06:58:41.988
  Jun 18 06:58:41.988: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6203 diff -f -'
  Jun 18 06:58:42.180: INFO: rc: 1
  Jun 18 06:58:42.180: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-6203 delete -f -'
  Jun 18 06:58:42.266: INFO: stderr: ""
  Jun 18 06:58:42.266: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Jun 18 06:58:42.266: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6203" for this suite. @ 06/18/24 06:58:42.273
• [0.600 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:87
  STEP: Creating a kubernetes client @ 06/18/24 06:58:42.281
  Jun 18 06:58:42.281: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename emptydir @ 06/18/24 06:58:42.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:58:42.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:58:42.304
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 06/18/24 06:58:42.307
  E0618 06:58:42.755639      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:43.756394      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:44.757162      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:45.758257      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:58:46.327
  Jun 18 06:58:46.331: INFO: Trying to get logs from node ck-128-worker-1 pod pod-a95692ba-e69e-4af1-9ad5-279bbdf2481b container test-container: <nil>
  STEP: delete the pod @ 06/18/24 06:58:46.34
  Jun 18 06:58:46.360: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7767" for this suite. @ 06/18/24 06:58:46.366
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 06/18/24 06:58:46.379
  Jun 18 06:58:46.379: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename secrets @ 06/18/24 06:58:46.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:58:46.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:58:46.398
  STEP: Creating secret with name secret-test-f7e9a958-248f-4391-939e-bdaf80c659a0 @ 06/18/24 06:58:46.402
  STEP: Creating a pod to test consume secrets @ 06/18/24 06:58:46.406
  E0618 06:58:46.758615      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:47.759356      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:48.759481      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:49.759820      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:58:50.43
  Jun 18 06:58:50.433: INFO: Trying to get logs from node ck-128-worker-1 pod pod-secrets-ee604924-5886-4cc6-84e5-e783d3681579 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/18/24 06:58:50.439
  Jun 18 06:58:50.451: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9461" for this suite. @ 06/18/24 06:58:50.456
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 06/18/24 06:58:50.462
  Jun 18 06:58:50.462: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename downward-api @ 06/18/24 06:58:50.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:58:50.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:58:50.48
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 06:58:50.483
  E0618 06:58:50.760671      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:51.761001      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:52.762450      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:53.762819      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:58:54.506
  Jun 18 06:58:54.509: INFO: Trying to get logs from node ck-128-worker-2 pod downwardapi-volume-54f52934-7596-420a-96d6-664213f66e94 container client-container: <nil>
  STEP: delete the pod @ 06/18/24 06:58:54.514
  Jun 18 06:58:54.532: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5833" for this suite. @ 06/18/24 06:58:54.537
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 06/18/24 06:58:54.543
  Jun 18 06:58:54.543: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/18/24 06:58:54.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:58:54.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:58:54.563
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 06/18/24 06:58:54.566
  Jun 18 06:58:54.567: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  E0618 06:58:54.763439      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:55.763808      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:56.766906      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:57.767343      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:58.768060      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:58:59.769089      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 06/18/24 06:59:00.461
  Jun 18 06:59:00.462: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  E0618 06:59:00.769281      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:01.769948      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:59:01.898: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  E0618 06:59:02.770813      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:03.770941      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:04.771761      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:05.772462      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:06.773382      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:59:07.675: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8102" for this suite. @ 06/18/24 06:59:07.687
• [13.149 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 06/18/24 06:59:07.696
  Jun 18 06:59:07.696: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename field-validation @ 06/18/24 06:59:07.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:59:07.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:59:07.719
  Jun 18 06:59:07.722: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  E0618 06:59:07.774039      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:08.774682      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:09.774986      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0618 06:59:10.275912      18 warnings.go:70] unknown field "alpha"
  W0618 06:59:10.275944      18 warnings.go:70] unknown field "beta"
  W0618 06:59:10.275951      18 warnings.go:70] unknown field "delta"
  W0618 06:59:10.275957      18 warnings.go:70] unknown field "epsilon"
  W0618 06:59:10.275979      18 warnings.go:70] unknown field "gamma"
  E0618 06:59:10.775505      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:59:10.802: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9649" for this suite. @ 06/18/24 06:59:10.817
• [3.128 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1674
  STEP: Creating a kubernetes client @ 06/18/24 06:59:10.825
  Jun 18 06:59:10.825: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename kubectl @ 06/18/24 06:59:10.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:59:10.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:59:10.846
  Jun 18 06:59:10.849: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-3202 version'
  Jun 18 06:59:10.931: INFO: stderr: ""
  Jun 18 06:59:10.931: INFO: stdout: "Client Version: v1.28.11\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.28.11\n"
  Jun 18 06:59:10.932: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3202" for this suite. @ 06/18/24 06:59:10.939
• [0.121 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:168
  STEP: Creating a kubernetes client @ 06/18/24 06:59:10.946
  Jun 18 06:59:10.946: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/18/24 06:59:10.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:59:10.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:59:10.966
  STEP: create the container to handle the HTTPGet hook request. @ 06/18/24 06:59:10.977
  E0618 06:59:11.776361      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:12.776841      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 06/18/24 06:59:13
  E0618 06:59:13.777039      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:14.777146      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 06/18/24 06:59:15.018
  STEP: delete the pod with lifecycle hook @ 06/18/24 06:59:15.026
  E0618 06:59:15.777529      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:16.778008      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:59:17.048: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5081" for this suite. @ 06/18/24 06:59:17.054
• [6.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 06/18/24 06:59:17.062
  Jun 18 06:59:17.062: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename subpath @ 06/18/24 06:59:17.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:59:17.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:59:17.078
  STEP: Setting up data @ 06/18/24 06:59:17.081
  STEP: Creating pod pod-subpath-test-configmap-4qcd @ 06/18/24 06:59:17.088
  STEP: Creating a pod to test atomic-volume-subpath @ 06/18/24 06:59:17.088
  E0618 06:59:17.778255      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:18.778843      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:19.779821      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:20.780710      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:21.781893      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:22.782376      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:23.782727      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:24.783244      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:25.783681      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:26.784941      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:27.785294      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:28.785392      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:29.786410      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:30.786632      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:31.787590      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:32.787717      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:33.788250      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:34.788431      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:35.789215      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:36.790251      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:37.790998      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:38.791780      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:39.791829      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:40.792765      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 06:59:41.16
  Jun 18 06:59:41.164: INFO: Trying to get logs from node ck-128-worker-2 pod pod-subpath-test-configmap-4qcd container test-container-subpath-configmap-4qcd: <nil>
  STEP: delete the pod @ 06/18/24 06:59:41.173
  STEP: Deleting pod pod-subpath-test-configmap-4qcd @ 06/18/24 06:59:41.193
  Jun 18 06:59:41.193: INFO: Deleting pod "pod-subpath-test-configmap-4qcd" in namespace "subpath-8084"
  Jun 18 06:59:41.197: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8084" for this suite. @ 06/18/24 06:59:41.203
• [24.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1707
  STEP: Creating a kubernetes client @ 06/18/24 06:59:41.218
  Jun 18 06:59:41.219: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename kubectl @ 06/18/24 06:59:41.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:59:41.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:59:41.241
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/18/24 06:59:41.246
  Jun 18 06:59:41.246: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-1027 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Jun 18 06:59:41.352: INFO: stderr: ""
  Jun 18 06:59:41.352: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 06/18/24 06:59:41.352
  Jun 18 06:59:41.356: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-1027 delete pods e2e-test-httpd-pod'
  E0618 06:59:41.793467      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:42.794502      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:59:43.273: INFO: stderr: ""
  Jun 18 06:59:43.273: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jun 18 06:59:43.274: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1027" for this suite. @ 06/18/24 06:59:43.278
• [2.065 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:713
  STEP: Creating a kubernetes client @ 06/18/24 06:59:43.285
  Jun 18 06:59:43.285: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename gc @ 06/18/24 06:59:43.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 06:59:43.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 06:59:43.303
  STEP: create the rc1 @ 06/18/24 06:59:43.312
  STEP: create the rc2 @ 06/18/24 06:59:43.317
  E0618 06:59:43.795542      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:44.796532      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:45.797497      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:46.800415      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:47.801513      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:48.802509      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 06/18/24 06:59:49.328
  STEP: delete the rc simpletest-rc-to-be-deleted @ 06/18/24 06:59:49.746
  STEP: wait for the rc to be deleted @ 06/18/24 06:59:49.751
  E0618 06:59:49.803519      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:50.804549      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:51.805407      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:52.805706      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:53.806310      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:59:54.769: INFO: 69 pods remaining
  Jun 18 06:59:54.769: INFO: 69 pods has nil DeletionTimestamp
  Jun 18 06:59:54.769: INFO: 
  E0618 06:59:54.806987      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:55.807534      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:56.808556      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:57.810455      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 06:59:58.811468      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/18/24 06:59:59.765
  E0618 06:59:59.811966      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 06:59:59.887: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 18 06:59:59.887: INFO: Deleting pod "simpletest-rc-to-be-deleted-2khd6" in namespace "gc-4715"
  Jun 18 06:59:59.898: INFO: Deleting pod "simpletest-rc-to-be-deleted-4bkfr" in namespace "gc-4715"
  Jun 18 06:59:59.908: INFO: Deleting pod "simpletest-rc-to-be-deleted-4bwvg" in namespace "gc-4715"
  Jun 18 06:59:59.920: INFO: Deleting pod "simpletest-rc-to-be-deleted-4p9tk" in namespace "gc-4715"
  Jun 18 06:59:59.931: INFO: Deleting pod "simpletest-rc-to-be-deleted-4sl76" in namespace "gc-4715"
  Jun 18 06:59:59.940: INFO: Deleting pod "simpletest-rc-to-be-deleted-4txtg" in namespace "gc-4715"
  Jun 18 06:59:59.954: INFO: Deleting pod "simpletest-rc-to-be-deleted-5t5lg" in namespace "gc-4715"
  Jun 18 06:59:59.965: INFO: Deleting pod "simpletest-rc-to-be-deleted-5tzs7" in namespace "gc-4715"
  Jun 18 06:59:59.976: INFO: Deleting pod "simpletest-rc-to-be-deleted-5vcsb" in namespace "gc-4715"
  Jun 18 06:59:59.985: INFO: Deleting pod "simpletest-rc-to-be-deleted-5wch7" in namespace "gc-4715"
  Jun 18 06:59:59.993: INFO: Deleting pod "simpletest-rc-to-be-deleted-5z4j2" in namespace "gc-4715"
  Jun 18 07:00:00.003: INFO: Deleting pod "simpletest-rc-to-be-deleted-64bzs" in namespace "gc-4715"
  Jun 18 07:00:00.015: INFO: Deleting pod "simpletest-rc-to-be-deleted-6cnx5" in namespace "gc-4715"
  Jun 18 07:00:00.026: INFO: Deleting pod "simpletest-rc-to-be-deleted-6dklv" in namespace "gc-4715"
  Jun 18 07:00:00.036: INFO: Deleting pod "simpletest-rc-to-be-deleted-6sc4k" in namespace "gc-4715"
  Jun 18 07:00:00.049: INFO: Deleting pod "simpletest-rc-to-be-deleted-6zr2q" in namespace "gc-4715"
  Jun 18 07:00:00.061: INFO: Deleting pod "simpletest-rc-to-be-deleted-76lj9" in namespace "gc-4715"
  Jun 18 07:00:00.089: INFO: Deleting pod "simpletest-rc-to-be-deleted-7gnd8" in namespace "gc-4715"
  Jun 18 07:00:00.115: INFO: Deleting pod "simpletest-rc-to-be-deleted-7hdsm" in namespace "gc-4715"
  Jun 18 07:00:00.131: INFO: Deleting pod "simpletest-rc-to-be-deleted-7jfwj" in namespace "gc-4715"
  Jun 18 07:00:00.147: INFO: Deleting pod "simpletest-rc-to-be-deleted-87gpc" in namespace "gc-4715"
  Jun 18 07:00:00.168: INFO: Deleting pod "simpletest-rc-to-be-deleted-89zwx" in namespace "gc-4715"
  Jun 18 07:00:00.182: INFO: Deleting pod "simpletest-rc-to-be-deleted-8t54x" in namespace "gc-4715"
  Jun 18 07:00:00.203: INFO: Deleting pod "simpletest-rc-to-be-deleted-98zr8" in namespace "gc-4715"
  Jun 18 07:00:00.226: INFO: Deleting pod "simpletest-rc-to-be-deleted-9jvhv" in namespace "gc-4715"
  Jun 18 07:00:00.267: INFO: Deleting pod "simpletest-rc-to-be-deleted-9mgfv" in namespace "gc-4715"
  Jun 18 07:00:00.294: INFO: Deleting pod "simpletest-rc-to-be-deleted-9s7wq" in namespace "gc-4715"
  Jun 18 07:00:00.332: INFO: Deleting pod "simpletest-rc-to-be-deleted-b7srg" in namespace "gc-4715"
  Jun 18 07:00:00.371: INFO: Deleting pod "simpletest-rc-to-be-deleted-bdhzp" in namespace "gc-4715"
  Jun 18 07:00:00.413: INFO: Deleting pod "simpletest-rc-to-be-deleted-bdmfv" in namespace "gc-4715"
  Jun 18 07:00:00.465: INFO: Deleting pod "simpletest-rc-to-be-deleted-bnpdc" in namespace "gc-4715"
  Jun 18 07:00:00.519: INFO: Deleting pod "simpletest-rc-to-be-deleted-cpfpl" in namespace "gc-4715"
  Jun 18 07:00:00.535: INFO: Deleting pod "simpletest-rc-to-be-deleted-cs27t" in namespace "gc-4715"
  Jun 18 07:00:00.579: INFO: Deleting pod "simpletest-rc-to-be-deleted-dk7jw" in namespace "gc-4715"
  Jun 18 07:00:00.631: INFO: Deleting pod "simpletest-rc-to-be-deleted-dls2f" in namespace "gc-4715"
  Jun 18 07:00:00.656: INFO: Deleting pod "simpletest-rc-to-be-deleted-dmsq2" in namespace "gc-4715"
  Jun 18 07:00:00.691: INFO: Deleting pod "simpletest-rc-to-be-deleted-dqxzv" in namespace "gc-4715"
  Jun 18 07:00:00.706: INFO: Deleting pod "simpletest-rc-to-be-deleted-f7mhd" in namespace "gc-4715"
  Jun 18 07:00:00.743: INFO: Deleting pod "simpletest-rc-to-be-deleted-fd9w7" in namespace "gc-4715"
  Jun 18 07:00:00.783: INFO: Deleting pod "simpletest-rc-to-be-deleted-fgr48" in namespace "gc-4715"
  E0618 07:00:00.812154      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:00:00.812: INFO: Deleting pod "simpletest-rc-to-be-deleted-fmc8w" in namespace "gc-4715"
  Jun 18 07:00:00.837: INFO: Deleting pod "simpletest-rc-to-be-deleted-fmsmr" in namespace "gc-4715"
  Jun 18 07:00:00.866: INFO: Deleting pod "simpletest-rc-to-be-deleted-fqcc6" in namespace "gc-4715"
  Jun 18 07:00:00.926: INFO: Deleting pod "simpletest-rc-to-be-deleted-fvrzm" in namespace "gc-4715"
  Jun 18 07:00:00.971: INFO: Deleting pod "simpletest-rc-to-be-deleted-gpkjk" in namespace "gc-4715"
  Jun 18 07:00:01.001: INFO: Deleting pod "simpletest-rc-to-be-deleted-h6jxp" in namespace "gc-4715"
  Jun 18 07:00:01.035: INFO: Deleting pod "simpletest-rc-to-be-deleted-jbs7p" in namespace "gc-4715"
  Jun 18 07:00:01.101: INFO: Deleting pod "simpletest-rc-to-be-deleted-jklcr" in namespace "gc-4715"
  Jun 18 07:00:01.132: INFO: Deleting pod "simpletest-rc-to-be-deleted-jld7f" in namespace "gc-4715"
  Jun 18 07:00:01.189: INFO: Deleting pod "simpletest-rc-to-be-deleted-jn4lp" in namespace "gc-4715"
  Jun 18 07:00:01.225: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4715" for this suite. @ 06/18/24 07:00:01.246
• [17.984 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 06/18/24 07:00:01.272
  Jun 18 07:00:01.272: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename configmap @ 06/18/24 07:00:01.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:00:01.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:00:01.307
  STEP: Creating configMap with name configmap-test-volume-map-afaa2c65-68db-4ee9-9fcc-0f00dc81b409 @ 06/18/24 07:00:01.31
  STEP: Creating a pod to test consume configMaps @ 06/18/24 07:00:01.327
  E0618 07:00:01.812568      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:02.813530      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:03.814555      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:04.814796      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 07:00:05.392
  Jun 18 07:00:05.395: INFO: Trying to get logs from node ck-128-worker-2 pod pod-configmaps-91321d72-644d-4ac8-b7a1-142c31c81c37 container agnhost-container: <nil>
  STEP: delete the pod @ 06/18/24 07:00:05.402
  Jun 18 07:00:05.579: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7931" for this suite. @ 06/18/24 07:00:05.584
• [4.318 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:161
  STEP: Creating a kubernetes client @ 06/18/24 07:00:05.593
  Jun 18 07:00:05.593: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename resourcequota @ 06/18/24 07:00:05.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:00:05.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:00:05.611
  STEP: Discovering how many secrets are in namespace by default @ 06/18/24 07:00:05.614
  E0618 07:00:05.814828      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:06.814849      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:07.815431      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:08.816843      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:09.816804      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 06/18/24 07:00:10.618
  E0618 07:00:10.817659      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:11.818276      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:12.818677      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:13.819551      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:14.819675      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/18/24 07:00:15.623
  STEP: Ensuring resource quota status is calculated @ 06/18/24 07:00:15.63
  E0618 07:00:15.820605      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:16.821099      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 06/18/24 07:00:17.634
  STEP: Ensuring resource quota status captures secret creation @ 06/18/24 07:00:17.647
  E0618 07:00:17.821800      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:18.822357      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 06/18/24 07:00:19.652
  STEP: Ensuring resource quota status released usage @ 06/18/24 07:00:19.657
  E0618 07:00:19.822565      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:20.823674      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:00:21.661: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-863" for this suite. @ 06/18/24 07:00:21.668
• [16.081 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:68
  STEP: Creating a kubernetes client @ 06/18/24 07:00:21.677
  Jun 18 07:00:21.678: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename endpointslice @ 06/18/24 07:00:21.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:00:21.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:00:21.701
  Jun 18 07:00:21.714: INFO: Endpoints addresses: [192.168.190.151] , ports: [6443]
  Jun 18 07:00:21.714: INFO: EndpointSlices addresses: [192.168.190.151] , ports: [6443]
  Jun 18 07:00:21.715: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2416" for this suite. @ 06/18/24 07:00:21.72
• [0.056 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 06/18/24 07:00:21.735
  Jun 18 07:00:21.736: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename pods @ 06/18/24 07:00:21.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:00:21.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:00:21.759
  STEP: Create a pod @ 06/18/24 07:00:21.763
  E0618 07:00:21.823849      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:22.824447      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 06/18/24 07:00:23.777
  Jun 18 07:00:23.787: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Jun 18 07:00:23.787: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-593" for this suite. @ 06/18/24 07:00:23.797
• [2.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:354
  STEP: Creating a kubernetes client @ 06/18/24 07:00:23.815
  Jun 18 07:00:23.815: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename kubectl @ 06/18/24 07:00:23.817
  E0618 07:00:23.825588      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:00:23.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:00:23.837
  STEP: creating a replication controller @ 06/18/24 07:00:23.84
  Jun 18 07:00:23.840: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-9894 create -f -'
  Jun 18 07:00:24.173: INFO: stderr: ""
  Jun 18 07:00:24.173: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/18/24 07:00:24.173
  Jun 18 07:00:24.173: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-9894 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 18 07:00:24.255: INFO: stderr: ""
  Jun 18 07:00:24.255: INFO: stdout: "update-demo-nautilus-lpps7 update-demo-nautilus-w6w8z "
  Jun 18 07:00:24.255: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-9894 get pods update-demo-nautilus-lpps7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 18 07:00:24.337: INFO: stderr: ""
  Jun 18 07:00:24.337: INFO: stdout: ""
  Jun 18 07:00:24.337: INFO: update-demo-nautilus-lpps7 is created but not running
  E0618 07:00:24.825928      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:25.826937      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:26.827246      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:27.827576      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:28.828036      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:00:29.338: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-9894 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 18 07:00:29.446: INFO: stderr: ""
  Jun 18 07:00:29.446: INFO: stdout: "update-demo-nautilus-lpps7 update-demo-nautilus-w6w8z "
  Jun 18 07:00:29.446: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-9894 get pods update-demo-nautilus-lpps7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 18 07:00:29.549: INFO: stderr: ""
  Jun 18 07:00:29.549: INFO: stdout: "true"
  Jun 18 07:00:29.549: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-9894 get pods update-demo-nautilus-lpps7 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 18 07:00:29.661: INFO: stderr: ""
  Jun 18 07:00:29.661: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 18 07:00:29.661: INFO: validating pod update-demo-nautilus-lpps7
  Jun 18 07:00:29.668: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 18 07:00:29.668: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 18 07:00:29.668: INFO: update-demo-nautilus-lpps7 is verified up and running
  Jun 18 07:00:29.668: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-9894 get pods update-demo-nautilus-w6w8z -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 18 07:00:29.737: INFO: stderr: ""
  Jun 18 07:00:29.737: INFO: stdout: "true"
  Jun 18 07:00:29.738: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-9894 get pods update-demo-nautilus-w6w8z -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 18 07:00:29.811: INFO: stderr: ""
  Jun 18 07:00:29.811: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 18 07:00:29.811: INFO: validating pod update-demo-nautilus-w6w8z
  Jun 18 07:00:29.820: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 18 07:00:29.820: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 18 07:00:29.820: INFO: update-demo-nautilus-w6w8z is verified up and running
  STEP: scaling down the replication controller @ 06/18/24 07:00:29.82
  Jun 18 07:00:29.825: INFO: scanned /root for discovery docs: <nil>
  Jun 18 07:00:29.825: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-9894 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0618 07:00:29.828827      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:30.829337      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:00:30.935: INFO: stderr: ""
  Jun 18 07:00:30.935: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/18/24 07:00:30.935
  Jun 18 07:00:30.935: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-9894 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 18 07:00:31.017: INFO: stderr: ""
  Jun 18 07:00:31.017: INFO: stdout: "update-demo-nautilus-lpps7 "
  Jun 18 07:00:31.017: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-9894 get pods update-demo-nautilus-lpps7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 18 07:00:31.096: INFO: stderr: ""
  Jun 18 07:00:31.096: INFO: stdout: "true"
  Jun 18 07:00:31.096: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-9894 get pods update-demo-nautilus-lpps7 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 18 07:00:31.190: INFO: stderr: ""
  Jun 18 07:00:31.190: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 18 07:00:31.190: INFO: validating pod update-demo-nautilus-lpps7
  Jun 18 07:00:31.194: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 18 07:00:31.194: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 18 07:00:31.194: INFO: update-demo-nautilus-lpps7 is verified up and running
  STEP: scaling up the replication controller @ 06/18/24 07:00:31.194
  Jun 18 07:00:31.196: INFO: scanned /root for discovery docs: <nil>
  Jun 18 07:00:31.196: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-9894 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0618 07:00:31.830406      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:00:32.290: INFO: stderr: ""
  Jun 18 07:00:32.290: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/18/24 07:00:32.29
  Jun 18 07:00:32.290: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-9894 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 18 07:00:32.378: INFO: stderr: ""
  Jun 18 07:00:32.378: INFO: stdout: "update-demo-nautilus-96dbk update-demo-nautilus-lpps7 "
  Jun 18 07:00:32.378: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-9894 get pods update-demo-nautilus-96dbk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 18 07:00:32.474: INFO: stderr: ""
  Jun 18 07:00:32.474: INFO: stdout: ""
  Jun 18 07:00:32.474: INFO: update-demo-nautilus-96dbk is created but not running
  E0618 07:00:32.830802      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:33.831311      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:34.831572      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:35.832297      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:36.832581      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:00:37.474: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-9894 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 18 07:00:37.592: INFO: stderr: ""
  Jun 18 07:00:37.592: INFO: stdout: "update-demo-nautilus-96dbk update-demo-nautilus-lpps7 "
  Jun 18 07:00:37.592: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-9894 get pods update-demo-nautilus-96dbk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 18 07:00:37.681: INFO: stderr: ""
  Jun 18 07:00:37.681: INFO: stdout: "true"
  Jun 18 07:00:37.681: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-9894 get pods update-demo-nautilus-96dbk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 18 07:00:37.758: INFO: stderr: ""
  Jun 18 07:00:37.758: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 18 07:00:37.758: INFO: validating pod update-demo-nautilus-96dbk
  Jun 18 07:00:37.765: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 18 07:00:37.765: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 18 07:00:37.765: INFO: update-demo-nautilus-96dbk is verified up and running
  Jun 18 07:00:37.765: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-9894 get pods update-demo-nautilus-lpps7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0618 07:00:37.833046      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:00:37.851: INFO: stderr: ""
  Jun 18 07:00:37.851: INFO: stdout: "true"
  Jun 18 07:00:37.851: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-9894 get pods update-demo-nautilus-lpps7 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 18 07:00:37.930: INFO: stderr: ""
  Jun 18 07:00:37.930: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 18 07:00:37.930: INFO: validating pod update-demo-nautilus-lpps7
  Jun 18 07:00:37.934: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 18 07:00:37.934: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 18 07:00:37.934: INFO: update-demo-nautilus-lpps7 is verified up and running
  STEP: using delete to clean up resources @ 06/18/24 07:00:37.934
  Jun 18 07:00:37.934: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-9894 delete --grace-period=0 --force -f -'
  Jun 18 07:00:38.012: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 18 07:00:38.013: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Jun 18 07:00:38.013: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-9894 get rc,svc -l name=update-demo --no-headers'
  Jun 18 07:00:38.098: INFO: stderr: "No resources found in kubectl-9894 namespace.\n"
  Jun 18 07:00:38.099: INFO: stdout: ""
  Jun 18 07:00:38.099: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-9894 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jun 18 07:00:38.181: INFO: stderr: ""
  Jun 18 07:00:38.181: INFO: stdout: ""
  Jun 18 07:00:38.181: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9894" for this suite. @ 06/18/24 07:00:38.187
• [14.379 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 06/18/24 07:00:38.194
  Jun 18 07:00:38.194: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename webhook @ 06/18/24 07:00:38.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:00:38.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:00:38.215
  STEP: Setting up server cert @ 06/18/24 07:00:38.235
  E0618 07:00:38.833410      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 07:00:38.943
  STEP: Deploying the webhook pod @ 06/18/24 07:00:38.952
  STEP: Wait for the deployment to be ready @ 06/18/24 07:00:38.964
  Jun 18 07:00:38.969: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0618 07:00:39.834216      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:40.835281      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/18/24 07:00:40.983
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 07:00:40.995
  E0618 07:00:41.835995      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:00:41.996: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 06/18/24 07:00:42.004
  STEP: Creating a custom resource definition that should be denied by the webhook @ 06/18/24 07:00:42.021
  Jun 18 07:00:42.021: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 07:00:42.037: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3702" for this suite. @ 06/18/24 07:00:42.085
  STEP: Destroying namespace "webhook-markers-4666" for this suite. @ 06/18/24 07:00:42.091
• [3.903 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:379
  STEP: Creating a kubernetes client @ 06/18/24 07:00:42.103
  Jun 18 07:00:42.103: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename gc @ 06/18/24 07:00:42.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:00:42.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:00:42.124
  STEP: create the rc @ 06/18/24 07:00:42.133
  W0618 07:00:42.139838      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0618 07:00:42.836466      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:43.837429      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:44.837669      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:45.840427      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:46.841437      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:47.841673      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 06/18/24 07:00:48.143
  STEP: wait for the rc to be deleted @ 06/18/24 07:00:48.146
  E0618 07:00:48.842717      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:49.843103      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:50.844022      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:51.844607      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:52.845500      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 06/18/24 07:00:53.155
  E0618 07:00:53.845684      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:54.846401      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:55.846447      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:56.847591      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:57.847940      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:58.848060      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:00:59.848431      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:00.848597      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:01.848742      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:02.849759      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:03.850160      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:04.850616      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:05.850765      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:06.851963      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:07.852321      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:08.852593      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:09.853025      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:10.853656      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:11.853904      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:12.854294      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:13.854421      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:14.855465      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:15.855482      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:16.855599      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:17.855880      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:18.856248      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:19.856678      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:20.857016      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:21.857502      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:22.857856      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/18/24 07:01:23.175
  Jun 18 07:01:23.308: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 18 07:01:23.309: INFO: Deleting pod "simpletest.rc-2bz2k" in namespace "gc-9363"
  Jun 18 07:01:23.328: INFO: Deleting pod "simpletest.rc-2f6ll" in namespace "gc-9363"
  Jun 18 07:01:23.353: INFO: Deleting pod "simpletest.rc-2jcgl" in namespace "gc-9363"
  Jun 18 07:01:23.371: INFO: Deleting pod "simpletest.rc-2w7nk" in namespace "gc-9363"
  Jun 18 07:01:23.385: INFO: Deleting pod "simpletest.rc-2z6c9" in namespace "gc-9363"
  Jun 18 07:01:23.404: INFO: Deleting pod "simpletest.rc-42fj7" in namespace "gc-9363"
  Jun 18 07:01:23.418: INFO: Deleting pod "simpletest.rc-598nx" in namespace "gc-9363"
  Jun 18 07:01:23.437: INFO: Deleting pod "simpletest.rc-5qzm7" in namespace "gc-9363"
  Jun 18 07:01:23.457: INFO: Deleting pod "simpletest.rc-692zz" in namespace "gc-9363"
  Jun 18 07:01:23.473: INFO: Deleting pod "simpletest.rc-6dbgz" in namespace "gc-9363"
  Jun 18 07:01:23.483: INFO: Deleting pod "simpletest.rc-6hfr8" in namespace "gc-9363"
  Jun 18 07:01:23.497: INFO: Deleting pod "simpletest.rc-6q2vl" in namespace "gc-9363"
  Jun 18 07:01:23.510: INFO: Deleting pod "simpletest.rc-6wbs9" in namespace "gc-9363"
  Jun 18 07:01:23.533: INFO: Deleting pod "simpletest.rc-6xrqp" in namespace "gc-9363"
  Jun 18 07:01:23.550: INFO: Deleting pod "simpletest.rc-6xt5g" in namespace "gc-9363"
  Jun 18 07:01:23.567: INFO: Deleting pod "simpletest.rc-6zmq4" in namespace "gc-9363"
  Jun 18 07:01:23.579: INFO: Deleting pod "simpletest.rc-72xmn" in namespace "gc-9363"
  Jun 18 07:01:23.594: INFO: Deleting pod "simpletest.rc-78f88" in namespace "gc-9363"
  Jun 18 07:01:23.607: INFO: Deleting pod "simpletest.rc-7k2lw" in namespace "gc-9363"
  Jun 18 07:01:23.633: INFO: Deleting pod "simpletest.rc-7z4pz" in namespace "gc-9363"
  Jun 18 07:01:23.653: INFO: Deleting pod "simpletest.rc-82kjk" in namespace "gc-9363"
  Jun 18 07:01:23.683: INFO: Deleting pod "simpletest.rc-84vwv" in namespace "gc-9363"
  Jun 18 07:01:23.720: INFO: Deleting pod "simpletest.rc-8jmrw" in namespace "gc-9363"
  Jun 18 07:01:23.741: INFO: Deleting pod "simpletest.rc-8ml48" in namespace "gc-9363"
  Jun 18 07:01:23.791: INFO: Deleting pod "simpletest.rc-8t4v8" in namespace "gc-9363"
  Jun 18 07:01:23.849: INFO: Deleting pod "simpletest.rc-98db8" in namespace "gc-9363"
  E0618 07:01:23.858453      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:01:23.907: INFO: Deleting pod "simpletest.rc-98wkc" in namespace "gc-9363"
  Jun 18 07:01:23.938: INFO: Deleting pod "simpletest.rc-9h45t" in namespace "gc-9363"
  Jun 18 07:01:23.977: INFO: Deleting pod "simpletest.rc-9kxtb" in namespace "gc-9363"
  Jun 18 07:01:24.034: INFO: Deleting pod "simpletest.rc-9wq4j" in namespace "gc-9363"
  Jun 18 07:01:24.062: INFO: Deleting pod "simpletest.rc-b6vbv" in namespace "gc-9363"
  Jun 18 07:01:24.104: INFO: Deleting pod "simpletest.rc-b87nw" in namespace "gc-9363"
  Jun 18 07:01:24.128: INFO: Deleting pod "simpletest.rc-bfgq5" in namespace "gc-9363"
  Jun 18 07:01:24.151: INFO: Deleting pod "simpletest.rc-bpfkw" in namespace "gc-9363"
  Jun 18 07:01:24.169: INFO: Deleting pod "simpletest.rc-bzrgh" in namespace "gc-9363"
  Jun 18 07:01:24.185: INFO: Deleting pod "simpletest.rc-cjzq7" in namespace "gc-9363"
  Jun 18 07:01:24.202: INFO: Deleting pod "simpletest.rc-cw7wt" in namespace "gc-9363"
  Jun 18 07:01:24.234: INFO: Deleting pod "simpletest.rc-d6w2d" in namespace "gc-9363"
  Jun 18 07:01:24.265: INFO: Deleting pod "simpletest.rc-dpdmj" in namespace "gc-9363"
  Jun 18 07:01:24.294: INFO: Deleting pod "simpletest.rc-dpjfc" in namespace "gc-9363"
  Jun 18 07:01:24.340: INFO: Deleting pod "simpletest.rc-ds5h2" in namespace "gc-9363"
  Jun 18 07:01:24.370: INFO: Deleting pod "simpletest.rc-fc7qg" in namespace "gc-9363"
  Jun 18 07:01:24.394: INFO: Deleting pod "simpletest.rc-fjwd9" in namespace "gc-9363"
  Jun 18 07:01:24.425: INFO: Deleting pod "simpletest.rc-flnr2" in namespace "gc-9363"
  Jun 18 07:01:24.483: INFO: Deleting pod "simpletest.rc-fnhs8" in namespace "gc-9363"
  Jun 18 07:01:24.544: INFO: Deleting pod "simpletest.rc-fp7xq" in namespace "gc-9363"
  Jun 18 07:01:24.573: INFO: Deleting pod "simpletest.rc-fppvz" in namespace "gc-9363"
  Jun 18 07:01:24.607: INFO: Deleting pod "simpletest.rc-fzxj6" in namespace "gc-9363"
  Jun 18 07:01:24.647: INFO: Deleting pod "simpletest.rc-g2tkf" in namespace "gc-9363"
  Jun 18 07:01:24.693: INFO: Deleting pod "simpletest.rc-g2xc6" in namespace "gc-9363"
  Jun 18 07:01:24.748: INFO: Deleting pod "simpletest.rc-gcwqq" in namespace "gc-9363"
  Jun 18 07:01:24.818: INFO: Deleting pod "simpletest.rc-gp826" in namespace "gc-9363"
  Jun 18 07:01:24.854: INFO: Deleting pod "simpletest.rc-gtv8z" in namespace "gc-9363"
  E0618 07:01:24.859372      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:01:24.896: INFO: Deleting pod "simpletest.rc-gz5pb" in namespace "gc-9363"
  Jun 18 07:01:24.915: INFO: Deleting pod "simpletest.rc-gzgxt" in namespace "gc-9363"
  Jun 18 07:01:24.950: INFO: Deleting pod "simpletest.rc-h9fhf" in namespace "gc-9363"
  Jun 18 07:01:24.989: INFO: Deleting pod "simpletest.rc-hg9pg" in namespace "gc-9363"
  Jun 18 07:01:25.013: INFO: Deleting pod "simpletest.rc-hj29f" in namespace "gc-9363"
  Jun 18 07:01:25.039: INFO: Deleting pod "simpletest.rc-j88gw" in namespace "gc-9363"
  Jun 18 07:01:25.067: INFO: Deleting pod "simpletest.rc-k849l" in namespace "gc-9363"
  Jun 18 07:01:25.084: INFO: Deleting pod "simpletest.rc-kfzlk" in namespace "gc-9363"
  Jun 18 07:01:25.150: INFO: Deleting pod "simpletest.rc-kh4hr" in namespace "gc-9363"
  Jun 18 07:01:25.174: INFO: Deleting pod "simpletest.rc-lk6s5" in namespace "gc-9363"
  Jun 18 07:01:25.189: INFO: Deleting pod "simpletest.rc-llpsd" in namespace "gc-9363"
  Jun 18 07:01:25.228: INFO: Deleting pod "simpletest.rc-m7fpl" in namespace "gc-9363"
  Jun 18 07:01:25.264: INFO: Deleting pod "simpletest.rc-mslbr" in namespace "gc-9363"
  Jun 18 07:01:25.282: INFO: Deleting pod "simpletest.rc-mwp2z" in namespace "gc-9363"
  Jun 18 07:01:25.311: INFO: Deleting pod "simpletest.rc-n2mp8" in namespace "gc-9363"
  Jun 18 07:01:25.328: INFO: Deleting pod "simpletest.rc-n2sd5" in namespace "gc-9363"
  Jun 18 07:01:25.349: INFO: Deleting pod "simpletest.rc-n5jmq" in namespace "gc-9363"
  Jun 18 07:01:25.369: INFO: Deleting pod "simpletest.rc-n628w" in namespace "gc-9363"
  Jun 18 07:01:25.407: INFO: Deleting pod "simpletest.rc-n6xgt" in namespace "gc-9363"
  Jun 18 07:01:25.448: INFO: Deleting pod "simpletest.rc-ndbb7" in namespace "gc-9363"
  Jun 18 07:01:25.469: INFO: Deleting pod "simpletest.rc-nl9q9" in namespace "gc-9363"
  Jun 18 07:01:25.495: INFO: Deleting pod "simpletest.rc-p9lnf" in namespace "gc-9363"
  Jun 18 07:01:25.520: INFO: Deleting pod "simpletest.rc-pc8tl" in namespace "gc-9363"
  Jun 18 07:01:25.545: INFO: Deleting pod "simpletest.rc-pmt2q" in namespace "gc-9363"
  Jun 18 07:01:25.572: INFO: Deleting pod "simpletest.rc-pqnk9" in namespace "gc-9363"
  Jun 18 07:01:25.587: INFO: Deleting pod "simpletest.rc-pv278" in namespace "gc-9363"
  Jun 18 07:01:25.609: INFO: Deleting pod "simpletest.rc-qcw9p" in namespace "gc-9363"
  Jun 18 07:01:25.634: INFO: Deleting pod "simpletest.rc-qkxrc" in namespace "gc-9363"
  Jun 18 07:01:25.673: INFO: Deleting pod "simpletest.rc-qnmhv" in namespace "gc-9363"
  Jun 18 07:01:25.703: INFO: Deleting pod "simpletest.rc-qpktf" in namespace "gc-9363"
  Jun 18 07:01:25.723: INFO: Deleting pod "simpletest.rc-rhv25" in namespace "gc-9363"
  Jun 18 07:01:25.753: INFO: Deleting pod "simpletest.rc-rqqxv" in namespace "gc-9363"
  Jun 18 07:01:25.781: INFO: Deleting pod "simpletest.rc-rr428" in namespace "gc-9363"
  Jun 18 07:01:25.810: INFO: Deleting pod "simpletest.rc-t59h6" in namespace "gc-9363"
  Jun 18 07:01:25.836: INFO: Deleting pod "simpletest.rc-t9gnw" in namespace "gc-9363"
  E0618 07:01:25.859791      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:01:25.863: INFO: Deleting pod "simpletest.rc-tcl5q" in namespace "gc-9363"
  Jun 18 07:01:25.881: INFO: Deleting pod "simpletest.rc-tmvzm" in namespace "gc-9363"
  Jun 18 07:01:25.897: INFO: Deleting pod "simpletest.rc-vhlcz" in namespace "gc-9363"
  Jun 18 07:01:25.919: INFO: Deleting pod "simpletest.rc-vjnwc" in namespace "gc-9363"
  Jun 18 07:01:25.961: INFO: Deleting pod "simpletest.rc-vqspt" in namespace "gc-9363"
  Jun 18 07:01:26.031: INFO: Deleting pod "simpletest.rc-vtp2r" in namespace "gc-9363"
  Jun 18 07:01:26.079: INFO: Deleting pod "simpletest.rc-wd8sb" in namespace "gc-9363"
  Jun 18 07:01:26.137: INFO: Deleting pod "simpletest.rc-xkf49" in namespace "gc-9363"
  Jun 18 07:01:26.166: INFO: Deleting pod "simpletest.rc-zh9gg" in namespace "gc-9363"
  Jun 18 07:01:26.199: INFO: Deleting pod "simpletest.rc-zj6fw" in namespace "gc-9363"
  Jun 18 07:01:26.229: INFO: Deleting pod "simpletest.rc-zlgfl" in namespace "gc-9363"
  Jun 18 07:01:26.264: INFO: Deleting pod "simpletest.rc-zvh92" in namespace "gc-9363"
  Jun 18 07:01:26.301: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9363" for this suite. @ 06/18/24 07:01:26.309
• [44.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:85
  STEP: Creating a kubernetes client @ 06/18/24 07:01:26.327
  Jun 18 07:01:26.327: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename replication-controller @ 06/18/24 07:01:26.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:01:26.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:01:26.377
  Jun 18 07:01:26.383: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 06/18/24 07:01:26.408
  STEP: Checking rc "condition-test" has the desired failure condition set @ 06/18/24 07:01:26.429
  E0618 07:01:26.860604      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 06/18/24 07:01:27.44
  Jun 18 07:01:27.463: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 06/18/24 07:01:27.463
  Jun 18 07:01:27.483: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-692" for this suite. @ 06/18/24 07:01:27.49
• [1.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:252
  STEP: Creating a kubernetes client @ 06/18/24 07:01:27.5
  Jun 18 07:01:27.500: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename namespaces @ 06/18/24 07:01:27.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:01:27.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:01:27.52
  STEP: Creating a test namespace @ 06/18/24 07:01:27.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:01:27.564
  STEP: Creating a service in the namespace @ 06/18/24 07:01:27.569
  STEP: Deleting the namespace @ 06/18/24 07:01:27.588
  STEP: Waiting for the namespace to be removed. @ 06/18/24 07:01:27.606
  E0618 07:01:27.861573      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:28.862167      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:29.863343      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:30.863411      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:31.864561      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:32.865674      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 06/18/24 07:01:33.615
  STEP: Verifying there is no service in the namespace @ 06/18/24 07:01:33.628
  Jun 18 07:01:33.630: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8939" for this suite. @ 06/18/24 07:01:33.636
  STEP: Destroying namespace "nsdeletetest-6287" for this suite. @ 06/18/24 07:01:33.641
  Jun 18 07:01:33.643: INFO: Namespace nsdeletetest-6287 was already deleted
  STEP: Destroying namespace "nsdeletetest-4463" for this suite. @ 06/18/24 07:01:33.643
• [6.147 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 06/18/24 07:01:33.648
  Jun 18 07:01:33.648: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename watch @ 06/18/24 07:01:33.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:01:33.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:01:33.665
  STEP: creating a watch on configmaps with label A @ 06/18/24 07:01:33.668
  STEP: creating a watch on configmaps with label B @ 06/18/24 07:01:33.67
  STEP: creating a watch on configmaps with label A or B @ 06/18/24 07:01:33.671
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 06/18/24 07:01:33.673
  Jun 18 07:01:33.676: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2899  e7387565-447d-4a11-a9c2-b0c4208c1a30 36495 0 2024-06-18 07:01:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-18 07:01:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 07:01:33.677: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2899  e7387565-447d-4a11-a9c2-b0c4208c1a30 36495 0 2024-06-18 07:01:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-18 07:01:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 06/18/24 07:01:33.677
  Jun 18 07:01:33.683: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2899  e7387565-447d-4a11-a9c2-b0c4208c1a30 36496 0 2024-06-18 07:01:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-18 07:01:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 07:01:33.683: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2899  e7387565-447d-4a11-a9c2-b0c4208c1a30 36496 0 2024-06-18 07:01:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-18 07:01:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 06/18/24 07:01:33.684
  Jun 18 07:01:33.688: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2899  e7387565-447d-4a11-a9c2-b0c4208c1a30 36497 0 2024-06-18 07:01:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-18 07:01:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 07:01:33.688: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2899  e7387565-447d-4a11-a9c2-b0c4208c1a30 36497 0 2024-06-18 07:01:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-18 07:01:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 06/18/24 07:01:33.689
  Jun 18 07:01:33.692: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2899  e7387565-447d-4a11-a9c2-b0c4208c1a30 36498 0 2024-06-18 07:01:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-18 07:01:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 07:01:33.692: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2899  e7387565-447d-4a11-a9c2-b0c4208c1a30 36498 0 2024-06-18 07:01:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-18 07:01:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 06/18/24 07:01:33.692
  Jun 18 07:01:33.696: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2899  df034377-0acc-439a-bb9a-c67411d3be6a 36499 0 2024-06-18 07:01:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-18 07:01:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 07:01:33.696: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2899  df034377-0acc-439a-bb9a-c67411d3be6a 36499 0 2024-06-18 07:01:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-18 07:01:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0618 07:01:33.865405      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:34.865714      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:35.866614      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:36.867021      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:37.867353      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:38.868154      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:39.868761      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:40.869706      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:41.869573      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:42.870436      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 06/18/24 07:01:43.696
  Jun 18 07:01:43.704: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2899  df034377-0acc-439a-bb9a-c67411d3be6a 36523 0 2024-06-18 07:01:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-18 07:01:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 07:01:43.704: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2899  df034377-0acc-439a-bb9a-c67411d3be6a 36523 0 2024-06-18 07:01:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-18 07:01:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0618 07:01:43.870606      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:44.870807      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:45.871804      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:46.872041      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:47.872727      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:48.873754      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:49.874028      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:50.874783      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:51.875153      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:52.875452      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:01:53.704: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2899" for this suite. @ 06/18/24 07:01:53.71
• [20.066 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 06/18/24 07:01:53.716
  Jun 18 07:01:53.716: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename deployment @ 06/18/24 07:01:53.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:01:53.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:01:53.738
  Jun 18 07:01:53.741: INFO: Creating deployment "test-recreate-deployment"
  Jun 18 07:01:53.750: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Jun 18 07:01:53.758: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  E0618 07:01:53.876131      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:54.876516      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:01:55.764: INFO: Waiting deployment "test-recreate-deployment" to complete
  Jun 18 07:01:55.768: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Jun 18 07:01:55.783: INFO: Updating deployment test-recreate-deployment
  Jun 18 07:01:55.783: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Jun 18 07:01:55.860: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6642",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aa511857-37a1-4fd3-8320-b02f4f1e05ba",
      ResourceVersion: (string) (len=5) "36590",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290913,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290913,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 18 07:01:55.869: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6642",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4fa8a18a-3193-466a-96f5-01cea0344c23",
      ResourceVersion: (string) (len=5) "36586",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290915,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "aa511857-37a1-4fd3-8320-b02f4f1e05ba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 61 35 31 31 38  35 37 2d 33 37 61 31 2d  |\"aa511857-37a1-|
              00000120  34 66 64 33 2d 38 33 32  30 2d 62 30 32 66 34 66  |4fd3-8320-b02f4f|
              00000130  31 65 30 35 62 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1e05ba\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 18 07:01:55.870: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Jun 18 07:01:55.870: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-5cf87b5b86",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6642",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "94211ff1-c79f-4e7a-b114-4c3aeb9324dc",
      ResourceVersion: (string) (len=5) "36578",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290913,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "aa511857-37a1-4fd3-8320-b02f4f1e05ba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 61 35 31 31 38  35 37 2d 33 37 61 31 2d  |\"aa511857-37a1-|
              00000120  34 66 64 33 2d 38 33 32  30 2d 62 30 32 66 34 66  |4fd3-8320-b02f4f|
              00000130  31 65 30 35 62 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1e05ba\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 18 07:01:55.875: INFO: Pod "test-recreate-deployment-76fb77d45-ncggj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-ncggj",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-6642",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f5369730-82bb-485c-9a7b-d5207b9f7ea2",
      ResourceVersion: (string) (len=5) "36589",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290915,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "4fa8a18a-3193-466a-96f5-01cea0344c23",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 66  61 38 61 31 38 61 2d 33  |d\":\"4fa8a18a-3|
              00000090  31 39 33 2d 34 36 36 61  2d 39 36 66 35 2d 30 31  |193-466a-96f5-01|
              000000a0  63 65 61 30 33 34 34 63  32 33 5c 22 7d 22 3a 7b  |cea0344c23\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sq765",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sq765",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854290915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854290915,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 07:01:55.878: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0618 07:01:55.876974      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "deployment-6642" for this suite. @ 06/18/24 07:01:55.892
• [2.184 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:85
  STEP: Creating a kubernetes client @ 06/18/24 07:01:55.9
  Jun 18 07:01:55.900: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/18/24 07:01:55.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:01:55.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:01:55.921
  Jun 18 07:01:55.925: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  E0618 07:01:56.877266      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:57.877364      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:58.877656      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:01:59.878501      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:00.878611      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:01.879532      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:02:02.173: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5869" for this suite. @ 06/18/24 07:02:02.178
• [6.284 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 06/18/24 07:02:02.185
  Jun 18 07:02:02.185: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename proxy @ 06/18/24 07:02:02.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:02:02.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:02:02.203
  STEP: starting an echo server on multiple ports @ 06/18/24 07:02:02.221
  STEP: creating replication controller proxy-service-zg8cq in namespace proxy-2806 @ 06/18/24 07:02:02.222
  I0618 07:02:02.229652      18 runners.go:197] Created replication controller with name: proxy-service-zg8cq, namespace: proxy-2806, replica count: 1
  E0618 07:02:02.880025      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0618 07:02:03.281350      18 runners.go:197] proxy-service-zg8cq Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0618 07:02:03.881241      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0618 07:02:04.281894      18 runners.go:197] proxy-service-zg8cq Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0618 07:02:04.881370      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0618 07:02:05.282487      18 runners.go:197] proxy-service-zg8cq Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 18 07:02:05.286: INFO: setup took 3.07947099s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 06/18/24 07:02:05.286
  Jun 18 07:02:05.296: INFO: (0) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/rewriteme">test</a> (200; 9.102842ms)
  Jun 18 07:02:05.296: INFO: (0) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 9.237912ms)
  Jun 18 07:02:05.296: INFO: (0) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 9.521729ms)
  Jun 18 07:02:05.296: INFO: (0) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname2/proxy/: bar (200; 9.409998ms)
  Jun 18 07:02:05.297: INFO: (0) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname1/proxy/: foo (200; 11.00343ms)
  Jun 18 07:02:05.297: INFO: (0) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname2/proxy/: bar (200; 11.109324ms)
  Jun 18 07:02:05.298: INFO: (0) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">... (200; 10.536656ms)
  Jun 18 07:02:05.298: INFO: (0) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname1/proxy/: foo (200; 11.010244ms)
  Jun 18 07:02:05.298: INFO: (0) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 10.612077ms)
  Jun 18 07:02:05.298: INFO: (0) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">test<... (200; 10.912885ms)
  Jun 18 07:02:05.298: INFO: (0) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 10.79215ms)
  Jun 18 07:02:05.305: INFO: (0) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:462/proxy/: tls qux (200; 19.249147ms)
  Jun 18 07:02:05.305: INFO: (0) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname2/proxy/: tls qux (200; 18.573558ms)
  Jun 18 07:02:05.307: INFO: (0) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/tlsrewritem... (200; 20.384403ms)
  Jun 18 07:02:05.307: INFO: (0) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:460/proxy/: tls baz (200; 19.529135ms)
  Jun 18 07:02:05.307: INFO: (0) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname1/proxy/: tls baz (200; 20.083762ms)
  Jun 18 07:02:05.314: INFO: (1) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 6.302062ms)
  Jun 18 07:02:05.314: INFO: (1) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:462/proxy/: tls qux (200; 6.797915ms)
  Jun 18 07:02:05.315: INFO: (1) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">... (200; 8.24662ms)
  Jun 18 07:02:05.315: INFO: (1) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:460/proxy/: tls baz (200; 8.074146ms)
  Jun 18 07:02:05.317: INFO: (1) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/rewriteme">test</a> (200; 9.57804ms)
  Jun 18 07:02:05.317: INFO: (1) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 9.756024ms)
  Jun 18 07:02:05.317: INFO: (1) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">test<... (200; 10.059467ms)
  Jun 18 07:02:05.317: INFO: (1) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/tlsrewritem... (200; 10.404505ms)
  Jun 18 07:02:05.317: INFO: (1) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 10.101012ms)
  Jun 18 07:02:05.318: INFO: (1) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname1/proxy/: foo (200; 10.834516ms)
  Jun 18 07:02:05.318: INFO: (1) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname1/proxy/: foo (200; 10.954472ms)
  Jun 18 07:02:05.318: INFO: (1) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname2/proxy/: bar (200; 11.394084ms)
  Jun 18 07:02:05.319: INFO: (1) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname2/proxy/: bar (200; 11.823317ms)
  Jun 18 07:02:05.319: INFO: (1) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 11.249329ms)
  Jun 18 07:02:05.319: INFO: (1) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname1/proxy/: tls baz (200; 11.613084ms)
  Jun 18 07:02:05.319: INFO: (1) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname2/proxy/: tls qux (200; 12.231122ms)
  Jun 18 07:02:05.324: INFO: (2) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:462/proxy/: tls qux (200; 4.332073ms)
  Jun 18 07:02:05.324: INFO: (2) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:460/proxy/: tls baz (200; 4.50279ms)
  Jun 18 07:02:05.324: INFO: (2) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 4.584202ms)
  Jun 18 07:02:05.326: INFO: (2) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 6.336717ms)
  Jun 18 07:02:05.327: INFO: (2) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/rewriteme">test</a> (200; 6.733179ms)
  Jun 18 07:02:05.328: INFO: (2) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">test<... (200; 7.62042ms)
  Jun 18 07:02:05.329: INFO: (2) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">... (200; 9.415621ms)
  Jun 18 07:02:05.330: INFO: (2) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 9.317165ms)
  Jun 18 07:02:05.330: INFO: (2) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname1/proxy/: foo (200; 9.425625ms)
  Jun 18 07:02:05.330: INFO: (2) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname2/proxy/: tls qux (200; 9.805782ms)
  Jun 18 07:02:05.330: INFO: (2) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname2/proxy/: bar (200; 9.60691ms)
  Jun 18 07:02:05.330: INFO: (2) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname1/proxy/: tls baz (200; 10.152264ms)
  Jun 18 07:02:05.331: INFO: (2) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname2/proxy/: bar (200; 10.442048ms)
  Jun 18 07:02:05.331: INFO: (2) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 10.447861ms)
  Jun 18 07:02:05.331: INFO: (2) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/tlsrewritem... (200; 10.244718ms)
  Jun 18 07:02:05.331: INFO: (2) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname1/proxy/: foo (200; 10.516795ms)
  Jun 18 07:02:05.338: INFO: (3) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/tlsrewritem... (200; 5.786497ms)
  Jun 18 07:02:05.339: INFO: (3) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/rewriteme">test</a> (200; 7.795099ms)
  Jun 18 07:02:05.339: INFO: (3) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">test<... (200; 7.69964ms)
  Jun 18 07:02:05.339: INFO: (3) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 7.618105ms)
  Jun 18 07:02:05.339: INFO: (3) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:460/proxy/: tls baz (200; 7.953485ms)
  Jun 18 07:02:05.339: INFO: (3) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 7.763235ms)
  Jun 18 07:02:05.341: INFO: (3) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 9.666531ms)
  Jun 18 07:02:05.341: INFO: (3) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:462/proxy/: tls qux (200; 9.00348ms)
  Jun 18 07:02:05.341: INFO: (3) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">... (200; 9.291831ms)
  Jun 18 07:02:05.342: INFO: (3) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname1/proxy/: foo (200; 10.480246ms)
  Jun 18 07:02:05.342: INFO: (3) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname2/proxy/: tls qux (200; 10.377069ms)
  Jun 18 07:02:05.342: INFO: (3) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 10.913068ms)
  Jun 18 07:02:05.342: INFO: (3) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname2/proxy/: bar (200; 10.702696ms)
  Jun 18 07:02:05.342: INFO: (3) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname1/proxy/: tls baz (200; 10.607451ms)
  Jun 18 07:02:05.342: INFO: (3) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname1/proxy/: foo (200; 11.070262ms)
  Jun 18 07:02:05.342: INFO: (3) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname2/proxy/: bar (200; 10.823243ms)
  Jun 18 07:02:05.349: INFO: (4) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 6.295473ms)
  Jun 18 07:02:05.350: INFO: (4) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 7.551133ms)
  Jun 18 07:02:05.350: INFO: (4) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 6.846578ms)
  Jun 18 07:02:05.350: INFO: (4) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:462/proxy/: tls qux (200; 7.012181ms)
  Jun 18 07:02:05.350: INFO: (4) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:460/proxy/: tls baz (200; 7.178645ms)
  Jun 18 07:02:05.350: INFO: (4) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">... (200; 7.559885ms)
  Jun 18 07:02:05.350: INFO: (4) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/tlsrewritem... (200; 7.297601ms)
  Jun 18 07:02:05.350: INFO: (4) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 7.472067ms)
  Jun 18 07:02:05.350: INFO: (4) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/rewriteme">test</a> (200; 7.944525ms)
  Jun 18 07:02:05.352: INFO: (4) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname1/proxy/: foo (200; 9.59247ms)
  Jun 18 07:02:05.353: INFO: (4) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname2/proxy/: bar (200; 9.779585ms)
  Jun 18 07:02:05.353: INFO: (4) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname1/proxy/: tls baz (200; 9.868908ms)
  Jun 18 07:02:05.353: INFO: (4) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname1/proxy/: foo (200; 10.659954ms)
  Jun 18 07:02:05.354: INFO: (4) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname2/proxy/: tls qux (200; 11.577767ms)
  Jun 18 07:02:05.354: INFO: (4) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname2/proxy/: bar (200; 11.079249ms)
  Jun 18 07:02:05.354: INFO: (4) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">test<... (200; 11.374983ms)
  Jun 18 07:02:05.362: INFO: (5) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 7.965631ms)
  Jun 18 07:02:05.362: INFO: (5) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/rewriteme">test</a> (200; 7.996622ms)
  Jun 18 07:02:05.362: INFO: (5) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">test<... (200; 8.059348ms)
  Jun 18 07:02:05.362: INFO: (5) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">... (200; 8.049053ms)
  Jun 18 07:02:05.362: INFO: (5) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 8.249991ms)
  Jun 18 07:02:05.363: INFO: (5) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 8.041794ms)
  Jun 18 07:02:05.363: INFO: (5) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/tlsrewritem... (200; 8.706563ms)
  Jun 18 07:02:05.363: INFO: (5) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:462/proxy/: tls qux (200; 8.767263ms)
  Jun 18 07:02:05.363: INFO: (5) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 8.716253ms)
  Jun 18 07:02:05.364: INFO: (5) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:460/proxy/: tls baz (200; 9.431201ms)
  Jun 18 07:02:05.364: INFO: (5) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname2/proxy/: bar (200; 10.125002ms)
  Jun 18 07:02:05.364: INFO: (5) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname1/proxy/: foo (200; 9.786288ms)
  Jun 18 07:02:05.365: INFO: (5) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname1/proxy/: tls baz (200; 10.408599ms)
  Jun 18 07:02:05.365: INFO: (5) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname2/proxy/: bar (200; 10.695459ms)
  Jun 18 07:02:05.365: INFO: (5) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname1/proxy/: foo (200; 10.68623ms)
  Jun 18 07:02:05.365: INFO: (5) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname2/proxy/: tls qux (200; 10.644803ms)
  Jun 18 07:02:05.372: INFO: (6) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/tlsrewritem... (200; 6.304271ms)
  Jun 18 07:02:05.372: INFO: (6) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">... (200; 6.608168ms)
  Jun 18 07:02:05.372: INFO: (6) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 6.776033ms)
  Jun 18 07:02:05.373: INFO: (6) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:462/proxy/: tls qux (200; 7.247472ms)
  Jun 18 07:02:05.373: INFO: (6) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 7.380223ms)
  Jun 18 07:02:05.373: INFO: (6) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname2/proxy/: bar (200; 7.442482ms)
  Jun 18 07:02:05.373: INFO: (6) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 7.553776ms)
  Jun 18 07:02:05.373: INFO: (6) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">test<... (200; 7.537935ms)
  Jun 18 07:02:05.373: INFO: (6) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/rewriteme">test</a> (200; 7.668267ms)
  Jun 18 07:02:05.373: INFO: (6) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:460/proxy/: tls baz (200; 7.79567ms)
  Jun 18 07:02:05.373: INFO: (6) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 7.79843ms)
  Jun 18 07:02:05.375: INFO: (6) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname2/proxy/: bar (200; 9.55729ms)
  Jun 18 07:02:05.375: INFO: (6) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname1/proxy/: foo (200; 9.775318ms)
  Jun 18 07:02:05.375: INFO: (6) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname1/proxy/: foo (200; 9.867664ms)
  Jun 18 07:02:05.375: INFO: (6) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname2/proxy/: tls qux (200; 10.00887ms)
  Jun 18 07:02:05.376: INFO: (6) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname1/proxy/: tls baz (200; 9.374156ms)
  Jun 18 07:02:05.379: INFO: (7) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/tlsrewritem... (200; 3.755476ms)
  Jun 18 07:02:05.381: INFO: (7) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">test<... (200; 4.793383ms)
  Jun 18 07:02:05.383: INFO: (7) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">... (200; 6.36073ms)
  Jun 18 07:02:05.383: INFO: (7) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 6.587834ms)
  Jun 18 07:02:05.384: INFO: (7) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 7.233253ms)
  Jun 18 07:02:05.384: INFO: (7) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname2/proxy/: tls qux (200; 8.170634ms)
  Jun 18 07:02:05.385: INFO: (7) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:462/proxy/: tls qux (200; 8.533654ms)
  Jun 18 07:02:05.385: INFO: (7) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 9.524088ms)
  Jun 18 07:02:05.385: INFO: (7) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 8.63932ms)
  Jun 18 07:02:05.385: INFO: (7) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname1/proxy/: foo (200; 8.436156ms)
  Jun 18 07:02:05.385: INFO: (7) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/rewriteme">test</a> (200; 9.35773ms)
  Jun 18 07:02:05.385: INFO: (7) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname2/proxy/: bar (200; 8.298527ms)
  Jun 18 07:02:05.385: INFO: (7) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname1/proxy/: tls baz (200; 9.713008ms)
  Jun 18 07:02:05.386: INFO: (7) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname1/proxy/: foo (200; 9.574561ms)
  Jun 18 07:02:05.386: INFO: (7) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:460/proxy/: tls baz (200; 8.695428ms)
  Jun 18 07:02:05.389: INFO: (7) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname2/proxy/: bar (200; 12.946016ms)
  Jun 18 07:02:05.400: INFO: (8) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">... (200; 11.226085ms)
  Jun 18 07:02:05.400: INFO: (8) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 10.706498ms)
  Jun 18 07:02:05.401: INFO: (8) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 11.716856ms)
  Jun 18 07:02:05.401: INFO: (8) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:460/proxy/: tls baz (200; 12.081663ms)
  Jun 18 07:02:05.401: INFO: (8) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">test<... (200; 11.909444ms)
  Jun 18 07:02:05.401: INFO: (8) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 11.45413ms)
  Jun 18 07:02:05.401: INFO: (8) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname1/proxy/: tls baz (200; 11.892058ms)
  Jun 18 07:02:05.402: INFO: (8) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname2/proxy/: bar (200; 12.802109ms)
  Jun 18 07:02:05.402: INFO: (8) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname1/proxy/: foo (200; 12.593415ms)
  Jun 18 07:02:05.402: INFO: (8) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname1/proxy/: foo (200; 13.01476ms)
  Jun 18 07:02:05.402: INFO: (8) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname2/proxy/: bar (200; 12.95549ms)
  Jun 18 07:02:05.402: INFO: (8) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 13.319443ms)
  Jun 18 07:02:05.403: INFO: (8) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname2/proxy/: tls qux (200; 12.870313ms)
  Jun 18 07:02:05.403: INFO: (8) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/rewriteme">test</a> (200; 12.811494ms)
  Jun 18 07:02:05.404: INFO: (8) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:462/proxy/: tls qux (200; 15.446536ms)
  Jun 18 07:02:05.404: INFO: (8) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/tlsrewritem... (200; 14.94459ms)
  Jun 18 07:02:05.410: INFO: (9) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/rewriteme">test</a> (200; 5.725498ms)
  Jun 18 07:02:05.410: INFO: (9) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:460/proxy/: tls baz (200; 5.865052ms)
  Jun 18 07:02:05.410: INFO: (9) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 6.000183ms)
  Jun 18 07:02:05.411: INFO: (9) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 5.928958ms)
  Jun 18 07:02:05.411: INFO: (9) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 6.166421ms)
  Jun 18 07:02:05.411: INFO: (9) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">test<... (200; 6.260546ms)
  Jun 18 07:02:05.411: INFO: (9) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">... (200; 6.490464ms)
  Jun 18 07:02:05.411: INFO: (9) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:462/proxy/: tls qux (200; 6.382215ms)
  Jun 18 07:02:05.411: INFO: (9) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 6.479253ms)
  Jun 18 07:02:05.412: INFO: (9) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/tlsrewritem... (200; 7.153603ms)
  Jun 18 07:02:05.413: INFO: (9) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname2/proxy/: bar (200; 8.07897ms)
  Jun 18 07:02:05.413: INFO: (9) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname2/proxy/: bar (200; 8.229244ms)
  Jun 18 07:02:05.413: INFO: (9) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname1/proxy/: foo (200; 8.423167ms)
  Jun 18 07:02:05.413: INFO: (9) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname1/proxy/: foo (200; 8.382136ms)
  Jun 18 07:02:05.413: INFO: (9) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname1/proxy/: tls baz (200; 8.467696ms)
  Jun 18 07:02:05.413: INFO: (9) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname2/proxy/: tls qux (200; 8.651471ms)
  Jun 18 07:02:05.419: INFO: (10) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">test<... (200; 5.932235ms)
  Jun 18 07:02:05.419: INFO: (10) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 6.010982ms)
  Jun 18 07:02:05.420: INFO: (10) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:462/proxy/: tls qux (200; 6.202585ms)
  Jun 18 07:02:05.420: INFO: (10) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 6.217481ms)
  Jun 18 07:02:05.420: INFO: (10) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:460/proxy/: tls baz (200; 6.329172ms)
  Jun 18 07:02:05.420: INFO: (10) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname2/proxy/: tls qux (200; 6.44365ms)
  Jun 18 07:02:05.420: INFO: (10) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 6.519785ms)
  Jun 18 07:02:05.421: INFO: (10) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 7.829923ms)
  Jun 18 07:02:05.421: INFO: (10) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/rewriteme">test</a> (200; 7.90916ms)
  Jun 18 07:02:05.422: INFO: (10) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">... (200; 8.03539ms)
  Jun 18 07:02:05.422: INFO: (10) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname2/proxy/: bar (200; 8.807201ms)
  Jun 18 07:02:05.423: INFO: (10) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname2/proxy/: bar (200; 8.980071ms)
  Jun 18 07:02:05.423: INFO: (10) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname1/proxy/: foo (200; 8.957923ms)
  Jun 18 07:02:05.423: INFO: (10) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/tlsrewritem... (200; 9.034132ms)
  Jun 18 07:02:05.423: INFO: (10) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname1/proxy/: foo (200; 9.137058ms)
  Jun 18 07:02:05.423: INFO: (10) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname1/proxy/: tls baz (200; 9.3298ms)
  Jun 18 07:02:05.427: INFO: (11) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 3.650708ms)
  Jun 18 07:02:05.428: INFO: (11) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/tlsrewritem... (200; 4.668773ms)
  Jun 18 07:02:05.428: INFO: (11) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">test<... (200; 4.881487ms)
  Jun 18 07:02:05.428: INFO: (11) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">... (200; 4.817481ms)
  Jun 18 07:02:05.431: INFO: (11) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 7.671381ms)
  Jun 18 07:02:05.431: INFO: (11) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:460/proxy/: tls baz (200; 7.783552ms)
  Jun 18 07:02:05.431: INFO: (11) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 7.752466ms)
  Jun 18 07:02:05.431: INFO: (11) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 7.806834ms)
  Jun 18 07:02:05.431: INFO: (11) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/rewriteme">test</a> (200; 7.956051ms)
  Jun 18 07:02:05.431: INFO: (11) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:462/proxy/: tls qux (200; 8.159614ms)
  Jun 18 07:02:05.432: INFO: (11) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname2/proxy/: tls qux (200; 8.261565ms)
  Jun 18 07:02:05.432: INFO: (11) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname2/proxy/: bar (200; 8.384599ms)
  Jun 18 07:02:05.432: INFO: (11) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname1/proxy/: foo (200; 8.365383ms)
  Jun 18 07:02:05.432: INFO: (11) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname1/proxy/: foo (200; 8.639477ms)
  Jun 18 07:02:05.432: INFO: (11) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname2/proxy/: bar (200; 8.588002ms)
  Jun 18 07:02:05.432: INFO: (11) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname1/proxy/: tls baz (200; 8.591614ms)
  Jun 18 07:02:05.435: INFO: (12) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 3.179849ms)
  Jun 18 07:02:05.436: INFO: (12) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/rewriteme">test</a> (200; 3.773025ms)
  Jun 18 07:02:05.436: INFO: (12) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 4.238182ms)
  Jun 18 07:02:05.438: INFO: (12) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:462/proxy/: tls qux (200; 5.693977ms)
  Jun 18 07:02:05.438: INFO: (12) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/tlsrewritem... (200; 5.855659ms)
  Jun 18 07:02:05.438: INFO: (12) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:460/proxy/: tls baz (200; 5.873342ms)
  Jun 18 07:02:05.439: INFO: (12) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 6.923332ms)
  Jun 18 07:02:05.439: INFO: (12) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 7.006861ms)
  Jun 18 07:02:05.439: INFO: (12) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">... (200; 7.193142ms)
  Jun 18 07:02:05.440: INFO: (12) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">test<... (200; 7.411813ms)
  Jun 18 07:02:05.440: INFO: (12) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname2/proxy/: bar (200; 7.731021ms)
  Jun 18 07:02:05.440: INFO: (12) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname1/proxy/: foo (200; 7.953463ms)
  Jun 18 07:02:05.441: INFO: (12) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname1/proxy/: foo (200; 8.830516ms)
  Jun 18 07:02:05.441: INFO: (12) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname2/proxy/: bar (200; 9.024946ms)
  Jun 18 07:02:05.441: INFO: (12) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname2/proxy/: tls qux (200; 9.227039ms)
  Jun 18 07:02:05.441: INFO: (12) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname1/proxy/: tls baz (200; 9.193959ms)
  Jun 18 07:02:05.447: INFO: (13) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 5.519086ms)
  Jun 18 07:02:05.447: INFO: (13) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/rewriteme">test</a> (200; 5.254513ms)
  Jun 18 07:02:05.450: INFO: (13) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 7.79927ms)
  Jun 18 07:02:05.450: INFO: (13) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:462/proxy/: tls qux (200; 8.274695ms)
  Jun 18 07:02:05.450: INFO: (13) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:460/proxy/: tls baz (200; 8.364244ms)
  Jun 18 07:02:05.451: INFO: (13) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">... (200; 8.927906ms)
  Jun 18 07:02:05.451: INFO: (13) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname1/proxy/: foo (200; 9.188021ms)
  Jun 18 07:02:05.451: INFO: (13) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 8.93751ms)
  Jun 18 07:02:05.451: INFO: (13) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 9.078152ms)
  Jun 18 07:02:05.451: INFO: (13) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname2/proxy/: tls qux (200; 9.521082ms)
  Jun 18 07:02:05.451: INFO: (13) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/tlsrewritem... (200; 8.823412ms)
  Jun 18 07:02:05.451: INFO: (13) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">test<... (200; 9.348003ms)
  Jun 18 07:02:05.452: INFO: (13) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname1/proxy/: foo (200; 9.356245ms)
  Jun 18 07:02:05.452: INFO: (13) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname2/proxy/: bar (200; 9.373745ms)
  Jun 18 07:02:05.452: INFO: (13) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname2/proxy/: bar (200; 9.27607ms)
  Jun 18 07:02:05.452: INFO: (13) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname1/proxy/: tls baz (200; 9.249898ms)
  Jun 18 07:02:05.455: INFO: (14) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 3.466066ms)
  Jun 18 07:02:05.459: INFO: (14) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">test<... (200; 5.990772ms)
  Jun 18 07:02:05.459: INFO: (14) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:462/proxy/: tls qux (200; 6.151196ms)
  Jun 18 07:02:05.459: INFO: (14) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">... (200; 6.333024ms)
  Jun 18 07:02:05.459: INFO: (14) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/rewriteme">test</a> (200; 6.467584ms)
  Jun 18 07:02:05.459: INFO: (14) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname1/proxy/: foo (200; 6.70965ms)
  Jun 18 07:02:05.460: INFO: (14) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname1/proxy/: foo (200; 6.904779ms)
  Jun 18 07:02:05.460: INFO: (14) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:460/proxy/: tls baz (200; 7.371915ms)
  Jun 18 07:02:05.461: INFO: (14) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/tlsrewritem... (200; 7.401425ms)
  Jun 18 07:02:05.461: INFO: (14) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 7.907872ms)
  Jun 18 07:02:05.461: INFO: (14) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 8.049258ms)
  Jun 18 07:02:05.461: INFO: (14) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname2/proxy/: tls qux (200; 8.840243ms)
  Jun 18 07:02:05.461: INFO: (14) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 8.266348ms)
  Jun 18 07:02:05.461: INFO: (14) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname2/proxy/: bar (200; 7.966632ms)
  Jun 18 07:02:05.461: INFO: (14) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname2/proxy/: bar (200; 8.154857ms)
  Jun 18 07:02:05.461: INFO: (14) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname1/proxy/: tls baz (200; 7.87979ms)
  Jun 18 07:02:05.465: INFO: (15) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 3.478607ms)
  Jun 18 07:02:05.465: INFO: (15) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">... (200; 3.718287ms)
  Jun 18 07:02:05.469: INFO: (15) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 7.121241ms)
  Jun 18 07:02:05.469: INFO: (15) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname1/proxy/: foo (200; 6.85902ms)
  Jun 18 07:02:05.469: INFO: (15) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:460/proxy/: tls baz (200; 7.872491ms)
  Jun 18 07:02:05.469: INFO: (15) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname2/proxy/: bar (200; 7.829746ms)
  Jun 18 07:02:05.470: INFO: (15) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">test<... (200; 7.77148ms)
  Jun 18 07:02:05.470: INFO: (15) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 8.22644ms)
  Jun 18 07:02:05.470: INFO: (15) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 8.14528ms)
  Jun 18 07:02:05.470: INFO: (15) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/tlsrewritem... (200; 8.485006ms)
  Jun 18 07:02:05.470: INFO: (15) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname2/proxy/: tls qux (200; 8.371625ms)
  Jun 18 07:02:05.470: INFO: (15) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname1/proxy/: foo (200; 8.702145ms)
  Jun 18 07:02:05.470: INFO: (15) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname2/proxy/: bar (200; 8.672093ms)
  Jun 18 07:02:05.470: INFO: (15) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:462/proxy/: tls qux (200; 8.7477ms)
  Jun 18 07:02:05.470: INFO: (15) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/rewriteme">test</a> (200; 8.521196ms)
  Jun 18 07:02:05.470: INFO: (15) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname1/proxy/: tls baz (200; 8.692127ms)
  Jun 18 07:02:05.475: INFO: (16) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:462/proxy/: tls qux (200; 4.199975ms)
  Jun 18 07:02:05.475: INFO: (16) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 4.570099ms)
  Jun 18 07:02:05.477: INFO: (16) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">... (200; 6.626689ms)
  Jun 18 07:02:05.477: INFO: (16) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 6.552678ms)
  Jun 18 07:02:05.477: INFO: (16) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 6.414416ms)
  Jun 18 07:02:05.477: INFO: (16) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/tlsrewritem... (200; 6.524526ms)
  Jun 18 07:02:05.478: INFO: (16) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 7.004419ms)
  Jun 18 07:02:05.478: INFO: (16) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/rewriteme">test</a> (200; 7.599821ms)
  Jun 18 07:02:05.478: INFO: (16) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:460/proxy/: tls baz (200; 7.736216ms)
  Jun 18 07:02:05.479: INFO: (16) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">test<... (200; 8.444576ms)
  Jun 18 07:02:05.480: INFO: (16) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname2/proxy/: tls qux (200; 9.519659ms)
  Jun 18 07:02:05.481: INFO: (16) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname1/proxy/: foo (200; 10.034667ms)
  Jun 18 07:02:05.481: INFO: (16) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname1/proxy/: tls baz (200; 10.229983ms)
  Jun 18 07:02:05.481: INFO: (16) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname2/proxy/: bar (200; 10.324854ms)
  Jun 18 07:02:05.481: INFO: (16) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname2/proxy/: bar (200; 10.430389ms)
  Jun 18 07:02:05.481: INFO: (16) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname1/proxy/: foo (200; 10.28014ms)
  Jun 18 07:02:05.488: INFO: (17) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:460/proxy/: tls baz (200; 6.666501ms)
  Jun 18 07:02:05.488: INFO: (17) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 6.829194ms)
  Jun 18 07:02:05.488: INFO: (17) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:462/proxy/: tls qux (200; 7.135897ms)
  Jun 18 07:02:05.489: INFO: (17) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 7.409475ms)
  Jun 18 07:02:05.489: INFO: (17) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">... (200; 7.891465ms)
  Jun 18 07:02:05.489: INFO: (17) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">test<... (200; 8.03699ms)
  Jun 18 07:02:05.489: INFO: (17) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 7.93409ms)
  Jun 18 07:02:05.489: INFO: (17) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/rewriteme">test</a> (200; 8.16295ms)
  Jun 18 07:02:05.489: INFO: (17) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname2/proxy/: bar (200; 8.303252ms)
  Jun 18 07:02:05.489: INFO: (17) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/tlsrewritem... (200; 8.169079ms)
  Jun 18 07:02:05.489: INFO: (17) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname1/proxy/: tls baz (200; 8.114489ms)
  Jun 18 07:02:05.489: INFO: (17) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 8.293731ms)
  Jun 18 07:02:05.490: INFO: (17) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname2/proxy/: bar (200; 8.465816ms)
  Jun 18 07:02:05.490: INFO: (17) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname1/proxy/: foo (200; 8.710713ms)
  Jun 18 07:02:05.490: INFO: (17) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname2/proxy/: tls qux (200; 8.702773ms)
  Jun 18 07:02:05.490: INFO: (17) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname1/proxy/: foo (200; 8.847302ms)
  Jun 18 07:02:05.496: INFO: (18) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">test<... (200; 5.833927ms)
  Jun 18 07:02:05.496: INFO: (18) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 5.996395ms)
  Jun 18 07:02:05.496: INFO: (18) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:462/proxy/: tls qux (200; 6.200741ms)
  Jun 18 07:02:05.496: INFO: (18) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 6.390182ms)
  Jun 18 07:02:05.497: INFO: (18) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/rewriteme">test</a> (200; 6.274926ms)
  Jun 18 07:02:05.498: INFO: (18) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 7.376102ms)
  Jun 18 07:02:05.498: INFO: (18) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 7.87393ms)
  Jun 18 07:02:05.498: INFO: (18) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">... (200; 7.84687ms)
  Jun 18 07:02:05.498: INFO: (18) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/tlsrewritem... (200; 8.283221ms)
  Jun 18 07:02:05.498: INFO: (18) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:460/proxy/: tls baz (200; 7.986977ms)
  Jun 18 07:02:05.498: INFO: (18) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname1/proxy/: foo (200; 8.178225ms)
  Jun 18 07:02:05.499: INFO: (18) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname2/proxy/: bar (200; 8.447636ms)
  Jun 18 07:02:05.499: INFO: (18) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname1/proxy/: foo (200; 8.472561ms)
  Jun 18 07:02:05.499: INFO: (18) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname2/proxy/: bar (200; 8.449514ms)
  Jun 18 07:02:05.499: INFO: (18) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname2/proxy/: tls qux (200; 8.990568ms)
  Jun 18 07:02:05.499: INFO: (18) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname1/proxy/: tls baz (200; 9.067435ms)
  Jun 18 07:02:05.506: INFO: (19) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">test<... (200; 6.199753ms)
  Jun 18 07:02:05.506: INFO: (19) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname1/proxy/: foo (200; 6.317862ms)
  Jun 18 07:02:05.506: INFO: (19) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s/proxy/rewriteme">test</a> (200; 6.493185ms)
  Jun 18 07:02:05.506: INFO: (19) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 6.488756ms)
  Jun 18 07:02:05.506: INFO: (19) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:462/proxy/: tls qux (200; 6.430483ms)
  Jun 18 07:02:05.506: INFO: (19) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:1080/proxy/rewriteme">... (200; 6.639596ms)
  Jun 18 07:02:05.506: INFO: (19) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname2/proxy/: tls qux (200; 6.867946ms)
  Jun 18 07:02:05.506: INFO: (19) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:460/proxy/: tls baz (200; 6.76954ms)
  Jun 18 07:02:05.506: INFO: (19) /api/v1/namespaces/proxy-2806/pods/http:proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 6.788305ms)
  Jun 18 07:02:05.506: INFO: (19) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:160/proxy/: foo (200; 7.034921ms)
  Jun 18 07:02:05.506: INFO: (19) /api/v1/namespaces/proxy-2806/pods/proxy-service-zg8cq-gg76s:162/proxy/: bar (200; 7.123078ms)
  Jun 18 07:02:05.506: INFO: (19) /api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/: <a href="/api/v1/namespaces/proxy-2806/pods/https:proxy-service-zg8cq-gg76s:443/proxy/tlsrewritem... (200; 6.958804ms)
  Jun 18 07:02:05.509: INFO: (19) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname1/proxy/: foo (200; 9.09255ms)
  Jun 18 07:02:05.509: INFO: (19) /api/v1/namespaces/proxy-2806/services/proxy-service-zg8cq:portname2/proxy/: bar (200; 9.201874ms)
  Jun 18 07:02:05.509: INFO: (19) /api/v1/namespaces/proxy-2806/services/http:proxy-service-zg8cq:portname2/proxy/: bar (200; 9.128101ms)
  Jun 18 07:02:05.509: INFO: (19) /api/v1/namespaces/proxy-2806/services/https:proxy-service-zg8cq:tlsportname1/proxy/: tls baz (200; 9.215799ms)
  Jun 18 07:02:05.509: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController proxy-service-zg8cq in namespace proxy-2806, will wait for the garbage collector to delete the pods @ 06/18/24 07:02:05.513
  Jun 18 07:02:05.572: INFO: Deleting ReplicationController proxy-service-zg8cq took: 5.538548ms
  Jun 18 07:02:05.673: INFO: Terminating ReplicationController proxy-service-zg8cq pods took: 100.778997ms
  E0618 07:02:05.882125      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:06.882708      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "proxy-2806" for this suite. @ 06/18/24 07:02:07.774
• [5.594 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 06/18/24 07:02:07.781
  Jun 18 07:02:07.781: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename daemonsets @ 06/18/24 07:02:07.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:02:07.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:02:07.801
  Jun 18 07:02:07.831: INFO: Create a RollingUpdate DaemonSet
  Jun 18 07:02:07.837: INFO: Check that daemon pods launch on every node of the cluster
  Jun 18 07:02:07.844: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 07:02:07.847: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 07:02:07.847: INFO: Node ck-128-worker-1 is running 0 daemon pod, expected 1
  E0618 07:02:07.883044      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:02:08.854: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 07:02:08.858: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 18 07:02:08.858: INFO: Node ck-128-worker-3 is running 0 daemon pod, expected 1
  E0618 07:02:08.884011      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:02:09.853: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 07:02:09.858: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 18 07:02:09.858: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Jun 18 07:02:09.858: INFO: Update the DaemonSet to trigger a rollout
  Jun 18 07:02:09.869: INFO: Updating DaemonSet daemon-set
  E0618 07:02:09.886148      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:10.886605      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:02:11.886: INFO: Roll back the DaemonSet before rollout is complete
  E0618 07:02:11.886924      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:02:11.907: INFO: Updating DaemonSet daemon-set
  Jun 18 07:02:11.907: INFO: Make sure DaemonSet rollback is complete
  Jun 18 07:02:11.913: INFO: Wrong image for pod: daemon-set-hsnww. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Jun 18 07:02:11.913: INFO: Pod daemon-set-hsnww is not available
  Jun 18 07:02:11.918: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0618 07:02:12.887204      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:02:12.927: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0618 07:02:13.887745      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:02:13.928: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0618 07:02:14.889159      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:02:14.931: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0618 07:02:15.888855      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:02:15.930: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0618 07:02:16.889512      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:02:16.928: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0618 07:02:17.889938      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:02:17.929: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0618 07:02:18.890802      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:02:18.923: INFO: Pod daemon-set-6wnbj is not available
  Jun 18 07:02:18.927: INFO: DaemonSet pods can't tolerate node ck-128-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 06/18/24 07:02:18.934
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7305, will wait for the garbage collector to delete the pods @ 06/18/24 07:02:18.934
  Jun 18 07:02:18.993: INFO: Deleting DaemonSet.extensions daemon-set took: 5.284743ms
  Jun 18 07:02:19.093: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.232746ms
  E0618 07:02:19.891808      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:20.892272      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:21.893155      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:02:21.998: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 07:02:21.998: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 18 07:02:22.000: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"36910"},"items":null}

  Jun 18 07:02:22.003: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"36910"},"items":null}

  Jun 18 07:02:22.019: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7305" for this suite. @ 06/18/24 07:02:22.024
• [14.247 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 06/18/24 07:02:22.029
  Jun 18 07:02:22.029: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename projected @ 06/18/24 07:02:22.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:02:22.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:02:22.045
  STEP: Creating configMap with name projected-configmap-test-volume-757a1b3b-ca32-48a3-ac37-17c3cd010978 @ 06/18/24 07:02:22.048
  STEP: Creating a pod to test consume configMaps @ 06/18/24 07:02:22.052
  E0618 07:02:22.893952      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:23.894913      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 07:02:24.072
  Jun 18 07:02:24.075: INFO: Trying to get logs from node ck-128-worker-2 pod pod-projected-configmaps-7d4b2edb-7e85-41ed-84e0-3b1a1a1e04e6 container agnhost-container: <nil>
  STEP: delete the pod @ 06/18/24 07:02:24.089
  Jun 18 07:02:24.101: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3534" for this suite. @ 06/18/24 07:02:24.105
• [2.081 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2224
  STEP: Creating a kubernetes client @ 06/18/24 07:02:24.11
  Jun 18 07:02:24.110: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename services @ 06/18/24 07:02:24.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:02:24.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:02:24.125
  STEP: creating service in namespace services-8897 @ 06/18/24 07:02:24.128
  STEP: creating service affinity-nodeport-transition in namespace services-8897 @ 06/18/24 07:02:24.128
  STEP: creating replication controller affinity-nodeport-transition in namespace services-8897 @ 06/18/24 07:02:24.139
  I0618 07:02:24.146432      18 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-8897, replica count: 3
  E0618 07:02:24.895547      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:25.896365      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:26.897051      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0618 07:02:27.197721      18 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 18 07:02:27.209: INFO: Creating new exec pod
  E0618 07:02:27.898161      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:28.898394      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:29.898747      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:02:30.227: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-8897 exec execpod-affinityctf6r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Jun 18 07:02:30.417: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Jun 18 07:02:30.417: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 07:02:30.418: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-8897 exec execpod-affinityctf6r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.106.229.246 80'
  Jun 18 07:02:30.556: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.106.229.246 80\nConnection to 10.106.229.246 80 port [tcp/http] succeeded!\n"
  Jun 18 07:02:30.556: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 07:02:30.556: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-8897 exec execpod-affinityctf6r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.190.167 32766'
  Jun 18 07:02:30.685: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.190.167 32766\nConnection to 192.168.190.167 32766 port [tcp/*] succeeded!\n"
  Jun 18 07:02:30.685: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 07:02:30.685: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-8897 exec execpod-affinityctf6r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.190.166 32766'
  Jun 18 07:02:30.811: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.190.166 32766\nConnection to 192.168.190.166 32766 port [tcp/*] succeeded!\n"
  Jun 18 07:02:30.811: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 07:02:30.821: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-8897 exec execpod-affinityctf6r -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.190.169:32766/ ; done'
  E0618 07:02:30.899147      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:02:31.041: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:32766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:32766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:32766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:32766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:32766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:32766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:32766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:32766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:32766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:32766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:32766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:32766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:32766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:32766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:32766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:32766/\n"
  Jun 18 07:02:31.041: INFO: stdout: "\naffinity-nodeport-transition-cthtn\naffinity-nodeport-transition-cthtn\naffinity-nodeport-transition-cthtn\naffinity-nodeport-transition-cthtn\naffinity-nodeport-transition-sn8gg\naffinity-nodeport-transition-sn8gg\naffinity-nodeport-transition-9cvsg\naffinity-nodeport-transition-sn8gg\naffinity-nodeport-transition-9cvsg\naffinity-nodeport-transition-9cvsg\naffinity-nodeport-transition-cthtn\naffinity-nodeport-transition-cthtn\naffinity-nodeport-transition-sn8gg\naffinity-nodeport-transition-9cvsg\naffinity-nodeport-transition-cthtn\naffinity-nodeport-transition-9cvsg"
  Jun 18 07:02:31.041: INFO: Received response from host: affinity-nodeport-transition-cthtn
  Jun 18 07:02:31.041: INFO: Received response from host: affinity-nodeport-transition-cthtn
  Jun 18 07:02:31.041: INFO: Received response from host: affinity-nodeport-transition-cthtn
  Jun 18 07:02:31.041: INFO: Received response from host: affinity-nodeport-transition-cthtn
  Jun 18 07:02:31.041: INFO: Received response from host: affinity-nodeport-transition-sn8gg
  Jun 18 07:02:31.041: INFO: Received response from host: affinity-nodeport-transition-sn8gg
  Jun 18 07:02:31.041: INFO: Received response from host: affinity-nodeport-transition-9cvsg
  Jun 18 07:02:31.041: INFO: Received response from host: affinity-nodeport-transition-sn8gg
  Jun 18 07:02:31.041: INFO: Received response from host: affinity-nodeport-transition-9cvsg
  Jun 18 07:02:31.041: INFO: Received response from host: affinity-nodeport-transition-9cvsg
  Jun 18 07:02:31.041: INFO: Received response from host: affinity-nodeport-transition-cthtn
  Jun 18 07:02:31.041: INFO: Received response from host: affinity-nodeport-transition-cthtn
  Jun 18 07:02:31.041: INFO: Received response from host: affinity-nodeport-transition-sn8gg
  Jun 18 07:02:31.041: INFO: Received response from host: affinity-nodeport-transition-9cvsg
  Jun 18 07:02:31.041: INFO: Received response from host: affinity-nodeport-transition-cthtn
  Jun 18 07:02:31.041: INFO: Received response from host: affinity-nodeport-transition-9cvsg
  Jun 18 07:02:31.051: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-8897 exec execpod-affinityctf6r -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.190.169:32766/ ; done'
  Jun 18 07:02:31.234: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:32766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:32766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:32766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:32766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:32766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:32766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:32766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:32766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:32766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:32766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:32766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:32766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:32766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:32766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:32766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:32766/\n"
  Jun 18 07:02:31.234: INFO: stdout: "\naffinity-nodeport-transition-9cvsg\naffinity-nodeport-transition-9cvsg\naffinity-nodeport-transition-9cvsg\naffinity-nodeport-transition-9cvsg\naffinity-nodeport-transition-9cvsg\naffinity-nodeport-transition-9cvsg\naffinity-nodeport-transition-9cvsg\naffinity-nodeport-transition-9cvsg\naffinity-nodeport-transition-9cvsg\naffinity-nodeport-transition-9cvsg\naffinity-nodeport-transition-9cvsg\naffinity-nodeport-transition-9cvsg\naffinity-nodeport-transition-9cvsg\naffinity-nodeport-transition-9cvsg\naffinity-nodeport-transition-9cvsg\naffinity-nodeport-transition-9cvsg"
  Jun 18 07:02:31.234: INFO: Received response from host: affinity-nodeport-transition-9cvsg
  Jun 18 07:02:31.234: INFO: Received response from host: affinity-nodeport-transition-9cvsg
  Jun 18 07:02:31.234: INFO: Received response from host: affinity-nodeport-transition-9cvsg
  Jun 18 07:02:31.234: INFO: Received response from host: affinity-nodeport-transition-9cvsg
  Jun 18 07:02:31.234: INFO: Received response from host: affinity-nodeport-transition-9cvsg
  Jun 18 07:02:31.234: INFO: Received response from host: affinity-nodeport-transition-9cvsg
  Jun 18 07:02:31.234: INFO: Received response from host: affinity-nodeport-transition-9cvsg
  Jun 18 07:02:31.234: INFO: Received response from host: affinity-nodeport-transition-9cvsg
  Jun 18 07:02:31.234: INFO: Received response from host: affinity-nodeport-transition-9cvsg
  Jun 18 07:02:31.234: INFO: Received response from host: affinity-nodeport-transition-9cvsg
  Jun 18 07:02:31.234: INFO: Received response from host: affinity-nodeport-transition-9cvsg
  Jun 18 07:02:31.234: INFO: Received response from host: affinity-nodeport-transition-9cvsg
  Jun 18 07:02:31.234: INFO: Received response from host: affinity-nodeport-transition-9cvsg
  Jun 18 07:02:31.234: INFO: Received response from host: affinity-nodeport-transition-9cvsg
  Jun 18 07:02:31.234: INFO: Received response from host: affinity-nodeport-transition-9cvsg
  Jun 18 07:02:31.234: INFO: Received response from host: affinity-nodeport-transition-9cvsg
  Jun 18 07:02:31.234: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Jun 18 07:02:31.240: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-8897, will wait for the garbage collector to delete the pods @ 06/18/24 07:02:31.25
  Jun 18 07:02:31.309: INFO: Deleting ReplicationController affinity-nodeport-transition took: 5.8751ms
  Jun 18 07:02:31.410: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.821027ms
  E0618 07:02:31.899853      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:32.900704      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:33.901137      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:34.901290      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-8897" for this suite. @ 06/18/24 07:02:34.932
• [10.828 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:40
  STEP: Creating a kubernetes client @ 06/18/24 07:02:34.945
  Jun 18 07:02:34.945: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename server-version @ 06/18/24 07:02:34.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:02:34.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:02:34.965
  STEP: Request ServerVersion @ 06/18/24 07:02:34.969
  STEP: Confirm major version @ 06/18/24 07:02:34.971
  Jun 18 07:02:34.971: INFO: Major version: 1
  STEP: Confirm minor version @ 06/18/24 07:02:34.971
  Jun 18 07:02:34.971: INFO: cleanMinorVersion: 28
  Jun 18 07:02:34.971: INFO: Minor version: 28
  Jun 18 07:02:34.971: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-8052" for this suite. @ 06/18/24 07:02:34.977
• [0.043 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:107
  STEP: Creating a kubernetes client @ 06/18/24 07:02:34.988
  Jun 18 07:02:34.988: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename pod-network-test @ 06/18/24 07:02:34.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:02:35.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:02:35.011
  STEP: Performing setup for networking test in namespace pod-network-test-3840 @ 06/18/24 07:02:35.014
  STEP: creating a selector @ 06/18/24 07:02:35.014
  STEP: Creating the service pods in kubernetes @ 06/18/24 07:02:35.014
  Jun 18 07:02:35.014: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0618 07:02:35.902293      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:36.903060      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:37.903254      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:38.903482      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:39.904228      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:40.904958      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:41.905516      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:42.905660      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:43.906711      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:44.906898      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:45.907974      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:46.907932      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 06/18/24 07:02:47.095
  E0618 07:02:47.908994      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:48.909485      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:02:49.128: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jun 18 07:02:49.128: INFO: Going to poll 172.17.152.30 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jun 18 07:02:49.131: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.17.152.30:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3840 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 07:02:49.131: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 07:02:49.133: INFO: ExecWithOptions: Clientset creation
  Jun 18 07:02:49.133: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3840/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.17.152.30%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 18 07:02:49.187: INFO: Found all 1 expected endpoints: [netserver-0]
  Jun 18 07:02:49.187: INFO: Going to poll 172.17.196.219 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jun 18 07:02:49.191: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.17.196.219:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3840 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 07:02:49.191: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 07:02:49.192: INFO: ExecWithOptions: Clientset creation
  Jun 18 07:02:49.193: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3840/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.17.196.219%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 18 07:02:49.238: INFO: Found all 1 expected endpoints: [netserver-1]
  Jun 18 07:02:49.238: INFO: Going to poll 172.17.66.175 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jun 18 07:02:49.242: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.17.66.175:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3840 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 07:02:49.242: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 07:02:49.243: INFO: ExecWithOptions: Clientset creation
  Jun 18 07:02:49.243: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3840/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.17.66.175%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 18 07:02:49.293: INFO: Found all 1 expected endpoints: [netserver-2]
  Jun 18 07:02:49.293: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3840" for this suite. @ 06/18/24 07:02:49.299
• [14.317 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:395
  STEP: Creating a kubernetes client @ 06/18/24 07:02:49.307
  Jun 18 07:02:49.307: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename resourcequota @ 06/18/24 07:02:49.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:02:49.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:02:49.327
  STEP: Counting existing ResourceQuota @ 06/18/24 07:02:49.33
  E0618 07:02:49.910383      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:50.911370      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:51.912339      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:52.912669      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:53.912819      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/18/24 07:02:54.334
  STEP: Ensuring resource quota status is calculated @ 06/18/24 07:02:54.341
  E0618 07:02:54.913682      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:55.913778      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 06/18/24 07:02:56.347
  STEP: Ensuring resource quota status captures replication controller creation @ 06/18/24 07:02:56.362
  E0618 07:02:56.914227      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:57.914564      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 06/18/24 07:02:58.367
  STEP: Ensuring resource quota status released usage @ 06/18/24 07:02:58.371
  E0618 07:02:58.915488      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:02:59.915834      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:03:00.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9738" for this suite. @ 06/18/24 07:03:00.382
• [11.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:101
  STEP: Creating a kubernetes client @ 06/18/24 07:03:00.402
  Jun 18 07:03:00.402: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename resourcequota @ 06/18/24 07:03:00.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:03:00.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:03:00.425
  STEP: Counting existing ResourceQuota @ 06/18/24 07:03:00.428
  E0618 07:03:00.915906      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:01.916463      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:02.917396      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:03.918168      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:04.919297      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/18/24 07:03:05.432
  STEP: Ensuring resource quota status is calculated @ 06/18/24 07:03:05.439
  E0618 07:03:05.920524      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:06.920891      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 06/18/24 07:03:07.444
  STEP: Creating a NodePort Service @ 06/18/24 07:03:07.476
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 06/18/24 07:03:07.499
  STEP: Ensuring resource quota status captures service creation @ 06/18/24 07:03:07.531
  E0618 07:03:07.921599      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:08.922278      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 06/18/24 07:03:09.536
  STEP: Ensuring resource quota status released usage @ 06/18/24 07:03:09.581
  E0618 07:03:09.922926      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:10.923746      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:03:11.587: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7988" for this suite. @ 06/18/24 07:03:11.594
• [11.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:830
  STEP: Creating a kubernetes client @ 06/18/24 07:03:11.608
  Jun 18 07:03:11.608: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename kubectl @ 06/18/24 07:03:11.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:03:11.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:03:11.631
  STEP: validating api versions @ 06/18/24 07:03:11.636
  Jun 18 07:03:11.636: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=kubectl-77 api-versions'
  Jun 18 07:03:11.741: INFO: stderr: ""
  Jun 18 07:03:11.741: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\ngitlab.secloudit.io/v1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\nworkload.secloudit.io/v1\n"
  Jun 18 07:03:11.741: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-77" for this suite. @ 06/18/24 07:03:11.746
• [0.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:217
  STEP: Creating a kubernetes client @ 06/18/24 07:03:11.755
  Jun 18 07:03:11.755: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename emptydir @ 06/18/24 07:03:11.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:03:11.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:03:11.773
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 06/18/24 07:03:11.777
  E0618 07:03:11.923829      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:12.924448      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:13.925139      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:14.925489      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 07:03:15.797
  Jun 18 07:03:15.801: INFO: Trying to get logs from node ck-128-worker-2 pod pod-1a583e74-2dd3-4727-91d4-00726019a5ca container test-container: <nil>
  STEP: delete the pod @ 06/18/24 07:03:15.815
  Jun 18 07:03:15.835: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8361" for this suite. @ 06/18/24 07:03:15.843
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1030
  STEP: Creating a kubernetes client @ 06/18/24 07:03:15.851
  Jun 18 07:03:15.851: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename statefulset @ 06/18/24 07:03:15.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:03:15.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:03:15.869
  STEP: Creating service test in namespace statefulset-7612 @ 06/18/24 07:03:15.873
  STEP: Creating statefulset ss in namespace statefulset-7612 @ 06/18/24 07:03:15.884
  Jun 18 07:03:15.892: INFO: Found 0 stateful pods, waiting for 1
  E0618 07:03:15.926234      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:16.926558      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:17.926892      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:18.927366      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:19.927485      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:20.927646      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:21.928147      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:22.929273      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:23.930046      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:24.930395      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:03:25.897: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 06/18/24 07:03:25.902
  STEP: Getting /status @ 06/18/24 07:03:25.908
  Jun 18 07:03:25.914: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 06/18/24 07:03:25.914
  Jun 18 07:03:25.925: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 06/18/24 07:03:25.925
  Jun 18 07:03:25.929: INFO: Observed &StatefulSet event: ADDED
  Jun 18 07:03:25.929: INFO: Found Statefulset ss in namespace statefulset-7612 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 18 07:03:25.929: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 06/18/24 07:03:25.929
  Jun 18 07:03:25.929: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  E0618 07:03:25.930960      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:03:25.938: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 06/18/24 07:03:25.938
  Jun 18 07:03:25.941: INFO: Observed &StatefulSet event: ADDED
  Jun 18 07:03:25.942: INFO: Deleting all statefulset in ns statefulset-7612
  Jun 18 07:03:25.945: INFO: Scaling statefulset ss to 0
  E0618 07:03:26.932069      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:27.932812      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:28.933232      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:29.933541      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:30.934132      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:31.934477      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:32.934712      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:33.934871      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:34.935136      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:35.935874      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:03:35.963: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 18 07:03:35.966: INFO: Deleting statefulset ss
  Jun 18 07:03:35.983: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7612" for this suite. @ 06/18/24 07:03:35.989
• [20.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:328
  STEP: Creating a kubernetes client @ 06/18/24 07:03:35.995
  Jun 18 07:03:35.995: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename resourcequota @ 06/18/24 07:03:35.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:03:36.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:03:36.013
  E0618 07:03:36.936743      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:37.937119      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:38.937954      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:39.938089      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:40.938263      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:41.938519      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:42.938525      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:43.938973      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:44.939694      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:45.940078      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:46.940166      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:47.940502      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:48.940869      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:49.941318      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:50.941980      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:51.942310      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:52.942567      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 06/18/24 07:03:53.021
  E0618 07:03:53.943460      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:54.943504      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:55.944284      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:56.944509      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:57.945357      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/18/24 07:03:58.026
  STEP: Ensuring resource quota status is calculated @ 06/18/24 07:03:58.031
  E0618 07:03:58.946082      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:03:59.946583      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 06/18/24 07:04:00.037
  STEP: Ensuring resource quota status captures configMap creation @ 06/18/24 07:04:00.054
  E0618 07:04:00.946818      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:01.947408      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 06/18/24 07:04:02.059
  STEP: Ensuring resource quota status released usage @ 06/18/24 07:04:02.065
  E0618 07:04:02.947878      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:03.948380      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:04:04.072: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4295" for this suite. @ 06/18/24 07:04:04.078
• [28.089 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:58
  STEP: Creating a kubernetes client @ 06/18/24 07:04:04.087
  Jun 18 07:04:04.087: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/18/24 07:04:04.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:04:04.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:04:04.115
  Jun 18 07:04:04.119: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  E0618 07:04:04.948404      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:04:05.146: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9824" for this suite. @ 06/18/24 07:04:05.154
• [1.073 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 06/18/24 07:04:05.161
  Jun 18 07:04:05.161: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename services @ 06/18/24 07:04:05.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:04:05.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:04:05.18
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-3966 @ 06/18/24 07:04:05.187
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 06/18/24 07:04:05.205
  STEP: creating service externalsvc in namespace services-3966 @ 06/18/24 07:04:05.205
  STEP: creating replication controller externalsvc in namespace services-3966 @ 06/18/24 07:04:05.224
  I0618 07:04:05.233920      18 runners.go:197] Created replication controller with name: externalsvc, namespace: services-3966, replica count: 2
  E0618 07:04:05.948580      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:06.948825      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:07.949958      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0618 07:04:08.285684      18 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 06/18/24 07:04:08.289
  Jun 18 07:04:08.309: INFO: Creating new exec pod
  E0618 07:04:08.950543      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:09.951291      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:04:10.324: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-3966 exec execpodbg6fk -- /bin/sh -x -c nslookup clusterip-service.services-3966.svc.cluster.local'
  Jun 18 07:04:10.484: INFO: stderr: "+ nslookup clusterip-service.services-3966.svc.cluster.local\n"
  Jun 18 07:04:10.484: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nclusterip-service.services-3966.svc.cluster.local\tcanonical name = externalsvc.services-3966.svc.cluster.local.\nName:\texternalsvc.services-3966.svc.cluster.local\nAddress: 10.103.73.150\n\n"
  Jun 18 07:04:10.484: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-3966, will wait for the garbage collector to delete the pods @ 06/18/24 07:04:10.491
  Jun 18 07:04:10.552: INFO: Deleting ReplicationController externalsvc took: 7.167532ms
  Jun 18 07:04:10.652: INFO: Terminating ReplicationController externalsvc pods took: 100.255327ms
  E0618 07:04:10.951212      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:11.953846      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:12.954758      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:13.955667      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:04:14.268: INFO: Cleaning up the ClusterIP to ExternalName test service
  STEP: Destroying namespace "services-3966" for this suite. @ 06/18/24 07:04:14.29
• [9.136 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 06/18/24 07:04:14.297
  Jun 18 07:04:14.297: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename sched-preemption @ 06/18/24 07:04:14.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:04:14.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:04:14.312
  Jun 18 07:04:14.327: INFO: Waiting up to 1m0s for all nodes to be ready
  E0618 07:04:14.956100      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:15.956485      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:16.956566      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:17.956691      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:18.957625      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:19.957930      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:20.958210      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:21.958547      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:22.959631      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:23.959910      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:24.960924      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:25.961726      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:26.962685      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:27.963251      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:28.963643      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:29.963873      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:30.964237      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:31.964747      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:32.964856      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:33.965139      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:34.965325      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:35.965517      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:36.966101      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:37.966303      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:38.966510      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:39.966655      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:40.966944      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:41.967319      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:42.967650      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:43.967940      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:44.969111      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:45.969904      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:46.970951      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:47.971304      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:48.971482      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:49.971814      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:50.971917      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:51.972223      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:52.973163      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:53.973513      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:54.974146      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:55.974779      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:56.975859      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:57.976161      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:58.976413      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:04:59.976890      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:00.977839      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:01.978354      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:02.978672      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:03.978800      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:04.979813      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:05.980017      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:06.980599      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:07.980862      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:08.981503      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:09.981825      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:10.982949      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:11.983063      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:12.984042      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:13.984427      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:05:14.372: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 06/18/24 07:05:14.376
  Jun 18 07:05:14.376: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename sched-preemption-path @ 06/18/24 07:05:14.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:05:14.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:05:14.395
  Jun 18 07:05:14.419: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Jun 18 07:05:14.423: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Jun 18 07:05:14.439: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Jun 18 07:05:14.456: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-2636" for this suite. @ 06/18/24 07:05:14.511
  STEP: Destroying namespace "sched-preemption-7031" for this suite. @ 06/18/24 07:05:14.519
• [60.229 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 06/18/24 07:05:14.527
  Jun 18 07:05:14.527: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename projected @ 06/18/24 07:05:14.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:05:14.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:05:14.545
  STEP: Creating configMap with name projected-configmap-test-volume-map-a4ba5fab-d9f1-47fc-aa2e-425e41a6b6da @ 06/18/24 07:05:14.549
  STEP: Creating a pod to test consume configMaps @ 06/18/24 07:05:14.553
  E0618 07:05:14.984582      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:15.985246      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 07:05:16.567
  Jun 18 07:05:16.570: INFO: Trying to get logs from node ck-128-worker-2 pod pod-projected-configmaps-16484057-8461-47a1-9d8f-f34e3793f7d7 container agnhost-container: <nil>
  STEP: delete the pod @ 06/18/24 07:05:16.591
  Jun 18 07:05:16.605: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4589" for this suite. @ 06/18/24 07:05:16.61
• [2.092 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:272
  STEP: Creating a kubernetes client @ 06/18/24 07:05:16.621
  Jun 18 07:05:16.621: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename namespaces @ 06/18/24 07:05:16.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:05:16.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:05:16.641
  STEP: creating a Namespace @ 06/18/24 07:05:16.644
  STEP: patching the Namespace @ 06/18/24 07:05:16.659
  STEP: get the Namespace and ensuring it has the label @ 06/18/24 07:05:16.664
  Jun 18 07:05:16.667: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4678" for this suite. @ 06/18/24 07:05:16.672
  STEP: Destroying namespace "nspatchtest-7800245b-9d3d-4aee-a8d9-b9700c8031f3-4621" for this suite. @ 06/18/24 07:05:16.678
• [0.063 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 06/18/24 07:05:16.684
  Jun 18 07:05:16.684: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename projected @ 06/18/24 07:05:16.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:05:16.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:05:16.705
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 07:05:16.71
  E0618 07:05:16.986523      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:17.987364      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:18.987574      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:19.987629      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 07:05:20.732
  Jun 18 07:05:20.734: INFO: Trying to get logs from node ck-128-worker-1 pod downwardapi-volume-9afe284e-b556-4449-af2f-a4f196617ef0 container client-container: <nil>
  STEP: delete the pod @ 06/18/24 07:05:20.752
  Jun 18 07:05:20.764: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5259" for this suite. @ 06/18/24 07:05:20.77
• [4.092 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 06/18/24 07:05:20.778
  Jun 18 07:05:20.778: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename projected @ 06/18/24 07:05:20.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:05:20.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:05:20.794
  STEP: Creating configMap with name projected-configmap-test-volume-map-f1a8ff2f-e6ad-4eef-8505-9be779030764 @ 06/18/24 07:05:20.798
  STEP: Creating a pod to test consume configMaps @ 06/18/24 07:05:20.801
  E0618 07:05:20.988352      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:21.989053      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:22.989418      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:23.989478      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 07:05:24.819
  Jun 18 07:05:24.826: INFO: Trying to get logs from node ck-128-worker-1 pod pod-projected-configmaps-d0b8a4db-ab6e-4975-99b9-5dab16373458 container agnhost-container: <nil>
  STEP: delete the pod @ 06/18/24 07:05:24.832
  Jun 18 07:05:24.847: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6901" for this suite. @ 06/18/24 07:05:24.852
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 06/18/24 07:05:24.86
  Jun 18 07:05:24.860: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename sched-preemption @ 06/18/24 07:05:24.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:05:24.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:05:24.878
  Jun 18 07:05:24.892: INFO: Waiting up to 1m0s for all nodes to be ready
  E0618 07:05:24.990291      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:25.990863      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:26.990937      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:27.991069      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:28.991270      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:29.991361      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:30.992388      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:31.992705      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:32.993678      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:33.994011      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:34.994321      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:35.994966      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:36.995663      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:37.995989      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:38.996021      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:39.996298      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:40.996438      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:41.996732      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:42.997600      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:43.998005      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:44.999021      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:45.999514      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:46.999946      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:48.000408      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:49.001366      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:50.001536      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:51.002486      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:52.002821      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:53.002929      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:54.003068      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:55.003311      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:56.003979      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:57.004795      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:58.005052      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:05:59.005810      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:00.005926      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:01.006758      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:02.006953      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:03.007569      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:04.007846      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:05.008365      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:06.008546      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:07.009316      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:08.009636      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:09.010550      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:10.010806      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:11.011169      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:12.011509      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:13.011992      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:14.012374      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:15.013410      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:16.013759      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:17.013866      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:18.013994      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:19.014223      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:20.014671      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:21.015739      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:22.016164      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:23.017057      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:24.017289      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:06:24.931: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 06/18/24 07:06:24.934
  Jun 18 07:06:24.963: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Jun 18 07:06:24.969: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Jun 18 07:06:24.992: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Jun 18 07:06:24.999: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  E0618 07:06:25.017441      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:06:25.026: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Jun 18 07:06:25.035: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 06/18/24 07:06:25.035
  E0618 07:06:26.018406      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:27.019373      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 06/18/24 07:06:27.058
  E0618 07:06:28.019774      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:29.020441      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:30.020884      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:31.021002      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:32.021843      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:33.022108      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:06:33.110: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-788" for this suite. @ 06/18/24 07:06:33.176
• [68.322 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:135
  STEP: Creating a kubernetes client @ 06/18/24 07:06:33.184
  Jun 18 07:06:33.184: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/18/24 07:06:33.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:06:33.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:06:33.205
  STEP: create the container to handle the HTTPGet hook request. @ 06/18/24 07:06:33.214
  E0618 07:06:34.022753      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:35.023486      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 06/18/24 07:06:35.231
  E0618 07:06:36.023750      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:37.024124      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 06/18/24 07:06:37.248
  STEP: delete the pod with lifecycle hook @ 06/18/24 07:06:37.256
  E0618 07:06:38.024840      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:39.025473      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:40.025861      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:41.025787      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:06:41.274: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5360" for this suite. @ 06/18/24 07:06:41.281
• [8.106 seconds]
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 06/18/24 07:06:41.291
  Jun 18 07:06:41.291: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename tables @ 06/18/24 07:06:41.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:06:41.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:06:41.313
  Jun 18 07:06:41.321: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-706" for this suite. @ 06/18/24 07:06:41.328
• [0.046 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 06/18/24 07:06:41.337
  Jun 18 07:06:41.337: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename dns @ 06/18/24 07:06:41.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:06:41.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:06:41.359
  STEP: Creating a test headless service @ 06/18/24 07:06:41.363
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2608.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-2608.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2608.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-2608.svc.cluster.local;sleep 1; done
   @ 06/18/24 07:06:41.368
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2608.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-2608.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2608.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-2608.svc.cluster.local;sleep 1; done
   @ 06/18/24 07:06:41.368
  STEP: creating a pod to probe DNS @ 06/18/24 07:06:41.368
  STEP: submitting the pod to kubernetes @ 06/18/24 07:06:41.368
  E0618 07:06:42.025917      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:43.027896      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/18/24 07:06:43.39
  STEP: looking for the results for each expected name from probers @ 06/18/24 07:06:43.393
  Jun 18 07:06:43.397: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:06:43.400: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:06:43.403: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:06:43.407: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:06:43.410: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:06:43.413: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:06:43.416: INFO: Unable to read jessie_udp@dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:06:43.419: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:06:43.419: INFO: Lookups using dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local wheezy_udp@dns-test-service-2.dns-2608.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2608.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local jessie_udp@dns-test-service-2.dns-2608.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2608.svc.cluster.local]

  Jun 18 07:06:43.425: INFO: Pod client logs for webserver: 
  Jun 18 07:06:43.430: INFO: Pod client logs for querier: 
  Jun 18 07:06:43.434: INFO: Pod client logs for jessie-querier: 
  E0618 07:06:44.028067      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:45.028566      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:46.028849      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:47.029343      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:48.030294      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:06:48.439: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:06:48.442: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:06:48.445: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:06:48.448: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:06:48.452: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:06:48.456: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:06:48.459: INFO: Unable to read jessie_udp@dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:06:48.462: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:06:48.462: INFO: Lookups using dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local wheezy_udp@dns-test-service-2.dns-2608.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2608.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local jessie_udp@dns-test-service-2.dns-2608.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2608.svc.cluster.local]

  Jun 18 07:06:48.468: INFO: Pod client logs for webserver: 
  Jun 18 07:06:48.474: INFO: Pod client logs for querier: 
  Jun 18 07:06:48.483: INFO: Pod client logs for jessie-querier: 
  E0618 07:06:49.030428      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:50.030729      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:51.030755      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:52.031444      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:53.032063      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:06:53.441: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:06:53.444: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:06:53.448: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:06:53.452: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:06:53.456: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:06:53.459: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:06:53.463: INFO: Unable to read jessie_udp@dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:06:53.466: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:06:53.466: INFO: Lookups using dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local wheezy_udp@dns-test-service-2.dns-2608.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2608.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local jessie_udp@dns-test-service-2.dns-2608.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2608.svc.cluster.local]

  Jun 18 07:06:53.473: INFO: Pod client logs for webserver: 
  Jun 18 07:06:53.479: INFO: Pod client logs for querier: 
  Jun 18 07:06:53.484: INFO: Pod client logs for jessie-querier: 
  E0618 07:06:54.032620      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:55.032995      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:56.033755      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:57.034013      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:06:58.034362      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:06:58.441: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:06:58.444: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:06:58.448: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:06:58.451: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:06:58.455: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:06:58.458: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:06:58.462: INFO: Unable to read jessie_udp@dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:06:58.466: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:06:58.466: INFO: Lookups using dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local wheezy_udp@dns-test-service-2.dns-2608.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2608.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local jessie_udp@dns-test-service-2.dns-2608.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2608.svc.cluster.local]

  Jun 18 07:06:58.472: INFO: Pod client logs for webserver: 
  Jun 18 07:06:58.478: INFO: Pod client logs for querier: 
  Jun 18 07:06:58.483: INFO: Pod client logs for jessie-querier: 
  E0618 07:06:59.034936      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:00.035297      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:01.035197      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:02.035349      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:03.035626      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:07:03.439: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:07:03.442: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:07:03.445: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:07:03.449: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:07:03.452: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:07:03.455: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:07:03.459: INFO: Unable to read jessie_udp@dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:07:03.462: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:07:03.462: INFO: Lookups using dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local wheezy_udp@dns-test-service-2.dns-2608.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2608.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local jessie_udp@dns-test-service-2.dns-2608.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2608.svc.cluster.local]

  Jun 18 07:07:03.469: INFO: Pod client logs for webserver: 
  Jun 18 07:07:03.475: INFO: Pod client logs for querier: 
  Jun 18 07:07:03.481: INFO: Pod client logs for jessie-querier: 
  E0618 07:07:04.036316      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:05.036808      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:06.037016      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:07.037164      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:08.037842      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:07:08.440: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:07:08.444: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:07:08.447: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:07:08.450: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:07:08.453: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:07:08.456: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:07:08.459: INFO: Unable to read jessie_udp@dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:07:08.463: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-2608.svc.cluster.local from pod dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458: the server could not find the requested resource (get pods dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458)
  Jun 18 07:07:08.463: INFO: Lookups using dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local wheezy_udp@dns-test-service-2.dns-2608.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2608.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2608.svc.cluster.local jessie_udp@dns-test-service-2.dns-2608.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2608.svc.cluster.local]

  Jun 18 07:07:08.471: INFO: Pod client logs for webserver: 
  Jun 18 07:07:08.477: INFO: Pod client logs for querier: 
  Jun 18 07:07:08.482: INFO: Pod client logs for jessie-querier: 
  E0618 07:07:09.038619      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:10.039627      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:11.040210      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:12.040311      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:13.040546      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:07:13.474: INFO: DNS probes using dns-2608/dns-test-c267d82d-44b7-4294-b51c-6dcf056f3458 succeeded

  Jun 18 07:07:13.474: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 06/18/24 07:07:13.48
  STEP: deleting the test headless service @ 06/18/24 07:07:13.499
  STEP: Destroying namespace "dns-2608" for this suite. @ 06/18/24 07:07:13.514
• [32.185 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 06/18/24 07:07:13.527
  Jun 18 07:07:13.527: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename var-expansion @ 06/18/24 07:07:13.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:07:13.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:07:13.542
  STEP: creating the pod @ 06/18/24 07:07:13.545
  STEP: waiting for pod running @ 06/18/24 07:07:13.551
  E0618 07:07:14.041876      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:15.041446      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 06/18/24 07:07:15.559
  Jun 18 07:07:15.562: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-3765 PodName:var-expansion-923df144-01c9-4901-8e7d-8085fd844caf ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 07:07:15.562: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 07:07:15.564: INFO: ExecWithOptions: Clientset creation
  Jun 18 07:07:15.564: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-3765/pods/var-expansion-923df144-01c9-4901-8e7d-8085fd844caf/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 06/18/24 07:07:15.611
  Jun 18 07:07:15.615: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-3765 PodName:var-expansion-923df144-01c9-4901-8e7d-8085fd844caf ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 07:07:15.615: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 07:07:15.615: INFO: ExecWithOptions: Clientset creation
  Jun 18 07:07:15.615: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-3765/pods/var-expansion-923df144-01c9-4901-8e7d-8085fd844caf/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 06/18/24 07:07:15.66
  E0618 07:07:16.041581      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:07:16.174: INFO: Successfully updated pod "var-expansion-923df144-01c9-4901-8e7d-8085fd844caf"
  STEP: waiting for annotated pod running @ 06/18/24 07:07:16.174
  STEP: deleting the pod gracefully @ 06/18/24 07:07:16.177
  Jun 18 07:07:16.177: INFO: Deleting pod "var-expansion-923df144-01c9-4901-8e7d-8085fd844caf" in namespace "var-expansion-3765"
  Jun 18 07:07:16.182: INFO: Wait up to 5m0s for pod "var-expansion-923df144-01c9-4901-8e7d-8085fd844caf" to be fully deleted
  E0618 07:07:17.042705      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:18.043091      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:19.044094      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:20.044583      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:21.044870      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:22.045299      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:23.045530      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:24.045866      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:25.046341      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:26.047052      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:27.047597      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:28.048474      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:29.048667      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:30.048950      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:31.049801      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:32.050250      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:33.050570      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:34.051098      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:35.051407      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:36.051923      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:37.052147      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:38.052583      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:39.052874      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:40.053574      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:41.053620      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:42.053959      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:43.055277      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:44.055685      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:45.056249      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:46.056394      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:47.057114      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:48.057148      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:49.057620      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:50.058114      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:07:50.275: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3765" for this suite. @ 06/18/24 07:07:50.289
• [36.770 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:57
  STEP: Creating a kubernetes client @ 06/18/24 07:07:50.299
  Jun 18 07:07:50.299: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename events @ 06/18/24 07:07:50.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:07:50.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:07:50.323
  STEP: creating a test event @ 06/18/24 07:07:50.327
  STEP: listing all events in all namespaces @ 06/18/24 07:07:50.33
  STEP: patching the test event @ 06/18/24 07:07:50.335
  STEP: fetching the test event @ 06/18/24 07:07:50.34
  STEP: updating the test event @ 06/18/24 07:07:50.343
  STEP: getting the test event @ 06/18/24 07:07:50.355
  STEP: deleting the test event @ 06/18/24 07:07:50.358
  STEP: listing all events in all namespaces @ 06/18/24 07:07:50.362
  Jun 18 07:07:50.365: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4156" for this suite. @ 06/18/24 07:07:50.37
• [0.075 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:45
  STEP: Creating a kubernetes client @ 06/18/24 07:07:50.375
  Jun 18 07:07:50.375: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename downward-api @ 06/18/24 07:07:50.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:07:50.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:07:50.393
  STEP: Creating a pod to test downward api env vars @ 06/18/24 07:07:50.396
  E0618 07:07:51.059113      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:52.059714      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:53.060585      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:54.060782      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 07:07:54.416
  Jun 18 07:07:54.419: INFO: Trying to get logs from node ck-128-worker-2 pod downward-api-1ee62ceb-9734-4086-92d5-2f8a9de70b0a container dapi-container: <nil>
  STEP: delete the pod @ 06/18/24 07:07:54.428
  Jun 18 07:07:54.443: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7655" for this suite. @ 06/18/24 07:07:54.448
• [4.081 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 06/18/24 07:07:54.457
  Jun 18 07:07:54.457: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename secrets @ 06/18/24 07:07:54.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:07:54.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:07:54.474
  Jun 18 07:07:54.505: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6139" for this suite. @ 06/18/24 07:07:54.51
• [0.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:430
  STEP: Creating a kubernetes client @ 06/18/24 07:07:54.531
  Jun 18 07:07:54.531: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename job @ 06/18/24 07:07:54.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:07:54.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:07:54.551
  STEP: Creating a job @ 06/18/24 07:07:54.553
  STEP: Ensuring job reaches completions @ 06/18/24 07:07:54.56
  E0618 07:07:55.062249      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:56.062031      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:57.063226      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:58.063548      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:07:59.064704      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:00.064600      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:01.064966      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:02.065377      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:03.065554      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:04.065737      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:08:04.565: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4603" for this suite. @ 06/18/24 07:08:04.572
• [10.047 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 06/18/24 07:08:04.578
  Jun 18 07:08:04.578: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename projected @ 06/18/24 07:08:04.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:08:04.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:08:04.601
  STEP: Creating configMap with name projected-configmap-test-volume-fe77fe79-7b7f-4c5f-bce7-37552bffc1aa @ 06/18/24 07:08:04.605
  STEP: Creating a pod to test consume configMaps @ 06/18/24 07:08:04.61
  E0618 07:08:05.066447      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:06.066591      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:07.067471      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:08.067577      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 07:08:08.633
  Jun 18 07:08:08.640: INFO: Trying to get logs from node ck-128-worker-2 pod pod-projected-configmaps-b4374638-0c49-4e08-8e3b-6fda39c5d08f container agnhost-container: <nil>
  STEP: delete the pod @ 06/18/24 07:08:08.65
  Jun 18 07:08:08.675: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5766" for this suite. @ 06/18/24 07:08:08.686
• [4.117 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:486
  STEP: Creating a kubernetes client @ 06/18/24 07:08:08.698
  Jun 18 07:08:08.698: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename security-context-test @ 06/18/24 07:08:08.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:08:08.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:08:08.73
  E0618 07:08:09.068076      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:10.068454      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:11.069247      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:12.069946      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:08:12.768: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3530" for this suite. @ 06/18/24 07:08:12.772
• [4.079 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:177
  STEP: Creating a kubernetes client @ 06/18/24 07:08:12.778
  Jun 18 07:08:12.778: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename emptydir @ 06/18/24 07:08:12.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:08:12.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:08:12.793
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 06/18/24 07:08:12.796
  E0618 07:08:13.071026      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:14.071610      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:15.071705      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:16.071849      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 07:08:16.815
  Jun 18 07:08:16.818: INFO: Trying to get logs from node ck-128-worker-1 pod pod-2d07ba06-4c96-4e6c-a98a-fb14fec3761d container test-container: <nil>
  STEP: delete the pod @ 06/18/24 07:08:16.839
  Jun 18 07:08:16.857: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3718" for this suite. @ 06/18/24 07:08:16.862
• [4.091 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:122
  STEP: Creating a kubernetes client @ 06/18/24 07:08:16.87
  Jun 18 07:08:16.870: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename podtemplate @ 06/18/24 07:08:16.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:08:16.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:08:16.889
  STEP: Create set of pod templates @ 06/18/24 07:08:16.892
  Jun 18 07:08:16.896: INFO: created test-podtemplate-1
  Jun 18 07:08:16.900: INFO: created test-podtemplate-2
  Jun 18 07:08:16.904: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 06/18/24 07:08:16.904
  STEP: delete collection of pod templates @ 06/18/24 07:08:16.907
  Jun 18 07:08:16.907: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 06/18/24 07:08:16.918
  Jun 18 07:08:16.918: INFO: requesting list of pod templates to confirm quantity
  Jun 18 07:08:16.920: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3395" for this suite. @ 06/18/24 07:08:16.924
• [0.059 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:331
  STEP: Creating a kubernetes client @ 06/18/24 07:08:16.929
  Jun 18 07:08:16.929: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename statefulset @ 06/18/24 07:08:16.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:08:16.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:08:16.946
  STEP: Creating service test in namespace statefulset-7188 @ 06/18/24 07:08:16.949
  STEP: Creating a new StatefulSet @ 06/18/24 07:08:16.957
  Jun 18 07:08:16.969: INFO: Found 0 stateful pods, waiting for 3
  E0618 07:08:17.072535      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:18.072722      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:19.073532      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:20.073886      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:21.074347      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:22.075156      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:23.075645      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:24.076086      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:25.077081      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:26.077797      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:08:26.977: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 18 07:08:26.977: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 18 07:08:26.977: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 06/18/24 07:08:26.987
  Jun 18 07:08:27.013: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 06/18/24 07:08:27.013
  E0618 07:08:27.078727      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:28.079484      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:29.079874      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:30.079964      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:31.080157      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:32.080661      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:33.080948      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:34.081457      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:35.082347      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:36.083148      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 06/18/24 07:08:37.033
  STEP: Performing a canary update @ 06/18/24 07:08:37.033
  Jun 18 07:08:37.053: INFO: Updating stateful set ss2
  Jun 18 07:08:37.060: INFO: Waiting for Pod statefulset-7188/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0618 07:08:37.083533      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:38.083738      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:39.084684      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:40.085041      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:41.085415      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:42.085938      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:43.086471      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:44.086834      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:45.087457      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:46.088032      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 06/18/24 07:08:47.069
  E0618 07:08:47.088723      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:08:47.111: INFO: Found 2 stateful pods, waiting for 3
  E0618 07:08:48.089285      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:49.089621      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:50.090564      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:51.091002      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:52.091104      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:53.091487      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:54.092382      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:55.092440      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:56.093038      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:57.093449      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:08:57.116: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 18 07:08:57.116: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 18 07:08:57.116: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 06/18/24 07:08:57.123
  Jun 18 07:08:57.143: INFO: Updating stateful set ss2
  Jun 18 07:08:57.153: INFO: Waiting for Pod statefulset-7188/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0618 07:08:58.093717      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:08:59.093985      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:00.094371      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:01.094618      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:02.094909      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:03.095460      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:04.095955      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:05.096564      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:06.097618      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:07.098057      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:09:07.183: INFO: Updating stateful set ss2
  Jun 18 07:09:07.192: INFO: Waiting for StatefulSet statefulset-7188/ss2 to complete update
  Jun 18 07:09:07.192: INFO: Waiting for Pod statefulset-7188/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0618 07:09:08.098774      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:09.099244      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:10.099656      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:11.099760      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:12.100612      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:13.101011      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:14.101088      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:15.101931      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:16.102055      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:17.102596      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:09:17.202: INFO: Deleting all statefulset in ns statefulset-7188
  Jun 18 07:09:17.205: INFO: Scaling statefulset ss2 to 0
  E0618 07:09:18.103728      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:19.104123      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:20.105078      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:21.104675      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:22.105071      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:23.105494      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:24.105795      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:25.106479      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:26.107134      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:27.107463      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:09:27.225: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 18 07:09:27.228: INFO: Deleting statefulset ss2
  Jun 18 07:09:27.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7188" for this suite. @ 06/18/24 07:09:27.246
• [70.323 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2202
  STEP: Creating a kubernetes client @ 06/18/24 07:09:27.258
  Jun 18 07:09:27.258: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename services @ 06/18/24 07:09:27.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:09:27.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:09:27.278
  STEP: creating service in namespace services-7309 @ 06/18/24 07:09:27.282
  STEP: creating service affinity-nodeport in namespace services-7309 @ 06/18/24 07:09:27.282
  STEP: creating replication controller affinity-nodeport in namespace services-7309 @ 06/18/24 07:09:27.296
  I0618 07:09:27.303341      18 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-7309, replica count: 3
  E0618 07:09:28.107803      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:29.108554      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:30.108857      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0618 07:09:30.354727      18 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 18 07:09:30.370: INFO: Creating new exec pod
  E0618 07:09:31.109035      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:32.109769      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:33.110474      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:09:33.392: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-7309 exec execpod-affinitypgqw5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Jun 18 07:09:33.529: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Jun 18 07:09:33.529: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 07:09:33.529: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-7309 exec execpod-affinitypgqw5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.102.17.15 80'
  Jun 18 07:09:33.632: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.102.17.15 80\nConnection to 10.102.17.15 80 port [tcp/http] succeeded!\n"
  Jun 18 07:09:33.633: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 07:09:33.633: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-7309 exec execpod-affinitypgqw5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.190.169 31193'
  Jun 18 07:09:33.743: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.190.169 31193\nConnection to 192.168.190.169 31193 port [tcp/*] succeeded!\n"
  Jun 18 07:09:33.743: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 07:09:33.743: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-7309 exec execpod-affinitypgqw5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.190.167 31193'
  Jun 18 07:09:33.851: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.190.167 31193\nConnection to 192.168.190.167 31193 port [tcp/*] succeeded!\n"
  Jun 18 07:09:33.851: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 07:09:33.851: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-7309 exec execpod-affinitypgqw5 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.190.169:31193/ ; done'
  Jun 18 07:09:34.049: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31193/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31193/\n"
  Jun 18 07:09:34.049: INFO: stdout: "\naffinity-nodeport-np2j8\naffinity-nodeport-np2j8\naffinity-nodeport-np2j8\naffinity-nodeport-np2j8\naffinity-nodeport-np2j8\naffinity-nodeport-np2j8\naffinity-nodeport-np2j8\naffinity-nodeport-np2j8\naffinity-nodeport-np2j8\naffinity-nodeport-np2j8\naffinity-nodeport-np2j8\naffinity-nodeport-np2j8\naffinity-nodeport-np2j8\naffinity-nodeport-np2j8\naffinity-nodeport-np2j8\naffinity-nodeport-np2j8"
  Jun 18 07:09:34.049: INFO: Received response from host: affinity-nodeport-np2j8
  Jun 18 07:09:34.049: INFO: Received response from host: affinity-nodeport-np2j8
  Jun 18 07:09:34.049: INFO: Received response from host: affinity-nodeport-np2j8
  Jun 18 07:09:34.049: INFO: Received response from host: affinity-nodeport-np2j8
  Jun 18 07:09:34.049: INFO: Received response from host: affinity-nodeport-np2j8
  Jun 18 07:09:34.049: INFO: Received response from host: affinity-nodeport-np2j8
  Jun 18 07:09:34.049: INFO: Received response from host: affinity-nodeport-np2j8
  Jun 18 07:09:34.049: INFO: Received response from host: affinity-nodeport-np2j8
  Jun 18 07:09:34.049: INFO: Received response from host: affinity-nodeport-np2j8
  Jun 18 07:09:34.049: INFO: Received response from host: affinity-nodeport-np2j8
  Jun 18 07:09:34.049: INFO: Received response from host: affinity-nodeport-np2j8
  Jun 18 07:09:34.049: INFO: Received response from host: affinity-nodeport-np2j8
  Jun 18 07:09:34.049: INFO: Received response from host: affinity-nodeport-np2j8
  Jun 18 07:09:34.049: INFO: Received response from host: affinity-nodeport-np2j8
  Jun 18 07:09:34.049: INFO: Received response from host: affinity-nodeport-np2j8
  Jun 18 07:09:34.049: INFO: Received response from host: affinity-nodeport-np2j8
  Jun 18 07:09:34.049: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Jun 18 07:09:34.055: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-7309, will wait for the garbage collector to delete the pods @ 06/18/24 07:09:34.062
  E0618 07:09:34.112895      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:09:34.123: INFO: Deleting ReplicationController affinity-nodeport took: 4.593903ms
  Jun 18 07:09:34.224: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.248004ms
  E0618 07:09:35.113742      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:36.114685      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:37.114877      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-7309" for this suite. @ 06/18/24 07:09:37.447
• [10.197 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:95
  STEP: Creating a kubernetes client @ 06/18/24 07:09:37.455
  Jun 18 07:09:37.455: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename pod-network-test @ 06/18/24 07:09:37.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:09:37.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:09:37.473
  STEP: Performing setup for networking test in namespace pod-network-test-9414 @ 06/18/24 07:09:37.477
  STEP: creating a selector @ 06/18/24 07:09:37.477
  STEP: Creating the service pods in kubernetes @ 06/18/24 07:09:37.477
  Jun 18 07:09:37.477: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0618 07:09:38.115116      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:39.115643      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:40.115699      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:41.116456      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:42.117073      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:43.117668      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:44.117621      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:45.117901      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:46.118828      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:47.118982      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:48.119512      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:49.119871      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:50.120318      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:51.120997      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:52.121910      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:53.122261      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:54.122458      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:55.123485      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:56.123542      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:57.123938      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:58.124071      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:09:59.124379      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 06/18/24 07:09:59.606
  E0618 07:10:00.125329      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:01.126064      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:10:01.626: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jun 18 07:10:01.626: INFO: Breadth first check of 172.17.152.49 on host 192.168.190.169...
  Jun 18 07:10:01.631: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.17.196.237:9080/dial?request=hostname&protocol=udp&host=172.17.152.49&port=8081&tries=1'] Namespace:pod-network-test-9414 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 07:10:01.631: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 07:10:01.633: INFO: ExecWithOptions: Clientset creation
  Jun 18 07:10:01.633: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9414/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.17.196.237%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.17.152.49%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 18 07:10:01.698: INFO: Waiting for responses: map[]
  Jun 18 07:10:01.698: INFO: reached 172.17.152.49 after 0/1 tries
  Jun 18 07:10:01.698: INFO: Breadth first check of 172.17.196.233 on host 192.168.190.166...
  Jun 18 07:10:01.702: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.17.196.237:9080/dial?request=hostname&protocol=udp&host=172.17.196.233&port=8081&tries=1'] Namespace:pod-network-test-9414 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 07:10:01.702: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 07:10:01.703: INFO: ExecWithOptions: Clientset creation
  Jun 18 07:10:01.703: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9414/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.17.196.237%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.17.196.233%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 18 07:10:01.745: INFO: Waiting for responses: map[]
  Jun 18 07:10:01.745: INFO: reached 172.17.196.233 after 0/1 tries
  Jun 18 07:10:01.745: INFO: Breadth first check of 172.17.66.178 on host 192.168.190.167...
  Jun 18 07:10:01.749: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.17.196.237:9080/dial?request=hostname&protocol=udp&host=172.17.66.178&port=8081&tries=1'] Namespace:pod-network-test-9414 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 07:10:01.749: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 07:10:01.750: INFO: ExecWithOptions: Clientset creation
  Jun 18 07:10:01.750: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9414/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.17.196.237%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.17.66.178%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 18 07:10:01.791: INFO: Waiting for responses: map[]
  Jun 18 07:10:01.791: INFO: reached 172.17.66.178 after 0/1 tries
  Jun 18 07:10:01.791: INFO: Going to retry 0 out of 3 pods....
  Jun 18 07:10:01.791: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9414" for this suite. @ 06/18/24 07:10:01.797
• [24.348 seconds]
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 06/18/24 07:10:01.807
  Jun 18 07:10:01.808: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename containers @ 06/18/24 07:10:01.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:10:01.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:10:01.832
  STEP: Creating a pod to test override all @ 06/18/24 07:10:01.836
  E0618 07:10:02.126528      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:03.127008      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:04.128074      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:05.128897      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 07:10:05.856
  Jun 18 07:10:05.859: INFO: Trying to get logs from node ck-128-worker-1 pod client-containers-95b73b08-ab1c-4cca-8987-7ad38f87f933 container agnhost-container: <nil>
  STEP: delete the pod @ 06/18/24 07:10:05.878
  Jun 18 07:10:05.894: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2749" for this suite. @ 06/18/24 07:10:05.899
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 06/18/24 07:10:05.908
  Jun 18 07:10:05.908: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename deployment @ 06/18/24 07:10:05.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:10:05.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:10:05.925
  Jun 18 07:10:05.936: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  E0618 07:10:06.129237      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:07.129808      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:08.130318      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:09.131787      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:10.131434      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:10:10.941: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/18/24 07:10:10.941
  Jun 18 07:10:10.942: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 06/18/24 07:10:10.953
  Jun 18 07:10:10.965: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4534",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9c31f4ed-60b4-430a-b7aa-a0f69f722a3f",
      ResourceVersion: (string) (len=5) "39799",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854291410,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854291410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 18 07:10:10.973: INFO: New ReplicaSet "test-cleanup-deployment-7bc75bbdf6" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4534",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a1d8c7f8-8516-4e27-bf4d-b7e20b130397",
      ResourceVersion: (string) (len=5) "39802",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854291410,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "9c31f4ed-60b4-430a-b7aa-a0f69f722a3f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854291410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 63 33 31 66 34  65 64 2d 36 30 62 34 2d  |\"9c31f4ed-60b4-|
              00000120  34 33 30 61 2d 62 37 61  61 2d 61 30 66 36 39 66  |430a-b7aa-a0f69f|
              00000130  37 32 32 61 33 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |722a3f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 18 07:10:10.975: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Jun 18 07:10:10.975: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4534",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a2d7a923-8f17-4d8c-9752-daa5729e4851",
      ResourceVersion: (string) (len=5) "39801",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854291405,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "9c31f4ed-60b4-430a-b7aa-a0f69f722a3f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854291405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854291407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854291410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 39 63 33 31 66 34 65  |"uid\":\"9c31f4e|
              00000040  64 2d 36 30 62 34 2d 34  33 30 61 2d 62 37 61 61  |d-60b4-430a-b7aa|
              00000050  2d 61 30 66 36 39 66 37  32 32 61 33 66 5c 22 7d  |-a0f69f722a3f\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 18 07:10:10.991: INFO: Pod "test-cleanup-controller-s5wh8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-s5wh8",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-4534",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "12f2cbb8-4b9a-48cb-aa58-5385022562cc",
      ResourceVersion: (string) (len=5) "39761",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854291405,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3bb09dd28449e479e4e0410eec88b0d665477d8cf52ce451a2d491b640707a41",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.17.152.50/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.17.152.50/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "a2d7a923-8f17-4d8c-9752-daa5729e4851",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854291405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  61 32 64 37 61 39 32 33  |uid\":\"a2d7a923|
              00000080  2d 38 66 31 37 2d 34 64  38 63 2d 39 37 35 32 2d  |-8f17-4d8c-9752-|
              00000090  64 61 61 35 37 32 39 65  34 38 35 31 5c 22 7d 22  |daa5729e4851\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854291406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854291407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 31 37 2e 31  35 32 2e 35 30 5c 22 7d  |172.17.152.50\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-czklt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-czklt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854291405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854291407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854291407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854291405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "172.17.152.50",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.17.152.50"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854291405,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854291406,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://c37a2b0cf7253c435d238de5978ae979d770904306ba2596d91f70fa22c57235",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 07:10:10.994: INFO: Pod "test-cleanup-deployment-7bc75bbdf6-n6whf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-7bc75bbdf6-n6whf",
      GenerateName: (string) (len=35) "test-cleanup-deployment-7bc75bbdf6-",
      Namespace: (string) (len=15) "deployment-4534",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "234c7c0a-8c3d-45b2-b5fe-c88c69b532c7",
      ResourceVersion: (string) (len=5) "39808",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854291410,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
          UID: (types.UID) (len=36) "a1d8c7f8-8516-4e27-bf4d-b7e20b130397",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854291410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  64 38 63 37 66 38 2d 38  |d\":\"a1d8c7f8-8|
              00000090  35 31 36 2d 34 65 32 37  2d 62 66 34 64 2d 62 37  |516-4e27-bf4d-b7|
              000000a0  65 32 30 62 31 33 30 33  39 37 5c 22 7d 22 3a 7b  |e20b130397\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sn9dn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sn9dn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-128-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854291410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 07:10:10.995: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4534" for this suite. @ 06/18/24 07:10:11.007
• [5.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:157
  STEP: Creating a kubernetes client @ 06/18/24 07:10:11.029
  Jun 18 07:10:11.029: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename emptydir @ 06/18/24 07:10:11.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:10:11.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:10:11.049
  STEP: Creating a pod to test emptydir volume type on node default medium @ 06/18/24 07:10:11.053
  E0618 07:10:11.132115      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:12.132694      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:13.133247      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:14.133582      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 07:10:15.077
  Jun 18 07:10:15.082: INFO: Trying to get logs from node ck-128-worker-3 pod pod-267f08d4-1760-4e6f-8505-3ba809bb2027 container test-container: <nil>
  STEP: delete the pod @ 06/18/24 07:10:15.094
  Jun 18 07:10:15.113: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6591" for this suite. @ 06/18/24 07:10:15.119
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 06/18/24 07:10:15.131
  Jun 18 07:10:15.131: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename webhook @ 06/18/24 07:10:15.132
  E0618 07:10:15.134520      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:10:15.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:10:15.15
  STEP: Setting up server cert @ 06/18/24 07:10:15.169
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 07:10:15.797
  STEP: Deploying the webhook pod @ 06/18/24 07:10:15.804
  STEP: Wait for the deployment to be ready @ 06/18/24 07:10:15.816
  Jun 18 07:10:15.823: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0618 07:10:16.135643      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:17.136208      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/18/24 07:10:17.835
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 07:10:17.85
  E0618 07:10:18.136441      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:10:18.850: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 06/18/24 07:10:18.856
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 06/18/24 07:10:18.879
  STEP: Creating a configMap that should not be mutated @ 06/18/24 07:10:18.885
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 06/18/24 07:10:18.892
  STEP: Creating a configMap that should be mutated @ 06/18/24 07:10:18.899
  Jun 18 07:10:18.921: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8834" for this suite. @ 06/18/24 07:10:18.969
  STEP: Destroying namespace "webhook-markers-1329" for this suite. @ 06/18/24 07:10:18.976
• [3.851 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:268
  STEP: Creating a kubernetes client @ 06/18/24 07:10:18.982
  Jun 18 07:10:18.982: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename downward-api @ 06/18/24 07:10:18.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:10:19.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:10:19.006
  STEP: Creating a pod to test downward api env vars @ 06/18/24 07:10:19.009
  E0618 07:10:19.136988      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:20.137829      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:21.138239      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:22.138624      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 07:10:23.032
  Jun 18 07:10:23.035: INFO: Trying to get logs from node ck-128-worker-1 pod downward-api-9c76138e-a4ab-4e14-9205-0e77238ec9b3 container dapi-container: <nil>
  STEP: delete the pod @ 06/18/24 07:10:23.049
  Jun 18 07:10:23.061: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3923" for this suite. @ 06/18/24 07:10:23.066
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 06/18/24 07:10:23.074
  Jun 18 07:10:23.074: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename subpath @ 06/18/24 07:10:23.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:10:23.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:10:23.095
  STEP: Setting up data @ 06/18/24 07:10:23.098
  STEP: Creating pod pod-subpath-test-projected-8gg8 @ 06/18/24 07:10:23.106
  STEP: Creating a pod to test atomic-volume-subpath @ 06/18/24 07:10:23.106
  E0618 07:10:23.139628      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:24.139881      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:25.140651      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:26.141052      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:27.141724      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:28.142228      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:29.142212      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:30.142767      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:31.143048      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:32.143826      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:33.144520      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:34.144886      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:35.145614      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:36.146022      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:37.146541      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:38.147109      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:39.147473      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:40.147959      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:41.148474      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:42.148669      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:43.149225      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:44.149409      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:45.150202      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:46.150603      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:47.151437      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 07:10:47.176
  Jun 18 07:10:47.180: INFO: Trying to get logs from node ck-128-worker-2 pod pod-subpath-test-projected-8gg8 container test-container-subpath-projected-8gg8: <nil>
  STEP: delete the pod @ 06/18/24 07:10:47.203
  STEP: Deleting pod pod-subpath-test-projected-8gg8 @ 06/18/24 07:10:47.22
  Jun 18 07:10:47.220: INFO: Deleting pod "pod-subpath-test-projected-8gg8" in namespace "subpath-8618"
  Jun 18 07:10:47.223: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8618" for this suite. @ 06/18/24 07:10:47.229
• [24.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 06/18/24 07:10:47.24
  Jun 18 07:10:47.240: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 06/18/24 07:10:47.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:10:47.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:10:47.267
  STEP: creating a target pod @ 06/18/24 07:10:47.271
  E0618 07:10:48.151549      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:49.152307      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 06/18/24 07:10:49.29
  E0618 07:10:50.152663      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:51.153002      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 06/18/24 07:10:51.312
  Jun 18 07:10:51.312: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4471 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 07:10:51.312: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 07:10:51.313: INFO: ExecWithOptions: Clientset creation
  Jun 18 07:10:51.313: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-4471/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Jun 18 07:10:51.364: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 06/18/24 07:10:51.371
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 06/18/24 07:10:51.376
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 06/18/24 07:10:51.388
  Jun 18 07:10:51.393: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-4471" for this suite. @ 06/18/24 07:10:51.399
• [4.164 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 06/18/24 07:10:51.405
  Jun 18 07:10:51.405: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename kubelet-test @ 06/18/24 07:10:51.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:10:51.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:10:51.427
  E0618 07:10:52.153069      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:53.153283      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:10:53.454: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6353" for this suite. @ 06/18/24 07:10:53.46
• [2.063 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:640
  STEP: Creating a kubernetes client @ 06/18/24 07:10:53.468
  Jun 18 07:10:53.468: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename statefulset @ 06/18/24 07:10:53.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:10:53.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:10:53.484
  STEP: Creating service test in namespace statefulset-1049 @ 06/18/24 07:10:53.487
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 06/18/24 07:10:53.491
  STEP: Creating stateful set ss in namespace statefulset-1049 @ 06/18/24 07:10:53.494
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-1049 @ 06/18/24 07:10:53.499
  Jun 18 07:10:53.502: INFO: Found 0 stateful pods, waiting for 1
  E0618 07:10:54.154430      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:55.155222      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:56.155518      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:57.155952      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:58.156358      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:10:59.156704      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:00.157571      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:01.157948      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:02.158333      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:03.158445      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:11:03.507: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 06/18/24 07:11:03.507
  Jun 18 07:11:03.512: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=statefulset-1049 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 18 07:11:03.647: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 18 07:11:03.647: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 18 07:11:03.647: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 18 07:11:03.651: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0618 07:11:04.158504      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:05.159306      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:06.159427      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:07.159744      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:08.160142      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:09.161021      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:10.161955      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:11.162227      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:12.162693      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:13.163105      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:11:13.656: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun 18 07:11:13.656: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun 18 07:11:13.671: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999635s
  E0618 07:11:14.163494      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:11:14.677: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.996034352s
  E0618 07:11:15.164023      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:11:15.683: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.990348226s
  E0618 07:11:16.164103      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:11:16.689: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.983344304s
  E0618 07:11:17.164480      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:11:17.695: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.97793006s
  E0618 07:11:18.164747      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:11:18.700: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.972789861s
  E0618 07:11:19.165841      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:11:19.705: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.96744439s
  E0618 07:11:20.166829      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:11:20.710: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.962550907s
  E0618 07:11:21.167134      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:11:21.716: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.956494402s
  E0618 07:11:22.167314      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:11:22.722: INFO: Verifying statefulset ss doesn't scale past 1 for another 951.19189ms
  E0618 07:11:23.167535      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-1049 @ 06/18/24 07:11:23.723
  Jun 18 07:11:23.729: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=statefulset-1049 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 18 07:11:23.876: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 18 07:11:23.876: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 18 07:11:23.876: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 18 07:11:23.880: INFO: Found 1 stateful pods, waiting for 3
  E0618 07:11:24.167660      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:25.168030      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:26.168493      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:27.169159      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:28.169764      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:29.169936      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:30.170384      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:31.170542      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:32.170811      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:33.171299      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:11:33.887: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 18 07:11:33.887: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 18 07:11:33.887: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 06/18/24 07:11:33.887
  STEP: Scale down will halt with unhealthy stateful pod @ 06/18/24 07:11:33.887
  Jun 18 07:11:33.894: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=statefulset-1049 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 18 07:11:34.048: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 18 07:11:34.048: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 18 07:11:34.048: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 18 07:11:34.048: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=statefulset-1049 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 18 07:11:34.170: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 18 07:11:34.170: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 18 07:11:34.170: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 18 07:11:34.170: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=statefulset-1049 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0618 07:11:34.171523      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:11:34.325: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 18 07:11:34.325: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 18 07:11:34.325: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 18 07:11:34.325: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun 18 07:11:34.334: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0618 07:11:35.172634      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:36.173596      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:37.173913      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:38.174437      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:39.174823      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:40.175432      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:41.175772      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:42.176093      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:43.176509      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:44.177338      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:11:44.346: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun 18 07:11:44.346: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Jun 18 07:11:44.346: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Jun 18 07:11:44.363: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999277s
  E0618 07:11:45.178446      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:11:45.370: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.99491072s
  E0618 07:11:46.179216      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:11:46.377: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.988283585s
  E0618 07:11:47.179854      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:11:47.382: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.981641536s
  E0618 07:11:48.180650      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:11:48.388: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.976708473s
  E0618 07:11:49.181413      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:11:49.395: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.969872769s
  E0618 07:11:50.182253      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:11:50.401: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.964066292s
  E0618 07:11:51.182453      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:11:51.406: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.95800028s
  E0618 07:11:52.182913      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:11:52.411: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.953432147s
  E0618 07:11:53.183576      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:11:53.418: INFO: Verifying statefulset ss doesn't scale past 3 for another 947.872416ms
  E0618 07:11:54.184072      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-1049 @ 06/18/24 07:11:54.419
  Jun 18 07:11:54.425: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=statefulset-1049 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 18 07:11:54.558: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 18 07:11:54.558: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 18 07:11:54.558: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 18 07:11:54.558: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=statefulset-1049 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 18 07:11:54.681: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 18 07:11:54.681: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 18 07:11:54.681: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 18 07:11:54.681: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=statefulset-1049 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 18 07:11:54.816: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 18 07:11:54.816: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 18 07:11:54.816: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 18 07:11:54.816: INFO: Scaling statefulset ss to 0
  E0618 07:11:55.184434      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:56.184780      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:57.185485      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:58.186289      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:11:59.187453      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:00.188221      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:01.188570      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:02.188889      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:03.189137      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:04.189396      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 06/18/24 07:12:04.828
  Jun 18 07:12:04.829: INFO: Deleting all statefulset in ns statefulset-1049
  Jun 18 07:12:04.832: INFO: Scaling statefulset ss to 0
  Jun 18 07:12:04.837: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 18 07:12:04.840: INFO: Deleting statefulset ss
  Jun 18 07:12:04.851: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1049" for this suite. @ 06/18/24 07:12:04.856
• [71.394 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 06/18/24 07:12:04.864
  Jun 18 07:12:04.864: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/18/24 07:12:04.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:12:04.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:12:04.882
  Jun 18 07:12:04.886: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  E0618 07:12:05.190236      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:06.190689      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/18/24 07:12:06.363
  Jun 18 07:12:06.363: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=crd-publish-openapi-5626 --namespace=crd-publish-openapi-5626 create -f -'
  Jun 18 07:12:07.052: INFO: stderr: ""
  Jun 18 07:12:07.052: INFO: stdout: "e2e-test-crd-publish-openapi-9659-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Jun 18 07:12:07.052: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=crd-publish-openapi-5626 --namespace=crd-publish-openapi-5626 delete e2e-test-crd-publish-openapi-9659-crds test-cr'
  Jun 18 07:12:07.150: INFO: stderr: ""
  Jun 18 07:12:07.150: INFO: stdout: "e2e-test-crd-publish-openapi-9659-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Jun 18 07:12:07.150: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=crd-publish-openapi-5626 --namespace=crd-publish-openapi-5626 apply -f -'
  E0618 07:12:07.191449      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:12:07.358: INFO: stderr: ""
  Jun 18 07:12:07.358: INFO: stdout: "e2e-test-crd-publish-openapi-9659-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Jun 18 07:12:07.358: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=crd-publish-openapi-5626 --namespace=crd-publish-openapi-5626 delete e2e-test-crd-publish-openapi-9659-crds test-cr'
  Jun 18 07:12:07.443: INFO: stderr: ""
  Jun 18 07:12:07.443: INFO: stdout: "e2e-test-crd-publish-openapi-9659-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 06/18/24 07:12:07.443
  Jun 18 07:12:07.443: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=crd-publish-openapi-5626 explain e2e-test-crd-publish-openapi-9659-crds'
  Jun 18 07:12:07.639: INFO: stderr: ""
  Jun 18 07:12:07.639: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-9659-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0618 07:12:08.191763      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:12:09.154: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5626" for this suite. @ 06/18/24 07:12:09.169
• [4.311 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:808
  STEP: Creating a kubernetes client @ 06/18/24 07:12:09.177
  Jun 18 07:12:09.177: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename svcaccounts @ 06/18/24 07:12:09.179
  E0618 07:12:09.192556      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:12:09.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:12:09.198
  STEP: Creating ServiceAccount "e2e-sa-9tvzg"  @ 06/18/24 07:12:09.201
  Jun 18 07:12:09.205: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-9tvzg"  @ 06/18/24 07:12:09.205
  Jun 18 07:12:09.216: INFO: AutomountServiceAccountToken: true
  Jun 18 07:12:09.216: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9980" for this suite. @ 06/18/24 07:12:09.22
• [0.056 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 06/18/24 07:12:09.233
  Jun 18 07:12:09.233: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename projected @ 06/18/24 07:12:09.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:12:09.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:12:09.25
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 07:12:09.254
  E0618 07:12:10.192844      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:11.193371      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:12.194323      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:13.194955      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 07:12:13.276
  Jun 18 07:12:13.278: INFO: Trying to get logs from node ck-128-worker-1 pod downwardapi-volume-873bdf5d-c9b0-4db3-9f7d-2e3e60544b60 container client-container: <nil>
  STEP: delete the pod @ 06/18/24 07:12:13.284
  Jun 18 07:12:13.295: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4991" for this suite. @ 06/18/24 07:12:13.3
• [4.072 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:218
  STEP: Creating a kubernetes client @ 06/18/24 07:12:13.305
  Jun 18 07:12:13.305: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename downward-api @ 06/18/24 07:12:13.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:12:13.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:12:13.324
  STEP: Creating a pod to test downward api env vars @ 06/18/24 07:12:13.328
  E0618 07:12:14.195064      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:15.195043      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:16.195599      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:17.196124      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 07:12:17.348
  Jun 18 07:12:17.351: INFO: Trying to get logs from node ck-128-worker-1 pod downward-api-f63bba8b-0719-4128-a1e7-bf0ab71606d7 container dapi-container: <nil>
  STEP: delete the pod @ 06/18/24 07:12:17.36
  Jun 18 07:12:17.373: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7957" for this suite. @ 06/18/24 07:12:17.377
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 06/18/24 07:12:17.383
  Jun 18 07:12:17.383: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename webhook @ 06/18/24 07:12:17.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:12:17.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:12:17.399
  STEP: Setting up server cert @ 06/18/24 07:12:17.419
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 07:12:17.607
  STEP: Deploying the webhook pod @ 06/18/24 07:12:17.618
  STEP: Wait for the deployment to be ready @ 06/18/24 07:12:17.631
  Jun 18 07:12:17.642: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0618 07:12:18.196199      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:19.196880      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/18/24 07:12:19.656
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 07:12:19.671
  E0618 07:12:20.197296      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:12:20.671: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 06/18/24 07:12:20.729
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/18/24 07:12:20.765
  STEP: Deleting the collection of validation webhooks @ 06/18/24 07:12:20.789
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/18/24 07:12:20.825
  Jun 18 07:12:20.833: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7733" for this suite. @ 06/18/24 07:12:20.87
  STEP: Destroying namespace "webhook-markers-9449" for this suite. @ 06/18/24 07:12:20.874
• [3.499 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 06/18/24 07:12:20.883
  Jun 18 07:12:20.883: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename disruption @ 06/18/24 07:12:20.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:12:20.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:12:20.9
  STEP: Creating a pdb that targets all three pods in a test replica set @ 06/18/24 07:12:20.903
  STEP: Waiting for the pdb to be processed @ 06/18/24 07:12:20.908
  STEP: First trying to evict a pod which shouldn't be evictable @ 06/18/24 07:12:20.919
  STEP: Waiting for all pods to be running @ 06/18/24 07:12:20.919
  Jun 18 07:12:20.922: INFO: pods: 0 < 3
  E0618 07:12:21.198293      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:22.198974      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 06/18/24 07:12:22.929
  STEP: Updating the pdb to allow a pod to be evicted @ 06/18/24 07:12:22.943
  STEP: Waiting for the pdb to be processed @ 06/18/24 07:12:22.952
  E0618 07:12:23.199023      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:24.199797      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 06/18/24 07:12:24.961
  STEP: Waiting for all pods to be running @ 06/18/24 07:12:24.961
  STEP: Waiting for the pdb to observed all healthy pods @ 06/18/24 07:12:24.969
  STEP: Patching the pdb to disallow a pod to be evicted @ 06/18/24 07:12:25
  STEP: Waiting for the pdb to be processed @ 06/18/24 07:12:25.028
  E0618 07:12:25.200866      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:26.200983      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 06/18/24 07:12:27.036
  STEP: locating a running pod @ 06/18/24 07:12:27.044
  STEP: Deleting the pdb to allow a pod to be evicted @ 06/18/24 07:12:27.061
  STEP: Waiting for the pdb to be deleted @ 06/18/24 07:12:27.067
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 06/18/24 07:12:27.071
  STEP: Waiting for all pods to be running @ 06/18/24 07:12:27.071
  Jun 18 07:12:27.089: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1936" for this suite. @ 06/18/24 07:12:27.099
• [6.229 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:111
  STEP: Creating a kubernetes client @ 06/18/24 07:12:27.112
  Jun 18 07:12:27.112: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename replicaset @ 06/18/24 07:12:27.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:12:27.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:12:27.149
  Jun 18 07:12:27.153: INFO: Creating ReplicaSet my-hostname-basic-f744605a-648e-4fa2-91ee-cc4c38badcfc
  Jun 18 07:12:27.165: INFO: Pod name my-hostname-basic-f744605a-648e-4fa2-91ee-cc4c38badcfc: Found 0 pods out of 1
  E0618 07:12:27.201697      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:28.202449      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:29.202595      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:30.203236      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:31.203535      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:12:32.176: INFO: Pod name my-hostname-basic-f744605a-648e-4fa2-91ee-cc4c38badcfc: Found 1 pods out of 1
  Jun 18 07:12:32.177: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-f744605a-648e-4fa2-91ee-cc4c38badcfc" is running
  Jun 18 07:12:32.183: INFO: Pod "my-hostname-basic-f744605a-648e-4fa2-91ee-cc4c38badcfc-45lxt" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-18 07:12:27 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-18 07:12:28 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-18 07:12:28 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-18 07:12:27 +0000 UTC Reason: Message:}])
  Jun 18 07:12:32.183: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 06/18/24 07:12:32.183
  Jun 18 07:12:32.200: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0618 07:12:32.204304      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replicaset-2809" for this suite. @ 06/18/24 07:12:32.205
• [5.100 seconds]
------------------------------
S
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:175
  STEP: Creating a kubernetes client @ 06/18/24 07:12:32.213
  Jun 18 07:12:32.214: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename events @ 06/18/24 07:12:32.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:12:32.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:12:32.234
  STEP: Create set of events @ 06/18/24 07:12:32.237
  Jun 18 07:12:32.241: INFO: created test-event-1
  Jun 18 07:12:32.244: INFO: created test-event-2
  Jun 18 07:12:32.247: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 06/18/24 07:12:32.247
  STEP: delete collection of events @ 06/18/24 07:12:32.25
  Jun 18 07:12:32.250: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 06/18/24 07:12:32.263
  Jun 18 07:12:32.263: INFO: requesting list of events to confirm quantity
  Jun 18 07:12:32.265: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1951" for this suite. @ 06/18/24 07:12:32.271
• [0.065 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 06/18/24 07:12:32.28
  Jun 18 07:12:32.280: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename disruption @ 06/18/24 07:12:32.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:12:32.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:12:32.3
  STEP: Waiting for the pdb to be processed @ 06/18/24 07:12:32.308
  E0618 07:12:33.204844      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:34.205457      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 06/18/24 07:12:34.315
  STEP: Waiting for all pods to be running @ 06/18/24 07:12:34.321
  Jun 18 07:12:34.325: INFO: running pods: 0 < 1
  E0618 07:12:35.205835      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:36.206736      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 06/18/24 07:12:36.333
  STEP: Waiting for the pdb to be processed @ 06/18/24 07:12:36.346
  STEP: Patching PodDisruptionBudget status @ 06/18/24 07:12:36.356
  STEP: Waiting for the pdb to be processed @ 06/18/24 07:12:36.368
  Jun 18 07:12:36.373: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2333" for this suite. @ 06/18/24 07:12:36.378
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 06/18/24 07:12:36.386
  Jun 18 07:12:36.386: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename container-runtime @ 06/18/24 07:12:36.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:12:36.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:12:36.404
  STEP: create the container @ 06/18/24 07:12:36.41
  W0618 07:12:36.419388      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 06/18/24 07:12:36.421
  E0618 07:12:37.207448      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:38.207808      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:39.208685      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 06/18/24 07:12:39.441
  STEP: the container should be terminated @ 06/18/24 07:12:39.455
  STEP: the termination message should be set @ 06/18/24 07:12:39.455
  Jun 18 07:12:39.455: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 06/18/24 07:12:39.456
  Jun 18 07:12:39.469: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6073" for this suite. @ 06/18/24 07:12:39.478
• [3.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:138
  STEP: Creating a kubernetes client @ 06/18/24 07:12:39.485
  Jun 18 07:12:39.485: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename configmap @ 06/18/24 07:12:39.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:12:39.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:12:39.502
  STEP: Creating configMap that has name configmap-test-emptyKey-41203cd0-6c24-4006-82c4-1587ef9e2877 @ 06/18/24 07:12:39.506
  Jun 18 07:12:39.508: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3728" for this suite. @ 06/18/24 07:12:39.514
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:806
  STEP: Creating a kubernetes client @ 06/18/24 07:12:39.523
  Jun 18 07:12:39.523: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename resourcequota @ 06/18/24 07:12:39.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:12:39.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:12:39.538
  STEP: Creating a ResourceQuota with best effort scope @ 06/18/24 07:12:39.541
  STEP: Ensuring ResourceQuota status is calculated @ 06/18/24 07:12:39.545
  E0618 07:12:40.209402      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:41.209520      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 06/18/24 07:12:41.548
  STEP: Ensuring ResourceQuota status is calculated @ 06/18/24 07:12:41.553
  E0618 07:12:42.209902      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:43.210230      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 06/18/24 07:12:43.556
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 06/18/24 07:12:43.569
  E0618 07:12:44.210646      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:45.211414      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 06/18/24 07:12:45.573
  E0618 07:12:46.211878      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:47.212192      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 06/18/24 07:12:47.579
  STEP: Ensuring resource quota status released the pod usage @ 06/18/24 07:12:47.592
  E0618 07:12:48.212411      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:49.212787      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 06/18/24 07:12:49.597
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 06/18/24 07:12:49.605
  E0618 07:12:50.213252      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:51.213832      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 06/18/24 07:12:51.609
  E0618 07:12:52.214284      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:53.214609      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 06/18/24 07:12:53.613
  STEP: Ensuring resource quota status released the pod usage @ 06/18/24 07:12:53.627
  E0618 07:12:54.214792      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:55.215519      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:12:55.630: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5374" for this suite. @ 06/18/24 07:12:55.635
• [16.119 seconds]
------------------------------
[sig-network] Services should serve a basic endpoint from pods  [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 06/18/24 07:12:55.643
  Jun 18 07:12:55.643: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename services @ 06/18/24 07:12:55.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:12:55.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:12:55.672
  STEP: creating service endpoint-test2 in namespace services-4261 @ 06/18/24 07:12:55.675
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4261 to expose endpoints map[] @ 06/18/24 07:12:55.692
  Jun 18 07:12:55.702: INFO: successfully validated that service endpoint-test2 in namespace services-4261 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4261 @ 06/18/24 07:12:55.702
  E0618 07:12:56.216107      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:57.216773      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4261 to expose endpoints map[pod1:[80]] @ 06/18/24 07:12:57.724
  Jun 18 07:12:57.737: INFO: successfully validated that service endpoint-test2 in namespace services-4261 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 06/18/24 07:12:57.737
  Jun 18 07:12:57.737: INFO: Creating new exec pod
  E0618 07:12:58.216925      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:12:59.217969      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:00.218846      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:13:00.751: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-4261 exec execpod5mghz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jun 18 07:13:00.902: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jun 18 07:13:00.902: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 07:13:00.902: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-4261 exec execpod5mghz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.219.131 80'
  Jun 18 07:13:01.038: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.219.131 80\nConnection to 10.99.219.131 80 port [tcp/http] succeeded!\n"
  Jun 18 07:13:01.038: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-4261 @ 06/18/24 07:13:01.038
  E0618 07:13:01.219061      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:02.219094      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4261 to expose endpoints map[pod1:[80] pod2:[80]] @ 06/18/24 07:13:03.055
  Jun 18 07:13:03.066: INFO: successfully validated that service endpoint-test2 in namespace services-4261 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 06/18/24 07:13:03.066
  E0618 07:13:03.219592      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:13:04.066: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-4261 exec execpod5mghz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jun 18 07:13:04.211: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jun 18 07:13:04.211: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 07:13:04.212: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-4261 exec execpod5mghz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.219.131 80'
  E0618 07:13:04.219598      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:13:04.338: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.219.131 80\nConnection to 10.99.219.131 80 port [tcp/http] succeeded!\n"
  Jun 18 07:13:04.338: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4261 @ 06/18/24 07:13:04.339
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4261 to expose endpoints map[pod2:[80]] @ 06/18/24 07:13:04.353
  E0618 07:13:05.219932      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:13:05.376: INFO: successfully validated that service endpoint-test2 in namespace services-4261 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 06/18/24 07:13:05.376
  E0618 07:13:06.220767      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:13:06.377: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-4261 exec execpod5mghz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jun 18 07:13:06.552: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jun 18 07:13:06.552: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 07:13:06.552: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3125148564 --namespace=services-4261 exec execpod5mghz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.219.131 80'
  Jun 18 07:13:06.699: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.219.131 80\nConnection to 10.99.219.131 80 port [tcp/http] succeeded!\n"
  Jun 18 07:13:06.699: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-4261 @ 06/18/24 07:13:06.699
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4261 to expose endpoints map[] @ 06/18/24 07:13:06.717
  Jun 18 07:13:06.733: INFO: successfully validated that service endpoint-test2 in namespace services-4261 exposes endpoints map[]
  Jun 18 07:13:06.733: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4261" for this suite. @ 06/18/24 07:13:06.758
• [11.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 06/18/24 07:13:06.766
  Jun 18 07:13:06.766: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename configmap @ 06/18/24 07:13:06.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:13:06.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:13:06.785
  STEP: Creating configMap with name configmap-test-upd-33f264f9-ac45-4534-b400-64ce9c53b416 @ 06/18/24 07:13:06.793
  STEP: Creating the pod @ 06/18/24 07:13:06.797
  E0618 07:13:07.221771      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:08.222138      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-33f264f9-ac45-4534-b400-64ce9c53b416 @ 06/18/24 07:13:08.834
  STEP: waiting to observe update in volume @ 06/18/24 07:13:08.838
  E0618 07:13:09.223164      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:10.224014      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:13:10.854: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1021" for this suite. @ 06/18/24 07:13:10.861
• [4.102 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 06/18/24 07:13:10.876
  Jun 18 07:13:10.876: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename dns @ 06/18/24 07:13:10.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:13:10.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:13:10.901
  STEP: Creating a test headless service @ 06/18/24 07:13:10.904
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-801 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-801;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-801 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-801;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-801.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-801.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-801.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-801.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-801.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-801.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-801.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-801.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-801.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-801.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-801.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-801.svc;check="$$(dig +notcp +noall +answer +search 222.12.110.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.110.12.222_udp@PTR;check="$$(dig +tcp +noall +answer +search 222.12.110.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.110.12.222_tcp@PTR;sleep 1; done
   @ 06/18/24 07:13:10.929
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-801 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-801;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-801 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-801;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-801.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-801.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-801.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-801.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-801.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-801.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-801.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-801.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-801.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-801.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-801.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-801.svc;check="$$(dig +notcp +noall +answer +search 222.12.110.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.110.12.222_udp@PTR;check="$$(dig +tcp +noall +answer +search 222.12.110.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.110.12.222_tcp@PTR;sleep 1; done
   @ 06/18/24 07:13:10.929
  STEP: creating a pod to probe DNS @ 06/18/24 07:13:10.93
  STEP: submitting the pod to kubernetes @ 06/18/24 07:13:10.93
  E0618 07:13:11.225036      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:12.226019      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/18/24 07:13:12.95
  STEP: looking for the results for each expected name from probers @ 06/18/24 07:13:12.953
  Jun 18 07:13:12.958: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:12.961: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:12.964: INFO: Unable to read wheezy_udp@dns-test-service.dns-801 from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:12.967: INFO: Unable to read wheezy_tcp@dns-test-service.dns-801 from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:12.971: INFO: Unable to read wheezy_udp@dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:12.974: INFO: Unable to read wheezy_tcp@dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:12.977: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:12.980: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:12.996: INFO: Unable to read jessie_udp@dns-test-service from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:12.999: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:13.002: INFO: Unable to read jessie_udp@dns-test-service.dns-801 from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:13.006: INFO: Unable to read jessie_tcp@dns-test-service.dns-801 from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:13.010: INFO: Unable to read jessie_udp@dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:13.013: INFO: Unable to read jessie_tcp@dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:13.017: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:13.021: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:13.034: INFO: Lookups using dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-801 wheezy_tcp@dns-test-service.dns-801 wheezy_udp@dns-test-service.dns-801.svc wheezy_tcp@dns-test-service.dns-801.svc wheezy_udp@_http._tcp.dns-test-service.dns-801.svc wheezy_tcp@_http._tcp.dns-test-service.dns-801.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-801 jessie_tcp@dns-test-service.dns-801 jessie_udp@dns-test-service.dns-801.svc jessie_tcp@dns-test-service.dns-801.svc jessie_udp@_http._tcp.dns-test-service.dns-801.svc jessie_tcp@_http._tcp.dns-test-service.dns-801.svc]

  Jun 18 07:13:13.039: INFO: Pod client logs for webserver: 
  Jun 18 07:13:13.045: INFO: Pod client logs for querier: 
  Jun 18 07:13:13.050: INFO: Pod client logs for jessie-querier: 
  E0618 07:13:13.226637      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:14.227057      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:15.228227      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:16.228277      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:17.228573      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:13:18.056: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:18.059: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:18.063: INFO: Unable to read wheezy_udp@dns-test-service.dns-801 from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:18.067: INFO: Unable to read wheezy_tcp@dns-test-service.dns-801 from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:18.071: INFO: Unable to read wheezy_udp@dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:18.074: INFO: Unable to read wheezy_tcp@dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:18.078: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:18.081: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:18.098: INFO: Unable to read jessie_udp@dns-test-service from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:18.102: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:18.106: INFO: Unable to read jessie_udp@dns-test-service.dns-801 from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:18.109: INFO: Unable to read jessie_tcp@dns-test-service.dns-801 from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:18.112: INFO: Unable to read jessie_udp@dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:18.116: INFO: Unable to read jessie_tcp@dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:18.119: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:18.123: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:18.137: INFO: Lookups using dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-801 wheezy_tcp@dns-test-service.dns-801 wheezy_udp@dns-test-service.dns-801.svc wheezy_tcp@dns-test-service.dns-801.svc wheezy_udp@_http._tcp.dns-test-service.dns-801.svc wheezy_tcp@_http._tcp.dns-test-service.dns-801.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-801 jessie_tcp@dns-test-service.dns-801 jessie_udp@dns-test-service.dns-801.svc jessie_tcp@dns-test-service.dns-801.svc jessie_udp@_http._tcp.dns-test-service.dns-801.svc jessie_tcp@_http._tcp.dns-test-service.dns-801.svc]

  Jun 18 07:13:18.145: INFO: Pod client logs for webserver: 
  Jun 18 07:13:18.152: INFO: Pod client logs for querier: 
  Jun 18 07:13:18.158: INFO: Pod client logs for jessie-querier: 
  E0618 07:13:18.229127      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:19.229208      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:20.230058      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:21.230136      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:22.230619      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:13:23.055: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:23.058: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:23.062: INFO: Unable to read wheezy_udp@dns-test-service.dns-801 from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:23.065: INFO: Unable to read wheezy_tcp@dns-test-service.dns-801 from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:23.068: INFO: Unable to read wheezy_udp@dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:23.071: INFO: Unable to read wheezy_tcp@dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:23.074: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:23.077: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:23.096: INFO: Unable to read jessie_udp@dns-test-service from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:23.098: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:23.101: INFO: Unable to read jessie_udp@dns-test-service.dns-801 from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:23.105: INFO: Unable to read jessie_tcp@dns-test-service.dns-801 from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:23.108: INFO: Unable to read jessie_udp@dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:23.111: INFO: Unable to read jessie_tcp@dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:23.114: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:23.117: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:23.129: INFO: Lookups using dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-801 wheezy_tcp@dns-test-service.dns-801 wheezy_udp@dns-test-service.dns-801.svc wheezy_tcp@dns-test-service.dns-801.svc wheezy_udp@_http._tcp.dns-test-service.dns-801.svc wheezy_tcp@_http._tcp.dns-test-service.dns-801.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-801 jessie_tcp@dns-test-service.dns-801 jessie_udp@dns-test-service.dns-801.svc jessie_tcp@dns-test-service.dns-801.svc jessie_udp@_http._tcp.dns-test-service.dns-801.svc jessie_tcp@_http._tcp.dns-test-service.dns-801.svc]

  Jun 18 07:13:23.135: INFO: Pod client logs for webserver: 
  Jun 18 07:13:23.142: INFO: Pod client logs for querier: 
  Jun 18 07:13:23.147: INFO: Pod client logs for jessie-querier: 
  E0618 07:13:23.231329      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:24.231578      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:25.232290      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:26.234159      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:27.233249      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:13:28.056: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:28.063: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:28.068: INFO: Unable to read wheezy_udp@dns-test-service.dns-801 from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:28.073: INFO: Unable to read wheezy_tcp@dns-test-service.dns-801 from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:28.079: INFO: Unable to read wheezy_udp@dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:28.085: INFO: Unable to read wheezy_tcp@dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:28.089: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:28.093: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:28.115: INFO: Unable to read jessie_udp@dns-test-service from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:28.120: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:28.124: INFO: Unable to read jessie_udp@dns-test-service.dns-801 from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:28.128: INFO: Unable to read jessie_tcp@dns-test-service.dns-801 from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:28.132: INFO: Unable to read jessie_udp@dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:28.138: INFO: Unable to read jessie_tcp@dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:28.142: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:28.146: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:28.171: INFO: Lookups using dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-801 wheezy_tcp@dns-test-service.dns-801 wheezy_udp@dns-test-service.dns-801.svc wheezy_tcp@dns-test-service.dns-801.svc wheezy_udp@_http._tcp.dns-test-service.dns-801.svc wheezy_tcp@_http._tcp.dns-test-service.dns-801.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-801 jessie_tcp@dns-test-service.dns-801 jessie_udp@dns-test-service.dns-801.svc jessie_tcp@dns-test-service.dns-801.svc jessie_udp@_http._tcp.dns-test-service.dns-801.svc jessie_tcp@_http._tcp.dns-test-service.dns-801.svc]

  Jun 18 07:13:28.178: INFO: Pod client logs for webserver: 
  Jun 18 07:13:28.184: INFO: Pod client logs for querier: 
  Jun 18 07:13:28.190: INFO: Pod client logs for jessie-querier: 
  E0618 07:13:28.234291      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:29.234598      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:30.235335      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:31.235661      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:32.235988      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:13:33.057: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:33.060: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:33.064: INFO: Unable to read wheezy_udp@dns-test-service.dns-801 from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:33.068: INFO: Unable to read wheezy_tcp@dns-test-service.dns-801 from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:33.071: INFO: Unable to read wheezy_udp@dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:33.073: INFO: Unable to read wheezy_tcp@dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:33.076: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:33.078: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:33.092: INFO: Unable to read jessie_udp@dns-test-service from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:33.094: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:33.097: INFO: Unable to read jessie_udp@dns-test-service.dns-801 from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:33.100: INFO: Unable to read jessie_tcp@dns-test-service.dns-801 from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:33.103: INFO: Unable to read jessie_udp@dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:33.106: INFO: Unable to read jessie_tcp@dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:33.110: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:33.112: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:33.129: INFO: Lookups using dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-801 wheezy_tcp@dns-test-service.dns-801 wheezy_udp@dns-test-service.dns-801.svc wheezy_tcp@dns-test-service.dns-801.svc wheezy_udp@_http._tcp.dns-test-service.dns-801.svc wheezy_tcp@_http._tcp.dns-test-service.dns-801.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-801 jessie_tcp@dns-test-service.dns-801 jessie_udp@dns-test-service.dns-801.svc jessie_tcp@dns-test-service.dns-801.svc jessie_udp@_http._tcp.dns-test-service.dns-801.svc jessie_tcp@_http._tcp.dns-test-service.dns-801.svc]

  Jun 18 07:13:33.136: INFO: Pod client logs for webserver: 
  Jun 18 07:13:33.150: INFO: Pod client logs for querier: 
  Jun 18 07:13:33.160: INFO: Pod client logs for jessie-querier: 
  E0618 07:13:33.236148      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:34.236561      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:35.237437      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:36.237881      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:37.238220      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:13:38.055: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:38.059: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:38.063: INFO: Unable to read wheezy_udp@dns-test-service.dns-801 from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:38.065: INFO: Unable to read wheezy_tcp@dns-test-service.dns-801 from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:38.069: INFO: Unable to read wheezy_udp@dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:38.072: INFO: Unable to read wheezy_tcp@dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:38.075: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:38.078: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:38.092: INFO: Unable to read jessie_udp@dns-test-service from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:38.095: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:38.097: INFO: Unable to read jessie_udp@dns-test-service.dns-801 from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:38.100: INFO: Unable to read jessie_tcp@dns-test-service.dns-801 from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:38.103: INFO: Unable to read jessie_udp@dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:38.105: INFO: Unable to read jessie_tcp@dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:38.108: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:38.111: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:38.126: INFO: Lookups using dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-801 wheezy_tcp@dns-test-service.dns-801 wheezy_udp@dns-test-service.dns-801.svc wheezy_tcp@dns-test-service.dns-801.svc wheezy_udp@_http._tcp.dns-test-service.dns-801.svc wheezy_tcp@_http._tcp.dns-test-service.dns-801.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-801 jessie_tcp@dns-test-service.dns-801 jessie_udp@dns-test-service.dns-801.svc jessie_tcp@dns-test-service.dns-801.svc jessie_udp@_http._tcp.dns-test-service.dns-801.svc jessie_tcp@_http._tcp.dns-test-service.dns-801.svc]

  Jun 18 07:13:38.132: INFO: Pod client logs for webserver: 
  Jun 18 07:13:38.138: INFO: Pod client logs for querier: 
  Jun 18 07:13:38.144: INFO: Pod client logs for jessie-querier: 
  E0618 07:13:38.238347      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:39.239305      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:40.240048      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:41.240403      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:42.240717      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:13:43.074: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-801.svc from pod dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9: the server could not find the requested resource (get pods dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9)
  Jun 18 07:13:43.112: INFO: Lookups using dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9 failed for: [wheezy_tcp@_http._tcp.dns-test-service.dns-801.svc]

  Jun 18 07:13:43.117: INFO: Pod client logs for webserver: 
  Jun 18 07:13:43.121: INFO: Pod client logs for querier: 
  Jun 18 07:13:43.125: INFO: Pod client logs for jessie-querier: 
  E0618 07:13:43.240833      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:44.241128      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:45.241887      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:46.242231      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:47.242885      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:13:48.141: INFO: DNS probes using dns-801/dns-test-228461ed-93a9-4c5c-bcb7-14a0aae163e9 succeeded

  Jun 18 07:13:48.141: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 06/18/24 07:13:48.146
  STEP: deleting the test service @ 06/18/24 07:13:48.167
  STEP: deleting the test headless service @ 06/18/24 07:13:48.186
  STEP: Destroying namespace "dns-801" for this suite. @ 06/18/24 07:13:48.2
• [37.328 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:129
  STEP: Creating a kubernetes client @ 06/18/24 07:13:48.217
  Jun 18 07:13:48.217: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename security-context @ 06/18/24 07:13:48.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:13:48.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:13:48.241
  E0618 07:13:48.243373      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 06/18/24 07:13:48.244
  E0618 07:13:49.244405      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:50.245092      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:51.245324      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:52.245683      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 07:13:52.263
  Jun 18 07:13:52.266: INFO: Trying to get logs from node ck-128-worker-2 pod security-context-8775059c-f623-450c-b4b1-477f4553fa01 container test-container: <nil>
  STEP: delete the pod @ 06/18/24 07:13:52.273
  Jun 18 07:13:52.287: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-3096" for this suite. @ 06/18/24 07:13:52.291
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:227
  STEP: Creating a kubernetes client @ 06/18/24 07:13:52.301
  Jun 18 07:13:52.301: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename emptydir @ 06/18/24 07:13:52.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:13:52.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:13:52.315
  STEP: Creating Pod @ 06/18/24 07:13:52.318
  E0618 07:13:53.245854      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:54.246219      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 06/18/24 07:13:54.335
  Jun 18 07:13:54.335: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-4963 PodName:pod-sharedvolume-cc347aa5-550d-4ea4-b5cf-bbb9de560ec3 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 07:13:54.335: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 07:13:54.336: INFO: ExecWithOptions: Clientset creation
  Jun 18 07:13:54.336: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/emptydir-4963/pods/pod-sharedvolume-cc347aa5-550d-4ea4-b5cf-bbb9de560ec3/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Jun 18 07:13:54.375: INFO: Exec stderr: ""
  Jun 18 07:13:54.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4963" for this suite. @ 06/18/24 07:13:54.38
• [2.085 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:165
  STEP: Creating a kubernetes client @ 06/18/24 07:13:54.388
  Jun 18 07:13:54.388: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename replicaset @ 06/18/24 07:13:54.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:13:54.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:13:54.404
  STEP: Create a ReplicaSet @ 06/18/24 07:13:54.407
  STEP: Verify that the required pods have come up @ 06/18/24 07:13:54.413
  Jun 18 07:13:54.416: INFO: Pod name sample-pod: Found 0 pods out of 3
  E0618 07:13:55.246941      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:56.247265      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:57.247400      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:58.247696      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:13:59.247924      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:13:59.420: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 06/18/24 07:13:59.42
  Jun 18 07:13:59.423: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 06/18/24 07:13:59.424
  STEP: DeleteCollection of the ReplicaSets @ 06/18/24 07:13:59.426
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 06/18/24 07:13:59.432
  Jun 18 07:13:59.436: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5924" for this suite. @ 06/18/24 07:13:59.447
• [5.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 06/18/24 07:13:59.455
  Jun 18 07:13:59.455: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename downward-api @ 06/18/24 07:13:59.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:13:59.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:13:59.483
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 07:13:59.488
  E0618 07:14:00.248756      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:14:01.249264      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:14:02.249737      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:14:03.250059      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 07:14:03.515
  Jun 18 07:14:03.519: INFO: Trying to get logs from node ck-128-worker-2 pod downwardapi-volume-cc9ff025-cbee-4dc2-bcf7-590e996f47cf container client-container: <nil>
  STEP: delete the pod @ 06/18/24 07:14:03.529
  Jun 18 07:14:03.546: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3405" for this suite. @ 06/18/24 07:14:03.551
• [4.102 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:95
  STEP: Creating a kubernetes client @ 06/18/24 07:14:03.559
  Jun 18 07:14:03.559: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename secrets @ 06/18/24 07:14:03.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:14:03.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:14:03.575
  STEP: creating secret secrets-929/secret-test-e5ff1530-29f8-4706-8aad-bef27b7552e2 @ 06/18/24 07:14:03.578
  STEP: Creating a pod to test consume secrets @ 06/18/24 07:14:03.582
  E0618 07:14:04.250405      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:14:05.250484      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:14:06.250571      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:14:07.250863      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 07:14:07.603
  Jun 18 07:14:07.606: INFO: Trying to get logs from node ck-128-worker-1 pod pod-configmaps-3c0629b7-b053-471d-b02d-eb4e4afe90ed container env-test: <nil>
  STEP: delete the pod @ 06/18/24 07:14:07.624
  Jun 18 07:14:07.638: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-929" for this suite. @ 06/18/24 07:14:07.644
• [4.091 seconds]
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:124
  STEP: Creating a kubernetes client @ 06/18/24 07:14:07.651
  Jun 18 07:14:07.651: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename pod-network-test @ 06/18/24 07:14:07.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:14:07.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:14:07.669
  STEP: Performing setup for networking test in namespace pod-network-test-5900 @ 06/18/24 07:14:07.673
  STEP: creating a selector @ 06/18/24 07:14:07.673
  STEP: Creating the service pods in kubernetes @ 06/18/24 07:14:07.673
  Jun 18 07:14:07.673: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0618 07:14:08.252092      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:14:09.251891      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:14:10.252343      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:14:11.252960      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:14:12.253601      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:14:13.254018      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:14:14.254852      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:14:15.255345      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:14:16.256263      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:14:17.256509      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:14:18.256804      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:14:19.257128      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 06/18/24 07:14:19.76
  E0618 07:14:20.258021      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:14:21.258433      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:14:21.788: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jun 18 07:14:21.788: INFO: Going to poll 172.17.152.7 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jun 18 07:14:21.791: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.17.152.7 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5900 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 07:14:21.791: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 07:14:21.792: INFO: ExecWithOptions: Clientset creation
  Jun 18 07:14:21.792: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5900/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.17.152.7+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0618 07:14:22.259403      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:14:22.835: INFO: Found all 1 expected endpoints: [netserver-0]
  Jun 18 07:14:22.835: INFO: Going to poll 172.17.196.236 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jun 18 07:14:22.842: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.17.196.236 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5900 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 07:14:22.842: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 07:14:22.843: INFO: ExecWithOptions: Clientset creation
  Jun 18 07:14:22.843: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5900/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.17.196.236+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0618 07:14:23.259402      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:14:23.885: INFO: Found all 1 expected endpoints: [netserver-1]
  Jun 18 07:14:23.885: INFO: Going to poll 172.17.66.190 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jun 18 07:14:23.888: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.17.66.190 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5900 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 07:14:23.889: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  Jun 18 07:14:23.890: INFO: ExecWithOptions: Clientset creation
  Jun 18 07:14:23.890: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5900/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.17.66.190+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0618 07:14:24.259899      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:14:24.936: INFO: Found all 1 expected endpoints: [netserver-2]
  Jun 18 07:14:24.936: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5900" for this suite. @ 06/18/24 07:14:24.942
• [17.296 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:69
  STEP: Creating a kubernetes client @ 06/18/24 07:14:24.946
  Jun 18 07:14:24.946: INFO: >>> kubeConfig: /tmp/kubeconfig-3125148564
  STEP: Building a namespace api object, basename replication-controller @ 06/18/24 07:14:24.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 07:14:24.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 07:14:24.965
  STEP: Creating replication controller my-hostname-basic-d38f2621-a519-4ba6-8796-afd25f3b5a9b @ 06/18/24 07:14:24.969
  Jun 18 07:14:24.984: INFO: Pod name my-hostname-basic-d38f2621-a519-4ba6-8796-afd25f3b5a9b: Found 0 pods out of 1
  E0618 07:14:25.260295      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:14:26.261461      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:14:27.261736      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:14:28.261882      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 07:14:29.262253      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 07:14:29.990: INFO: Pod name my-hostname-basic-d38f2621-a519-4ba6-8796-afd25f3b5a9b: Found 1 pods out of 1
  Jun 18 07:14:29.990: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-d38f2621-a519-4ba6-8796-afd25f3b5a9b" are running
  Jun 18 07:14:29.994: INFO: Pod "my-hostname-basic-d38f2621-a519-4ba6-8796-afd25f3b5a9b-tjr4j" is running and ready(conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-18 07:14:24 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-18 07:14:25 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-18 07:14:25 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-18 07:14:24 +0000 UTC Reason: Message:}])
  Jun 18 07:14:29.994: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 06/18/24 07:14:29.995
  Jun 18 07:14:30.010: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4632" for this suite. @ 06/18/24 07:14:30.015
• [5.074 seconds]
------------------------------
S
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:88
  Jun 18 07:14:30.031: INFO: Running AfterSuite actions on node 1
  Jun 18 07:14:30.031: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.001 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:585
[ReportAfterSuite] PASSED [0.088 seconds]
------------------------------

Ran 380 of 7390 Specs in 5934.609 seconds
SUCCESS! -- 380 Passed | 0 Failed | 0 Pending | 7010 Skipped
PASS

Ginkgo ran 1 suite in 1h38m55.138518656s
Test Suite Passed
