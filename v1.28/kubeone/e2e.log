Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1715370065 - will randomize all specs

Will run 380 of 7389 specs
Running in parallel across 3 processes
------------------------------
[ReportBeforeSuite] PASSED [0.000 seconds]
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:153
------------------------------
[SynchronizedBeforeSuite] PASSED [0.136 seconds]
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:77

  Timeline >>
  May 10 19:41:06.022: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  May 10 19:41:06.023: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  May 10 19:41:06.140: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  May 10 19:41:06.149: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'aws-cloud-controller-manager' (0 seconds elapsed)
  May 10 19:41:06.149: INFO: 9 / 9 pods ready in namespace 'kube-system' in daemonset 'canal' (0 seconds elapsed)
  May 10 19:41:06.149: INFO: 9 / 9 pods ready in namespace 'kube-system' in daemonset 'ebs-csi-node' (0 seconds elapsed)
  May 10 19:41:06.149: INFO: 9 / 9 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  May 10 19:41:06.149: INFO: 9 / 9 pods ready in namespace 'kube-system' in daemonset 'node-local-dns' (0 seconds elapsed)
  May 10 19:41:06.149: INFO: e2e test version: v1.28.9
  May 10 19:41:06.151: INFO: kube-apiserver version: v1.28.9
  May 10 19:41:06.151: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  May 10 19:41:06.157: INFO: Cluster IP family: ipv4
  << Timeline
------------------------------
[SynchronizedBeforeSuite] PASSED [0.067 seconds]
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:77

  Timeline >>
  May 10 19:41:06.157: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  May 10 19:41:06.173: INFO: Cluster IP family: ipv4
  << Timeline
------------------------------
[SynchronizedBeforeSuite] PASSED [0.067 seconds]
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:77

  Timeline >>
  May 10 19:41:06.192: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  May 10 19:41:06.207: INFO: Cluster IP family: ipv4
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [3.201 seconds]
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:41:06.727
  May 10 19:41:06.727: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename field-validation @ 05/10/24 19:41:06.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:41:06.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:41:06.757
  May 10 19:41:06.761: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  W0510 19:41:09.349524      22 warnings.go:70] unknown field "alpha"
  W0510 19:41:09.349536      22 warnings.go:70] unknown field "beta"
  W0510 19:41:09.349540      22 warnings.go:70] unknown field "delta"
  W0510 19:41:09.349542      22 warnings.go:70] unknown field "epsilon"
  W0510 19:41:09.349545      22 warnings.go:70] unknown field "gamma"
  May 10 19:41:09.886: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3846" for this suite. @ 05/10/24 19:41:09.915
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [6.203 seconds]
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:488

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:41:06.681
  May 10 19:41:06.681: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename deployment @ 05/10/24 19:41:06.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:41:06.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:41:06.712
  STEP: creating a Deployment @ 05/10/24 19:41:06.724
  May 10 19:41:06.724: INFO: Creating simple deployment test-deployment-z6vt6
  May 10 19:41:06.751: INFO: deployment "test-deployment-z6vt6" doesn't have the required revision set
  May 10 19:41:08.769: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 19, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 41, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 41, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-deployment-z6vt6-5d576bd769\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 19:41:10.778: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 19, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 41, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 41, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-deployment-z6vt6-5d576bd769\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Getting /status @ 05/10/24 19:41:12.788
  May 10 19:41:12.795: INFO: Deployment test-deployment-z6vt6 has Conditions: [{Available True 2024-05-10 19:41:11 +0000 UTC 2024-05-10 19:41:11 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-05-10 19:41:11 +0000 UTC 2024-05-10 19:41:06 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-z6vt6-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 05/10/24 19:41:12.795
  May 10 19:41:12.816: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 41, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 41, 11, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 41, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 41, 6, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-z6vt6-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 05/10/24 19:41:12.816
  May 10 19:41:12.821: INFO: Observed &Deployment event: ADDED
  May 10 19:41:12.821: INFO: Observed Deployment test-deployment-z6vt6 in namespace deployment-7443 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-10 19:41:06 +0000 UTC 2024-05-10 19:41:06 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-z6vt6-5d576bd769"}
  May 10 19:41:12.821: INFO: Observed &Deployment event: MODIFIED
  May 10 19:41:12.821: INFO: Observed Deployment test-deployment-z6vt6 in namespace deployment-7443 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-10 19:41:06 +0000 UTC 2024-05-10 19:41:06 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-z6vt6-5d576bd769"}
  May 10 19:41:12.821: INFO: Observed Deployment test-deployment-z6vt6 in namespace deployment-7443 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-10 19:41:06 +0000 UTC 2024-05-10 19:41:06 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  May 10 19:41:12.821: INFO: Observed &Deployment event: MODIFIED
  May 10 19:41:12.821: INFO: Observed Deployment test-deployment-z6vt6 in namespace deployment-7443 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-10 19:41:06 +0000 UTC 2024-05-10 19:41:06 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  May 10 19:41:12.821: INFO: Observed Deployment test-deployment-z6vt6 in namespace deployment-7443 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-10 19:41:06 +0000 UTC 2024-05-10 19:41:06 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-z6vt6-5d576bd769" is progressing.}
  May 10 19:41:12.821: INFO: Observed &Deployment event: MODIFIED
  May 10 19:41:12.821: INFO: Observed Deployment test-deployment-z6vt6 in namespace deployment-7443 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-10 19:41:11 +0000 UTC 2024-05-10 19:41:11 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  May 10 19:41:12.821: INFO: Observed Deployment test-deployment-z6vt6 in namespace deployment-7443 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-10 19:41:11 +0000 UTC 2024-05-10 19:41:06 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-z6vt6-5d576bd769" has successfully progressed.}
  May 10 19:41:12.821: INFO: Observed &Deployment event: MODIFIED
  May 10 19:41:12.821: INFO: Observed Deployment test-deployment-z6vt6 in namespace deployment-7443 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-10 19:41:11 +0000 UTC 2024-05-10 19:41:11 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  May 10 19:41:12.821: INFO: Observed Deployment test-deployment-z6vt6 in namespace deployment-7443 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-10 19:41:11 +0000 UTC 2024-05-10 19:41:06 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-z6vt6-5d576bd769" has successfully progressed.}
  May 10 19:41:12.821: INFO: Found Deployment test-deployment-z6vt6 in namespace deployment-7443 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May 10 19:41:12.821: INFO: Deployment test-deployment-z6vt6 has an updated status
  STEP: patching the Statefulset Status @ 05/10/24 19:41:12.821
  May 10 19:41:12.821: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  May 10 19:41:12.832: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 05/10/24 19:41:12.832
  May 10 19:41:12.835: INFO: Observed &Deployment event: ADDED
  May 10 19:41:12.835: INFO: Observed deployment test-deployment-z6vt6 in namespace deployment-7443 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-10 19:41:06 +0000 UTC 2024-05-10 19:41:06 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-z6vt6-5d576bd769"}
  May 10 19:41:12.835: INFO: Observed &Deployment event: MODIFIED
  May 10 19:41:12.835: INFO: Observed deployment test-deployment-z6vt6 in namespace deployment-7443 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-10 19:41:06 +0000 UTC 2024-05-10 19:41:06 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-z6vt6-5d576bd769"}
  May 10 19:41:12.835: INFO: Observed deployment test-deployment-z6vt6 in namespace deployment-7443 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-10 19:41:06 +0000 UTC 2024-05-10 19:41:06 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  May 10 19:41:12.835: INFO: Observed &Deployment event: MODIFIED
  May 10 19:41:12.835: INFO: Observed deployment test-deployment-z6vt6 in namespace deployment-7443 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-10 19:41:06 +0000 UTC 2024-05-10 19:41:06 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  May 10 19:41:12.835: INFO: Observed deployment test-deployment-z6vt6 in namespace deployment-7443 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-10 19:41:06 +0000 UTC 2024-05-10 19:41:06 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-z6vt6-5d576bd769" is progressing.}
  May 10 19:41:12.835: INFO: Observed &Deployment event: MODIFIED
  May 10 19:41:12.835: INFO: Observed deployment test-deployment-z6vt6 in namespace deployment-7443 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-10 19:41:11 +0000 UTC 2024-05-10 19:41:11 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  May 10 19:41:12.835: INFO: Observed deployment test-deployment-z6vt6 in namespace deployment-7443 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-10 19:41:11 +0000 UTC 2024-05-10 19:41:06 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-z6vt6-5d576bd769" has successfully progressed.}
  May 10 19:41:12.835: INFO: Observed &Deployment event: MODIFIED
  May 10 19:41:12.835: INFO: Observed deployment test-deployment-z6vt6 in namespace deployment-7443 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-10 19:41:11 +0000 UTC 2024-05-10 19:41:11 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  May 10 19:41:12.835: INFO: Observed deployment test-deployment-z6vt6 in namespace deployment-7443 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-10 19:41:11 +0000 UTC 2024-05-10 19:41:06 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-z6vt6-5d576bd769" has successfully progressed.}
  May 10 19:41:12.835: INFO: Observed deployment test-deployment-z6vt6 in namespace deployment-7443 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May 10 19:41:12.835: INFO: Observed &Deployment event: MODIFIED
  May 10 19:41:12.835: INFO: Found deployment test-deployment-z6vt6 in namespace deployment-7443 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  May 10 19:41:12.835: INFO: Deployment test-deployment-z6vt6 has a patched status
  May 10 19:41:12.842: INFO: Deployment "test-deployment-z6vt6":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-z6vt6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7443",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9842291c-ab8d-477a-94ae-fe38dfdf5865",
      ResourceVersion: (string) (len=5) "11557",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850966866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850966866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850966871,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=224) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |ions":{},"f:obse|
              00000090  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              000000a0  7b 7d 2c 22 66 3a 72 65  61 64 79 52 65 70 6c 69  |{},"f:readyRepli|
              000000b0  63 61 73 22 3a 7b 7d 2c  22 66 3a 72 65 70 6c 69  |cas":{},"f:repli|
              000000c0  63 61 73 22 3a 7b 7d 2c  22 66 3a 75 70 64 61 74  |cas":{},"f:updat|
              000000d0  65 64 52 65 70 6c 69 63  61 73 22 3a 7b 7d 7d 7d  |edReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850966872,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=1) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 10 19:41:12.849: INFO: New ReplicaSet "test-deployment-z6vt6-5d576bd769" of Deployment "test-deployment-z6vt6":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-z6vt6-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7443",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "72feb1a6-4f0f-4bce-a2b8-f994380dcca7",
      ResourceVersion: (string) (len=5) "11541",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850966866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-z6vt6",
          UID: (types.UID) (len=36) "9842291c-ab8d-477a-94ae-fe38dfdf5865",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850966866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 39 38 34  |k:{\"uid\":\"984|
              00000120  32 32 39 31 63 2d 61 62  38 64 2d 34 37 37 61 2d  |2291c-ab8d-477a-|
              00000130  39 34 61 65 2d 66 65 33  38 64 66 64 66 35 38 36  |94ae-fe38dfdf586|
              00000140  35 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |5\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850966871,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 10 19:41:12.859: INFO: Pod "test-deployment-z6vt6-5d576bd769-4r7z2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-z6vt6-5d576bd769-4r7z2",
      GenerateName: (string) (len=33) "test-deployment-z6vt6-5d576bd769-",
      Namespace: (string) (len=15) "deployment-7443",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f7423809-f881-4611-a2af-035120f35f7b",
      ResourceVersion: (string) (len=5) "11540",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850966866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3fed3dbb3fe3b4fdc7c1e054f609d972742bc00c66e9d6590d7e5f1dfbaf4321",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.244.8.3/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.244.8.3/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-z6vt6-5d576bd769",
          UID: (types.UID) (len=36) "72feb1a6-4f0f-4bce-a2b8-f994380dcca7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850966866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 37 32 66 65 62 31 61  36 2d 34 66 30 66 2d 34  |"72feb1a6-4f0f-4|
              000000a0  62 63 65 2d 61 32 62 38  2d 66 39 39 34 33 38 30  |bce-a2b8-f994380|
              000000b0  64 63 63 61 37 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |dcca7\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850966867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850966871,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=517) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 38  2e 33 5c 22 7d 22 3a 7b  |10.244.8.3\"}":{|
              000001e0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000001f0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000200  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6h6lz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6h6lz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-238-87.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850966866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850966871,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850966871,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850966866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.238.87",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=10) "10.244.8.3",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.244.8.3"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850966866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850966870,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f4f535066234b2402ba76815c2e7c4b65a656b4d45379769d28a43374c15a3b9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:41:12.859: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7443" for this suite. @ 05/10/24 19:41:12.871
  << Timeline
------------------------------
SS
------------------------------
• [1.294 seconds]
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:996

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:41:12.891
  May 10 19:41:12.891: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 19:41:12.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:41:12.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:41:12.934
  STEP: create deployment with httpd image @ 05/10/24 19:41:12.938
  May 10 19:41:12.939: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=kubectl-740 create -f -'
  May 10 19:41:13.249: INFO: stderr: ""
  May 10 19:41:13.249: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 05/10/24 19:41:13.249
  May 10 19:41:13.249: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=kubectl-740 diff -f -'
  May 10 19:41:14.048: INFO: rc: 1
  May 10 19:41:14.048: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=kubectl-740 delete -f -'
  May 10 19:41:14.149: INFO: stderr: ""
  May 10 19:41:14.149: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  May 10 19:41:14.149: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-740" for this suite. @ 05/10/24 19:41:14.164
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.146 seconds]
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:887

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:41:14.217
  May 10 19:41:14.217: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 19:41:14.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:41:14.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:41:14.263
  STEP: Creating a ResourceQuota @ 05/10/24 19:41:14.268
  STEP: Getting a ResourceQuota @ 05/10/24 19:41:14.283
  STEP: Updating a ResourceQuota @ 05/10/24 19:41:14.29
  STEP: Verifying a ResourceQuota was modified @ 05/10/24 19:41:14.3
  STEP: Deleting a ResourceQuota @ 05/10/24 19:41:14.313
  STEP: Verifying the deleted ResourceQuota @ 05/10/24 19:41:14.327
  May 10 19:41:14.332: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4611" for this suite. @ 05/10/24 19:41:14.35
  << Timeline
------------------------------
SSSSSSSSS
------------------------------
• [6.252 seconds]
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:41:09.956
  May 10 19:41:09.956: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:41:09.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:41:09.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:41:09.986
  STEP: Creating secret with name s-test-opt-del-2fccfe27-b24c-4ac0-ac74-72848da9cc86 @ 05/10/24 19:41:09.995
  STEP: Creating secret with name s-test-opt-upd-4ea41740-c90e-4902-b531-723dbff4c9f5 @ 05/10/24 19:41:10.013
  STEP: Creating the pod @ 05/10/24 19:41:10.023
  STEP: Deleting secret s-test-opt-del-2fccfe27-b24c-4ac0-ac74-72848da9cc86 @ 05/10/24 19:41:14.099
  STEP: Updating secret s-test-opt-upd-4ea41740-c90e-4902-b531-723dbff4c9f5 @ 05/10/24 19:41:14.107
  STEP: Creating secret with name s-test-opt-create-f99d4bb1-b565-402a-a64c-d812510e8be0 @ 05/10/24 19:41:14.113
  STEP: waiting to observe update in volume @ 05/10/24 19:41:14.126
  May 10 19:41:16.185: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4839" for this suite. @ 05/10/24 19:41:16.198
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [0.297 seconds]
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:57

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:41:16.222
  May 10 19:41:16.222: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename events @ 05/10/24 19:41:16.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:41:16.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:41:16.243
  STEP: creating a test event @ 05/10/24 19:41:16.247
  STEP: listing all events in all namespaces @ 05/10/24 19:41:16.256
  STEP: patching the test event @ 05/10/24 19:41:16.289
  STEP: fetching the test event @ 05/10/24 19:41:16.322
  STEP: updating the test event @ 05/10/24 19:41:16.335
  STEP: getting the test event @ 05/10/24 19:41:16.374
  STEP: deleting the test event @ 05/10/24 19:41:16.386
  STEP: listing all events in all namespaces @ 05/10/24 19:41:16.433
  May 10 19:41:16.502: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-542" for this suite. @ 05/10/24 19:41:16.51
  << Timeline
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
• [11.708 seconds]
[sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1481

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:41:06.77
  May 10 19:41:06.770: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 19:41:06.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:41:06.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:41:06.841
  STEP: creating Agnhost RC @ 05/10/24 19:41:06.85
  May 10 19:41:06.850: INFO: namespace kubectl-6266
  May 10 19:41:06.850: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=kubectl-6266 create -f -'
  May 10 19:41:07.963: INFO: stderr: ""
  May 10 19:41:07.963: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/10/24 19:41:07.963
  May 10 19:41:08.968: INFO: Selector matched 1 pods for map[app:agnhost]
  May 10 19:41:08.968: INFO: Found 0 / 1
  May 10 19:41:09.969: INFO: Selector matched 1 pods for map[app:agnhost]
  May 10 19:41:09.969: INFO: Found 0 / 1
  May 10 19:41:10.969: INFO: Selector matched 1 pods for map[app:agnhost]
  May 10 19:41:10.969: INFO: Found 0 / 1
  May 10 19:41:11.967: INFO: Selector matched 1 pods for map[app:agnhost]
  May 10 19:41:11.967: INFO: Found 0 / 1
  May 10 19:41:12.982: INFO: Selector matched 1 pods for map[app:agnhost]
  May 10 19:41:12.982: INFO: Found 0 / 1
  May 10 19:41:13.967: INFO: Selector matched 1 pods for map[app:agnhost]
  May 10 19:41:13.967: INFO: Found 1 / 1
  May 10 19:41:13.967: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  May 10 19:41:13.971: INFO: Selector matched 1 pods for map[app:agnhost]
  May 10 19:41:13.971: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  May 10 19:41:13.971: INFO: wait on agnhost-primary startup in kubectl-6266 
  May 10 19:41:13.971: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=kubectl-6266 logs agnhost-primary-d6w65 agnhost-primary'
  May 10 19:41:14.084: INFO: stderr: ""
  May 10 19:41:14.084: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 05/10/24 19:41:14.084
  May 10 19:41:14.084: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=kubectl-6266 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  May 10 19:41:14.237: INFO: stderr: ""
  May 10 19:41:14.237: INFO: stdout: "service/rm2 exposed\n"
  May 10 19:41:14.249: INFO: Service rm2 in namespace kubectl-6266 found.
  STEP: exposing service @ 05/10/24 19:41:16.263
  May 10 19:41:16.263: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=kubectl-6266 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  May 10 19:41:16.427: INFO: stderr: ""
  May 10 19:41:16.427: INFO: stdout: "service/rm3 exposed\n"
  May 10 19:41:16.454: INFO: Service rm3 in namespace kubectl-6266 found.
  May 10 19:41:18.461: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6266" for this suite. @ 05/10/24 19:41:18.467
  << Timeline
------------------------------
SSSS
------------------------------
• [11.490 seconds]
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1741

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:41:14.372
  May 10 19:41:14.372: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 19:41:14.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:41:14.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:41:14.403
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/10/24 19:41:14.41
  May 10 19:41:14.410: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=kubectl-7373 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  May 10 19:41:14.489: INFO: stderr: ""
  May 10 19:41:14.489: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 05/10/24 19:41:14.489
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/10/24 19:41:19.54
  May 10 19:41:19.540: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=kubectl-7373 get pod e2e-test-httpd-pod -o json'
  May 10 19:41:19.604: INFO: stderr: ""
  May 10 19:41:19.604: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"ccf4c45a3bd0d80923d3682e39b8e7975753d469f2239ba2bae5cd0325f52ae9\",\n            \"cni.projectcalico.org/podIP\": \"10.244.6.3/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.244.6.3/32\"\n        },\n        \"creationTimestamp\": \"2024-05-10T19:41:14Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-7373\",\n        \"resourceVersion\": \"11728\",\n        \"uid\": \"1f7ec9ca-b53a-46dd-be38-5d578d569cff\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-z5t8r\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-237-27.eu-west-3.compute.internal\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-z5t8r\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-10T19:41:14Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-10T19:41:19Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-10T19:41:19Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-10T19:41:14Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://20a5ce1e0c29f5a61b7cc83afe52d7ab0da22fc17d9eaa3bc742d3ffdf18bb10\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-05-10T19:41:18Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.237.27\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.244.6.3\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.244.6.3\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-05-10T19:41:14Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 05/10/24 19:41:19.605
  May 10 19:41:19.605: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=kubectl-7373 replace -f -'
  May 10 19:41:19.829: INFO: stderr: ""
  May 10 19:41:19.829: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 @ 05/10/24 19:41:19.829
  May 10 19:41:19.836: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=kubectl-7373 delete pods e2e-test-httpd-pod'
  May 10 19:41:25.814: INFO: stderr: ""
  May 10 19:41:25.814: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  May 10 19:41:25.815: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7373" for this suite. @ 05/10/24 19:41:25.84
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [7.830 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:41:18.482
  May 10 19:41:18.482: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename webhook @ 05/10/24 19:41:18.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:41:18.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:41:18.531
  STEP: Setting up server cert @ 05/10/24 19:41:18.56
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 19:41:19.012
  STEP: Deploying the webhook pod @ 05/10/24 19:41:19.021
  STEP: Wait for the deployment to be ready @ 05/10/24 19:41:19.035
  May 10 19:41:19.047: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  May 10 19:41:21.058: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 19, 41, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 41, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 41, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 41, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 19:41:23.063: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 19, 41, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 41, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 41, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 41, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 05/10/24 19:41:25.062
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 19:41:25.079
  May 10 19:41:26.080: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 05/10/24 19:41:26.105
  STEP: create a pod that should be updated by the webhook @ 05/10/24 19:41:26.125
  May 10 19:41:26.147: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1049" for this suite. @ 05/10/24 19:41:26.285
  STEP: Destroying namespace "webhook-markers-6559" for this suite. @ 05/10/24 19:41:26.294
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [12.276 seconds]
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:41:16.535
  May 10 19:41:16.535: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:41:16.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:41:16.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:41:16.587
  STEP: Creating projection with secret that has name projected-secret-test-map-16fe7528-a63d-48d2-83ec-e8c3c7d61244 @ 05/10/24 19:41:16.596
  STEP: Creating a pod to test consume secrets @ 05/10/24 19:41:16.608
  STEP: Saw pod success @ 05/10/24 19:41:28.676
  May 10 19:41:28.687: INFO: Trying to get logs from node ip-172-31-237-27.eu-west-3.compute.internal pod pod-projected-secrets-b2a4a49a-e677-4fa0-b0f7-3497581c2462 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 19:41:28.729
  May 10 19:41:28.773: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7593" for this suite. @ 05/10/24 19:41:28.785
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [7.127 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:41:28.82
  May 10 19:41:28.820: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename webhook @ 05/10/24 19:41:28.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:41:28.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:41:28.857
  STEP: Setting up server cert @ 05/10/24 19:41:28.883
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 19:41:29.505
  STEP: Deploying the webhook pod @ 05/10/24 19:41:29.511
  STEP: Wait for the deployment to be ready @ 05/10/24 19:41:29.525
  May 10 19:41:29.551: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 19:41:31.567
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 19:41:31.602
  May 10 19:41:32.602: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  May 10 19:41:32.610: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6211-crds.webhook.example.com via the AdmissionRegistration API @ 05/10/24 19:41:33.133
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/10/24 19:41:33.153
  May 10 19:41:35.223: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7791" for this suite. @ 05/10/24 19:41:35.916
  STEP: Destroying namespace "webhook-markers-6113" for this suite. @ 05/10/24 19:41:35.932
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.135 seconds]
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:74

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:41:35.975
  May 10 19:41:35.975: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename configmap @ 05/10/24 19:41:35.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:41:35.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:41:36.002
  STEP: Creating configMap with name configmap-test-volume-d2ac5937-b071-46d9-a2d6-6f1d0f2a4e2c @ 05/10/24 19:41:36.006
  STEP: Creating a pod to test consume configMaps @ 05/10/24 19:41:36.012
  STEP: Saw pod success @ 05/10/24 19:41:40.046
  May 10 19:41:40.049: INFO: Trying to get logs from node ip-172-31-237-27.eu-west-3.compute.internal pod pod-configmaps-d48031ed-6e82-44a1-b443-641b7c9c8b0c container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 19:41:40.062
  May 10 19:41:40.091: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3616" for this suite. @ 05/10/24 19:41:40.098
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [0.083 seconds]
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:68

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:41:40.118
  May 10 19:41:40.118: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename endpointslice @ 05/10/24 19:41:40.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:41:40.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:41:40.142
  May 10 19:41:40.179: INFO: Endpoints addresses: [172.31.236.8 172.31.237.217 172.31.238.233] , ports: [6443]
  May 10 19:41:40.179: INFO: EndpointSlices addresses: [172.31.236.8 172.31.237.217 172.31.238.233] , ports: [6443]
  May 10 19:41:40.179: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7806" for this suite. @ 05/10/24 19:41:40.192
  << Timeline
------------------------------
SSSS
------------------------------
• [1.369 seconds]
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:538

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:41:40.206
  May 10 19:41:40.206: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename gc @ 05/10/24 19:41:40.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:41:40.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:41:40.23
  STEP: create the deployment @ 05/10/24 19:41:40.248
  W0510 19:41:40.256380      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/10/24 19:41:40.256
  STEP: delete the deployment @ 05/10/24 19:41:40.769
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 05/10/24 19:41:40.776
  STEP: Gathering metrics @ 05/10/24 19:41:41.315
  May 10 19:41:41.522: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May 10 19:41:41.522: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9445" for this suite. @ 05/10/24 19:41:41.548
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [3.170 seconds]
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:41:41.585
  May 10 19:41:41.585: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename field-validation @ 05/10/24 19:41:41.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:41:41.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:41:41.609
  May 10 19:41:41.614: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  W0510 19:41:44.174516      22 warnings.go:70] unknown field "alpha"
  W0510 19:41:44.174527      22 warnings.go:70] unknown field "beta"
  W0510 19:41:44.174530      22 warnings.go:70] unknown field "delta"
  W0510 19:41:44.174533      22 warnings.go:70] unknown field "epsilon"
  W0510 19:41:44.174536      22 warnings.go:70] unknown field "gamma"
  May 10 19:41:44.718: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7329" for this suite. @ 05/10/24 19:41:44.744
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.109 seconds]
[sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1674

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:41:44.801
  May 10 19:41:44.801: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 19:41:44.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:41:44.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:41:44.826
  May 10 19:41:44.830: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-10 version'
  May 10 19:41:44.891: INFO: stderr: ""
  May 10 19:41:44.891: INFO: stdout: "Client Version: v1.28.9\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.28.9\n"
  May 10 19:41:44.891: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-10" for this suite. @ 05/10/24 19:41:44.9
  << Timeline
------------------------------
SS
------------------------------
• [25.167 seconds]
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:107

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:41:25.87
  May 10 19:41:25.870: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename pod-network-test @ 05/10/24 19:41:25.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:41:25.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:41:25.907
  STEP: Performing setup for networking test in namespace pod-network-test-5933 @ 05/10/24 19:41:25.913
  STEP: creating a selector @ 05/10/24 19:41:25.913
  STEP: Creating the service pods in kubernetes @ 05/10/24 19:41:25.913
  May 10 19:41:25.913: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/10/24 19:41:48.304
  May 10 19:41:50.374: INFO: Setting MaxTries for pod polling to 66 for networking test based on endpoint count 6
  May 10 19:41:50.374: INFO: Going to poll 10.244.7.4 on port 8083 at least 0 times, with a maximum of 66 tries before failing
  May 10 19:41:50.380: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.7.4:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5933 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:41:50.380: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  May 10 19:41:50.381: INFO: ExecWithOptions: Clientset creation
  May 10 19:41:50.381: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5933/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.7.4%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 10 19:41:50.482: INFO: Found all 1 expected endpoints: [netserver-0]
  May 10 19:41:50.482: INFO: Going to poll 10.244.3.4 on port 8083 at least 0 times, with a maximum of 66 tries before failing
  May 10 19:41:50.499: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.3.4:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5933 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:41:50.499: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  May 10 19:41:50.500: INFO: ExecWithOptions: Clientset creation
  May 10 19:41:50.500: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5933/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.3.4%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 10 19:41:50.581: INFO: Found all 1 expected endpoints: [netserver-1]
  May 10 19:41:50.581: INFO: Going to poll 10.244.6.5 on port 8083 at least 0 times, with a maximum of 66 tries before failing
  May 10 19:41:50.587: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.6.5:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5933 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:41:50.587: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  May 10 19:41:50.587: INFO: ExecWithOptions: Clientset creation
  May 10 19:41:50.587: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5933/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.6.5%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 10 19:41:50.701: INFO: Found all 1 expected endpoints: [netserver-2]
  May 10 19:41:50.701: INFO: Going to poll 10.244.4.4 on port 8083 at least 0 times, with a maximum of 66 tries before failing
  May 10 19:41:50.709: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.4.4:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5933 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:41:50.709: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  May 10 19:41:50.709: INFO: ExecWithOptions: Clientset creation
  May 10 19:41:50.709: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5933/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.4.4%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 10 19:41:50.815: INFO: Found all 1 expected endpoints: [netserver-3]
  May 10 19:41:50.815: INFO: Going to poll 10.244.5.4 on port 8083 at least 0 times, with a maximum of 66 tries before failing
  May 10 19:41:50.821: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.5.4:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5933 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:41:50.821: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  May 10 19:41:50.822: INFO: ExecWithOptions: Clientset creation
  May 10 19:41:50.822: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5933/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.5.4%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 10 19:41:50.929: INFO: Found all 1 expected endpoints: [netserver-4]
  May 10 19:41:50.929: INFO: Going to poll 10.244.8.5 on port 8083 at least 0 times, with a maximum of 66 tries before failing
  May 10 19:41:50.938: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.8.5:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5933 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:41:50.938: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  May 10 19:41:50.939: INFO: ExecWithOptions: Clientset creation
  May 10 19:41:50.939: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5933/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.8.5%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 10 19:41:51.010: INFO: Found all 1 expected endpoints: [netserver-5]
  May 10 19:41:51.011: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5933" for this suite. @ 05/10/24 19:41:51.024
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
• [0.190 seconds]
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:41:51.052
  May 10 19:41:51.052: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/10/24 19:41:51.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:41:51.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:41:51.085
  STEP: Creating two CSIDrivers @ 05/10/24 19:41:51.09
  STEP: Getting "inline-driver-966369e6-387c-4810-8db2-d2c1bb95c741" & "inline-driver-ddf1db79-688a-4d99-bb6c-03a7ce5592bc" @ 05/10/24 19:41:51.131
  STEP: Patching the CSIDriver "inline-driver-ddf1db79-688a-4d99-bb6c-03a7ce5592bc" @ 05/10/24 19:41:51.145
  STEP: Updating the CSIDriver "inline-driver-ddf1db79-688a-4d99-bb6c-03a7ce5592bc" @ 05/10/24 19:41:51.158
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-2521" @ 05/10/24 19:41:51.171
  STEP: Deleting CSIDriver "inline-driver-966369e6-387c-4810-8db2-d2c1bb95c741" @ 05/10/24 19:41:51.177
  STEP: Confirm deletion of CSIDriver "inline-driver-966369e6-387c-4810-8db2-d2c1bb95c741" @ 05/10/24 19:41:51.189
  STEP: Deleting CSIDriver "inline-driver-ddf1db79-688a-4d99-bb6c-03a7ce5592bc" via DeleteCollection @ 05/10/24 19:41:51.198
  STEP: Confirm deletion of CSIDriver "inline-driver-ddf1db79-688a-4d99-bb6c-03a7ce5592bc" @ 05/10/24 19:41:51.214
  May 10 19:41:51.220: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-2521" for this suite. @ 05/10/24 19:41:51.229
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [2.168 seconds]
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:41:51.261
  May 10 19:41:51.261: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename kubelet-test @ 05/10/24 19:41:51.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:41:51.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:41:51.302
  May 10 19:41:53.408: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3615" for this suite. @ 05/10/24 19:41:53.418
  << Timeline
------------------------------
SSSSSSSSSSSSSSS
------------------------------
• [30.426 seconds]
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:207

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:41:26.344
  May 10 19:41:26.344: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename endpointslice @ 05/10/24 19:41:26.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:41:26.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:41:26.37
  STEP: referencing a single matching pod @ 05/10/24 19:41:31.675
  STEP: referencing matching pods with named port @ 05/10/24 19:41:36.685
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 05/10/24 19:41:41.696
  STEP: recreating EndpointSlices after they've been deleted @ 05/10/24 19:41:46.707
  May 10 19:41:46.734: INFO: EndpointSlice for Service endpointslice-8589/example-named-port not found
  May 10 19:41:56.747: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8589" for this suite. @ 05/10/24 19:41:56.755
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
• [19.668 seconds]
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:41:56.788
  May 10 19:41:56.788: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename daemonsets @ 05/10/24 19:41:56.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:41:56.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:41:56.812
  May 10 19:41:56.888: INFO: Create a RollingUpdate DaemonSet
  May 10 19:41:56.898: INFO: Check that daemon pods launch on every node of the cluster
  May 10 19:41:56.914: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:41:56.914: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:41:56.914: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:41:56.922: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 19:41:56.922: INFO: Node ip-172-31-236-144.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  May 10 19:41:57.942: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:41:57.942: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:41:57.942: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:41:57.951: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May 10 19:41:57.951: INFO: Node ip-172-31-236-144.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  May 10 19:41:58.930: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:41:58.930: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:41:58.930: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:41:58.946: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  May 10 19:41:58.946: INFO: Node ip-172-31-236-144.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  May 10 19:41:59.928: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:41:59.928: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:41:59.928: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:41:59.934: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  May 10 19:41:59.934: INFO: Node ip-172-31-236-144.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  May 10 19:42:00.933: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:00.933: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:00.933: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:00.937: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  May 10 19:42:00.937: INFO: Node ip-172-31-236-144.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  May 10 19:42:01.953: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:01.953: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:01.953: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:01.964: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  May 10 19:42:01.964: INFO: Node ip-172-31-236-144.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  May 10 19:42:02.933: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:02.933: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:02.933: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:02.999: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
  May 10 19:42:02.999: INFO: Node ip-172-31-238-69.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  May 10 19:42:03.932: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:03.932: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:03.932: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:03.937: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
  May 10 19:42:03.937: INFO: Node ip-172-31-238-69.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  May 10 19:42:04.931: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:04.931: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:04.931: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:04.936: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
  May 10 19:42:04.936: INFO: Node ip-172-31-238-69.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  May 10 19:42:05.928: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:05.928: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:05.928: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:05.932: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
  May 10 19:42:05.932: INFO: Node ip-172-31-238-69.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  May 10 19:42:06.931: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:06.931: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:06.932: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:06.941: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
  May 10 19:42:06.941: INFO: Node ip-172-31-238-69.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  May 10 19:42:07.930: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:07.930: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:07.930: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:07.934: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 6
  May 10 19:42:07.934: INFO: Number of running nodes: 6, number of available pods: 6 in daemonset daemon-set
  May 10 19:42:07.934: INFO: Update the DaemonSet to trigger a rollout
  May 10 19:42:07.949: INFO: Updating DaemonSet daemon-set
  May 10 19:42:09.971: INFO: Roll back the DaemonSet before rollout is complete
  May 10 19:42:09.984: INFO: Updating DaemonSet daemon-set
  May 10 19:42:09.984: INFO: Make sure DaemonSet rollback is complete
  May 10 19:42:09.994: INFO: Wrong image for pod: daemon-set-zhzzk. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  May 10 19:42:09.994: INFO: Pod daemon-set-zhzzk is not available
  May 10 19:42:10.000: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:10.000: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:10.000: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:11.016: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:11.016: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:11.016: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:12.014: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:12.015: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:12.015: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:13.035: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:13.035: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:13.035: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:14.011: INFO: Pod daemon-set-qq76b is not available
  May 10 19:42:14.019: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:14.019: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:42:14.020: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 05/10/24 19:42:14.029
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7021, will wait for the garbage collector to delete the pods @ 05/10/24 19:42:14.03
  May 10 19:42:14.093: INFO: Deleting DaemonSet.extensions daemon-set took: 9.498976ms
  May 10 19:42:14.194: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.026529ms
  May 10 19:42:16.399: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 19:42:16.399: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May 10 19:42:16.404: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"12871"},"items":null}

  May 10 19:42:16.408: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"12871"},"items":null}

  May 10 19:42:16.438: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7021" for this suite. @ 05/10/24 19:42:16.448
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [1.084 seconds]
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:740

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:42:16.491
  May 10 19:42:16.491: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename svcaccounts @ 05/10/24 19:42:16.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:42:16.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:42:16.521
  May 10 19:42:16.533: INFO: Got root ca configmap in namespace "svcaccounts-7148"
  May 10 19:42:16.543: INFO: Deleted root ca configmap in namespace "svcaccounts-7148"
  STEP: waiting for a new root ca configmap created @ 05/10/24 19:42:17.046
  May 10 19:42:17.050: INFO: Recreated root ca configmap in namespace "svcaccounts-7148"
  May 10 19:42:17.058: INFO: Updated root ca configmap in namespace "svcaccounts-7148"
  STEP: waiting for the root ca configmap reconciled @ 05/10/24 19:42:17.558
  May 10 19:42:17.562: INFO: Reconciled root ca configmap in namespace "svcaccounts-7148"
  May 10 19:42:17.562: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7148" for this suite. @ 05/10/24 19:42:17.568
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
• [25.422 seconds]
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:96

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:41:53.44
  May 10 19:41:53.440: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename aggregator @ 05/10/24 19:41:53.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:41:53.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:41:53.468
  May 10 19:41:53.472: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Registering the sample API server. @ 05/10/24 19:41:53.472
  May 10 19:41:53.874: INFO: Found ClusterRoles; assuming RBAC is enabled.
  May 10 19:41:53.924: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  May 10 19:41:56.054: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 41, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 19:41:58.060: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 41, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 19:42:00.069: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 41, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 19:42:02.074: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 41, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 19:42:04.062: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 41, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 19:42:06.062: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 41, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 19:42:08.061: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 41, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 19:42:10.061: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 41, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 19:42:12.066: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 41, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 19:42:14.062: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 41, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 19:42:16.078: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 41, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 41, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 19:42:18.239: INFO: Waited 165.948747ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 05/10/24 19:42:18.351
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 05/10/24 19:42:18.363
  STEP: List APIServices @ 05/10/24 19:42:18.371
  May 10 19:42:18.381: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 05/10/24 19:42:18.381
  May 10 19:42:18.408: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 05/10/24 19:42:18.408
  May 10 19:42:18.442: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.May, 10, 19, 42, 18, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 05/10/24 19:42:18.442
  May 10 19:42:18.449: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-05-10 19:42:18 +0000 UTC Passed all checks passed}
  May 10 19:42:18.449: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May 10 19:42:18.449: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 05/10/24 19:42:18.449
  May 10 19:42:18.463: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete APIService "dynamic-flunder-1247182192" @ 05/10/24 19:42:18.463
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 05/10/24 19:42:18.481
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 05/10/24 19:42:18.488
  STEP: Patch APIService Status @ 05/10/24 19:42:18.496
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 05/10/24 19:42:18.518
  May 10 19:42:18.532: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-05-10 19:42:18 +0000 UTC Passed all checks passed}
  May 10 19:42:18.532: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May 10 19:42:18.532: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  May 10 19:42:18.532: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "e2e-apiservice=patched" @ 05/10/24 19:42:18.532
  STEP: Confirm that the generated APIService has been deleted @ 05/10/24 19:42:18.541
  May 10 19:42:18.541: INFO: Requesting list of APIServices to confirm quantity
  May 10 19:42:18.557: INFO: Found 0 APIService with label "e2e-apiservice=patched"
  May 10 19:42:18.557: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  May 10 19:42:18.772: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-4" for this suite. @ 05/10/24 19:42:18.85
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.246 seconds]
[sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:42:18.891
  May 10 19:42:18.891: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:42:18.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:42:18.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:42:18.963
  STEP: Creating configMap with name configmap-projected-all-test-volume-ab34c14a-e9e5-4db8-bc1f-21a535650916 @ 05/10/24 19:42:18.967
  STEP: Creating secret with name secret-projected-all-test-volume-52096730-2e37-4d36-8118-5848fa4e0825 @ 05/10/24 19:42:18.978
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 05/10/24 19:42:18.999
  STEP: Saw pod success @ 05/10/24 19:42:23.038
  May 10 19:42:23.044: INFO: Trying to get logs from node ip-172-31-236-46.eu-west-3.compute.internal pod projected-volume-a6259ec5-dc39-4574-935f-cb2c44a8de4f container projected-all-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 19:42:23.067
  May 10 19:42:23.093: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6517" for this suite. @ 05/10/24 19:42:23.114
  << Timeline
------------------------------
SSSS
------------------------------
• [8.560 seconds]
[sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:396

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:42:23.142
  May 10 19:42:23.142: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 19:42:23.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:42:23.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:42:23.187
  STEP: creating all guestbook components @ 05/10/24 19:42:23.192
  May 10 19:42:23.192: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  May 10 19:42:23.192: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=kubectl-8466 create -f -'
  May 10 19:42:23.544: INFO: stderr: ""
  May 10 19:42:23.544: INFO: stdout: "service/agnhost-replica created\n"
  May 10 19:42:23.545: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  May 10 19:42:23.545: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=kubectl-8466 create -f -'
  May 10 19:42:23.879: INFO: stderr: ""
  May 10 19:42:23.879: INFO: stdout: "service/agnhost-primary created\n"
  May 10 19:42:23.879: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  May 10 19:42:23.879: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=kubectl-8466 create -f -'
  May 10 19:42:24.880: INFO: stderr: ""
  May 10 19:42:24.880: INFO: stdout: "service/frontend created\n"
  May 10 19:42:24.880: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  May 10 19:42:24.880: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=kubectl-8466 create -f -'
  May 10 19:42:25.119: INFO: stderr: ""
  May 10 19:42:25.119: INFO: stdout: "deployment.apps/frontend created\n"
  May 10 19:42:25.119: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  May 10 19:42:25.119: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=kubectl-8466 create -f -'
  May 10 19:42:25.366: INFO: stderr: ""
  May 10 19:42:25.366: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  May 10 19:42:25.366: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  May 10 19:42:25.366: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=kubectl-8466 create -f -'
  May 10 19:42:25.648: INFO: stderr: ""
  May 10 19:42:25.648: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 05/10/24 19:42:25.648
  May 10 19:42:25.648: INFO: Waiting for all frontend pods to be Running.
  May 10 19:42:30.700: INFO: Waiting for frontend to serve content.
  May 10 19:42:30.726: INFO: Trying to add a new entry to the guestbook.
  May 10 19:42:30.752: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 05/10/24 19:42:30.769
  May 10 19:42:30.769: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=kubectl-8466 delete --grace-period=0 --force -f -'
  May 10 19:42:30.979: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 10 19:42:30.979: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 05/10/24 19:42:30.979
  May 10 19:42:30.979: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=kubectl-8466 delete --grace-period=0 --force -f -'
  May 10 19:42:31.233: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 10 19:42:31.233: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/10/24 19:42:31.233
  May 10 19:42:31.233: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=kubectl-8466 delete --grace-period=0 --force -f -'
  May 10 19:42:31.366: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 10 19:42:31.366: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/10/24 19:42:31.366
  May 10 19:42:31.366: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=kubectl-8466 delete --grace-period=0 --force -f -'
  May 10 19:42:31.476: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 10 19:42:31.477: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/10/24 19:42:31.477
  May 10 19:42:31.477: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=kubectl-8466 delete --grace-period=0 --force -f -'
  May 10 19:42:31.581: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 10 19:42:31.581: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/10/24 19:42:31.581
  May 10 19:42:31.581: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=kubectl-8466 delete --grace-period=0 --force -f -'
  May 10 19:42:31.670: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 10 19:42:31.670: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  May 10 19:42:31.670: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8466" for this suite. @ 05/10/24 19:42:31.679
  << Timeline
------------------------------
SSSSSS
------------------------------
• [4.140 seconds]
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:609

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:42:31.715
  May 10 19:42:31.715: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename security-context-test @ 05/10/24 19:42:31.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:42:31.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:42:31.763
  May 10 19:42:35.831: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6469" for this suite. @ 05/10/24 19:42:35.841
  << Timeline
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
• [34.165 seconds]
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:529

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:42:35.867
  May 10 19:42:35.867: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename svcaccounts @ 05/10/24 19:42:35.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:42:35.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:42:35.898
  May 10 19:42:35.936: INFO: created pod
  STEP: Saw pod success @ 05/10/24 19:42:39.978
  May 10 19:43:09.978: INFO: polling logs
  May 10 19:43:09.991: INFO: Pod logs: 
  I0510 19:42:36.595046       1 log.go:245] OK: Got token
  I0510 19:42:36.595189       1 log.go:245] validating with in-cluster discovery
  I0510 19:42:36.595528       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0510 19:42:36.595547       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-8993:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000013540), NotBefore:(*jwt.NumericDate)(0xc000013628), IssuedAt:(*jwt.NumericDate)(0xc000013550), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8993", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"6d613b33-df18-470f-abd4-9659bccffe08"}}}
  I0510 19:42:36.618168       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0510 19:42:36.635800       1 log.go:245] OK: Validated signature on JWT
  I0510 19:42:36.635922       1 log.go:245] OK: Got valid claims from token!
  I0510 19:42:36.635981       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-8993:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000127ee0), NotBefore:(*jwt.NumericDate)(0xc000127f18), IssuedAt:(*jwt.NumericDate)(0xc000127ee8), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8993", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"6d613b33-df18-470f-abd4-9659bccffe08"}}}

  May 10 19:43:09.991: INFO: completed pod
  May 10 19:43:10.003: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8993" for this suite. @ 05/10/24 19:43:10.015
  << Timeline
------------------------------
SSSSSSSSSSSS
------------------------------
• [60.060 seconds]
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:42:17.587
  May 10 19:42:17.587: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename container-probe @ 05/10/24 19:42:17.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:42:17.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:42:17.615
  May 10 19:43:17.631: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-344" for this suite. @ 05/10/24 19:43:17.638
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
• [13.150 seconds]
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:243

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:43:17.663
  May 10 19:43:17.663: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename namespaces @ 05/10/24 19:43:17.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:43:17.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:43:17.683
  STEP: Creating a test namespace @ 05/10/24 19:43:17.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:43:17.702
  STEP: Creating a pod in the namespace @ 05/10/24 19:43:17.705
  STEP: Waiting for the pod to have running status @ 05/10/24 19:43:17.714
  STEP: Deleting the namespace @ 05/10/24 19:43:19.723
  STEP: Waiting for the namespace to be removed. @ 05/10/24 19:43:19.731
  STEP: Recreating the namespace @ 05/10/24 19:43:30.752
  STEP: Verifying there are no pods in the namespace @ 05/10/24 19:43:30.781
  May 10 19:43:30.786: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1095" for this suite. @ 05/10/24 19:43:30.793
  STEP: Destroying namespace "nsdeletetest-8947" for this suite. @ 05/10/24 19:43:30.801
  May 10 19:43:30.805: INFO: Namespace nsdeletetest-8947 was already deleted
  STEP: Destroying namespace "nsdeletetest-7206" for this suite. @ 05/10/24 19:43:30.805
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.199 seconds]
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:268

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:43:30.842
  May 10 19:43:30.842: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 19:43:30.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:43:30.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:43:30.867
  STEP: Creating a pod to test downward api env vars @ 05/10/24 19:43:30.87
  STEP: Saw pod success @ 05/10/24 19:43:34.894
  May 10 19:43:34.904: INFO: Trying to get logs from node ip-172-31-237-27.eu-west-3.compute.internal pod downward-api-e3b44cc9-0862-4b70-ab2b-582714ec3729 container dapi-container: <nil>
  STEP: delete the pod @ 05/10/24 19:43:34.945
  May 10 19:43:34.999: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7063" for this suite. @ 05/10/24 19:43:35.014
  << Timeline
------------------------------
SSSSSSSSSSSSSSS
------------------------------
• [0.270 seconds]
[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:161

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:43:35.06
  May 10 19:43:35.060: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename svcaccounts @ 05/10/24 19:43:35.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:43:35.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:43:35.16
  May 10 19:43:35.206: INFO: created pod pod-service-account-defaultsa
  May 10 19:43:35.206: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  May 10 19:43:35.213: INFO: created pod pod-service-account-mountsa
  May 10 19:43:35.213: INFO: pod pod-service-account-mountsa service account token volume mount: true
  May 10 19:43:35.224: INFO: created pod pod-service-account-nomountsa
  May 10 19:43:35.224: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  May 10 19:43:35.234: INFO: created pod pod-service-account-defaultsa-mountspec
  May 10 19:43:35.234: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  May 10 19:43:35.243: INFO: created pod pod-service-account-mountsa-mountspec
  May 10 19:43:35.243: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  May 10 19:43:35.253: INFO: created pod pod-service-account-nomountsa-mountspec
  May 10 19:43:35.253: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  May 10 19:43:35.270: INFO: created pod pod-service-account-defaultsa-nomountspec
  May 10 19:43:35.270: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  May 10 19:43:35.285: INFO: created pod pod-service-account-mountsa-nomountspec
  May 10 19:43:35.285: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  May 10 19:43:35.295: INFO: created pod pod-service-account-nomountsa-nomountspec
  May 10 19:43:35.295: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  May 10 19:43:35.295: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7766" for this suite. @ 05/10/24 19:43:35.311
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [16.079 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:43:35.335
  May 10 19:43:35.335: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename webhook @ 05/10/24 19:43:35.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:43:35.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:43:35.412
  STEP: Setting up server cert @ 05/10/24 19:43:35.546
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 19:43:35.98
  STEP: Deploying the webhook pod @ 05/10/24 19:43:35.993
  STEP: Wait for the deployment to be ready @ 05/10/24 19:43:36.013
  May 10 19:43:36.045: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 19:43:38.059
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 19:43:38.105
  May 10 19:43:39.106: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 05/10/24 19:43:39.114
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/10/24 19:43:39.114
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 05/10/24 19:43:39.146
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 05/10/24 19:43:40.158
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/10/24 19:43:40.158
  STEP: Having no error when timeout is longer than webhook latency @ 05/10/24 19:43:41.197
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/10/24 19:43:41.197
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 05/10/24 19:43:46.248
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/10/24 19:43:46.248
  May 10 19:43:51.288: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4064" for this suite. @ 05/10/24 19:43:51.398
  STEP: Destroying namespace "webhook-markers-9027" for this suite. @ 05/10/24 19:43:51.406
  << Timeline
------------------------------
SSSSS
------------------------------
• [135.459 seconds]
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:41:44.912
  May 10 19:41:44.912: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename taint-single-pod @ 05/10/24 19:41:44.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:41:44.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:41:44.938
  May 10 19:41:44.942: INFO: Waiting up to 1m0s for all nodes to be ready
  May 10 19:42:45.014: INFO: Waiting for terminating namespaces to be deleted...
  May 10 19:42:45.023: INFO: Starting informer...
  STEP: Starting pod... @ 05/10/24 19:42:45.023
  May 10 19:42:45.251: INFO: Pod is running on ip-172-31-238-69.eu-west-3.compute.internal. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/10/24 19:42:45.251
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/10/24 19:42:45.273
  STEP: Waiting short time to make sure Pod is queued for deletion @ 05/10/24 19:42:45.28
  May 10 19:42:45.280: INFO: Pod wasn't evicted. Proceeding
  May 10 19:42:45.280: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/10/24 19:42:45.334
  STEP: Waiting some time to make sure that toleration time passed. @ 05/10/24 19:42:45.351
  May 10 19:44:00.351: INFO: Pod wasn't evicted. Test successful
  May 10 19:44:00.351: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-8713" for this suite. @ 05/10/24 19:44:00.362
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [10.931 seconds]
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2202

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:44:00.422
  May 10 19:44:00.422: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename services @ 05/10/24 19:44:00.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:44:00.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:44:00.445
  STEP: creating service in namespace services-1701 @ 05/10/24 19:44:00.448
  STEP: creating service affinity-nodeport in namespace services-1701 @ 05/10/24 19:44:00.448
  STEP: creating replication controller affinity-nodeport in namespace services-1701 @ 05/10/24 19:44:00.478
  I0510 19:44:00.511083      22 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-1701, replica count: 3
  I0510 19:44:03.562141      22 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 10 19:44:03.577: INFO: Creating new exec pod
  May 10 19:44:06.613: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=services-1701 exec execpod-affinitydhz5x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  May 10 19:44:06.799: INFO: stderr: "+ + echonc hostName\n -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  May 10 19:44:06.799: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 19:44:06.799: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=services-1701 exec execpod-affinitydhz5x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.106.135.209 80'
  May 10 19:44:06.996: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.106.135.209 80\nConnection to 10.106.135.209 80 port [tcp/http] succeeded!\n"
  May 10 19:44:06.996: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 19:44:06.997: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=services-1701 exec execpod-affinitydhz5x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.236.144 30995'
  May 10 19:44:07.181: INFO: stderr: "+ nc -v -t -w 2 172.31.236.144 30995\n+ echo hostName\nConnection to 172.31.236.144 30995 port [tcp/*] succeeded!\n"
  May 10 19:44:07.181: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 19:44:07.181: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=services-1701 exec execpod-affinitydhz5x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.237.27 30995'
  May 10 19:44:07.385: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.237.27 30995\nConnection to 172.31.237.27 30995 port [tcp/*] succeeded!\n"
  May 10 19:44:07.385: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 19:44:07.385: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=services-1701 exec execpod-affinitydhz5x -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.236.144:30995/ ; done'
  May 10 19:44:07.716: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:30995/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:30995/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:30995/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:30995/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:30995/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:30995/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:30995/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:30995/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:30995/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:30995/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:30995/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:30995/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:30995/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:30995/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:30995/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:30995/\n"
  May 10 19:44:07.716: INFO: stdout: "\naffinity-nodeport-cwqz7\naffinity-nodeport-cwqz7\naffinity-nodeport-cwqz7\naffinity-nodeport-cwqz7\naffinity-nodeport-cwqz7\naffinity-nodeport-cwqz7\naffinity-nodeport-cwqz7\naffinity-nodeport-cwqz7\naffinity-nodeport-cwqz7\naffinity-nodeport-cwqz7\naffinity-nodeport-cwqz7\naffinity-nodeport-cwqz7\naffinity-nodeport-cwqz7\naffinity-nodeport-cwqz7\naffinity-nodeport-cwqz7\naffinity-nodeport-cwqz7"
  May 10 19:44:07.716: INFO: Received response from host: affinity-nodeport-cwqz7
  May 10 19:44:07.716: INFO: Received response from host: affinity-nodeport-cwqz7
  May 10 19:44:07.716: INFO: Received response from host: affinity-nodeport-cwqz7
  May 10 19:44:07.716: INFO: Received response from host: affinity-nodeport-cwqz7
  May 10 19:44:07.716: INFO: Received response from host: affinity-nodeport-cwqz7
  May 10 19:44:07.716: INFO: Received response from host: affinity-nodeport-cwqz7
  May 10 19:44:07.716: INFO: Received response from host: affinity-nodeport-cwqz7
  May 10 19:44:07.716: INFO: Received response from host: affinity-nodeport-cwqz7
  May 10 19:44:07.716: INFO: Received response from host: affinity-nodeport-cwqz7
  May 10 19:44:07.716: INFO: Received response from host: affinity-nodeport-cwqz7
  May 10 19:44:07.716: INFO: Received response from host: affinity-nodeport-cwqz7
  May 10 19:44:07.716: INFO: Received response from host: affinity-nodeport-cwqz7
  May 10 19:44:07.716: INFO: Received response from host: affinity-nodeport-cwqz7
  May 10 19:44:07.716: INFO: Received response from host: affinity-nodeport-cwqz7
  May 10 19:44:07.716: INFO: Received response from host: affinity-nodeport-cwqz7
  May 10 19:44:07.716: INFO: Received response from host: affinity-nodeport-cwqz7
  May 10 19:44:07.717: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May 10 19:44:07.744: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-1701, will wait for the garbage collector to delete the pods @ 05/10/24 19:44:07.782
  May 10 19:44:07.847: INFO: Deleting ReplicationController affinity-nodeport took: 10.639072ms
  May 10 19:44:07.948: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.906389ms
  STEP: Destroying namespace "services-1701" for this suite. @ 05/10/24 19:44:11.341
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [67.006 seconds]
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:43:10.043
  May 10 19:43:10.043: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename sched-preemption @ 05/10/24 19:43:10.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:43:10.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:43:10.096
  May 10 19:43:10.132: INFO: Waiting up to 1m0s for all nodes to be ready
  May 10 19:44:10.218: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/10/24 19:44:10.23
  May 10 19:44:10.293: INFO: Created pod: pod0-0-sched-preemption-low-priority
  May 10 19:44:10.309: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  May 10 19:44:10.349: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  May 10 19:44:10.363: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  May 10 19:44:10.413: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  May 10 19:44:10.428: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  May 10 19:44:10.470: INFO: Created pod: pod3-0-sched-preemption-medium-priority
  May 10 19:44:10.501: INFO: Created pod: pod3-1-sched-preemption-medium-priority
  May 10 19:44:10.556: INFO: Created pod: pod4-0-sched-preemption-medium-priority
  May 10 19:44:10.568: INFO: Created pod: pod4-1-sched-preemption-medium-priority
  May 10 19:44:10.613: INFO: Created pod: pod5-0-sched-preemption-medium-priority
  May 10 19:44:10.631: INFO: Created pod: pod5-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/10/24 19:44:10.631
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 05/10/24 19:44:12.724
  May 10 19:44:16.900: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8898" for this suite. @ 05/10/24 19:44:17.037
  << Timeline
------------------------------
SS
------------------------------
• [5.123 seconds]
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:111

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:44:17.052
  May 10 19:44:17.052: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename replicaset @ 05/10/24 19:44:17.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:44:17.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:44:17.096
  May 10 19:44:17.100: INFO: Creating ReplicaSet my-hostname-basic-8886954f-2c9f-4ab7-a9ce-d1925e7b6b2e
  May 10 19:44:17.123: INFO: Pod name my-hostname-basic-8886954f-2c9f-4ab7-a9ce-d1925e7b6b2e: Found 0 pods out of 1
  May 10 19:44:22.130: INFO: Pod name my-hostname-basic-8886954f-2c9f-4ab7-a9ce-d1925e7b6b2e: Found 1 pods out of 1
  May 10 19:44:22.130: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-8886954f-2c9f-4ab7-a9ce-d1925e7b6b2e" is running
  May 10 19:44:22.135: INFO: Pod "my-hostname-basic-8886954f-2c9f-4ab7-a9ce-d1925e7b6b2e-f5jvv" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-10 19:44:17 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-10 19:44:18 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-10 19:44:18 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-10 19:44:17 +0000 UTC Reason: Message:}])
  May 10 19:44:22.135: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/10/24 19:44:22.136
  May 10 19:44:22.154: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8567" for this suite. @ 05/10/24 19:44:22.163
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [4.304 seconds]
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:174

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:44:22.187
  May 10 19:44:22.187: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:44:22.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:44:22.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:44:22.226
  STEP: Creating configMap with name cm-test-opt-del-9584e6bd-dcb3-479a-bbfa-a8b485c0a370 @ 05/10/24 19:44:22.244
  STEP: Creating configMap with name cm-test-opt-upd-7844484e-162d-41c1-adf2-b0961a62e877 @ 05/10/24 19:44:22.259
  STEP: Creating the pod @ 05/10/24 19:44:22.27
  STEP: Deleting configmap cm-test-opt-del-9584e6bd-dcb3-479a-bbfa-a8b485c0a370 @ 05/10/24 19:44:24.386
  STEP: Updating configmap cm-test-opt-upd-7844484e-162d-41c1-adf2-b0961a62e877 @ 05/10/24 19:44:24.399
  STEP: Creating configMap with name cm-test-opt-create-efe60b86-1297-403f-9a47-fc6013387ea8 @ 05/10/24 19:44:24.407
  STEP: waiting to observe update in volume @ 05/10/24 19:44:24.413
  May 10 19:44:26.466: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7101" for this suite. @ 05/10/24 19:44:26.478
  << Timeline
------------------------------
S
------------------------------
• [11.539 seconds]
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:101

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:44:26.492
  May 10 19:44:26.492: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 19:44:26.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:44:26.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:44:26.535
  STEP: Counting existing ResourceQuota @ 05/10/24 19:44:26.542
  STEP: Creating a ResourceQuota @ 05/10/24 19:44:31.548
  STEP: Ensuring resource quota status is calculated @ 05/10/24 19:44:31.575
  STEP: Creating a Service @ 05/10/24 19:44:33.582
  STEP: Creating a NodePort Service @ 05/10/24 19:44:33.62
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 05/10/24 19:44:33.762
  STEP: Ensuring resource quota status captures service creation @ 05/10/24 19:44:33.866
  STEP: Deleting Services @ 05/10/24 19:44:35.873
  STEP: Ensuring resource quota status released usage @ 05/10/24 19:44:36
  May 10 19:44:38.011: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6951" for this suite. @ 05/10/24 19:44:38.02
  << Timeline
------------------------------
SS
------------------------------
• [24.325 seconds]
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:44:38.035
  May 10 19:44:38.035: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename subpath @ 05/10/24 19:44:38.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:44:38.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:44:38.083
  STEP: Setting up data @ 05/10/24 19:44:38.09
  STEP: Creating pod pod-subpath-test-configmap-cctq @ 05/10/24 19:44:38.123
  STEP: Creating a pod to test atomic-volume-subpath @ 05/10/24 19:44:38.123
  STEP: Saw pod success @ 05/10/24 19:45:02.279
  May 10 19:45:02.286: INFO: Trying to get logs from node ip-172-31-238-69.eu-west-3.compute.internal pod pod-subpath-test-configmap-cctq container test-container-subpath-configmap-cctq: <nil>
  STEP: delete the pod @ 05/10/24 19:45:02.298
  STEP: Deleting pod pod-subpath-test-configmap-cctq @ 05/10/24 19:45:02.327
  May 10 19:45:02.327: INFO: Deleting pod "pod-subpath-test-configmap-cctq" in namespace "subpath-4720"
  May 10 19:45:02.333: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4720" for this suite. @ 05/10/24 19:45:02.346
  << Timeline
------------------------------
S
------------------------------
• [4.177 seconds]
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:45:02.363
  May 10 19:45:02.363: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename container-runtime @ 05/10/24 19:45:02.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:45:02.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:45:02.413
  STEP: create the container @ 05/10/24 19:45:02.419
  W0510 19:45:02.444082      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/10/24 19:45:02.444
  STEP: get the container status @ 05/10/24 19:45:06.484
  STEP: the container should be terminated @ 05/10/24 19:45:06.49
  STEP: the termination message should be set @ 05/10/24 19:45:06.49
  May 10 19:45:06.490: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/10/24 19:45:06.49
  May 10 19:45:06.515: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6761" for this suite. @ 05/10/24 19:45:06.529
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [0.093 seconds]
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:123

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:45:06.551
  May 10 19:45:06.551: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename sysctl @ 05/10/24 19:45:06.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:45:06.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:45:06.59
  STEP: Creating a pod with one valid and two invalid sysctls @ 05/10/24 19:45:06.605
  May 10 19:45:06.620: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-9326" for this suite. @ 05/10/24 19:45:06.63
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [88.850 seconds]
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:43:51.419
  May 10 19:43:51.419: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename taint-multiple-pods @ 05/10/24 19:43:51.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:43:51.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:43:51.442
  May 10 19:43:51.444: INFO: Waiting up to 1m0s for all nodes to be ready
  May 10 19:44:51.488: INFO: Waiting for terminating namespaces to be deleted...
  May 10 19:44:51.492: INFO: Starting informer...
  STEP: Starting pods... @ 05/10/24 19:44:51.492
  May 10 19:44:51.725: INFO: Pod1 is running on ip-172-31-237-27.eu-west-3.compute.internal. Tainting Node
  May 10 19:44:53.986: INFO: Pod2 is running on ip-172-31-237-27.eu-west-3.compute.internal. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/10/24 19:44:53.986
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/10/24 19:44:54.028
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 05/10/24 19:44:54.04
  May 10 19:45:00.162: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  May 10 19:45:20.210: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  May 10 19:45:20.210: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/10/24 19:45:20.235
  STEP: Destroying namespace "taint-multiple-pods-4761" for this suite. @ 05/10/24 19:45:20.253
  << Timeline
------------------------------
• [101.363 seconds]
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:320

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:44:11.373
  May 10 19:44:11.373: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename statefulset @ 05/10/24 19:44:11.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:44:11.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:44:11.401
  STEP: Creating service test in namespace statefulset-4302 @ 05/10/24 19:44:11.404
  STEP: Creating a new StatefulSet @ 05/10/24 19:44:11.414
  May 10 19:44:11.442: INFO: Found 0 stateful pods, waiting for 3
  May 10 19:44:21.448: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  May 10 19:44:21.448: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  May 10 19:44:21.448: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  May 10 19:44:21.465: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=statefulset-4302 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 10 19:44:21.668: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 10 19:44:21.668: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 10 19:44:21.668: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/10/24 19:44:31.725
  May 10 19:44:31.751: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 05/10/24 19:44:31.751
  STEP: Updating Pods in reverse ordinal order @ 05/10/24 19:44:41.793
  May 10 19:44:41.810: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=statefulset-4302 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 10 19:44:41.994: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 10 19:44:41.994: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 10 19:44:41.994: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 05/10/24 19:45:02.055
  May 10 19:45:02.055: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=statefulset-4302 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 10 19:45:02.309: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 10 19:45:02.309: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 10 19:45:02.309: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 10 19:45:12.391: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 05/10/24 19:45:22.418
  May 10 19:45:22.422: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=statefulset-4302 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 10 19:45:22.572: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 10 19:45:22.572: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 10 19:45:22.572: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 10 19:45:32.600: INFO: Waiting for StatefulSet statefulset-4302/ss2 to complete update
  May 10 19:45:42.631: INFO: Deleting all statefulset in ns statefulset-4302
  May 10 19:45:42.642: INFO: Scaling statefulset ss2 to 0
  May 10 19:45:52.667: INFO: Waiting for statefulset status.replicas updated to 0
  May 10 19:45:52.671: INFO: Deleting statefulset ss2
  May 10 19:45:52.699: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4302" for this suite. @ 05/10/24 19:45:52.718
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
• [4.114 seconds]
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:164

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:45:52.751
  May 10 19:45:52.751: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename security-context @ 05/10/24 19:45:52.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:45:52.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:45:52.78
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/10/24 19:45:52.784
  STEP: Saw pod success @ 05/10/24 19:45:56.811
  May 10 19:45:56.816: INFO: Trying to get logs from node ip-172-31-236-46.eu-west-3.compute.internal pod security-context-b6f52888-b600-45d3-acc0-6b1bf3040e26 container test-container: <nil>
  STEP: delete the pod @ 05/10/24 19:45:56.829
  May 10 19:45:56.850: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-5121" for this suite. @ 05/10/24 19:45:56.857
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.108 seconds]
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1806

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:45:56.889
  May 10 19:45:56.889: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 19:45:56.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:45:56.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:45:56.917
  STEP: Starting the proxy @ 05/10/24 19:45:56.932
  May 10 19:45:56.932: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-955 proxy --unix-socket=/tmp/kubectl-proxy-unix3679021621/test'
  STEP: retrieving proxy /api/ output @ 05/10/24 19:45:56.981
  May 10 19:45:56.982: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-955" for this suite. @ 05/10/24 19:45:56.99
  << Timeline
------------------------------
SSSSSSSSSSSSSS
------------------------------
• [8.299 seconds]
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:349

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:45:57.008
  May 10 19:45:57.008: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename disruption @ 05/10/24 19:45:57.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:45:57.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:45:57.029
  STEP: Creating a pdb that targets all three pods in a test replica set @ 05/10/24 19:45:57.032
  STEP: Waiting for the pdb to be processed @ 05/10/24 19:45:57.039
  STEP: First trying to evict a pod which shouldn't be evictable @ 05/10/24 19:45:59.057
  STEP: Waiting for all pods to be running @ 05/10/24 19:45:59.057
  May 10 19:45:59.064: INFO: pods: 0 < 3
  STEP: locating a running pod @ 05/10/24 19:46:01.071
  STEP: Updating the pdb to allow a pod to be evicted @ 05/10/24 19:46:01.096
  STEP: Waiting for the pdb to be processed @ 05/10/24 19:46:01.11
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/10/24 19:46:03.12
  STEP: Waiting for all pods to be running @ 05/10/24 19:46:03.12
  STEP: Waiting for the pdb to observed all healthy pods @ 05/10/24 19:46:03.124
  STEP: Patching the pdb to disallow a pod to be evicted @ 05/10/24 19:46:03.161
  STEP: Waiting for the pdb to be processed @ 05/10/24 19:46:03.187
  STEP: Waiting for all pods to be running @ 05/10/24 19:46:05.205
  STEP: locating a running pod @ 05/10/24 19:46:05.21
  STEP: Deleting the pdb to allow a pod to be evicted @ 05/10/24 19:46:05.221
  STEP: Waiting for the pdb to be deleted @ 05/10/24 19:46:05.227
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/10/24 19:46:05.231
  STEP: Waiting for all pods to be running @ 05/10/24 19:46:05.231
  May 10 19:46:05.256: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2521" for this suite. @ 05/10/24 19:46:05.27
  << Timeline
------------------------------
SSSSSS
------------------------------
• [63.222 seconds]
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:45:06.665
  May 10 19:45:06.665: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename crd-watch @ 05/10/24 19:45:06.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:45:06.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:45:06.701
  May 10 19:45:06.705: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Creating first CR  @ 05/10/24 19:45:09.261
  May 10 19:45:09.269: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-10T19:45:09Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-10T19:45:09Z]] name:name1 resourceVersion:15311 uid:0fd01715-fa69-48d7-a79b-34fb6c13b1e9] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 05/10/24 19:45:19.27
  May 10 19:45:19.279: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-10T19:45:19Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-10T19:45:19Z]] name:name2 resourceVersion:15393 uid:6456b08a-1869-4185-b428-4ae6058dfe73] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 05/10/24 19:45:29.28
  May 10 19:45:29.290: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-10T19:45:09Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-10T19:45:29Z]] name:name1 resourceVersion:15542 uid:0fd01715-fa69-48d7-a79b-34fb6c13b1e9] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 05/10/24 19:45:39.29
  May 10 19:45:39.303: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-10T19:45:19Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-10T19:45:39Z]] name:name2 resourceVersion:15639 uid:6456b08a-1869-4185-b428-4ae6058dfe73] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 05/10/24 19:45:49.304
  May 10 19:45:49.320: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-10T19:45:09Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-10T19:45:29Z]] name:name1 resourceVersion:15737 uid:0fd01715-fa69-48d7-a79b-34fb6c13b1e9] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 05/10/24 19:45:59.321
  May 10 19:45:59.336: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-10T19:45:19Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-10T19:45:39Z]] name:name2 resourceVersion:15913 uid:6456b08a-1869-4185-b428-4ae6058dfe73] num:map[num1:9223372036854775807 num2:1000000]]}
  May 10 19:46:09.865: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-2164" for this suite. @ 05/10/24 19:46:09.875
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [38.711 seconds]
[sig-network] DNS should provide DNS for services  [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:46:09.912
  May 10 19:46:09.912: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename dns @ 05/10/24 19:46:09.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:46:09.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:46:09.956
  STEP: Creating a test headless service @ 05/10/24 19:46:09.96
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4440.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4440.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4440.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4440.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4440.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4440.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4440.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-4440.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4440.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-4440.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 223.103.108.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.108.103.223_udp@PTR;check="$$(dig +tcp +noall +answer +search 223.103.108.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.108.103.223_tcp@PTR;sleep 1; done
   @ 05/10/24 19:46:10.022
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4440.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4440.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4440.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4440.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4440.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4440.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4440.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-4440.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4440.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-4440.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 223.103.108.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.108.103.223_udp@PTR;check="$$(dig +tcp +noall +answer +search 223.103.108.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.108.103.223_tcp@PTR;sleep 1; done
   @ 05/10/24 19:46:10.022
  STEP: creating a pod to probe DNS @ 05/10/24 19:46:10.022
  STEP: submitting the pod to kubernetes @ 05/10/24 19:46:10.022
  STEP: retrieving the pod @ 05/10/24 19:46:18.076
  STEP: looking for the results for each expected name from probers @ 05/10/24 19:46:18.085
  May 10 19:46:18.098: INFO: Unable to read wheezy_udp@dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:18.106: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:18.113: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:18.120: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:18.182: INFO: Unable to read jessie_udp@dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:18.192: INFO: Unable to read jessie_tcp@dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:18.203: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:18.210: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:18.266: INFO: Lookups using dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012 failed for: [wheezy_udp@dns-test-service.dns-4440.svc.cluster.local wheezy_tcp@dns-test-service.dns-4440.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local jessie_udp@dns-test-service.dns-4440.svc.cluster.local jessie_tcp@dns-test-service.dns-4440.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local]

  May 10 19:46:18.308: INFO: Pod client logs for webserver: 
  May 10 19:46:18.322: INFO: Pod client logs for querier: 
  May 10 19:46:18.334: INFO: Pod client logs for jessie-querier: 
  May 10 19:46:23.343: INFO: Unable to read wheezy_udp@dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:23.353: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:23.361: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:23.374: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:23.439: INFO: Unable to read jessie_udp@dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:23.444: INFO: Unable to read jessie_tcp@dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:23.451: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:23.457: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:23.482: INFO: Lookups using dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012 failed for: [wheezy_udp@dns-test-service.dns-4440.svc.cluster.local wheezy_tcp@dns-test-service.dns-4440.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local jessie_udp@dns-test-service.dns-4440.svc.cluster.local jessie_tcp@dns-test-service.dns-4440.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local]

  May 10 19:46:23.499: INFO: Pod client logs for webserver: 
  May 10 19:46:23.509: INFO: Pod client logs for querier: 
  May 10 19:46:23.528: INFO: Pod client logs for jessie-querier: 
  May 10 19:46:28.349: INFO: Unable to read wheezy_udp@dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:28.357: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:28.370: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:28.380: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:28.420: INFO: Unable to read jessie_udp@dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:28.427: INFO: Unable to read jessie_tcp@dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:28.434: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:28.442: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:28.470: INFO: Lookups using dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012 failed for: [wheezy_udp@dns-test-service.dns-4440.svc.cluster.local wheezy_tcp@dns-test-service.dns-4440.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local jessie_udp@dns-test-service.dns-4440.svc.cluster.local jessie_tcp@dns-test-service.dns-4440.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local]

  May 10 19:46:28.480: INFO: Pod client logs for webserver: 
  May 10 19:46:28.490: INFO: Pod client logs for querier: 
  May 10 19:46:28.499: INFO: Pod client logs for jessie-querier: 
  May 10 19:46:33.349: INFO: Unable to read wheezy_udp@dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:33.361: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:33.373: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:33.387: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:33.437: INFO: Unable to read jessie_udp@dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:33.447: INFO: Unable to read jessie_tcp@dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:33.454: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:33.460: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:33.488: INFO: Lookups using dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012 failed for: [wheezy_udp@dns-test-service.dns-4440.svc.cluster.local wheezy_tcp@dns-test-service.dns-4440.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local jessie_udp@dns-test-service.dns-4440.svc.cluster.local jessie_tcp@dns-test-service.dns-4440.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local]

  May 10 19:46:33.501: INFO: Pod client logs for webserver: 
  May 10 19:46:33.512: INFO: Pod client logs for querier: 
  May 10 19:46:33.523: INFO: Pod client logs for jessie-querier: 
  May 10 19:46:38.348: INFO: Unable to read wheezy_udp@dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:38.361: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:38.373: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:38.383: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:38.426: INFO: Unable to read jessie_udp@dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:38.438: INFO: Unable to read jessie_tcp@dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:38.445: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:38.451: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:38.476: INFO: Lookups using dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012 failed for: [wheezy_udp@dns-test-service.dns-4440.svc.cluster.local wheezy_tcp@dns-test-service.dns-4440.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local jessie_udp@dns-test-service.dns-4440.svc.cluster.local jessie_tcp@dns-test-service.dns-4440.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local]

  May 10 19:46:38.486: INFO: Pod client logs for webserver: 
  May 10 19:46:38.496: INFO: Pod client logs for querier: 
  May 10 19:46:38.514: INFO: Pod client logs for jessie-querier: 
  May 10 19:46:43.347: INFO: Unable to read wheezy_udp@dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:43.355: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:43.362: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:43.368: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:43.409: INFO: Unable to read jessie_udp@dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:43.417: INFO: Unable to read jessie_tcp@dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:43.427: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:43.436: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local from pod dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012: the server could not find the requested resource (get pods dns-test-8534be44-6866-4590-9e80-d57910f49012)
  May 10 19:46:43.468: INFO: Lookups using dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012 failed for: [wheezy_udp@dns-test-service.dns-4440.svc.cluster.local wheezy_tcp@dns-test-service.dns-4440.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local jessie_udp@dns-test-service.dns-4440.svc.cluster.local jessie_tcp@dns-test-service.dns-4440.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4440.svc.cluster.local]

  May 10 19:46:43.484: INFO: Pod client logs for webserver: 
  May 10 19:46:43.494: INFO: Pod client logs for querier: 
  May 10 19:46:43.504: INFO: Pod client logs for jessie-querier: 
  May 10 19:46:48.465: INFO: DNS probes using dns-4440/dns-test-8534be44-6866-4590-9e80-d57910f49012 succeeded

  May 10 19:46:48.465: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/10/24 19:46:48.475
  STEP: deleting the test service @ 05/10/24 19:46:48.504
  STEP: deleting the test headless service @ 05/10/24 19:46:48.579
  STEP: Destroying namespace "dns-4440" for this suite. @ 05/10/24 19:46:48.612
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.188 seconds]
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:45

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:46:48.643
  May 10 19:46:48.643: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename configmap @ 05/10/24 19:46:48.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:46:48.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:46:48.671
  STEP: Creating configMap configmap-7649/configmap-test-bc88e851-86d6-46ed-9778-970feb04d5bf @ 05/10/24 19:46:48.675
  STEP: Creating a pod to test consume configMaps @ 05/10/24 19:46:48.683
  STEP: Saw pod success @ 05/10/24 19:46:52.725
  May 10 19:46:52.731: INFO: Trying to get logs from node ip-172-31-237-5.eu-west-3.compute.internal pod pod-configmaps-1149f5bc-6ce9-4502-872c-5c51580f5d31 container env-test: <nil>
  STEP: delete the pod @ 05/10/24 19:46:52.751
  May 10 19:46:52.791: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7649" for this suite. @ 05/10/24 19:46:52.812
  << Timeline
------------------------------
SSSSSSSSSSSSSS
------------------------------
• [8.203 seconds]
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:135

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:46:52.839
  May 10 19:46:52.839: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/10/24 19:46:52.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:46:52.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:46:52.873
  STEP: create the container to handle the HTTPGet hook request. @ 05/10/24 19:46:52.886
  STEP: create the pod with lifecycle hook @ 05/10/24 19:46:54.927
  STEP: check poststart hook @ 05/10/24 19:46:56.962
  STEP: delete the pod with lifecycle hook @ 05/10/24 19:46:56.976
  May 10 19:47:01.021: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8317" for this suite. @ 05/10/24 19:47:01.03
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [0.213 seconds]
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:355

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:47:01.048
  May 10 19:47:01.048: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename endpointslice @ 05/10/24 19:47:01.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:47:01.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:47:01.102
  STEP: getting /apis @ 05/10/24 19:47:01.108
  STEP: getting /apis/discovery.k8s.io @ 05/10/24 19:47:01.113
  STEP: getting /apis/discovery.k8s.iov1 @ 05/10/24 19:47:01.115
  STEP: creating @ 05/10/24 19:47:01.116
  STEP: getting @ 05/10/24 19:47:01.141
  STEP: listing @ 05/10/24 19:47:01.147
  STEP: watching @ 05/10/24 19:47:01.153
  May 10 19:47:01.153: INFO: starting watch
  STEP: cluster-wide listing @ 05/10/24 19:47:01.155
  STEP: cluster-wide watching @ 05/10/24 19:47:01.169
  May 10 19:47:01.169: INFO: starting watch
  STEP: patching @ 05/10/24 19:47:01.17
  STEP: updating @ 05/10/24 19:47:01.179
  May 10 19:47:01.198: INFO: waiting for watch events with expected annotations
  May 10 19:47:01.198: INFO: saw patched and updated annotations
  STEP: deleting @ 05/10/24 19:47:01.198
  STEP: deleting a collection @ 05/10/24 19:47:01.217
  May 10 19:47:01.242: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5587" for this suite. @ 05/10/24 19:47:01.249
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [2.353 seconds]
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:47:01.285
  May 10 19:47:01.285: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename disruption @ 05/10/24 19:47:01.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:47:01.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:47:01.355
  STEP: Creating a kubernetes client @ 05/10/24 19:47:01.359
  May 10 19:47:01.359: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename disruption-2 @ 05/10/24 19:47:01.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:47:01.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:47:01.429
  STEP: Waiting for the pdb to be processed @ 05/10/24 19:47:01.458
  STEP: Waiting for the pdb to be processed @ 05/10/24 19:47:01.489
  STEP: Waiting for the pdb to be processed @ 05/10/24 19:47:01.514
  STEP: listing a collection of PDBs across all namespaces @ 05/10/24 19:47:03.536
  STEP: listing a collection of PDBs in namespace disruption-5001 @ 05/10/24 19:47:03.542
  STEP: deleting a collection of PDBs @ 05/10/24 19:47:03.549
  STEP: Waiting for the PDB collection to be deleted @ 05/10/24 19:47:03.571
  May 10 19:47:03.582: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May 10 19:47:03.594: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-8965" for this suite. @ 05/10/24 19:47:03.604
  STEP: Destroying namespace "disruption-5001" for this suite. @ 05/10/24 19:47:03.618
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
• [60.440 seconds]
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:46:05.312
  May 10 19:46:05.312: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename sched-preemption @ 05/10/24 19:46:05.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:46:05.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:46:05.344
  May 10 19:46:05.369: INFO: Waiting up to 1m0s for all nodes to be ready
  May 10 19:47:05.424: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/10/24 19:47:05.43
  May 10 19:47:05.430: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/10/24 19:47:05.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:47:05.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:47:05.454
  May 10 19:47:05.478: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  May 10 19:47:05.482: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  May 10 19:47:05.504: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May 10 19:47:05.529: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-1639" for this suite. @ 05/10/24 19:47:05.728
  STEP: Destroying namespace "sched-preemption-4381" for this suite. @ 05/10/24 19:47:05.743
  << Timeline
------------------------------
SSSSS
------------------------------
• [0.181 seconds]
[sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:49

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:47:05.759
  May 10 19:47:05.759: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename csistoragecapacity @ 05/10/24 19:47:05.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:47:05.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:47:05.779
  STEP: getting /apis @ 05/10/24 19:47:05.784
  STEP: getting /apis/storage.k8s.io @ 05/10/24 19:47:05.787
  STEP: getting /apis/storage.k8s.io/v1 @ 05/10/24 19:47:05.788
  STEP: creating @ 05/10/24 19:47:05.789
  STEP: watching @ 05/10/24 19:47:05.844
  May 10 19:47:05.844: INFO: starting watch
  STEP: getting @ 05/10/24 19:47:05.858
  STEP: listing in namespace @ 05/10/24 19:47:05.861
  STEP: listing across namespaces @ 05/10/24 19:47:05.865
  STEP: patching @ 05/10/24 19:47:05.868
  STEP: updating @ 05/10/24 19:47:05.876
  May 10 19:47:05.881: INFO: waiting for watch events with expected annotations in namespace
  May 10 19:47:05.881: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 05/10/24 19:47:05.881
  STEP: deleting a collection @ 05/10/24 19:47:05.9
  May 10 19:47:05.925: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-6667" for this suite. @ 05/10/24 19:47:05.931
  << Timeline
------------------------------
SSSSS
------------------------------
• [8.870 seconds]
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1493

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:47:05.946
  May 10 19:47:05.946: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename services @ 05/10/24 19:47:05.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:47:05.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:47:05.972
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-2739 @ 05/10/24 19:47:05.974
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/10/24 19:47:05.997
  STEP: creating service externalsvc in namespace services-2739 @ 05/10/24 19:47:05.997
  STEP: creating replication controller externalsvc in namespace services-2739 @ 05/10/24 19:47:06.023
  I0510 19:47:06.031852      22 runners.go:197] Created replication controller with name: externalsvc, namespace: services-2739, replica count: 2
  I0510 19:47:09.083669      22 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 05/10/24 19:47:09.087
  May 10 19:47:09.117: INFO: Creating new exec pod
  May 10 19:47:11.186: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=services-2739 exec execpodp8hd6 -- /bin/sh -x -c nslookup clusterip-service.services-2739.svc.cluster.local'
  May 10 19:47:11.372: INFO: stderr: "+ nslookup clusterip-service.services-2739.svc.cluster.local\n"
  May 10 19:47:11.372: INFO: stdout: "Server:\t\t169.254.20.10\nAddress:\t169.254.20.10#53\n\nclusterip-service.services-2739.svc.cluster.local\tcanonical name = externalsvc.services-2739.svc.cluster.local.\nName:\texternalsvc.services-2739.svc.cluster.local\nAddress: 10.103.49.44\n\n"
  May 10 19:47:11.372: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-2739, will wait for the garbage collector to delete the pods @ 05/10/24 19:47:11.379
  May 10 19:47:11.443: INFO: Deleting ReplicationController externalsvc took: 9.055208ms
  May 10 19:47:11.544: INFO: Terminating ReplicationController externalsvc pods took: 100.174117ms
  May 10 19:47:14.776: INFO: Cleaning up the ClusterIP to ExternalName test service
  STEP: Destroying namespace "services-2739" for this suite. @ 05/10/24 19:47:14.799
  << Timeline
------------------------------
SSS
------------------------------
• [24.311 seconds]
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:47:03.65
  May 10 19:47:03.650: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename subpath @ 05/10/24 19:47:03.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:47:03.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:47:03.702
  STEP: Setting up data @ 05/10/24 19:47:03.707
  STEP: Creating pod pod-subpath-test-configmap-lzvw @ 05/10/24 19:47:03.729
  STEP: Creating a pod to test atomic-volume-subpath @ 05/10/24 19:47:03.729
  STEP: Saw pod success @ 05/10/24 19:47:27.9
  May 10 19:47:27.905: INFO: Trying to get logs from node ip-172-31-238-87.eu-west-3.compute.internal pod pod-subpath-test-configmap-lzvw container test-container-subpath-configmap-lzvw: <nil>
  STEP: delete the pod @ 05/10/24 19:47:27.916
  STEP: Deleting pod pod-subpath-test-configmap-lzvw @ 05/10/24 19:47:27.937
  May 10 19:47:27.937: INFO: Deleting pod "pod-subpath-test-configmap-lzvw" in namespace "subpath-352"
  May 10 19:47:27.943: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-352" for this suite. @ 05/10/24 19:47:27.951
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [154.849 seconds]
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:228

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:45:20.271
  May 10 19:45:20.271: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename var-expansion @ 05/10/24 19:45:20.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:45:20.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:45:20.357
  STEP: creating the pod with failed condition @ 05/10/24 19:45:20.361
  STEP: updating the pod @ 05/10/24 19:47:20.378
  May 10 19:47:20.942: INFO: Successfully updated pod "var-expansion-b6cabb02-6f32-411b-9ed7-507d533e17bb"
  STEP: waiting for pod running @ 05/10/24 19:47:20.942
  STEP: deleting the pod gracefully @ 05/10/24 19:47:22.991
  May 10 19:47:22.991: INFO: Deleting pod "var-expansion-b6cabb02-6f32-411b-9ed7-507d533e17bb" in namespace "var-expansion-2519"
  May 10 19:47:23.004: INFO: Wait up to 5m0s for pod "var-expansion-b6cabb02-6f32-411b-9ed7-507d533e17bb" to be fully deleted
  May 10 19:47:55.099: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2519" for this suite. @ 05/10/24 19:47:55.108
  << Timeline
------------------------------
• [0.143 seconds]
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:239

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:47:55.122
  May 10 19:47:55.122: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename limitrange @ 05/10/24 19:47:55.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:47:55.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:47:55.166
  STEP: Creating LimitRange "e2e-limitrange-n8szp" in namespace "limitrange-5211" @ 05/10/24 19:47:55.169
  STEP: Creating another limitRange in another namespace @ 05/10/24 19:47:55.178
  May 10 19:47:55.194: INFO: Namespace "e2e-limitrange-n8szp-6201" created
  May 10 19:47:55.194: INFO: Creating LimitRange "e2e-limitrange-n8szp" in namespace "e2e-limitrange-n8szp-6201"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-n8szp" @ 05/10/24 19:47:55.203
  May 10 19:47:55.207: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-n8szp" in "limitrange-5211" namespace @ 05/10/24 19:47:55.207
  May 10 19:47:55.223: INFO: LimitRange "e2e-limitrange-n8szp" has been patched
  STEP: Delete LimitRange "e2e-limitrange-n8szp" by Collection with labelSelector: "e2e-limitrange-n8szp=patched" @ 05/10/24 19:47:55.223
  STEP: Confirm that the limitRange "e2e-limitrange-n8szp" has been deleted @ 05/10/24 19:47:55.234
  May 10 19:47:55.234: INFO: Requesting list of LimitRange to confirm quantity
  May 10 19:47:55.238: INFO: Found 0 LimitRange with label "e2e-limitrange-n8szp=patched"
  May 10 19:47:55.238: INFO: LimitRange "e2e-limitrange-n8szp" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-n8szp" @ 05/10/24 19:47:55.238
  May 10 19:47:55.242: INFO: Found 1 limitRange
  May 10 19:47:55.242: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5211" for this suite. @ 05/10/24 19:47:55.249
  STEP: Destroying namespace "e2e-limitrange-n8szp-6201" for this suite. @ 05/10/24 19:47:55.257
  << Timeline
------------------------------
SSSSSSSSSSSSSSS
------------------------------
• [44.061 seconds]
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:379

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:47:14.82
  May 10 19:47:14.820: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename gc @ 05/10/24 19:47:14.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:47:14.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:47:14.843
  STEP: create the rc @ 05/10/24 19:47:14.851
  W0510 19:47:14.856877      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 05/10/24 19:47:20.861
  STEP: wait for the rc to be deleted @ 05/10/24 19:47:20.882
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 05/10/24 19:47:25.892
  STEP: Gathering metrics @ 05/10/24 19:47:55.907
  May 10 19:47:56.060: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May 10 19:47:56.060: INFO: Deleting pod "simpletest.rc-22vft" in namespace "gc-2406"
  May 10 19:47:56.098: INFO: Deleting pod "simpletest.rc-29cmm" in namespace "gc-2406"
  May 10 19:47:56.131: INFO: Deleting pod "simpletest.rc-2dd7g" in namespace "gc-2406"
  May 10 19:47:56.150: INFO: Deleting pod "simpletest.rc-2tfs7" in namespace "gc-2406"
  May 10 19:47:56.179: INFO: Deleting pod "simpletest.rc-462vh" in namespace "gc-2406"
  May 10 19:47:56.199: INFO: Deleting pod "simpletest.rc-4nd2k" in namespace "gc-2406"
  May 10 19:47:56.218: INFO: Deleting pod "simpletest.rc-4qm8m" in namespace "gc-2406"
  May 10 19:47:56.238: INFO: Deleting pod "simpletest.rc-5lcc4" in namespace "gc-2406"
  May 10 19:47:56.264: INFO: Deleting pod "simpletest.rc-5msll" in namespace "gc-2406"
  May 10 19:47:56.294: INFO: Deleting pod "simpletest.rc-5nngp" in namespace "gc-2406"
  May 10 19:47:56.311: INFO: Deleting pod "simpletest.rc-65gbm" in namespace "gc-2406"
  May 10 19:47:56.333: INFO: Deleting pod "simpletest.rc-6gkpx" in namespace "gc-2406"
  May 10 19:47:56.360: INFO: Deleting pod "simpletest.rc-6r2gd" in namespace "gc-2406"
  May 10 19:47:56.394: INFO: Deleting pod "simpletest.rc-6vbk9" in namespace "gc-2406"
  May 10 19:47:56.423: INFO: Deleting pod "simpletest.rc-77w7b" in namespace "gc-2406"
  May 10 19:47:56.441: INFO: Deleting pod "simpletest.rc-7gf5b" in namespace "gc-2406"
  May 10 19:47:56.470: INFO: Deleting pod "simpletest.rc-7jgdr" in namespace "gc-2406"
  May 10 19:47:56.502: INFO: Deleting pod "simpletest.rc-82hch" in namespace "gc-2406"
  May 10 19:47:56.518: INFO: Deleting pod "simpletest.rc-82r6j" in namespace "gc-2406"
  May 10 19:47:56.539: INFO: Deleting pod "simpletest.rc-8rqrw" in namespace "gc-2406"
  May 10 19:47:56.563: INFO: Deleting pod "simpletest.rc-8wfh2" in namespace "gc-2406"
  May 10 19:47:56.582: INFO: Deleting pod "simpletest.rc-98htr" in namespace "gc-2406"
  May 10 19:47:56.601: INFO: Deleting pod "simpletest.rc-9fhml" in namespace "gc-2406"
  May 10 19:47:56.621: INFO: Deleting pod "simpletest.rc-9fvjl" in namespace "gc-2406"
  May 10 19:47:56.634: INFO: Deleting pod "simpletest.rc-9l99p" in namespace "gc-2406"
  May 10 19:47:56.654: INFO: Deleting pod "simpletest.rc-9mjj5" in namespace "gc-2406"
  May 10 19:47:56.677: INFO: Deleting pod "simpletest.rc-bfkj9" in namespace "gc-2406"
  May 10 19:47:56.707: INFO: Deleting pod "simpletest.rc-bw7mj" in namespace "gc-2406"
  May 10 19:47:56.730: INFO: Deleting pod "simpletest.rc-c8zsz" in namespace "gc-2406"
  May 10 19:47:56.764: INFO: Deleting pod "simpletest.rc-cbt22" in namespace "gc-2406"
  May 10 19:47:56.788: INFO: Deleting pod "simpletest.rc-cgkm7" in namespace "gc-2406"
  May 10 19:47:56.805: INFO: Deleting pod "simpletest.rc-cl6d4" in namespace "gc-2406"
  May 10 19:47:56.825: INFO: Deleting pod "simpletest.rc-cxh2b" in namespace "gc-2406"
  May 10 19:47:56.850: INFO: Deleting pod "simpletest.rc-dcj7z" in namespace "gc-2406"
  May 10 19:47:56.871: INFO: Deleting pod "simpletest.rc-dk4fz" in namespace "gc-2406"
  May 10 19:47:56.905: INFO: Deleting pod "simpletest.rc-dnkl2" in namespace "gc-2406"
  May 10 19:47:56.929: INFO: Deleting pod "simpletest.rc-ff45v" in namespace "gc-2406"
  May 10 19:47:56.961: INFO: Deleting pod "simpletest.rc-g6d4j" in namespace "gc-2406"
  May 10 19:47:56.979: INFO: Deleting pod "simpletest.rc-gnkv4" in namespace "gc-2406"
  May 10 19:47:57.022: INFO: Deleting pod "simpletest.rc-h5n2q" in namespace "gc-2406"
  May 10 19:47:57.047: INFO: Deleting pod "simpletest.rc-hr4xp" in namespace "gc-2406"
  May 10 19:47:57.075: INFO: Deleting pod "simpletest.rc-j6k5z" in namespace "gc-2406"
  May 10 19:47:57.102: INFO: Deleting pod "simpletest.rc-j747x" in namespace "gc-2406"
  May 10 19:47:57.136: INFO: Deleting pod "simpletest.rc-j8mvb" in namespace "gc-2406"
  May 10 19:47:57.219: INFO: Deleting pod "simpletest.rc-jhw2k" in namespace "gc-2406"
  May 10 19:47:57.267: INFO: Deleting pod "simpletest.rc-jk5pt" in namespace "gc-2406"
  May 10 19:47:57.290: INFO: Deleting pod "simpletest.rc-jq66x" in namespace "gc-2406"
  May 10 19:47:57.318: INFO: Deleting pod "simpletest.rc-jqkrw" in namespace "gc-2406"
  May 10 19:47:57.367: INFO: Deleting pod "simpletest.rc-jrfsd" in namespace "gc-2406"
  May 10 19:47:57.387: INFO: Deleting pod "simpletest.rc-jvw2l" in namespace "gc-2406"
  May 10 19:47:57.413: INFO: Deleting pod "simpletest.rc-k8fml" in namespace "gc-2406"
  May 10 19:47:57.430: INFO: Deleting pod "simpletest.rc-k8jsr" in namespace "gc-2406"
  May 10 19:47:57.461: INFO: Deleting pod "simpletest.rc-kl5cs" in namespace "gc-2406"
  May 10 19:47:57.505: INFO: Deleting pod "simpletest.rc-km9d5" in namespace "gc-2406"
  May 10 19:47:57.558: INFO: Deleting pod "simpletest.rc-kvhnl" in namespace "gc-2406"
  May 10 19:47:57.611: INFO: Deleting pod "simpletest.rc-kz26w" in namespace "gc-2406"
  May 10 19:47:57.659: INFO: Deleting pod "simpletest.rc-l5spx" in namespace "gc-2406"
  May 10 19:47:57.715: INFO: Deleting pod "simpletest.rc-lpmf9" in namespace "gc-2406"
  May 10 19:47:57.733: INFO: Deleting pod "simpletest.rc-lz7m5" in namespace "gc-2406"
  May 10 19:47:57.749: INFO: Deleting pod "simpletest.rc-m4xvg" in namespace "gc-2406"
  May 10 19:47:57.773: INFO: Deleting pod "simpletest.rc-mhdpk" in namespace "gc-2406"
  May 10 19:47:57.797: INFO: Deleting pod "simpletest.rc-mw56t" in namespace "gc-2406"
  May 10 19:47:57.823: INFO: Deleting pod "simpletest.rc-mxq77" in namespace "gc-2406"
  May 10 19:47:57.852: INFO: Deleting pod "simpletest.rc-nb8vf" in namespace "gc-2406"
  May 10 19:47:57.885: INFO: Deleting pod "simpletest.rc-npm62" in namespace "gc-2406"
  May 10 19:47:57.919: INFO: Deleting pod "simpletest.rc-ntcbg" in namespace "gc-2406"
  May 10 19:47:57.989: INFO: Deleting pod "simpletest.rc-p4887" in namespace "gc-2406"
  May 10 19:47:58.028: INFO: Deleting pod "simpletest.rc-plrjs" in namespace "gc-2406"
  May 10 19:47:58.054: INFO: Deleting pod "simpletest.rc-pptpr" in namespace "gc-2406"
  May 10 19:47:58.079: INFO: Deleting pod "simpletest.rc-pzlvq" in namespace "gc-2406"
  May 10 19:47:58.108: INFO: Deleting pod "simpletest.rc-qk9kt" in namespace "gc-2406"
  May 10 19:47:58.140: INFO: Deleting pod "simpletest.rc-qs2vv" in namespace "gc-2406"
  May 10 19:47:58.157: INFO: Deleting pod "simpletest.rc-rh9nc" in namespace "gc-2406"
  May 10 19:47:58.179: INFO: Deleting pod "simpletest.rc-rx6dq" in namespace "gc-2406"
  May 10 19:47:58.208: INFO: Deleting pod "simpletest.rc-rx9cq" in namespace "gc-2406"
  May 10 19:47:58.231: INFO: Deleting pod "simpletest.rc-s7llk" in namespace "gc-2406"
  May 10 19:47:58.253: INFO: Deleting pod "simpletest.rc-s8rcf" in namespace "gc-2406"
  May 10 19:47:58.282: INFO: Deleting pod "simpletest.rc-sbbdn" in namespace "gc-2406"
  May 10 19:47:58.302: INFO: Deleting pod "simpletest.rc-sc2qm" in namespace "gc-2406"
  May 10 19:47:58.352: INFO: Deleting pod "simpletest.rc-slvqd" in namespace "gc-2406"
  May 10 19:47:58.381: INFO: Deleting pod "simpletest.rc-sx6fr" in namespace "gc-2406"
  May 10 19:47:58.405: INFO: Deleting pod "simpletest.rc-t2dn7" in namespace "gc-2406"
  May 10 19:47:58.426: INFO: Deleting pod "simpletest.rc-tblqg" in namespace "gc-2406"
  May 10 19:47:58.444: INFO: Deleting pod "simpletest.rc-tdmb5" in namespace "gc-2406"
  May 10 19:47:58.466: INFO: Deleting pod "simpletest.rc-tmlg9" in namespace "gc-2406"
  May 10 19:47:58.486: INFO: Deleting pod "simpletest.rc-ttbl7" in namespace "gc-2406"
  May 10 19:47:58.507: INFO: Deleting pod "simpletest.rc-v4g95" in namespace "gc-2406"
  May 10 19:47:58.535: INFO: Deleting pod "simpletest.rc-v7zpd" in namespace "gc-2406"
  May 10 19:47:58.554: INFO: Deleting pod "simpletest.rc-vbk2b" in namespace "gc-2406"
  May 10 19:47:58.576: INFO: Deleting pod "simpletest.rc-vslrs" in namespace "gc-2406"
  May 10 19:47:58.603: INFO: Deleting pod "simpletest.rc-vwz5r" in namespace "gc-2406"
  May 10 19:47:58.623: INFO: Deleting pod "simpletest.rc-w6bqn" in namespace "gc-2406"
  May 10 19:47:58.640: INFO: Deleting pod "simpletest.rc-wb5k8" in namespace "gc-2406"
  May 10 19:47:58.670: INFO: Deleting pod "simpletest.rc-wdpk5" in namespace "gc-2406"
  May 10 19:47:58.698: INFO: Deleting pod "simpletest.rc-whfhh" in namespace "gc-2406"
  May 10 19:47:58.723: INFO: Deleting pod "simpletest.rc-wj8r7" in namespace "gc-2406"
  May 10 19:47:58.746: INFO: Deleting pod "simpletest.rc-ww9kw" in namespace "gc-2406"
  May 10 19:47:58.776: INFO: Deleting pod "simpletest.rc-wwgb4" in namespace "gc-2406"
  May 10 19:47:58.799: INFO: Deleting pod "simpletest.rc-z66v4" in namespace "gc-2406"
  May 10 19:47:58.818: INFO: Deleting pod "simpletest.rc-zgvg6" in namespace "gc-2406"
  May 10 19:47:58.858: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2406" for this suite. @ 05/10/24 19:47:58.871
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.144 seconds]
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:47:58.914
  May 10 19:47:58.914: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename watch @ 05/10/24 19:47:58.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:47:58.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:47:58.966
  STEP: creating a watch on configmaps @ 05/10/24 19:47:58.975
  STEP: creating a new configmap @ 05/10/24 19:47:58.977
  STEP: modifying the configmap once @ 05/10/24 19:47:58.983
  STEP: closing the watch once it receives two notifications @ 05/10/24 19:47:58.994
  May 10 19:47:58.994: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3302  633af05c-d3e2-49c6-b462-1ae57f8c7bb3 18488 0 2024-05-10 19:47:58 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-10 19:47:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 19:47:58.994: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3302  633af05c-d3e2-49c6-b462-1ae57f8c7bb3 18489 0 2024-05-10 19:47:58 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-10 19:47:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 05/10/24 19:47:58.995
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 05/10/24 19:47:59.019
  STEP: deleting the configmap @ 05/10/24 19:47:59.024
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 05/10/24 19:47:59.034
  May 10 19:47:59.034: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3302  633af05c-d3e2-49c6-b462-1ae57f8c7bb3 18490 0 2024-05-10 19:47:58 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-10 19:47:59 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 19:47:59.034: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3302  633af05c-d3e2-49c6-b462-1ae57f8c7bb3 18491 0 2024-05-10 19:47:58 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-10 19:47:59 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 19:47:59.035: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3302" for this suite. @ 05/10/24 19:47:59.042
  << Timeline
------------------------------
SSSS
------------------------------
• [4.243 seconds]
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:47:55.279
  May 10 19:47:55.279: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:47:55.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:47:55.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:47:55.306
  STEP: Creating projection with secret that has name projected-secret-test-fbe02049-2168-4cbe-b302-caeed8816945 @ 05/10/24 19:47:55.31
  STEP: Creating a pod to test consume secrets @ 05/10/24 19:47:55.315
  STEP: Saw pod success @ 05/10/24 19:47:59.381
  May 10 19:47:59.394: INFO: Trying to get logs from node ip-172-31-237-27.eu-west-3.compute.internal pod pod-projected-secrets-4e792911-2250-49d2-ba9e-4d2de63d469b container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 19:47:59.455
  May 10 19:47:59.482: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2400" for this suite. @ 05/10/24 19:47:59.492
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [3.953 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:47:59.064
  May 10 19:47:59.064: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename webhook @ 05/10/24 19:47:59.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:47:59.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:47:59.094
  STEP: Setting up server cert @ 05/10/24 19:47:59.13
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 19:47:59.515
  STEP: Deploying the webhook pod @ 05/10/24 19:47:59.533
  STEP: Wait for the deployment to be ready @ 05/10/24 19:47:59.562
  May 10 19:47:59.593: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 19:48:01.618
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 19:48:01.644
  May 10 19:48:02.645: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 05/10/24 19:48:02.655
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 05/10/24 19:48:02.683
  STEP: Creating a configMap that should not be mutated @ 05/10/24 19:48:02.694
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 05/10/24 19:48:02.716
  STEP: Creating a configMap that should be mutated @ 05/10/24 19:48:02.725
  May 10 19:48:02.756: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7792" for this suite. @ 05/10/24 19:48:02.976
  STEP: Destroying namespace "webhook-markers-225" for this suite. @ 05/10/24 19:48:03.003
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.143 seconds]
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:47

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:48:03.052
  May 10 19:48:03.052: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename var-expansion @ 05/10/24 19:48:03.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:48:03.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:48:03.08
  STEP: Creating a pod to test env composition @ 05/10/24 19:48:03.083
  STEP: Saw pod success @ 05/10/24 19:48:07.125
  May 10 19:48:07.132: INFO: Trying to get logs from node ip-172-31-237-27.eu-west-3.compute.internal pod var-expansion-0ef27a73-faf1-4eef-9496-87ef9aee4726 container dapi-container: <nil>
  STEP: delete the pod @ 05/10/24 19:48:07.144
  May 10 19:48:07.172: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5658" for this suite. @ 05/10/24 19:48:07.182
  << Timeline
------------------------------
• [8.881 seconds]
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1533

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:47:59.541
  May 10 19:47:59.541: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename services @ 05/10/24 19:47:59.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:47:59.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:47:59.581
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-1806 @ 05/10/24 19:47:59.59
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/10/24 19:47:59.67
  STEP: creating service externalsvc in namespace services-1806 @ 05/10/24 19:47:59.67
  STEP: creating replication controller externalsvc in namespace services-1806 @ 05/10/24 19:47:59.711
  I0510 19:47:59.738558      24 runners.go:197] Created replication controller with name: externalsvc, namespace: services-1806, replica count: 2
  I0510 19:48:02.790449      24 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 05/10/24 19:48:02.824
  May 10 19:48:02.974: INFO: Creating new exec pod
  May 10 19:48:05.018: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=services-1806 exec execpodz8rsr -- /bin/sh -x -c nslookup nodeport-service.services-1806.svc.cluster.local'
  May 10 19:48:05.258: INFO: stderr: "+ nslookup nodeport-service.services-1806.svc.cluster.local\n"
  May 10 19:48:05.258: INFO: stdout: "Server:\t\t169.254.20.10\nAddress:\t169.254.20.10#53\n\nnodeport-service.services-1806.svc.cluster.local\tcanonical name = externalsvc.services-1806.svc.cluster.local.\nName:\texternalsvc.services-1806.svc.cluster.local\nAddress: 10.107.152.120\n\n"
  May 10 19:48:05.258: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-1806, will wait for the garbage collector to delete the pods @ 05/10/24 19:48:05.265
  May 10 19:48:05.341: INFO: Deleting ReplicationController externalsvc took: 21.116828ms
  May 10 19:48:05.441: INFO: Terminating ReplicationController externalsvc pods took: 100.534667ms
  May 10 19:48:08.385: INFO: Cleaning up the NodePort to ExternalName test service
  STEP: Destroying namespace "services-1806" for this suite. @ 05/10/24 19:48:08.408
  << Timeline
------------------------------
SSSSSS
------------------------------
• [3.970 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:48:07.196
  May 10 19:48:07.196: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename webhook @ 05/10/24 19:48:07.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:48:07.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:48:07.231
  STEP: Setting up server cert @ 05/10/24 19:48:07.269
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 19:48:07.537
  STEP: Deploying the webhook pod @ 05/10/24 19:48:07.544
  STEP: Wait for the deployment to be ready @ 05/10/24 19:48:07.561
  May 10 19:48:07.581: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 19:48:09.602
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 19:48:09.679
  May 10 19:48:10.680: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/10/24 19:48:10.839
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/10/24 19:48:10.877
  STEP: Deleting the collection of validation webhooks @ 05/10/24 19:48:10.907
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/10/24 19:48:10.97
  May 10 19:48:10.992: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-280" for this suite. @ 05/10/24 19:48:11.135
  STEP: Destroying namespace "webhook-markers-1893" for this suite. @ 05/10/24 19:48:11.151
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.159 seconds]
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:222

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:48:08.429
  May 10 19:48:08.429: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 19:48:08.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:48:08.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:48:08.476
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 19:48:08.483
  STEP: Saw pod success @ 05/10/24 19:48:12.525
  May 10 19:48:12.529: INFO: Trying to get logs from node ip-172-31-236-46.eu-west-3.compute.internal pod downwardapi-volume-d06bcc02-3dab-4ad5-bf38-d7ce61a8e72b container client-container: <nil>
  STEP: delete the pod @ 05/10/24 19:48:12.546
  May 10 19:48:12.573: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9893" for this suite. @ 05/10/24 19:48:12.579
  << Timeline
------------------------------
SSS
------------------------------
• [3.106 seconds]
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:48:12.591
  May 10 19:48:12.591: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename container-runtime @ 05/10/24 19:48:12.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:48:12.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:48:12.614
  STEP: create the container @ 05/10/24 19:48:12.617
  W0510 19:48:12.628762      24 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/10/24 19:48:12.628
  STEP: get the container status @ 05/10/24 19:48:15.649
  STEP: the container should be terminated @ 05/10/24 19:48:15.652
  STEP: the termination message should be set @ 05/10/24 19:48:15.652
  May 10 19:48:15.652: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 05/10/24 19:48:15.652
  May 10 19:48:15.669: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1745" for this suite. @ 05/10/24 19:48:15.689
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
• [52.373 seconds]
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:47:28.022
  May 10 19:47:28.022: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename container-probe @ 05/10/24 19:47:28.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:47:28.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:47:28.049
  STEP: Creating pod busybox-b4f525cf-28d7-48e8-9a24-0b239c48a2e5 in namespace container-probe-4591 @ 05/10/24 19:47:28.053
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/10/24 19:47:30.087
  May 10 19:47:30.092: INFO: Initial restart count of pod busybox-b4f525cf-28d7-48e8-9a24-0b239c48a2e5 is 0
  May 10 19:47:30.099: INFO: Get pod busybox-b4f525cf-28d7-48e8-9a24-0b239c48a2e5 in namespace container-probe-4591
  May 10 19:47:32.106: INFO: Get pod busybox-b4f525cf-28d7-48e8-9a24-0b239c48a2e5 in namespace container-probe-4591
  May 10 19:47:34.112: INFO: Get pod busybox-b4f525cf-28d7-48e8-9a24-0b239c48a2e5 in namespace container-probe-4591
  May 10 19:47:36.126: INFO: Get pod busybox-b4f525cf-28d7-48e8-9a24-0b239c48a2e5 in namespace container-probe-4591
  May 10 19:47:38.133: INFO: Get pod busybox-b4f525cf-28d7-48e8-9a24-0b239c48a2e5 in namespace container-probe-4591
  May 10 19:47:40.139: INFO: Get pod busybox-b4f525cf-28d7-48e8-9a24-0b239c48a2e5 in namespace container-probe-4591
  May 10 19:47:42.147: INFO: Get pod busybox-b4f525cf-28d7-48e8-9a24-0b239c48a2e5 in namespace container-probe-4591
  May 10 19:47:44.156: INFO: Get pod busybox-b4f525cf-28d7-48e8-9a24-0b239c48a2e5 in namespace container-probe-4591
  May 10 19:47:46.165: INFO: Get pod busybox-b4f525cf-28d7-48e8-9a24-0b239c48a2e5 in namespace container-probe-4591
  May 10 19:47:48.172: INFO: Get pod busybox-b4f525cf-28d7-48e8-9a24-0b239c48a2e5 in namespace container-probe-4591
  May 10 19:47:50.179: INFO: Get pod busybox-b4f525cf-28d7-48e8-9a24-0b239c48a2e5 in namespace container-probe-4591
  May 10 19:47:52.184: INFO: Get pod busybox-b4f525cf-28d7-48e8-9a24-0b239c48a2e5 in namespace container-probe-4591
  May 10 19:47:54.190: INFO: Get pod busybox-b4f525cf-28d7-48e8-9a24-0b239c48a2e5 in namespace container-probe-4591
  May 10 19:47:56.198: INFO: Get pod busybox-b4f525cf-28d7-48e8-9a24-0b239c48a2e5 in namespace container-probe-4591
  May 10 19:47:58.208: INFO: Get pod busybox-b4f525cf-28d7-48e8-9a24-0b239c48a2e5 in namespace container-probe-4591
  May 10 19:48:00.215: INFO: Get pod busybox-b4f525cf-28d7-48e8-9a24-0b239c48a2e5 in namespace container-probe-4591
  May 10 19:48:02.226: INFO: Get pod busybox-b4f525cf-28d7-48e8-9a24-0b239c48a2e5 in namespace container-probe-4591
  May 10 19:48:04.235: INFO: Get pod busybox-b4f525cf-28d7-48e8-9a24-0b239c48a2e5 in namespace container-probe-4591
  May 10 19:48:06.243: INFO: Get pod busybox-b4f525cf-28d7-48e8-9a24-0b239c48a2e5 in namespace container-probe-4591
  May 10 19:48:08.276: INFO: Get pod busybox-b4f525cf-28d7-48e8-9a24-0b239c48a2e5 in namespace container-probe-4591
  May 10 19:48:10.304: INFO: Get pod busybox-b4f525cf-28d7-48e8-9a24-0b239c48a2e5 in namespace container-probe-4591
  May 10 19:48:12.310: INFO: Get pod busybox-b4f525cf-28d7-48e8-9a24-0b239c48a2e5 in namespace container-probe-4591
  May 10 19:48:14.317: INFO: Get pod busybox-b4f525cf-28d7-48e8-9a24-0b239c48a2e5 in namespace container-probe-4591
  May 10 19:48:16.324: INFO: Get pod busybox-b4f525cf-28d7-48e8-9a24-0b239c48a2e5 in namespace container-probe-4591
  May 10 19:48:18.331: INFO: Get pod busybox-b4f525cf-28d7-48e8-9a24-0b239c48a2e5 in namespace container-probe-4591
  May 10 19:48:20.338: INFO: Get pod busybox-b4f525cf-28d7-48e8-9a24-0b239c48a2e5 in namespace container-probe-4591
  May 10 19:48:20.338: INFO: Restart count of pod container-probe-4591/busybox-b4f525cf-28d7-48e8-9a24-0b239c48a2e5 is now 1 (50.246037024s elapsed)
  May 10 19:48:20.338: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/10/24 19:48:20.348
  STEP: Destroying namespace "container-probe-4591" for this suite. @ 05/10/24 19:48:20.382
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [6.555 seconds]
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1416

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:48:15.709
  May 10 19:48:15.709: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename services @ 05/10/24 19:48:15.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:48:15.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:48:15.741
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3150 @ 05/10/24 19:48:15.744
  STEP: changing the ExternalName service to type=ClusterIP @ 05/10/24 19:48:15.753
  STEP: creating replication controller externalname-service in namespace services-3150 @ 05/10/24 19:48:15.799
  I0510 19:48:15.810460      24 runners.go:197] Created replication controller with name: externalname-service, namespace: services-3150, replica count: 2
  I0510 19:48:18.861160      24 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 10 19:48:18.861: INFO: Creating new exec pod
  May 10 19:48:21.881: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=services-3150 exec execpodchmmm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  May 10 19:48:22.050: INFO: stderr: "+ + echonc -v hostName -t\n -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  May 10 19:48:22.050: INFO: stdout: "externalname-service-t5t4j"
  May 10 19:48:22.050: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=services-3150 exec execpodchmmm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.214.38 80'
  May 10 19:48:22.188: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.103.214.38 80\nConnection to 10.103.214.38 80 port [tcp/http] succeeded!\n"
  May 10 19:48:22.189: INFO: stdout: "externalname-service-rmvdr"
  May 10 19:48:22.189: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May 10 19:48:22.195: INFO: Cleaning up the ExternalName to ClusterIP test service
  STEP: Destroying namespace "services-3150" for this suite. @ 05/10/24 19:48:22.241
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [3.212 seconds]
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:48:20.401
  May 10 19:48:20.401: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename container-runtime @ 05/10/24 19:48:20.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:48:20.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:48:20.454
  STEP: create the container @ 05/10/24 19:48:20.468
  W0510 19:48:20.517105      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 05/10/24 19:48:20.517
  STEP: get the container status @ 05/10/24 19:48:23.562
  STEP: the container should be terminated @ 05/10/24 19:48:23.568
  STEP: the termination message should be set @ 05/10/24 19:48:23.568
  May 10 19:48:23.568: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/10/24 19:48:23.568
  May 10 19:48:23.590: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7978" for this suite. @ 05/10/24 19:48:23.603
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.220 seconds]
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:48:23.638
  May 10 19:48:23.638: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename events @ 05/10/24 19:48:23.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:48:23.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:48:23.679
  STEP: creating a test event @ 05/10/24 19:48:23.683
  STEP: listing events in all namespaces @ 05/10/24 19:48:23.696
  STEP: listing events in test namespace @ 05/10/24 19:48:23.718
  STEP: listing events with field selection filtering on source @ 05/10/24 19:48:23.725
  STEP: listing events with field selection filtering on reportingController @ 05/10/24 19:48:23.73
  STEP: getting the test event @ 05/10/24 19:48:23.743
  STEP: patching the test event @ 05/10/24 19:48:23.751
  STEP: getting the test event @ 05/10/24 19:48:23.769
  STEP: updating the test event @ 05/10/24 19:48:23.774
  STEP: getting the test event @ 05/10/24 19:48:23.784
  STEP: deleting the test event @ 05/10/24 19:48:23.79
  STEP: listing events in all namespaces @ 05/10/24 19:48:23.803
  STEP: listing events in test namespace @ 05/10/24 19:48:23.828
  May 10 19:48:23.833: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8026" for this suite. @ 05/10/24 19:48:23.841
  << Timeline
------------------------------
S
------------------------------
• [4.144 seconds]
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:47

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:48:22.272
  May 10 19:48:22.272: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename configmap @ 05/10/24 19:48:22.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:48:22.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:48:22.299
  STEP: Creating configMap with name configmap-test-volume-a0feb6f5-718b-4794-8815-2c77aa7aaec0 @ 05/10/24 19:48:22.302
  STEP: Creating a pod to test consume configMaps @ 05/10/24 19:48:22.309
  STEP: Saw pod success @ 05/10/24 19:48:26.354
  May 10 19:48:26.358: INFO: Trying to get logs from node ip-172-31-238-87.eu-west-3.compute.internal pod pod-configmaps-0080ba07-4bf7-46c4-820b-8431da2d1a26 container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 19:48:26.374
  May 10 19:48:26.398: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8751" for this suite. @ 05/10/24 19:48:26.405
  << Timeline
------------------------------
SS
------------------------------
• [4.215 seconds]
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:54

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:48:23.86
  May 10 19:48:23.860: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 19:48:23.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:48:23.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:48:23.899
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 19:48:23.903
  STEP: Saw pod success @ 05/10/24 19:48:27.998
  May 10 19:48:28.006: INFO: Trying to get logs from node ip-172-31-237-5.eu-west-3.compute.internal pod downwardapi-volume-17ebacc8-fc77-4e31-ab58-1812bb75e123 container client-container: <nil>
  STEP: delete the pod @ 05/10/24 19:48:28.023
  May 10 19:48:28.053: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-667" for this suite. @ 05/10/24 19:48:28.062
  << Timeline
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
• [2.235 seconds]
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:48:28.087
  May 10 19:48:28.087: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename secrets @ 05/10/24 19:48:28.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:48:28.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:48:28.127
  STEP: Creating secret with name secret-test-e6b34315-440e-4eb2-b4ff-64d8a4afd4db @ 05/10/24 19:48:28.131
  STEP: Creating a pod to test consume secrets @ 05/10/24 19:48:28.139
  STEP: Saw pod success @ 05/10/24 19:48:30.199
  May 10 19:48:30.205: INFO: Trying to get logs from node ip-172-31-236-46.eu-west-3.compute.internal pod pod-secrets-32284433-d69a-4dd3-844d-2cdfae4b6d31 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 19:48:30.228
  May 10 19:48:30.266: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6280" for this suite. @ 05/10/24 19:48:30.284
  << Timeline
------------------------------
SSS
------------------------------
• [6.704 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:141

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:48:26.419
  May 10 19:48:26.419: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename crd-webhook @ 05/10/24 19:48:26.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:48:26.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:48:26.441
  STEP: Setting up server cert @ 05/10/24 19:48:26.445
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/10/24 19:48:26.742
  STEP: Deploying the custom resource conversion webhook pod @ 05/10/24 19:48:26.748
  STEP: Wait for the deployment to be ready @ 05/10/24 19:48:26.768
  May 10 19:48:26.783: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 19:48:28.804
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 19:48:28.833
  May 10 19:48:29.833: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  May 10 19:48:29.850: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Creating a v1 custom resource @ 05/10/24 19:48:32.471
  STEP: v2 custom resource should be converted @ 05/10/24 19:48:32.479
  May 10 19:48:32.486: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-2032" for this suite. @ 05/10/24 19:48:33.111
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [6.891 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:48:30.328
  May 10 19:48:30.328: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename webhook @ 05/10/24 19:48:30.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:48:30.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:48:30.366
  STEP: Setting up server cert @ 05/10/24 19:48:30.447
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 19:48:30.792
  STEP: Deploying the webhook pod @ 05/10/24 19:48:30.808
  STEP: Wait for the deployment to be ready @ 05/10/24 19:48:30.83
  May 10 19:48:30.850: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 19:48:32.869
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 19:48:32.894
  May 10 19:48:33.895: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  May 10 19:48:33.907: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 05/10/24 19:48:34.431
  STEP: Creating a custom resource that should be denied by the webhook @ 05/10/24 19:48:34.45
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 05/10/24 19:48:36.473
  STEP: Updating the custom resource with disallowed data should be denied @ 05/10/24 19:48:36.487
  STEP: Deleting the custom resource should be denied @ 05/10/24 19:48:36.506
  STEP: Remove the offending key and value from the custom resource data @ 05/10/24 19:48:36.518
  STEP: Deleting the updated custom resource should be successful @ 05/10/24 19:48:36.537
  May 10 19:48:36.551: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5639" for this suite. @ 05/10/24 19:48:37.195
  STEP: Destroying namespace "webhook-markers-9636" for this suite. @ 05/10/24 19:48:37.206
  << Timeline
------------------------------
• [0.073 seconds]
[sig-network] Services should find a service from listing all namespaces [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3117

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:48:37.22
  May 10 19:48:37.220: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename services @ 05/10/24 19:48:37.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:48:37.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:48:37.252
  STEP: fetching services @ 05/10/24 19:48:37.256
  May 10 19:48:37.265: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4495" for this suite. @ 05/10/24 19:48:37.276
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [5.242 seconds]
[sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:48:33.152
  May 10 19:48:33.152: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename proxy @ 05/10/24 19:48:33.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:48:33.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:48:33.176
  STEP: starting an echo server on multiple ports @ 05/10/24 19:48:33.203
  STEP: creating replication controller proxy-service-b2tgn in namespace proxy-9471 @ 05/10/24 19:48:33.203
  I0510 19:48:33.223261      24 runners.go:197] Created replication controller with name: proxy-service-b2tgn, namespace: proxy-9471, replica count: 1
  I0510 19:48:34.275064      24 runners.go:197] proxy-service-b2tgn Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0510 19:48:35.275869      24 runners.go:197] proxy-service-b2tgn Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 10 19:48:35.279: INFO: setup took 2.100800763s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 05/10/24 19:48:35.279
  May 10 19:48:35.289: INFO: (0) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/rewriteme">test</a> (200; 9.657354ms)
  May 10 19:48:35.294: INFO: (0) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:460/proxy/: tls baz (200; 14.75856ms)
  May 10 19:48:35.297: INFO: (0) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 16.869256ms)
  May 10 19:48:35.297: INFO: (0) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 17.387825ms)
  May 10 19:48:35.297: INFO: (0) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 17.968192ms)
  May 10 19:48:35.297: INFO: (0) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">test<... (200; 17.030168ms)
  May 10 19:48:35.297: INFO: (0) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">... (200; 17.033893ms)
  May 10 19:48:35.299: INFO: (0) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname1/proxy/: foo (200; 18.323529ms)
  May 10 19:48:35.300: INFO: (0) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:462/proxy/: tls qux (200; 19.429794ms)
  May 10 19:48:35.300: INFO: (0) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname2/proxy/: tls qux (200; 20.186709ms)
  May 10 19:48:35.300: INFO: (0) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname1/proxy/: foo (200; 19.942676ms)
  May 10 19:48:35.300: INFO: (0) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 20.867405ms)
  May 10 19:48:35.301: INFO: (0) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname2/proxy/: bar (200; 21.273367ms)
  May 10 19:48:35.302: INFO: (0) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/tlsrewritem... (200; 21.250268ms)
  May 10 19:48:35.303: INFO: (0) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname1/proxy/: tls baz (200; 22.571663ms)
  May 10 19:48:35.303: INFO: (0) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname2/proxy/: bar (200; 23.278922ms)
  May 10 19:48:35.318: INFO: (1) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 13.538899ms)
  May 10 19:48:35.318: INFO: (1) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 14.475385ms)
  May 10 19:48:35.319: INFO: (1) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 14.830863ms)
  May 10 19:48:35.319: INFO: (1) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/tlsrewritem... (200; 15.540085ms)
  May 10 19:48:35.319: INFO: (1) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">test<... (200; 15.770448ms)
  May 10 19:48:35.319: INFO: (1) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 15.830403ms)
  May 10 19:48:35.319: INFO: (1) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:462/proxy/: tls qux (200; 14.915051ms)
  May 10 19:48:35.319: INFO: (1) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">... (200; 15.969284ms)
  May 10 19:48:35.319: INFO: (1) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:460/proxy/: tls baz (200; 15.662543ms)
  May 10 19:48:35.319: INFO: (1) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/rewriteme">test</a> (200; 16.35639ms)
  May 10 19:48:35.319: INFO: (1) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname1/proxy/: foo (200; 16.597145ms)
  May 10 19:48:35.320: INFO: (1) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname2/proxy/: bar (200; 15.558684ms)
  May 10 19:48:35.323: INFO: (1) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname1/proxy/: foo (200; 20.226714ms)
  May 10 19:48:35.323: INFO: (1) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname1/proxy/: tls baz (200; 19.816539ms)
  May 10 19:48:35.323: INFO: (1) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname2/proxy/: bar (200; 19.116055ms)
  May 10 19:48:35.324: INFO: (1) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname2/proxy/: tls qux (200; 19.890479ms)
  May 10 19:48:35.337: INFO: (2) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">test<... (200; 12.966191ms)
  May 10 19:48:35.337: INFO: (2) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 12.959816ms)
  May 10 19:48:35.339: INFO: (2) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">... (200; 15.564021ms)
  May 10 19:48:35.343: INFO: (2) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/rewriteme">test</a> (200; 19.482967ms)
  May 10 19:48:35.347: INFO: (2) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/tlsrewritem... (200; 22.845312ms)
  May 10 19:48:35.347: INFO: (2) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:460/proxy/: tls baz (200; 22.876787ms)
  May 10 19:48:35.348: INFO: (2) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 23.665329ms)
  May 10 19:48:35.348: INFO: (2) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 23.672899ms)
  May 10 19:48:35.351: INFO: (2) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 26.794571ms)
  May 10 19:48:35.351: INFO: (2) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:462/proxy/: tls qux (200; 26.94312ms)
  May 10 19:48:35.355: INFO: (2) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname2/proxy/: bar (200; 31.028908ms)
  May 10 19:48:35.355: INFO: (2) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname2/proxy/: bar (200; 31.323599ms)
  May 10 19:48:35.355: INFO: (2) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname1/proxy/: foo (200; 31.467852ms)
  May 10 19:48:35.356: INFO: (2) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname1/proxy/: tls baz (200; 31.719113ms)
  May 10 19:48:35.356: INFO: (2) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname1/proxy/: foo (200; 32.630323ms)
  May 10 19:48:35.357: INFO: (2) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname2/proxy/: tls qux (200; 32.919903ms)
  May 10 19:48:35.369: INFO: (3) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">test<... (200; 11.709333ms)
  May 10 19:48:35.369: INFO: (3) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 11.735855ms)
  May 10 19:48:35.370: INFO: (3) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/rewriteme">test</a> (200; 13.085081ms)
  May 10 19:48:35.370: INFO: (3) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:462/proxy/: tls qux (200; 13.169159ms)
  May 10 19:48:35.373: INFO: (3) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:460/proxy/: tls baz (200; 15.753092ms)
  May 10 19:48:35.373: INFO: (3) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">... (200; 16.00415ms)
  May 10 19:48:35.373: INFO: (3) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/tlsrewritem... (200; 16.161682ms)
  May 10 19:48:35.373: INFO: (3) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 16.251774ms)
  May 10 19:48:35.373: INFO: (3) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 16.2764ms)
  May 10 19:48:35.373: INFO: (3) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 16.270645ms)
  May 10 19:48:35.379: INFO: (3) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname2/proxy/: bar (200; 21.818894ms)
  May 10 19:48:35.381: INFO: (3) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname2/proxy/: bar (200; 23.629292ms)
  May 10 19:48:35.381: INFO: (3) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname1/proxy/: tls baz (200; 24.010614ms)
  May 10 19:48:35.383: INFO: (3) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname2/proxy/: tls qux (200; 25.881806ms)
  May 10 19:48:35.383: INFO: (3) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname1/proxy/: foo (200; 25.802472ms)
  May 10 19:48:35.383: INFO: (3) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname1/proxy/: foo (200; 25.858683ms)
  May 10 19:48:35.392: INFO: (4) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/rewriteme">test</a> (200; 8.746771ms)
  May 10 19:48:35.399: INFO: (4) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 15.967776ms)
  May 10 19:48:35.399: INFO: (4) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 16.233549ms)
  May 10 19:48:35.400: INFO: (4) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">... (200; 16.992218ms)
  May 10 19:48:35.400: INFO: (4) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 17.02803ms)
  May 10 19:48:35.400: INFO: (4) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:462/proxy/: tls qux (200; 17.397053ms)
  May 10 19:48:35.400: INFO: (4) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 17.390654ms)
  May 10 19:48:35.401: INFO: (4) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname1/proxy/: foo (200; 17.765547ms)
  May 10 19:48:35.401: INFO: (4) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname2/proxy/: bar (200; 18.089737ms)
  May 10 19:48:35.401: INFO: (4) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:460/proxy/: tls baz (200; 18.231759ms)
  May 10 19:48:35.401: INFO: (4) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/tlsrewritem... (200; 18.19284ms)
  May 10 19:48:35.401: INFO: (4) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname1/proxy/: foo (200; 18.261937ms)
  May 10 19:48:35.401: INFO: (4) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname1/proxy/: tls baz (200; 18.318685ms)
  May 10 19:48:35.401: INFO: (4) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname2/proxy/: tls qux (200; 18.355807ms)
  May 10 19:48:35.401: INFO: (4) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname2/proxy/: bar (200; 18.278ms)
  May 10 19:48:35.401: INFO: (4) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">test<... (200; 18.418598ms)
  May 10 19:48:35.412: INFO: (5) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">... (200; 10.286849ms)
  May 10 19:48:35.417: INFO: (5) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">test<... (200; 15.663328ms)
  May 10 19:48:35.417: INFO: (5) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/rewriteme">test</a> (200; 15.93205ms)
  May 10 19:48:35.417: INFO: (5) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:460/proxy/: tls baz (200; 15.938121ms)
  May 10 19:48:35.418: INFO: (5) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 16.095208ms)
  May 10 19:48:35.418: INFO: (5) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 16.158571ms)
  May 10 19:48:35.418: INFO: (5) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:462/proxy/: tls qux (200; 16.429073ms)
  May 10 19:48:35.418: INFO: (5) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/tlsrewritem... (200; 16.91973ms)
  May 10 19:48:35.418: INFO: (5) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 16.83567ms)
  May 10 19:48:35.418: INFO: (5) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 16.992552ms)
  May 10 19:48:35.422: INFO: (5) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname1/proxy/: foo (200; 20.62434ms)
  May 10 19:48:35.423: INFO: (5) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname2/proxy/: bar (200; 21.692081ms)
  May 10 19:48:35.425: INFO: (5) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname2/proxy/: bar (200; 23.269512ms)
  May 10 19:48:35.425: INFO: (5) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname1/proxy/: tls baz (200; 23.304726ms)
  May 10 19:48:35.425: INFO: (5) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname2/proxy/: tls qux (200; 23.282053ms)
  May 10 19:48:35.425: INFO: (5) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname1/proxy/: foo (200; 23.246177ms)
  May 10 19:48:35.436: INFO: (6) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 11.447799ms)
  May 10 19:48:35.437: INFO: (6) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 11.714199ms)
  May 10 19:48:35.437: INFO: (6) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:462/proxy/: tls qux (200; 12.201061ms)
  May 10 19:48:35.437: INFO: (6) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/rewriteme">test</a> (200; 12.282508ms)
  May 10 19:48:35.437: INFO: (6) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">test<... (200; 12.182333ms)
  May 10 19:48:35.438: INFO: (6) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:460/proxy/: tls baz (200; 13.552066ms)
  May 10 19:48:35.441: INFO: (6) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">... (200; 15.660317ms)
  May 10 19:48:35.441: INFO: (6) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/tlsrewritem... (200; 16.204837ms)
  May 10 19:48:35.441: INFO: (6) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 16.434872ms)
  May 10 19:48:35.441: INFO: (6) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 16.429809ms)
  May 10 19:48:35.448: INFO: (6) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname2/proxy/: bar (200; 23.051154ms)
  May 10 19:48:35.465: INFO: (6) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname2/proxy/: bar (200; 39.838948ms)
  May 10 19:48:35.465: INFO: (6) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname1/proxy/: tls baz (200; 39.805197ms)
  May 10 19:48:35.465: INFO: (6) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname1/proxy/: foo (200; 39.91242ms)
  May 10 19:48:35.465: INFO: (6) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname1/proxy/: foo (200; 39.91868ms)
  May 10 19:48:35.465: INFO: (6) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname2/proxy/: tls qux (200; 39.962214ms)
  May 10 19:48:35.482: INFO: (7) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">... (200; 16.69365ms)
  May 10 19:48:35.487: INFO: (7) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 22.346159ms)
  May 10 19:48:35.487: INFO: (7) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 22.392224ms)
  May 10 19:48:35.488: INFO: (7) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:462/proxy/: tls qux (200; 22.824629ms)
  May 10 19:48:35.488: INFO: (7) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 22.900908ms)
  May 10 19:48:35.490: INFO: (7) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">test<... (200; 24.39109ms)
  May 10 19:48:35.491: INFO: (7) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:460/proxy/: tls baz (200; 25.971402ms)
  May 10 19:48:35.491: INFO: (7) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 26.073532ms)
  May 10 19:48:35.492: INFO: (7) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/rewriteme">test</a> (200; 26.320146ms)
  May 10 19:48:35.492: INFO: (7) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/tlsrewritem... (200; 26.368238ms)
  May 10 19:48:35.493: INFO: (7) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname1/proxy/: tls baz (200; 28.05898ms)
  May 10 19:48:35.494: INFO: (7) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname2/proxy/: bar (200; 29.309762ms)
  May 10 19:48:35.495: INFO: (7) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname2/proxy/: tls qux (200; 29.909076ms)
  May 10 19:48:35.496: INFO: (7) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname1/proxy/: foo (200; 30.70826ms)
  May 10 19:48:35.496: INFO: (7) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname2/proxy/: bar (200; 31.057718ms)
  May 10 19:48:35.496: INFO: (7) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname1/proxy/: foo (200; 31.014738ms)
  May 10 19:48:35.506: INFO: (8) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 9.346315ms)
  May 10 19:48:35.509: INFO: (8) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">... (200; 13.187131ms)
  May 10 19:48:35.512: INFO: (8) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/rewriteme">test</a> (200; 15.74041ms)
  May 10 19:48:35.512: INFO: (8) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:460/proxy/: tls baz (200; 15.952942ms)
  May 10 19:48:35.512: INFO: (8) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 15.925037ms)
  May 10 19:48:35.512: INFO: (8) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 16.004215ms)
  May 10 19:48:35.512: INFO: (8) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/tlsrewritem... (200; 15.993416ms)
  May 10 19:48:35.514: INFO: (8) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">test<... (200; 17.979603ms)
  May 10 19:48:35.514: INFO: (8) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:462/proxy/: tls qux (200; 17.895461ms)
  May 10 19:48:35.515: INFO: (8) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 18.084515ms)
  May 10 19:48:35.516: INFO: (8) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname2/proxy/: tls qux (200; 19.916718ms)
  May 10 19:48:35.518: INFO: (8) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname2/proxy/: bar (200; 21.469705ms)
  May 10 19:48:35.518: INFO: (8) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname2/proxy/: bar (200; 21.479207ms)
  May 10 19:48:35.519: INFO: (8) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname1/proxy/: foo (200; 22.101544ms)
  May 10 19:48:35.521: INFO: (8) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname1/proxy/: tls baz (200; 24.12661ms)
  May 10 19:48:35.521: INFO: (8) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname1/proxy/: foo (200; 24.164862ms)
  May 10 19:48:35.543: INFO: (9) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">test<... (200; 22.623145ms)
  May 10 19:48:35.543: INFO: (9) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:462/proxy/: tls qux (200; 22.651283ms)
  May 10 19:48:35.543: INFO: (9) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 22.556133ms)
  May 10 19:48:35.543: INFO: (9) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/rewriteme">test</a> (200; 22.596316ms)
  May 10 19:48:35.543: INFO: (9) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 22.487602ms)
  May 10 19:48:35.543: INFO: (9) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">... (200; 22.591742ms)
  May 10 19:48:35.543: INFO: (9) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/tlsrewritem... (200; 22.525578ms)
  May 10 19:48:35.543: INFO: (9) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 22.510089ms)
  May 10 19:48:35.543: INFO: (9) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 22.475256ms)
  May 10 19:48:35.543: INFO: (9) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:460/proxy/: tls baz (200; 22.507019ms)
  May 10 19:48:35.547: INFO: (9) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname2/proxy/: tls qux (200; 26.770861ms)
  May 10 19:48:35.549: INFO: (9) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname2/proxy/: bar (200; 28.348944ms)
  May 10 19:48:35.549: INFO: (9) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname2/proxy/: bar (200; 28.657705ms)
  May 10 19:48:35.549: INFO: (9) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname1/proxy/: foo (200; 28.571949ms)
  May 10 19:48:35.550: INFO: (9) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname1/proxy/: foo (200; 28.877256ms)
  May 10 19:48:35.550: INFO: (9) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname1/proxy/: tls baz (200; 28.824258ms)
  May 10 19:48:35.571: INFO: (10) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 21.044425ms)
  May 10 19:48:35.573: INFO: (10) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">test<... (200; 23.677301ms)
  May 10 19:48:35.574: INFO: (10) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/rewriteme">test</a> (200; 23.657879ms)
  May 10 19:48:35.574: INFO: (10) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 23.728952ms)
  May 10 19:48:35.574: INFO: (10) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:460/proxy/: tls baz (200; 23.833968ms)
  May 10 19:48:35.574: INFO: (10) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">... (200; 24.101427ms)
  May 10 19:48:35.574: INFO: (10) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 24.155935ms)
  May 10 19:48:35.574: INFO: (10) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:462/proxy/: tls qux (200; 24.346747ms)
  May 10 19:48:35.576: INFO: (10) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/tlsrewritem... (200; 25.865982ms)
  May 10 19:48:35.576: INFO: (10) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 26.292802ms)
  May 10 19:48:35.583: INFO: (10) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname2/proxy/: tls qux (200; 33.444896ms)
  May 10 19:48:35.583: INFO: (10) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname1/proxy/: tls baz (200; 33.645592ms)
  May 10 19:48:35.584: INFO: (10) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname2/proxy/: bar (200; 33.94957ms)
  May 10 19:48:35.584: INFO: (10) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname2/proxy/: bar (200; 34.270238ms)
  May 10 19:48:35.584: INFO: (10) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname1/proxy/: foo (200; 34.417424ms)
  May 10 19:48:35.585: INFO: (10) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname1/proxy/: foo (200; 35.309386ms)
  May 10 19:48:35.596: INFO: (11) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 10.273944ms)
  May 10 19:48:35.600: INFO: (11) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:460/proxy/: tls baz (200; 14.703788ms)
  May 10 19:48:35.600: INFO: (11) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 14.834491ms)
  May 10 19:48:35.601: INFO: (11) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:462/proxy/: tls qux (200; 15.145507ms)
  May 10 19:48:35.601: INFO: (11) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">... (200; 15.491508ms)
  May 10 19:48:35.601: INFO: (11) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 15.400647ms)
  May 10 19:48:35.601: INFO: (11) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/tlsrewritem... (200; 15.369868ms)
  May 10 19:48:35.601: INFO: (11) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 15.414403ms)
  May 10 19:48:35.601: INFO: (11) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/rewriteme">test</a> (200; 15.815972ms)
  May 10 19:48:35.601: INFO: (11) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">test<... (200; 15.7414ms)
  May 10 19:48:35.605: INFO: (11) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname2/proxy/: bar (200; 19.390892ms)
  May 10 19:48:35.606: INFO: (11) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname1/proxy/: tls baz (200; 21.040001ms)
  May 10 19:48:35.607: INFO: (11) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname1/proxy/: foo (200; 21.289324ms)
  May 10 19:48:35.607: INFO: (11) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname2/proxy/: tls qux (200; 21.22681ms)
  May 10 19:48:35.607: INFO: (11) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname1/proxy/: foo (200; 21.237691ms)
  May 10 19:48:35.607: INFO: (11) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname2/proxy/: bar (200; 21.405675ms)
  May 10 19:48:35.617: INFO: (12) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 9.621828ms)
  May 10 19:48:35.619: INFO: (12) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">test<... (200; 11.933492ms)
  May 10 19:48:35.619: INFO: (12) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 12.254886ms)
  May 10 19:48:35.620: INFO: (12) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">... (200; 12.376287ms)
  May 10 19:48:35.621: INFO: (12) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:462/proxy/: tls qux (200; 13.826694ms)
  May 10 19:48:35.621: INFO: (12) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/rewriteme">test</a> (200; 13.800999ms)
  May 10 19:48:35.621: INFO: (12) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 13.808286ms)
  May 10 19:48:35.621: INFO: (12) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:460/proxy/: tls baz (200; 14.345139ms)
  May 10 19:48:35.623: INFO: (12) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 15.878823ms)
  May 10 19:48:35.623: INFO: (12) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/tlsrewritem... (200; 16.105228ms)
  May 10 19:48:35.628: INFO: (12) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname1/proxy/: foo (200; 21.208024ms)
  May 10 19:48:35.629: INFO: (12) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname1/proxy/: foo (200; 21.514044ms)
  May 10 19:48:35.629: INFO: (12) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname1/proxy/: tls baz (200; 21.814648ms)
  May 10 19:48:35.629: INFO: (12) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname2/proxy/: bar (200; 22.03662ms)
  May 10 19:48:35.629: INFO: (12) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname2/proxy/: bar (200; 22.17941ms)
  May 10 19:48:35.629: INFO: (12) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname2/proxy/: tls qux (200; 22.350227ms)
  May 10 19:48:35.639: INFO: (13) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:460/proxy/: tls baz (200; 9.881531ms)
  May 10 19:48:35.641: INFO: (13) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/rewriteme">test</a> (200; 11.582911ms)
  May 10 19:48:35.642: INFO: (13) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:462/proxy/: tls qux (200; 12.313904ms)
  May 10 19:48:35.649: INFO: (13) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 19.043421ms)
  May 10 19:48:35.649: INFO: (13) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 19.313518ms)
  May 10 19:48:35.650: INFO: (13) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">test<... (200; 20.197397ms)
  May 10 19:48:35.651: INFO: (13) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 21.449045ms)
  May 10 19:48:35.651: INFO: (13) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 21.502304ms)
  May 10 19:48:35.651: INFO: (13) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/tlsrewritem... (200; 21.444942ms)
  May 10 19:48:35.651: INFO: (13) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">... (200; 21.727138ms)
  May 10 19:48:35.651: INFO: (13) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname2/proxy/: tls qux (200; 21.830843ms)
  May 10 19:48:35.652: INFO: (13) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname1/proxy/: foo (200; 21.923145ms)
  May 10 19:48:35.654: INFO: (13) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname1/proxy/: tls baz (200; 24.404428ms)
  May 10 19:48:35.654: INFO: (13) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname2/proxy/: bar (200; 24.953143ms)
  May 10 19:48:35.655: INFO: (13) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname1/proxy/: foo (200; 24.915172ms)
  May 10 19:48:35.655: INFO: (13) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname2/proxy/: bar (200; 25.931324ms)
  May 10 19:48:35.671: INFO: (14) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/rewriteme">test</a> (200; 15.652115ms)
  May 10 19:48:35.671: INFO: (14) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/tlsrewritem... (200; 15.799548ms)
  May 10 19:48:35.673: INFO: (14) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 16.934169ms)
  May 10 19:48:35.673: INFO: (14) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">test<... (200; 17.067726ms)
  May 10 19:48:35.673: INFO: (14) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 17.381355ms)
  May 10 19:48:35.673: INFO: (14) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:460/proxy/: tls baz (200; 17.717712ms)
  May 10 19:48:35.675: INFO: (14) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:462/proxy/: tls qux (200; 19.582952ms)
  May 10 19:48:35.677: INFO: (14) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">... (200; 21.166785ms)
  May 10 19:48:35.677: INFO: (14) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname2/proxy/: bar (200; 21.206895ms)
  May 10 19:48:35.677: INFO: (14) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname2/proxy/: tls qux (200; 21.664589ms)
  May 10 19:48:35.677: INFO: (14) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 21.731072ms)
  May 10 19:48:35.678: INFO: (14) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 21.86571ms)
  May 10 19:48:35.678: INFO: (14) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname1/proxy/: tls baz (200; 22.205765ms)
  May 10 19:48:35.678: INFO: (14) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname1/proxy/: foo (200; 22.227997ms)
  May 10 19:48:35.678: INFO: (14) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname1/proxy/: foo (200; 22.384632ms)
  May 10 19:48:35.678: INFO: (14) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname2/proxy/: bar (200; 22.674601ms)
  May 10 19:48:35.691: INFO: (15) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 12.573506ms)
  May 10 19:48:35.691: INFO: (15) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/tlsrewritem... (200; 12.521817ms)
  May 10 19:48:35.692: INFO: (15) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 13.750724ms)
  May 10 19:48:35.692: INFO: (15) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:460/proxy/: tls baz (200; 13.610575ms)
  May 10 19:48:35.693: INFO: (15) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">test<... (200; 14.671537ms)
  May 10 19:48:35.694: INFO: (15) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 15.065908ms)
  May 10 19:48:35.697: INFO: (15) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">... (200; 17.83972ms)
  May 10 19:48:35.697: INFO: (15) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 18.317556ms)
  May 10 19:48:35.702: INFO: (15) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:462/proxy/: tls qux (200; 22.949533ms)
  May 10 19:48:35.709: INFO: (15) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/rewriteme">test</a> (200; 29.898164ms)
  May 10 19:48:35.710: INFO: (15) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname1/proxy/: tls baz (200; 31.19414ms)
  May 10 19:48:35.710: INFO: (15) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname1/proxy/: foo (200; 31.81477ms)
  May 10 19:48:35.710: INFO: (15) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname1/proxy/: foo (200; 31.877546ms)
  May 10 19:48:35.711: INFO: (15) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname2/proxy/: bar (200; 32.34716ms)
  May 10 19:48:35.713: INFO: (15) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname2/proxy/: bar (200; 33.885765ms)
  May 10 19:48:35.713: INFO: (15) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname2/proxy/: tls qux (200; 34.247939ms)
  May 10 19:48:35.733: INFO: (16) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/rewriteme">test</a> (200; 19.918874ms)
  May 10 19:48:35.733: INFO: (16) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">test<... (200; 19.960554ms)
  May 10 19:48:35.733: INFO: (16) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 20.379618ms)
  May 10 19:48:35.733: INFO: (16) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/tlsrewritem... (200; 20.335739ms)
  May 10 19:48:35.733: INFO: (16) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:460/proxy/: tls baz (200; 20.45642ms)
  May 10 19:48:35.736: INFO: (16) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 22.51227ms)
  May 10 19:48:35.736: INFO: (16) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 22.613571ms)
  May 10 19:48:35.746: INFO: (16) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname1/proxy/: foo (200; 32.506545ms)
  May 10 19:48:35.746: INFO: (16) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname1/proxy/: tls baz (200; 32.47536ms)
  May 10 19:48:35.746: INFO: (16) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">... (200; 32.471382ms)
  May 10 19:48:35.746: INFO: (16) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname2/proxy/: bar (200; 32.443378ms)
  May 10 19:48:35.746: INFO: (16) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 32.449736ms)
  May 10 19:48:35.746: INFO: (16) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname2/proxy/: tls qux (200; 32.475969ms)
  May 10 19:48:35.746: INFO: (16) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:462/proxy/: tls qux (200; 32.470466ms)
  May 10 19:48:35.746: INFO: (16) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname2/proxy/: bar (200; 32.512106ms)
  May 10 19:48:35.746: INFO: (16) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname1/proxy/: foo (200; 32.594325ms)
  May 10 19:48:35.760: INFO: (17) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname1/proxy/: tls baz (200; 14.018651ms)
  May 10 19:48:35.760: INFO: (17) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:462/proxy/: tls qux (200; 14.269621ms)
  May 10 19:48:35.760: INFO: (17) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 14.232841ms)
  May 10 19:48:35.761: INFO: (17) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">... (200; 14.797153ms)
  May 10 19:48:35.761: INFO: (17) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">test<... (200; 14.844072ms)
  May 10 19:48:35.761: INFO: (17) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/rewriteme">test</a> (200; 14.89842ms)
  May 10 19:48:35.761: INFO: (17) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 14.915065ms)
  May 10 19:48:35.761: INFO: (17) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/tlsrewritem... (200; 15.209924ms)
  May 10 19:48:35.761: INFO: (17) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:460/proxy/: tls baz (200; 15.177045ms)
  May 10 19:48:35.761: INFO: (17) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 15.314787ms)
  May 10 19:48:35.761: INFO: (17) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 15.375269ms)
  May 10 19:48:35.765: INFO: (17) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname1/proxy/: foo (200; 19.471273ms)
  May 10 19:48:35.766: INFO: (17) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname1/proxy/: foo (200; 20.761445ms)
  May 10 19:48:35.767: INFO: (17) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname2/proxy/: bar (200; 20.701729ms)
  May 10 19:48:35.767: INFO: (17) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname2/proxy/: bar (200; 20.976467ms)
  May 10 19:48:35.767: INFO: (17) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname2/proxy/: tls qux (200; 21.160087ms)
  May 10 19:48:35.780: INFO: (18) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 12.650063ms)
  May 10 19:48:35.780: INFO: (18) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">test<... (200; 12.865107ms)
  May 10 19:48:35.780: INFO: (18) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname1/proxy/: foo (200; 13.116143ms)
  May 10 19:48:35.781: INFO: (18) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:462/proxy/: tls qux (200; 14.256026ms)
  May 10 19:48:35.781: INFO: (18) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 14.247253ms)
  May 10 19:48:35.781: INFO: (18) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/rewriteme">test</a> (200; 14.489831ms)
  May 10 19:48:35.781: INFO: (18) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 14.542737ms)
  May 10 19:48:35.783: INFO: (18) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 15.572123ms)
  May 10 19:48:35.783: INFO: (18) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/tlsrewritem... (200; 15.811467ms)
  May 10 19:48:35.783: INFO: (18) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">... (200; 15.840166ms)
  May 10 19:48:35.783: INFO: (18) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:460/proxy/: tls baz (200; 15.947679ms)
  May 10 19:48:35.784: INFO: (18) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname2/proxy/: tls qux (200; 17.2313ms)
  May 10 19:48:35.787: INFO: (18) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname1/proxy/: tls baz (200; 20.143241ms)
  May 10 19:48:35.787: INFO: (18) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname2/proxy/: bar (200; 20.128435ms)
  May 10 19:48:35.787: INFO: (18) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname1/proxy/: foo (200; 20.514782ms)
  May 10 19:48:35.787: INFO: (18) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname2/proxy/: bar (200; 20.305949ms)
  May 10 19:48:35.800: INFO: (19) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt/proxy/rewriteme">test</a> (200; 12.260672ms)
  May 10 19:48:35.800: INFO: (19) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 12.408578ms)
  May 10 19:48:35.801: INFO: (19) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:443/proxy/tlsrewritem... (200; 13.774638ms)
  May 10 19:48:35.801: INFO: (19) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">... (200; 13.66471ms)
  May 10 19:48:35.802: INFO: (19) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:162/proxy/: bar (200; 14.029454ms)
  May 10 19:48:35.802: INFO: (19) /api/v1/namespaces/proxy-9471/pods/http:proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 14.780371ms)
  May 10 19:48:35.803: INFO: (19) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:160/proxy/: foo (200; 15.720522ms)
  May 10 19:48:35.804: INFO: (19) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname2/proxy/: bar (200; 16.617959ms)
  May 10 19:48:35.805: INFO: (19) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:462/proxy/: tls qux (200; 17.141813ms)
  May 10 19:48:35.805: INFO: (19) /api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/: <a href="/api/v1/namespaces/proxy-9471/pods/proxy-service-b2tgn-qzfkt:1080/proxy/rewriteme">test<... (200; 17.455511ms)
  May 10 19:48:35.805: INFO: (19) /api/v1/namespaces/proxy-9471/services/proxy-service-b2tgn:portname1/proxy/: foo (200; 17.355991ms)
  May 10 19:48:35.805: INFO: (19) /api/v1/namespaces/proxy-9471/pods/https:proxy-service-b2tgn-qzfkt:460/proxy/: tls baz (200; 17.820118ms)
  May 10 19:48:35.805: INFO: (19) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname1/proxy/: tls baz (200; 17.695906ms)
  May 10 19:48:35.807: INFO: (19) /api/v1/namespaces/proxy-9471/services/https:proxy-service-b2tgn:tlsportname2/proxy/: tls qux (200; 18.955246ms)
  May 10 19:48:35.807: INFO: (19) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname2/proxy/: bar (200; 18.883892ms)
  May 10 19:48:35.807: INFO: (19) /api/v1/namespaces/proxy-9471/services/http:proxy-service-b2tgn:portname1/proxy/: foo (200; 19.701046ms)
  May 10 19:48:35.807: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController proxy-service-b2tgn in namespace proxy-9471, will wait for the garbage collector to delete the pods @ 05/10/24 19:48:35.814
  May 10 19:48:35.882: INFO: Deleting ReplicationController proxy-service-b2tgn took: 11.124098ms
  May 10 19:48:35.983: INFO: Terminating ReplicationController proxy-service-b2tgn pods took: 101.063842ms
  STEP: Destroying namespace "proxy-9471" for this suite. @ 05/10/24 19:48:38.385
  << Timeline
------------------------------
SSSSSSSSSSSS
------------------------------
• [4.171 seconds]
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:167

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:48:37.303
  May 10 19:48:37.303: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 19:48:37.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:48:37.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:48:37.34
  STEP: Creating a pod to test downward api env vars @ 05/10/24 19:48:37.345
  STEP: Saw pod success @ 05/10/24 19:48:41.4
  May 10 19:48:41.406: INFO: Trying to get logs from node ip-172-31-236-46.eu-west-3.compute.internal pod downward-api-bdc25668-7745-4af5-99f6-940ef698c90a container dapi-container: <nil>
  STEP: delete the pod @ 05/10/24 19:48:41.426
  May 10 19:48:41.456: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9209" for this suite. @ 05/10/24 19:48:41.465
  << Timeline
------------------------------
SS
------------------------------
• [6.578 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:85

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:48:41.478
  May 10 19:48:41.478: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/10/24 19:48:41.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:48:41.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:48:41.513
  May 10 19:48:41.517: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  May 10 19:48:48.036: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3318" for this suite. @ 05/10/24 19:48:48.046
  << Timeline
------------------------------
• [4.176 seconds]
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:48:48.057
  May 10 19:48:48.057: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename secrets @ 05/10/24 19:48:48.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:48:48.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:48:48.102
  STEP: Creating secret with name secret-test-55992d1a-a49f-4a46-9252-c89d4f437b36 @ 05/10/24 19:48:48.107
  STEP: Creating a pod to test consume secrets @ 05/10/24 19:48:48.114
  STEP: Saw pod success @ 05/10/24 19:48:52.165
  May 10 19:48:52.170: INFO: Trying to get logs from node ip-172-31-236-46.eu-west-3.compute.internal pod pod-secrets-b09a9523-68a9-4ce3-8028-a080d2bc8889 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 19:48:52.181
  May 10 19:48:52.210: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4255" for this suite. @ 05/10/24 19:48:52.22
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
• [15.378 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:442

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:48:38.404
  May 10 19:48:38.405: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/10/24 19:48:38.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:48:38.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:48:38.448
  STEP: set up a multi version CRD @ 05/10/24 19:48:38.45
  May 10 19:48:38.451: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: mark a version not serverd @ 05/10/24 19:48:48.672
  STEP: check the unserved version gets removed @ 05/10/24 19:48:48.703
  STEP: check the other version is not changed @ 05/10/24 19:48:50.26
  May 10 19:48:53.751: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2953" for this suite. @ 05/10/24 19:48:53.765
  << Timeline
------------------------------
SSSS
------------------------------
• [6.130 seconds]
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:155

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:48:53.788
  May 10 19:48:53.788: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename var-expansion @ 05/10/24 19:48:53.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:48:53.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:48:53.819
  May 10 19:48:55.852: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May 10 19:48:55.860: INFO: Deleting pod "var-expansion-4e854ede-4dac-4c78-911e-da52fcd74905" in namespace "var-expansion-5993"
  May 10 19:48:55.872: INFO: Wait up to 5m0s for pod "var-expansion-4e854ede-4dac-4c78-911e-da52fcd74905" to be fully deleted
  STEP: Destroying namespace "var-expansion-5993" for this suite. @ 05/10/24 19:48:59.895
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [8.375 seconds]
[sig-apps] Deployment deployment should support proportional scaling [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:48:52.248
  May 10 19:48:52.248: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename deployment @ 05/10/24 19:48:52.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:48:52.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:48:52.289
  May 10 19:48:52.295: INFO: Creating deployment "webserver-deployment"
  May 10 19:48:52.306: INFO: Waiting for observed generation 1
  May 10 19:48:54.324: INFO: Waiting for all required pods to come up
  May 10 19:48:54.344: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 05/10/24 19:48:54.344
  May 10 19:48:56.357: INFO: Waiting for deployment "webserver-deployment" to complete
  May 10 19:48:56.376: INFO: Updating deployment "webserver-deployment" with a non-existent image
  May 10 19:48:56.395: INFO: Updating deployment webserver-deployment
  May 10 19:48:56.395: INFO: Waiting for observed generation 2
  May 10 19:48:58.410: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  May 10 19:48:58.420: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  May 10 19:48:58.429: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  May 10 19:48:58.447: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  May 10 19:48:58.447: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  May 10 19:48:58.454: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  May 10 19:48:58.464: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  May 10 19:48:58.464: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  May 10 19:48:58.483: INFO: Updating deployment webserver-deployment
  May 10 19:48:58.483: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  May 10 19:48:58.511: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  May 10 19:49:00.531: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  May 10 19:49:00.544: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b4c685eb-5c31-414e-bcd6-32610e9a33cb",
      ResourceVersion: (string) (len=5) "20745",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967332,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 20,
      AvailableReplicas: (int32) 20,
      UnavailableReplicas: (int32) 13,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 10 19:49:00.550: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a3ecf8ab-1145-4851-9540-e99b0894d42b",
      ResourceVersion: (string) (len=5) "20594",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967336,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "b4c685eb-5c31-414e-bcd6-32610e9a33cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 34 63 36 38 35  65 62 2d 35 63 33 31 2d  |\"b4c685eb-5c31-|
              00000120  34 31 34 65 2d 62 63 64  36 2d 33 32 36 31 30 65  |414e-bcd6-32610e|
              00000130  39 61 33 33 63 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |9a33cb\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 10 19:49:00.550: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  May 10 19:49:00.551: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fece7576-0a39-4787-80f1-aeb4aa328095",
      ResourceVersion: (string) (len=5) "20743",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967332,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "b4c685eb-5c31-414e-bcd6-32610e9a33cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 34 63 36 38 35  65 62 2d 35 63 33 31 2d  |\"b4c685eb-5c31-|
              00000120  34 31 34 65 2d 62 63 64  36 2d 33 32 36 31 30 65  |414e-bcd6-32610e|
              00000130  39 61 33 33 63 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |9a33cb\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 20,
      AvailableReplicas: (int32) 20,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 10 19:49:00.568: INFO: Pod "webserver-deployment-557759b7c7-4xlzf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4xlzf",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c9e8a9d1-cf55-4df2-a6b8-ebe83ed03a4c",
      ResourceVersion: (string) (len=5) "20360",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967332,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.3.47/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "0920c6d71cc5e270db4388161aa6aa83944440b78f0d33c70888afee2e24af8f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.3.47/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fece7576-0a39-4787-80f1-aeb4aa328095",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 65  63 65 37 35 37 36 2d 30  |d\":\"fece7576-0|
              00000090  61 33 39 2d 34 37 38 37  2d 38 30 66 31 2d 61 65  |a39-4787-80f1-ae|
              000000a0  62 34 61 61 33 32 38 30  39 35 5c 22 7d 22 3a 7b  |b4aa328095\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 33  2e 34 37 5c 22 7d 22 3a  |10.244.3.47\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jtq7s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jtq7s",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-236-46.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.236.46",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.3.47",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.3.47"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967332,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967333,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3651221fa10f9c92936ba0225b57f224bb3bf6d6a49b8470dfd87876982caa52",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.569: INFO: Pod "webserver-deployment-557759b7c7-5ttlj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5ttlj",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f5ad1c04-bb34-4366-b934-82977f52056f",
      ResourceVersion: (string) (len=5) "20335",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967332,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.4.40/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.4.40/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "777cc5eb0bb9fc622f593887165b80ca9109f32e58dc75de3a84e29b37cecdbd"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fece7576-0a39-4787-80f1-aeb4aa328095",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 65  63 65 37 35 37 36 2d 30  |d\":\"fece7576-0|
              00000090  61 33 39 2d 34 37 38 37  2d 38 30 66 31 2d 61 65  |a39-4787-80f1-ae|
              000000a0  62 34 61 61 33 32 38 30  39 35 5c 22 7d 22 3a 7b  |b4aa328095\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967333,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 34  2e 34 30 5c 22 7d 22 3a  |10.244.4.40\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t8npf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t8npf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-237-5.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967333,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967333,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.237.5",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.4.40",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.4.40"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967332,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967333,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://136b2e90d93450342a028e968b0db644dc009f44b5a3532d1b0a21d419b5d4b6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.570: INFO: Pod "webserver-deployment-557759b7c7-65bkq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-65bkq",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b4478d4-22e4-48c4-9e58-c0eb618a21f3",
      ResourceVersion: (string) (len=5) "20342",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967332,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "375e15694cc995e2fe61df0416a381d065d9c2475590c4537be60545e78fcf89",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.5.42/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.5.42/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fece7576-0a39-4787-80f1-aeb4aa328095",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 65  63 65 37 35 37 36 2d 30  |d\":\"fece7576-0|
              00000090  61 33 39 2d 34 37 38 37  2d 38 30 66 31 2d 61 65  |a39-4787-80f1-ae|
              000000a0  62 34 61 61 33 32 38 30  39 35 5c 22 7d 22 3a 7b  |b4aa328095\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967333,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 35  2e 34 32 5c 22 7d 22 3a  |10.244.5.42\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d7wtk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d7wtk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-238-69.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967333,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967333,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.238.69",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.5.42",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.5.42"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967332,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967333,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://721456b26792f2c8e233fdc7fd4424e1fb7ab6cf5e562f26c75e80625d9a0890",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.570: INFO: Pod "webserver-deployment-557759b7c7-7nlds" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-7nlds",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "30ecacc2-1e2e-48e0-be58-fa5b8d8df743",
      ResourceVersion: (string) (len=5) "20309",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967332,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "50d295fd941cba86a7f591b5effa4c79290eb6f2d687d44d7dfb85b696a1954c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.7.26/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.7.26/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fece7576-0a39-4787-80f1-aeb4aa328095",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 65  63 65 37 35 37 36 2d 30  |d\":\"fece7576-0|
              00000090  61 33 39 2d 34 37 38 37  2d 38 30 66 31 2d 61 65  |a39-4787-80f1-ae|
              000000a0  62 34 61 61 33 32 38 30  39 35 5c 22 7d 22 3a 7b  |b4aa328095\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967333,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 37  2e 32 36 5c 22 7d 22 3a  |10.244.7.26\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kwhhh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kwhhh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=44) "ip-172-31-236-144.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967333,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967333,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.31.236.144",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.7.26",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.7.26"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967332,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967333,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://63e559ba2485c6f12f8956fc6c4e09abab414c10627de3d07c949abd904a6217",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.571: INFO: Pod "webserver-deployment-557759b7c7-7qvb6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-7qvb6",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "69494458-f21c-437f-a8ca-0eaf3ff0ab2f",
      ResourceVersion: (string) (len=5) "20710",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.7.28/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.7.28/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "69680a4218685857db4bf4dcd28fd642d169a0eb2a3e19277266f343164b2a0b"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fece7576-0a39-4787-80f1-aeb4aa328095",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 65  63 65 37 35 37 36 2d 30  |d\":\"fece7576-0|
              00000090  61 33 39 2d 34 37 38 37  2d 38 30 66 31 2d 61 65  |a39-4787-80f1-ae|
              000000a0  62 34 61 61 33 32 38 30  39 35 5c 22 7d 22 3a 7b  |b4aa328095\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 37  2e 32 38 5c 22 7d 22 3a  |10.244.7.28\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zdzlm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zdzlm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=44) "ip-172-31-236-144.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.31.236.144",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.7.28",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.7.28"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967339,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://41ab4a37e142d69993c70ab584320eb87deac567ffb19b86f8b16580e89f75d5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.571: INFO: Pod "webserver-deployment-557759b7c7-8khmb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-8khmb",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1859a17b-2a17-49df-8c11-f00546cb9de9",
      ResourceVersion: (string) (len=5) "20681",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "37202e98a773880a22e7a1445b792a965848b20f5eaf2b697d19fbec06fae1dc",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.5.45/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.5.45/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fece7576-0a39-4787-80f1-aeb4aa328095",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 65  63 65 37 35 37 36 2d 30  |d\":\"fece7576-0|
              00000090  61 33 39 2d 34 37 38 37  2d 38 30 66 31 2d 61 65  |a39-4787-80f1-ae|
              000000a0  62 34 61 61 33 32 38 30  39 35 5c 22 7d 22 3a 7b  |b4aa328095\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 35  2e 34 35 5c 22 7d 22 3a  |10.244.5.45\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q2mpl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q2mpl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-238-69.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.238.69",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.5.45",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.5.45"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967339,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://be25cb725cf43dbf975a951a2ceacbc7bad8dae7e04743f33a8a089e0f621265",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.572: INFO: Pod "webserver-deployment-557759b7c7-9fsxs" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-9fsxs",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b11d0e8a-3762-42c7-8848-48ef591edf6e",
      ResourceVersion: (string) (len=5) "20363",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967332,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "1564c0a1ca7e4a138ef6847aa65072cf9bc1e91ebaad8681a4875f6a6bcb060c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.3.48/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.3.48/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fece7576-0a39-4787-80f1-aeb4aa328095",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 65  63 65 37 35 37 36 2d 30  |d\":\"fece7576-0|
              00000090  61 33 39 2d 34 37 38 37  2d 38 30 66 31 2d 61 65  |a39-4787-80f1-ae|
              000000a0  62 34 61 61 33 32 38 30  39 35 5c 22 7d 22 3a 7b  |b4aa328095\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 33  2e 34 38 5c 22 7d 22 3a  |10.244.3.48\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2nwsg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2nwsg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-236-46.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.236.46",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.3.48",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.3.48"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967332,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967333,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://cad72defd8553a84effa0b680186be1d8d3d6b82f18e6343560e34ddbad9299a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.572: INFO: Pod "webserver-deployment-557759b7c7-c5mqk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-c5mqk",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "55d5e4b1-b7d2-4e43-9a34-0d6a8d95af1c",
      ResourceVersion: (string) (len=5) "20727",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f12d8257b27daaf822db3d84d90551fc3f80e7ee0bcd121e52ae2b8fc3740e06",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.4.44/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.4.44/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fece7576-0a39-4787-80f1-aeb4aa328095",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 65  63 65 37 35 37 36 2d 30  |d\":\"fece7576-0|
              00000090  61 33 39 2d 34 37 38 37  2d 38 30 66 31 2d 61 65  |a39-4787-80f1-ae|
              000000a0  62 34 61 61 33 32 38 30  39 35 5c 22 7d 22 3a 7b  |b4aa328095\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 34  2e 34 34 5c 22 7d 22 3a  |10.244.4.44\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xk295",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xk295",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-237-5.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.237.5",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.4.44",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.4.44"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967339,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://749104e32d14470f67dc927e95b632a1ace869763460b1e1fd9a87a312b3c47e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.573: INFO: Pod "webserver-deployment-557759b7c7-c9xx8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-c9xx8",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "215c8ef2-367a-4c90-b138-65539f53efa3",
      ResourceVersion: (string) (len=5) "20384",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967332,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "0cee53d97a6d4d6e8cf14a349f637784c2811c514e448044babc17ed3d9ab113",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.6.43/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.6.43/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fece7576-0a39-4787-80f1-aeb4aa328095",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 65  63 65 37 35 37 36 2d 30  |d\":\"fece7576-0|
              00000090  61 33 39 2d 34 37 38 37  2d 38 30 66 31 2d 61 65  |a39-4787-80f1-ae|
              000000a0  62 34 61 61 33 32 38 30  39 35 5c 22 7d 22 3a 7b  |b4aa328095\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967333,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 36  2e 34 33 5c 22 7d 22 3a  |10.244.6.43\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pgvlb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pgvlb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-237-27.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.237.27",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.6.43",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.6.43"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967332,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967334,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1c4dbd29f8431e1937ae63e366dc75e8a81266c0530241ea56e25c0c69cd3027",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.574: INFO: Pod "webserver-deployment-557759b7c7-cp94j" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-cp94j",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "68157e64-c4e9-420e-957c-c553ac98eda9",
      ResourceVersion: (string) (len=5) "20737",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "ce3c07c3219c97615a51084bc0610a881a280ba12b46d42b5f4e0004d2a467c8",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.4.45/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.4.45/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fece7576-0a39-4787-80f1-aeb4aa328095",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 65  63 65 37 35 37 36 2d 30  |d\":\"fece7576-0|
              00000090  61 33 39 2d 34 37 38 37  2d 38 30 66 31 2d 61 65  |a39-4787-80f1-ae|
              000000a0  62 34 61 61 33 32 38 30  39 35 5c 22 7d 22 3a 7b  |b4aa328095\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 34  2e 34 35 5c 22 7d 22 3a  |10.244.4.45\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r4r6t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r4r6t",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-237-5.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.237.5",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.4.45",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.4.45"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967339,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://abe0ef168423e8c4e78c90e3423f093caa50576497f639f50748b8d4378bf64c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.574: INFO: Pod "webserver-deployment-557759b7c7-jpf9c" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-jpf9c",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b7cc1913-4249-4694-a8da-df59ffbad088",
      ResourceVersion: (string) (len=5) "20705",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e65f513a83b4a34bf4e445391b1617bbccdac6f0ef98407535e60a29527d0dcc",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.3.51/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.3.51/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fece7576-0a39-4787-80f1-aeb4aa328095",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 65  63 65 37 35 37 36 2d 30  |d\":\"fece7576-0|
              00000090  61 33 39 2d 34 37 38 37  2d 38 30 66 31 2d 61 65  |a39-4787-80f1-ae|
              000000a0  62 34 61 61 33 32 38 30  39 35 5c 22 7d 22 3a 7b  |b4aa328095\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 33  2e 35 31 5c 22 7d 22 3a  |10.244.3.51\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fszxk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fszxk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-236-46.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.236.46",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.3.51",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.3.51"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967339,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://669175fc2e47d98cf7e91b5fcbd0ba7cfe102f4992415e523f037a6e175bdd70",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.574: INFO: Pod "webserver-deployment-557759b7c7-ng66p" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-ng66p",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "79967db5-687b-4500-89cb-67a7c31dca24",
      ResourceVersion: (string) (len=5) "20700",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "4e011ac2e71da5dde8e1eaa967b30eea9fe4167f1efe78da05813d93b544d5b2",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.6.47/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.6.47/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fece7576-0a39-4787-80f1-aeb4aa328095",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 65  63 65 37 35 37 36 2d 30  |d\":\"fece7576-0|
              00000090  61 33 39 2d 34 37 38 37  2d 38 30 66 31 2d 61 65  |a39-4787-80f1-ae|
              000000a0  62 34 61 61 33 32 38 30  39 35 5c 22 7d 22 3a 7b  |b4aa328095\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 36  2e 34 37 5c 22 7d 22 3a  |10.244.6.47\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cmlpn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cmlpn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-237-27.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.237.27",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.6.47",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.6.47"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967339,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c98c51033a81270b0b87810dbdd2f9daa7ebbeab9ac871c0133b5a2f670573ac",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.575: INFO: Pod "webserver-deployment-557759b7c7-r9n6z" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-r9n6z",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a22f2692-c1e0-4e0a-bdaa-b9b144ee71c8",
      ResourceVersion: (string) (len=5) "20738",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "4306b2d37fa5b02da5800db4f5ec74d0d5aae17152e5ffcfa396a80a69d3eed4",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.8.43/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.8.43/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fece7576-0a39-4787-80f1-aeb4aa328095",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 65  63 65 37 35 37 36 2d 30  |d\":\"fece7576-0|
              00000090  61 33 39 2d 34 37 38 37  2d 38 30 66 31 2d 61 65  |a39-4787-80f1-ae|
              000000a0  62 34 61 61 33 32 38 30  39 35 5c 22 7d 22 3a 7b  |b4aa328095\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 38  2e 34 33 5c 22 7d 22 3a  |10.244.8.43\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2sg4b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2sg4b",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-238-87.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.238.87",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.8.43",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.8.43"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967339,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://730d1193430e702cd5c30a1c853a220a10a82ac1bdc98f00f54b5a6dbcc75e09",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.575: INFO: Pod "webserver-deployment-557759b7c7-rhvlg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-rhvlg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6298e5d0-8b83-465d-afde-2a3fb5490061",
      ResourceVersion: (string) (len=5) "20372",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967332,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "8c257d28d8a45fddea105552033e91c0187f092024e77eea19082dfc8193736c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.4.41/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.4.41/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fece7576-0a39-4787-80f1-aeb4aa328095",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 65  63 65 37 35 37 36 2d 30  |d\":\"fece7576-0|
              00000090  61 33 39 2d 34 37 38 37  2d 38 30 66 31 2d 61 65  |a39-4787-80f1-ae|
              000000a0  62 34 61 61 33 32 38 30  39 35 5c 22 7d 22 3a 7b  |b4aa328095\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967333,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 34  2e 34 31 5c 22 7d 22 3a  |10.244.4.41\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g9kw7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g9kw7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-237-5.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.237.5",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.4.41",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.4.41"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967332,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967333,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a456d8c42d464f60e0006af36ef9c84baacc20008f48a5d9c6cfc5f74649eb7d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.575: INFO: Pod "webserver-deployment-557759b7c7-rzgfc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-rzgfc",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4dd22836-b027-4966-98b3-a4c42e76fd8c",
      ResourceVersion: (string) (len=5) "20718",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a38351916495fffd475eafe1729a6803103e7e6adf577050edeb30bec451b32a",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.8.44/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.8.44/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fece7576-0a39-4787-80f1-aeb4aa328095",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 65  63 65 37 35 37 36 2d 30  |d\":\"fece7576-0|
              00000090  61 33 39 2d 34 37 38 37  2d 38 30 66 31 2d 61 65  |a39-4787-80f1-ae|
              000000a0  62 34 61 61 33 32 38 30  39 35 5c 22 7d 22 3a 7b  |b4aa328095\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 38  2e 34 34 5c 22 7d 22 3a  |10.244.8.44\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n7pmp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n7pmp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-238-87.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.238.87",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.8.44",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.8.44"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967339,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a6a2c2b6f155d91c9bdc506d1554b09dd698aa69299f73d056b10259f34038b9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.575: INFO: Pod "webserver-deployment-557759b7c7-vl7c2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vl7c2",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c33d3f6c-3d5b-474e-bee7-93c26dd0b5e3",
      ResourceVersion: (string) (len=5) "20732",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "8f3dc9cdfe0fd48b6c986cf4da5a6b76f9ee6435dc024b8a551037d79a4da342",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.8.42/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.8.42/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fece7576-0a39-4787-80f1-aeb4aa328095",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 65  63 65 37 35 37 36 2d 30  |d\":\"fece7576-0|
              00000090  61 33 39 2d 34 37 38 37  2d 38 30 66 31 2d 61 65  |a39-4787-80f1-ae|
              000000a0  62 34 61 61 33 32 38 30  39 35 5c 22 7d 22 3a 7b  |b4aa328095\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 38  2e 34 32 5c 22 7d 22 3a  |10.244.8.42\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6q97j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6q97j",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-238-87.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.238.87",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.8.42",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.8.42"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967339,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f33dcdb9e85b8cf62efd9e7be6ce3a6d682fa6bb32f300a93d32195682d0037d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.576: INFO: Pod "webserver-deployment-557759b7c7-vnwkh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vnwkh",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a787d5de-cb7d-4908-8326-93d065c302c3",
      ResourceVersion: (string) (len=5) "20702",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "2696192c591062399b6a683e897b744a0244bb9ff41c287bab395b54a32d986f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.6.45/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.6.45/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fece7576-0a39-4787-80f1-aeb4aa328095",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 65  63 65 37 35 37 36 2d 30  |d\":\"fece7576-0|
              00000090  61 33 39 2d 34 37 38 37  2d 38 30 66 31 2d 61 65  |a39-4787-80f1-ae|
              000000a0  62 34 61 61 33 32 38 30  39 35 5c 22 7d 22 3a 7b  |b4aa328095\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 36  2e 34 35 5c 22 7d 22 3a  |10.244.6.45\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vszxv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vszxv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-237-27.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.237.27",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.6.45",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.6.45"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967339,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5cab20105dae5795298936b761bb0c66006609d2ab1a5d8c7a27797a9a71926a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.576: INFO: Pod "webserver-deployment-557759b7c7-wbwqg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-wbwqg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5e4d81e5-364b-49ba-8347-29eb27f3bbdf",
      ResourceVersion: (string) (len=5) "20715",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.7.29/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.7.29/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a747bc203ad5c91c7bb32d1082e35e08750358868588a2093f2ba9a415931bfc"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fece7576-0a39-4787-80f1-aeb4aa328095",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 65  63 65 37 35 37 36 2d 30  |d\":\"fece7576-0|
              00000090  61 33 39 2d 34 37 38 37  2d 38 30 66 31 2d 61 65  |a39-4787-80f1-ae|
              000000a0  62 34 61 61 33 32 38 30  39 35 5c 22 7d 22 3a 7b  |b4aa328095\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 37  2e 32 39 5c 22 7d 22 3a  |10.244.7.29\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lvddd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lvddd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=44) "ip-172-31-236-144.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.31.236.144",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.7.29",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.7.29"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967339,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://680be1b77d3a037a754982e250353cd527f22d7878ceb46adf74037751629682",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.577: INFO: Pod "webserver-deployment-557759b7c7-xqtnc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xqtnc",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f78ab20f-32f0-4795-8b58-823528386fbd",
      ResourceVersion: (string) (len=5) "20712",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.3.52/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "bc37b300b44b0f232e4ebdb48ae424096fd477201fb5f3a99ab8258159a71b2a",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.3.52/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fece7576-0a39-4787-80f1-aeb4aa328095",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 65  63 65 37 35 37 36 2d 30  |d\":\"fece7576-0|
              00000090  61 33 39 2d 34 37 38 37  2d 38 30 66 31 2d 61 65  |a39-4787-80f1-ae|
              000000a0  62 34 61 61 33 32 38 30  39 35 5c 22 7d 22 3a 7b  |b4aa328095\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 33  2e 35 32 5c 22 7d 22 3a  |10.244.3.52\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n922j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n922j",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-236-46.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967340,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.236.46",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.3.52",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.3.52"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967339,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://66fd4c071c3b4d66360c5a099fc00208a310a73b52e4e7757c6f8a670b011063",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.577: INFO: Pod "webserver-deployment-557759b7c7-zpvg6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-zpvg6",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "32a8b2c3-d2f7-4a91-9b9e-b88295aa58b4",
      ResourceVersion: (string) (len=5) "20345",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967332,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "cb886d781c56bd666a00ca66788da420a26398654664bab903ca9af9541408cc",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.5.41/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.5.41/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fece7576-0a39-4787-80f1-aeb4aa328095",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 65  63 65 37 35 37 36 2d 30  |d\":\"fece7576-0|
              00000090  61 33 39 2d 34 37 38 37  2d 38 30 66 31 2d 61 65  |a39-4787-80f1-ae|
              000000a0  62 34 61 61 33 32 38 30  39 35 5c 22 7d 22 3a 7b  |b4aa328095\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967333,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 35  2e 34 31 5c 22 7d 22 3a  |10.244.5.41\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cx2qn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cx2qn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-238-69.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967333,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967333,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.238.69",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.5.41",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.5.41"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967332,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967333,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9ff3348c02e6bd16f7644ad6d534e57f36af9ffdfd9bcc4e2161921a6403263f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.578: INFO: Pod "webserver-deployment-9b4f5bf69-5p9wr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-5p9wr",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "385edf2d-9939-4dc9-ae88-1b45e128e66f",
      ResourceVersion: (string) (len=5) "20615",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967336,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "cd5a06d13c181c3243fe7c1883e0d81084eeee335ebeb805c534fe6b617fd46f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.7.27/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.7.27/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a3ecf8ab-1145-4851-9540-e99b0894d42b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 66 38 61 62 2d 31  |d\":\"a3ecf8ab-1|
              00000090  31 34 35 2d 34 38 35 31  2d 39 35 34 30 2d 65 39  |145-4851-9540-e9|
              000000a0  39 62 30 38 39 34 64 34  32 62 5c 22 7d 22 3a 7b  |9b0894d42b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=563) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  32 34 34 2e 37 2e 32 37  5c 22 7d 22 3a 7b 22 2e  |244.7.27\"}":{".|
              00000210  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000220  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000230  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7hlwg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7hlwg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=44) "ip-172-31-236-144.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.31.236.144",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.7.27",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.7.27"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967336,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.578: INFO: Pod "webserver-deployment-9b4f5bf69-7fj7k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-7fj7k",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "be3a991d-9c76-4ea9-b23a-e0d566e33f00",
      ResourceVersion: (string) (len=5) "20628",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967336,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7ae4389c5eee0654815fafeeec7996daf7ad633f89334a0900590ed403fdcc7d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.8.41/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.8.41/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a3ecf8ab-1145-4851-9540-e99b0894d42b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 66 38 61 62 2d 31  |d\":\"a3ecf8ab-1|
              00000090  31 34 35 2d 34 38 35 31  2d 39 35 34 30 2d 65 39  |145-4851-9540-e9|
              000000a0  39 62 30 38 39 34 64 34  32 62 5c 22 7d 22 3a 7b  |9b0894d42b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=563) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  32 34 34 2e 38 2e 34 31  5c 22 7d 22 3a 7b 22 2e  |244.8.41\"}":{".|
              00000210  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000220  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000230  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5vgd7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5vgd7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-238-87.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.238.87",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.8.41",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.8.41"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967336,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.578: INFO: Pod "webserver-deployment-9b4f5bf69-9dc8t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-9dc8t",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2eb50297-8007-43d4-825c-9e9f9f687b88",
      ResourceVersion: (string) (len=5) "20607",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967336,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "194d82cfd264e582787f37fa5ae00681b1782f09343262cd78aefbbea45f543a",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.3.49/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.3.49/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a3ecf8ab-1145-4851-9540-e99b0894d42b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 66 38 61 62 2d 31  |d\":\"a3ecf8ab-1|
              00000090  31 34 35 2d 34 38 35 31  2d 39 35 34 30 2d 65 39  |145-4851-9540-e9|
              000000a0  39 62 30 38 39 34 64 34  32 62 5c 22 7d 22 3a 7b  |9b0894d42b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=563) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  32 34 34 2e 33 2e 34 39  5c 22 7d 22 3a 7b 22 2e  |244.3.49\"}":{".|
              00000210  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000220  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000230  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t5gxr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t5gxr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-236-46.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.236.46",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.3.49",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.3.49"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967336,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.578: INFO: Pod "webserver-deployment-9b4f5bf69-9z8mt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-9z8mt",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fa7e0d2c-4c2b-4d31-961f-06916b574377",
      ResourceVersion: (string) (len=5) "20566",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967336,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9be0fc7cf45206e4f9aadf458c968407fa36d9407c3aba2f90de6ef9378e5dc9",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.5.43/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.5.43/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a3ecf8ab-1145-4851-9540-e99b0894d42b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 66 38 61 62 2d 31  |d\":\"a3ecf8ab-1|
              00000090  31 34 35 2d 34 38 35 31  2d 39 35 34 30 2d 65 39  |145-4851-9540-e9|
              000000a0  39 62 30 38 39 34 64 34  32 62 5c 22 7d 22 3a 7b  |9b0894d42b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=563) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  32 34 34 2e 35 2e 34 33  5c 22 7d 22 3a 7b 22 2e  |244.5.43\"}":{".|
              00000210  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000220  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000230  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x2rkk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x2rkk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-238-69.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.238.69",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.5.43",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.5.43"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967336,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.579: INFO: Pod "webserver-deployment-9b4f5bf69-bv6x4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-bv6x4",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8a058a19-b6b0-487f-87b7-20e88e361dc0",
      ResourceVersion: (string) (len=5) "20620",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.4.43/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "2cdcc6c84a67e664884219469ab7169cd6674ee7c18c89e9abe1d0289ae248ad",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.4.43/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a3ecf8ab-1145-4851-9540-e99b0894d42b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 66 38 61 62 2d 31  |d\":\"a3ecf8ab-1|
              00000090  31 34 35 2d 34 38 35 31  2d 39 35 34 30 2d 65 39  |145-4851-9540-e9|
              000000a0  39 62 30 38 39 34 64 34  32 62 5c 22 7d 22 3a 7b  |9b0894d42b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x95zw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x95zw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-237-5.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.237.5",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.579: INFO: Pod "webserver-deployment-9b4f5bf69-g6sbf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-g6sbf",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f0c3d946-8297-4e1d-8626-a08d9a93977b",
      ResourceVersion: (string) (len=5) "20612",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b3d061e20940b3d480ed86e7d7ac45ba4d97b8cf07f07bc9a2f4618011bb81bb",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.5.44/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.5.44/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a3ecf8ab-1145-4851-9540-e99b0894d42b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 66 38 61 62 2d 31  |d\":\"a3ecf8ab-1|
              00000090  31 34 35 2d 34 38 35 31  2d 39 35 34 30 2d 65 39  |145-4851-9540-e9|
              000000a0  39 62 30 38 39 34 64 34  32 62 5c 22 7d 22 3a 7b  |9b0894d42b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xcgss",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xcgss",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-238-69.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.238.69",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.579: INFO: Pod "webserver-deployment-9b4f5bf69-jmtgw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-jmtgw",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0ef634ed-0a87-4b9d-82d4-d2d898f54252",
      ResourceVersion: (string) (len=5) "20630",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "4e7ea405ea14ac1d3f7ae58a20a111cace422e00bb61ebb3e6d9f07971641103",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.8.45/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.8.45/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a3ecf8ab-1145-4851-9540-e99b0894d42b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 66 38 61 62 2d 31  |d\":\"a3ecf8ab-1|
              00000090  31 34 35 2d 34 38 35 31  2d 39 35 34 30 2d 65 39  |145-4851-9540-e9|
              000000a0  39 62 30 38 39 34 64 34  32 62 5c 22 7d 22 3a 7b  |9b0894d42b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2ggpb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2ggpb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-238-87.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.238.87",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.579: INFO: Pod "webserver-deployment-9b4f5bf69-msrdv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-msrdv",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ef23f179-2d20-4f6a-910e-9e7a928212bd",
      ResourceVersion: (string) (len=5) "20643",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "52285f1004fe31bac779e8b21bc8ab7a26c5bf295f9a3dc7c558bea116b55191",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.5.46/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.5.46/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a3ecf8ab-1145-4851-9540-e99b0894d42b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 66 38 61 62 2d 31  |d\":\"a3ecf8ab-1|
              00000090  31 34 35 2d 34 38 35 31  2d 39 35 34 30 2d 65 39  |145-4851-9540-e9|
              000000a0  39 62 30 38 39 34 64 34  32 62 5c 22 7d 22 3a 7b  |9b0894d42b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jjctb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jjctb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-238-69.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.238.69",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.580: INFO: Pod "webserver-deployment-9b4f5bf69-mxbhz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-mxbhz",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "88081049-fae3-4c7b-8c29-e9cf5421f423",
      ResourceVersion: (string) (len=5) "20663",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "99628f2a8b805f8a0b7bf5cfafe4f9f019b8b3c90b85d08e5ee6f7ae0e86ed3b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.6.48/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.6.48/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a3ecf8ab-1145-4851-9540-e99b0894d42b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 66 38 61 62 2d 31  |d\":\"a3ecf8ab-1|
              00000090  31 34 35 2d 34 38 35 31  2d 39 35 34 30 2d 65 39  |145-4851-9540-e9|
              000000a0  39 62 30 38 39 34 64 34  32 62 5c 22 7d 22 3a 7b  |9b0894d42b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wjrz6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wjrz6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-237-27.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.237.27",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.580: INFO: Pod "webserver-deployment-9b4f5bf69-pv84h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-pv84h",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8479ba18-ffc9-41dc-8601-c3d992f03f74",
      ResourceVersion: (string) (len=5) "20634",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "5b30ae6429930b547b9b6c78ee75a3d5aeb97806d0a7f73a4a19a0b3e9cbfa30",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.6.46/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.6.46/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a3ecf8ab-1145-4851-9540-e99b0894d42b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 66 38 61 62 2d 31  |d\":\"a3ecf8ab-1|
              00000090  31 34 35 2d 34 38 35 31  2d 39 35 34 30 2d 65 39  |145-4851-9540-e9|
              000000a0  39 62 30 38 39 34 64 34  32 62 5c 22 7d 22 3a 7b  |9b0894d42b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4hm2d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4hm2d",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-237-27.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.237.27",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.580: INFO: Pod "webserver-deployment-9b4f5bf69-vljhg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-vljhg",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "82c966d7-8c79-4564-8328-06d5e3f0ba14",
      ResourceVersion: (string) (len=5) "20631",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "66a1844b44c07baf20b98cd9c8e54dc933b14f724f29956a840e4775e4eec410",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.7.30/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.7.30/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a3ecf8ab-1145-4851-9540-e99b0894d42b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 66 38 61 62 2d 31  |d\":\"a3ecf8ab-1|
              00000090  31 34 35 2d 34 38 35 31  2d 39 35 34 30 2d 65 39  |145-4851-9540-e9|
              000000a0  39 62 30 38 39 34 64 34  32 62 5c 22 7d 22 3a 7b  |9b0894d42b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nf8l8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nf8l8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=44) "ip-172-31-236-144.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.31.236.144",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.581: INFO: Pod "webserver-deployment-9b4f5bf69-xk7qd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-xk7qd",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0046a007-7fe2-4a9f-9595-6756cdc2aeb4",
      ResourceVersion: (string) (len=5) "20482",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967336,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e112b5833425e0d473d60bc37528e1e69b0f391ff596e0e4b84f3e1d0bafbed3",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.4.42/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.4.42/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a3ecf8ab-1145-4851-9540-e99b0894d42b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 66 38 61 62 2d 31  |d\":\"a3ecf8ab-1|
              00000090  31 34 35 2d 34 38 35 31  2d 39 35 34 30 2d 65 39  |145-4851-9540-e9|
              000000a0  39 62 30 38 39 34 64 34  32 62 5c 22 7d 22 3a 7b  |9b0894d42b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=563) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  32 34 34 2e 34 2e 34 32  5c 22 7d 22 3a 7b 22 2e  |244.4.42\"}":{".|
              00000210  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000220  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000230  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-grhj5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-grhj5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-237-5.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.237.5",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.4.42",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.4.42"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967336,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.581: INFO: Pod "webserver-deployment-9b4f5bf69-zfvnt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-zfvnt",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6378",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8e66fea8-c912-4c2f-9e4b-d4928b18513c",
      ResourceVersion: (string) (len=5) "20611",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "97fd7b7c93ff4ad01e95aa1798c8f6898f929eca1187840033c87babd65a2e5c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.3.50/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.3.50/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a3ecf8ab-1145-4851-9540-e99b0894d42b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 66 38 61 62 2d 31  |d\":\"a3ecf8ab-1|
              00000090  31 34 35 2d 34 38 35 31  2d 39 35 34 30 2d 65 39  |145-4851-9540-e9|
              000000a0  39 62 30 38 39 34 64 34  32 62 5c 22 7d 22 3a 7b  |9b0894d42b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qpscn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qpscn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-236-46.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.236.46",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:49:00.581: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6378" for this suite. @ 05/10/24 19:49:00.591
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.295 seconds]
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:49:00.751
  May 10 19:49:00.752: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename disruption @ 05/10/24 19:49:00.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:49:00.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:49:00.788
  STEP: Waiting for the pdb to be processed @ 05/10/24 19:49:00.804
  STEP: Waiting for all pods to be running @ 05/10/24 19:49:02.978
  May 10 19:49:03.000: INFO: running pods: 0 < 3
  May 10 19:49:05.020: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9838" for this suite. @ 05/10/24 19:49:05.033
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
• [8.237 seconds]
[sig-apps] Job should manage the lifecycle of a job [Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:713

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:49:05.062
  May 10 19:49:05.062: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename job @ 05/10/24 19:49:05.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:49:05.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:49:05.098
  STEP: Creating a suspended job @ 05/10/24 19:49:05.135
  STEP: Patching the Job @ 05/10/24 19:49:05.158
  STEP: Watching for Job to be patched @ 05/10/24 19:49:05.176
  May 10 19:49:05.178: INFO: Event ADDED observed for Job e2e-bms7z in namespace job-5227 with labels: map[e2e-job-label:e2e-bms7z] and annotations: map[]
  May 10 19:49:05.178: INFO: Event MODIFIED found for Job e2e-bms7z in namespace job-5227 with labels: map[e2e-bms7z:patched e2e-job-label:e2e-bms7z] and annotations: map[]
  STEP: Updating the job @ 05/10/24 19:49:05.179
  STEP: Watching for Job to be updated @ 05/10/24 19:49:05.208
  May 10 19:49:05.211: INFO: Event MODIFIED found for Job e2e-bms7z in namespace job-5227 with labels: map[e2e-bms7z:patched e2e-job-label:e2e-bms7z] and annotations: map[updated:true]
  May 10 19:49:05.211: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 05/10/24 19:49:05.211
  May 10 19:49:05.215: INFO: Job: e2e-bms7z as labels: map[e2e-bms7z:patched e2e-job-label:e2e-bms7z]
  STEP: Waiting for job to complete @ 05/10/24 19:49:05.216
  STEP: Delete a job collection with a labelselector @ 05/10/24 19:49:13.226
  STEP: Watching for Job to be deleted @ 05/10/24 19:49:13.251
  May 10 19:49:13.254: INFO: Event MODIFIED observed for Job e2e-bms7z in namespace job-5227 with labels: map[e2e-bms7z:patched e2e-job-label:e2e-bms7z] and annotations: map[updated:true]
  May 10 19:49:13.254: INFO: Event MODIFIED observed for Job e2e-bms7z in namespace job-5227 with labels: map[e2e-bms7z:patched e2e-job-label:e2e-bms7z] and annotations: map[updated:true]
  May 10 19:49:13.254: INFO: Event MODIFIED observed for Job e2e-bms7z in namespace job-5227 with labels: map[e2e-bms7z:patched e2e-job-label:e2e-bms7z] and annotations: map[updated:true]
  May 10 19:49:13.255: INFO: Event MODIFIED observed for Job e2e-bms7z in namespace job-5227 with labels: map[e2e-bms7z:patched e2e-job-label:e2e-bms7z] and annotations: map[updated:true]
  May 10 19:49:13.255: INFO: Event MODIFIED observed for Job e2e-bms7z in namespace job-5227 with labels: map[e2e-bms7z:patched e2e-job-label:e2e-bms7z] and annotations: map[updated:true]
  May 10 19:49:13.255: INFO: Event MODIFIED observed for Job e2e-bms7z in namespace job-5227 with labels: map[e2e-bms7z:patched e2e-job-label:e2e-bms7z] and annotations: map[updated:true]
  May 10 19:49:13.255: INFO: Event MODIFIED observed for Job e2e-bms7z in namespace job-5227 with labels: map[e2e-bms7z:patched e2e-job-label:e2e-bms7z] and annotations: map[updated:true]
  May 10 19:49:13.255: INFO: Event DELETED found for Job e2e-bms7z in namespace job-5227 with labels: map[e2e-bms7z:patched e2e-job-label:e2e-bms7z] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 05/10/24 19:49:13.255
  May 10 19:49:13.266: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5227" for this suite. @ 05/10/24 19:49:13.278
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
• [21.847 seconds]
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:48:59.936
  May 10 19:48:59.936: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/10/24 19:48:59.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:48:59.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:48:59.983
  STEP: Creating 50 configmaps @ 05/10/24 19:48:59.988
  STEP: Creating RC which spawns configmap-volume pods @ 05/10/24 19:49:00.78
  May 10 19:49:00.813: INFO: Pod name wrapped-volume-race-900ee20a-6e03-4c5f-99e0-14dbb6272c38: Found 0 pods out of 5
  May 10 19:49:05.847: INFO: Pod name wrapped-volume-race-900ee20a-6e03-4c5f-99e0-14dbb6272c38: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/10/24 19:49:05.847
  STEP: Creating RC which spawns configmap-volume pods @ 05/10/24 19:49:05.981
  May 10 19:49:06.019: INFO: Pod name wrapped-volume-race-2cff3446-ce5d-4eef-8ada-76b4566d7333: Found 1 pods out of 5
  May 10 19:49:11.033: INFO: Pod name wrapped-volume-race-2cff3446-ce5d-4eef-8ada-76b4566d7333: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/10/24 19:49:11.033
  STEP: Creating RC which spawns configmap-volume pods @ 05/10/24 19:49:11.12
  May 10 19:49:11.153: INFO: Pod name wrapped-volume-race-da4067f5-ed2d-4410-ad4f-a555b688e5ff: Found 0 pods out of 5
  May 10 19:49:16.170: INFO: Pod name wrapped-volume-race-da4067f5-ed2d-4410-ad4f-a555b688e5ff: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/10/24 19:49:16.17
  May 10 19:49:16.202: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController wrapped-volume-race-da4067f5-ed2d-4410-ad4f-a555b688e5ff in namespace emptydir-wrapper-3275, will wait for the garbage collector to delete the pods @ 05/10/24 19:49:16.212
  May 10 19:49:16.286: INFO: Deleting ReplicationController wrapped-volume-race-da4067f5-ed2d-4410-ad4f-a555b688e5ff took: 14.556268ms
  May 10 19:49:16.386: INFO: Terminating ReplicationController wrapped-volume-race-da4067f5-ed2d-4410-ad4f-a555b688e5ff pods took: 100.408958ms
  STEP: deleting ReplicationController wrapped-volume-race-2cff3446-ce5d-4eef-8ada-76b4566d7333 in namespace emptydir-wrapper-3275, will wait for the garbage collector to delete the pods @ 05/10/24 19:49:17.688
  May 10 19:49:17.769: INFO: Deleting ReplicationController wrapped-volume-race-2cff3446-ce5d-4eef-8ada-76b4566d7333 took: 21.492687ms
  May 10 19:49:17.870: INFO: Terminating ReplicationController wrapped-volume-race-2cff3446-ce5d-4eef-8ada-76b4566d7333 pods took: 101.099104ms
  STEP: deleting ReplicationController wrapped-volume-race-900ee20a-6e03-4c5f-99e0-14dbb6272c38 in namespace emptydir-wrapper-3275, will wait for the garbage collector to delete the pods @ 05/10/24 19:49:19.572
  May 10 19:49:19.643: INFO: Deleting ReplicationController wrapped-volume-race-900ee20a-6e03-4c5f-99e0-14dbb6272c38 took: 11.321913ms
  May 10 19:49:19.744: INFO: Terminating ReplicationController wrapped-volume-race-900ee20a-6e03-4c5f-99e0-14dbb6272c38 pods took: 100.483109ms
  STEP: Cleaning up the configMaps @ 05/10/24 19:49:21.244
  STEP: Destroying namespace "emptydir-wrapper-3275" for this suite. @ 05/10/24 19:49:21.772
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [22.184 seconds]
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:49:21.794
  May 10 19:49:21.794: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename container-probe @ 05/10/24 19:49:21.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:49:21.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:49:21.829
  May 10 19:49:43.956: INFO: Container started at 2024-05-10 19:49:22 +0000 UTC, pod became ready at 2024-05-10 19:49:42 +0000 UTC
  May 10 19:49:43.956: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8832" for this suite. @ 05/10/24 19:49:43.967
  << Timeline
------------------------------
SSSSSSSSSSSS
------------------------------
• [0.106 seconds]
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:370

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:49:43.99
  May 10 19:49:43.990: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename namespaces @ 05/10/24 19:49:43.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:49:44.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:49:44.025
  STEP: Updating Namespace "namespaces-2464" @ 05/10/24 19:49:44.029
  May 10 19:49:44.045: INFO: Namespace "namespaces-2464" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"24155e27-0337-46a1-ba95-9aed21f04131", "kubernetes.io/metadata.name":"namespaces-2464", "namespaces-2464":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  May 10 19:49:44.045: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2464" for this suite. @ 05/10/24 19:49:44.058
  << Timeline
------------------------------
SSS
------------------------------
• [37.101 seconds]
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:300

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:49:13.316
  May 10 19:49:13.316: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename var-expansion @ 05/10/24 19:49:13.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:49:13.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:49:13.465
  STEP: creating the pod @ 05/10/24 19:49:13.47
  STEP: waiting for pod running @ 05/10/24 19:49:13.491
  STEP: creating a file in subpath @ 05/10/24 19:49:15.512
  May 10 19:49:15.521: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-5786 PodName:var-expansion-2e4ce63a-8241-48f3-b314-aab9bf54a3b4 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:49:15.521: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  May 10 19:49:15.522: INFO: ExecWithOptions: Clientset creation
  May 10 19:49:15.522: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-5786/pods/var-expansion-2e4ce63a-8241-48f3-b314-aab9bf54a3b4/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 05/10/24 19:49:15.608
  May 10 19:49:15.614: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-5786 PodName:var-expansion-2e4ce63a-8241-48f3-b314-aab9bf54a3b4 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:49:15.614: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  May 10 19:49:15.614: INFO: ExecWithOptions: Clientset creation
  May 10 19:49:15.614: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-5786/pods/var-expansion-2e4ce63a-8241-48f3-b314-aab9bf54a3b4/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 05/10/24 19:49:15.699
  May 10 19:49:16.222: INFO: Successfully updated pod "var-expansion-2e4ce63a-8241-48f3-b314-aab9bf54a3b4"
  STEP: waiting for annotated pod running @ 05/10/24 19:49:16.222
  STEP: deleting the pod gracefully @ 05/10/24 19:49:16.228
  May 10 19:49:16.228: INFO: Deleting pod "var-expansion-2e4ce63a-8241-48f3-b314-aab9bf54a3b4" in namespace "var-expansion-5786"
  May 10 19:49:16.249: INFO: Wait up to 5m0s for pod "var-expansion-2e4ce63a-8241-48f3-b314-aab9bf54a3b4" to be fully deleted
  May 10 19:49:50.395: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5786" for this suite. @ 05/10/24 19:49:50.406
  << Timeline
------------------------------
SSSSSSSSSSSSSS
------------------------------
• [4.174 seconds]
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:262

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:49:50.429
  May 10 19:49:50.429: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 19:49:50.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:49:50.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:49:50.464
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 19:49:50.468
  STEP: Saw pod success @ 05/10/24 19:49:54.52
  May 10 19:49:54.527: INFO: Trying to get logs from node ip-172-31-238-87.eu-west-3.compute.internal pod downwardapi-volume-55223278-5bb6-4de0-a7e7-38d34252f133 container client-container: <nil>
  STEP: delete the pod @ 05/10/24 19:49:54.543
  May 10 19:49:54.575: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5771" for this suite. @ 05/10/24 19:49:54.589
  << Timeline
------------------------------
S
------------------------------
• [4.327 seconds]
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:240

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:49:54.606
  May 10 19:49:54.606: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename configmap @ 05/10/24 19:49:54.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:49:54.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:49:54.644
  STEP: Creating configMap with name cm-test-opt-del-07d307f9-6e60-43f1-b83b-5b3957128f8f @ 05/10/24 19:49:54.658
  STEP: Creating configMap with name cm-test-opt-upd-a9eac529-30d2-4e41-adf4-883344dad770 @ 05/10/24 19:49:54.67
  STEP: Creating the pod @ 05/10/24 19:49:54.679
  STEP: Deleting configmap cm-test-opt-del-07d307f9-6e60-43f1-b83b-5b3957128f8f @ 05/10/24 19:49:56.789
  STEP: Updating configmap cm-test-opt-upd-a9eac529-30d2-4e41-adf4-883344dad770 @ 05/10/24 19:49:56.808
  STEP: Creating configMap with name cm-test-opt-create-2e2b3916-8c94-43e5-b74f-5a89ab793325 @ 05/10/24 19:49:56.822
  STEP: waiting to observe update in volume @ 05/10/24 19:49:56.834
  May 10 19:49:58.903: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-16" for this suite. @ 05/10/24 19:49:58.913
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [31.092 seconds]
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:124

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:49:44.1
  May 10 19:49:44.100: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename pod-network-test @ 05/10/24 19:49:44.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:49:44.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:49:44.183
  STEP: Performing setup for networking test in namespace pod-network-test-8392 @ 05/10/24 19:49:44.187
  STEP: creating a selector @ 05/10/24 19:49:44.187
  STEP: Creating the service pods in kubernetes @ 05/10/24 19:49:44.187
  May 10 19:49:44.187: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/10/24 19:50:06.512
  May 10 19:50:08.584: INFO: Setting MaxTries for pod polling to 66 for networking test based on endpoint count 6
  May 10 19:50:08.584: INFO: Going to poll 10.244.7.31 on port 8081 at least 0 times, with a maximum of 66 tries before failing
  May 10 19:50:08.593: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.7.31 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8392 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:50:08.593: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  May 10 19:50:08.594: INFO: ExecWithOptions: Clientset creation
  May 10 19:50:08.594: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-8392/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.7.31+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 10 19:50:09.676: INFO: Found all 1 expected endpoints: [netserver-0]
  May 10 19:50:09.676: INFO: Going to poll 10.244.3.60 on port 8081 at least 0 times, with a maximum of 66 tries before failing
  May 10 19:50:09.682: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.3.60 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8392 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:50:09.682: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  May 10 19:50:09.683: INFO: ExecWithOptions: Clientset creation
  May 10 19:50:09.683: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-8392/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.3.60+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 10 19:50:10.809: INFO: Found all 1 expected endpoints: [netserver-1]
  May 10 19:50:10.809: INFO: Going to poll 10.244.6.55 on port 8081 at least 0 times, with a maximum of 66 tries before failing
  May 10 19:50:10.815: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.6.55 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8392 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:50:10.815: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  May 10 19:50:10.815: INFO: ExecWithOptions: Clientset creation
  May 10 19:50:10.815: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-8392/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.6.55+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 10 19:50:11.899: INFO: Found all 1 expected endpoints: [netserver-2]
  May 10 19:50:11.899: INFO: Going to poll 10.244.4.49 on port 8081 at least 0 times, with a maximum of 66 tries before failing
  May 10 19:50:11.905: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.4.49 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8392 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:50:11.905: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  May 10 19:50:11.905: INFO: ExecWithOptions: Clientset creation
  May 10 19:50:11.905: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-8392/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.4.49+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 10 19:50:12.993: INFO: Found all 1 expected endpoints: [netserver-3]
  May 10 19:50:12.993: INFO: Going to poll 10.244.5.52 on port 8081 at least 0 times, with a maximum of 66 tries before failing
  May 10 19:50:13.000: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.5.52 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8392 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:50:13.000: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  May 10 19:50:13.000: INFO: ExecWithOptions: Clientset creation
  May 10 19:50:13.000: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-8392/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.5.52+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 10 19:50:14.073: INFO: Found all 1 expected endpoints: [netserver-4]
  May 10 19:50:14.073: INFO: Going to poll 10.244.8.49 on port 8081 at least 0 times, with a maximum of 66 tries before failing
  May 10 19:50:14.081: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.8.49 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8392 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:50:14.081: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  May 10 19:50:14.081: INFO: ExecWithOptions: Clientset creation
  May 10 19:50:14.081: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-8392/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.8.49+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 10 19:50:15.155: INFO: Found all 1 expected endpoints: [netserver-5]
  May 10 19:50:15.156: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8392" for this suite. @ 05/10/24 19:50:15.166
  << Timeline
------------------------------
SSSS
------------------------------
• [4.232 seconds]
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:95

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:50:15.195
  May 10 19:50:15.195: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename secrets @ 05/10/24 19:50:15.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:50:15.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:50:15.273
  STEP: creating secret secrets-3025/secret-test-1d1b01ba-68af-4086-9ca5-0dd56bb16417 @ 05/10/24 19:50:15.277
  STEP: Creating a pod to test consume secrets @ 05/10/24 19:50:15.286
  STEP: Saw pod success @ 05/10/24 19:50:19.322
  May 10 19:50:19.345: INFO: Trying to get logs from node ip-172-31-238-69.eu-west-3.compute.internal pod pod-configmaps-c99de41f-3d28-4dfb-b990-6131472adacd container env-test: <nil>
  STEP: delete the pod @ 05/10/24 19:50:19.365
  May 10 19:50:19.407: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3025" for this suite. @ 05/10/24 19:50:19.417
  << Timeline
------------------------------
SSSSSSSSSSSSSSS
------------------------------
• [9.602 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:276

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:50:19.437
  May 10 19:50:19.437: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/10/24 19:50:19.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:50:19.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:50:19.466
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 05/10/24 19:50:19.47
  May 10 19:50:19.470: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  May 10 19:50:21.668: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  May 10 19:50:29.014: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8571" for this suite. @ 05/10/24 19:50:29.025
  << Timeline
------------------------------
SSSS
------------------------------
• [144.720 seconds]
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:48:11.21
  May 10 19:48:11.210: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename container-probe @ 05/10/24 19:48:11.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:48:11.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:48:11.263
  STEP: Creating pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419 @ 05/10/24 19:48:11.267
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/10/24 19:48:13.29
  May 10 19:48:13.303: INFO: Initial restart count of pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 is 0
  May 10 19:48:13.308: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:48:15.313: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:48:17.319: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:48:19.324: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:48:21.331: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:48:23.337: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:48:25.343: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:48:27.348: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:48:29.356: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:48:31.360: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:48:33.365: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:48:33.365: INFO: Restart count of pod container-probe-1419/liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 is now 1 (20.06196761s elapsed)
  May 10 19:48:35.373: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:48:37.378: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:48:39.413: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:48:41.418: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:48:43.434: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:48:45.441: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:48:47.447: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:48:49.453: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:48:51.458: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:48:53.464: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:48:53.464: INFO: Restart count of pod container-probe-1419/liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 is now 2 (40.161608498s elapsed)
  May 10 19:48:55.470: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:48:57.476: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:48:59.486: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:49:01.491: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:49:03.496: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:49:05.500: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:49:07.506: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:49:09.515: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:49:11.523: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:49:13.552: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:49:15.557: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:49:15.557: INFO: Restart count of pod container-probe-1419/liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 is now 3 (1m2.254375419s elapsed)
  May 10 19:49:17.568: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:49:19.591: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:49:21.596: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:49:23.602: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:49:25.606: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:49:27.612: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:49:29.617: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:49:31.624: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:49:33.632: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:49:33.632: INFO: Restart count of pod container-probe-1419/liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 is now 4 (1m20.329048998s elapsed)
  May 10 19:49:35.637: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:49:37.641: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:49:39.645: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:49:41.650: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:49:43.660: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:49:45.666: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:49:47.678: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:49:49.686: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:49:51.695: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:49:53.700: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:49:55.704: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:49:57.710: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:49:59.721: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:50:01.729: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:50:03.734: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:50:05.739: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:50:07.744: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:50:09.749: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:50:11.754: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:50:13.759: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:50:15.769: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:50:17.777: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:50:19.791: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:50:21.796: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:50:23.802: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:50:25.806: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:50:27.816: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:50:29.822: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:50:31.827: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:50:33.850: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:50:35.860: INFO: Get pod liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 in namespace container-probe-1419
  May 10 19:50:35.860: INFO: Restart count of pod container-probe-1419/liveness-e9beff47-0c66-4b51-a165-fab12cf94a01 is now 5 (2m22.557336246s elapsed)
  May 10 19:50:35.860: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/10/24 19:50:35.875
  STEP: Destroying namespace "container-probe-1419" for this suite. @ 05/10/24 19:50:35.911
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [8.697 seconds]
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:50:35.938
  May 10 19:50:35.938: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename pods @ 05/10/24 19:50:35.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:50:35.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:50:35.994
  STEP: creating the pod @ 05/10/24 19:50:35.997
  STEP: submitting the pod to kubernetes @ 05/10/24 19:50:35.997
  W0510 19:50:36.008241      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 05/10/24 19:50:38.028
  STEP: updating the pod @ 05/10/24 19:50:38.032
  May 10 19:50:38.550: INFO: Successfully updated pod "pod-update-activedeadlineseconds-94486ac5-478c-4659-ad12-f2505d31d6e3"
  May 10 19:50:44.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-713" for this suite. @ 05/10/24 19:50:44.61
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [24.267 seconds]
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:50:29.044
  May 10 19:50:29.044: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename subpath @ 05/10/24 19:50:29.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:50:29.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:50:29.099
  STEP: Setting up data @ 05/10/24 19:50:29.104
  STEP: Creating pod pod-subpath-test-projected-9797 @ 05/10/24 19:50:29.116
  STEP: Creating a pod to test atomic-volume-subpath @ 05/10/24 19:50:29.116
  STEP: Saw pod success @ 05/10/24 19:50:53.223
  May 10 19:50:53.243: INFO: Trying to get logs from node ip-172-31-238-87.eu-west-3.compute.internal pod pod-subpath-test-projected-9797 container test-container-subpath-projected-9797: <nil>
  STEP: delete the pod @ 05/10/24 19:50:53.26
  STEP: Deleting pod pod-subpath-test-projected-9797 @ 05/10/24 19:50:53.283
  May 10 19:50:53.283: INFO: Deleting pod "pod-subpath-test-projected-9797" in namespace "subpath-7690"
  May 10 19:50:53.294: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7690" for this suite. @ 05/10/24 19:50:53.301
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.122 seconds]
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:50:53.345
  May 10 19:50:53.345: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename secrets @ 05/10/24 19:50:53.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:50:53.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:50:53.379
  STEP: Creating secret with name secret-test-map-36d63460-92c3-4c67-a720-ec7957e6e46d @ 05/10/24 19:50:53.384
  STEP: Creating a pod to test consume secrets @ 05/10/24 19:50:53.389
  STEP: Saw pod success @ 05/10/24 19:50:57.419
  May 10 19:50:57.423: INFO: Trying to get logs from node ip-172-31-238-87.eu-west-3.compute.internal pod pod-secrets-043eb3e1-e554-4fe1-842b-4e6b6a940f19 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 19:50:57.431
  May 10 19:50:57.453: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4615" for this suite. @ 05/10/24 19:50:57.459
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [3.217 seconds]
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:50:57.495
  May 10 19:50:57.495: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename init-container @ 05/10/24 19:50:57.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:50:57.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:50:57.565
  STEP: creating the pod @ 05/10/24 19:50:57.568
  May 10 19:50:57.568: INFO: PodSpec: initContainers in spec.initContainers
  May 10 19:51:00.669: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1325" for this suite. @ 05/10/24 19:51:00.695
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [10.181 seconds]
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2187

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:00.721
  May 10 19:51:00.721: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename services @ 05/10/24 19:51:00.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:00.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:00.756
  STEP: creating service in namespace services-5865 @ 05/10/24 19:51:00.761
  STEP: creating service affinity-clusterip-transition in namespace services-5865 @ 05/10/24 19:51:00.761
  STEP: creating replication controller affinity-clusterip-transition in namespace services-5865 @ 05/10/24 19:51:00.783
  I0510 19:51:00.799184      24 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-5865, replica count: 3
  I0510 19:51:03.850154      24 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 10 19:51:03.889: INFO: Creating new exec pod
  May 10 19:51:06.923: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=services-5865 exec execpod-affinity9hjqv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  May 10 19:51:07.119: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  May 10 19:51:07.119: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 19:51:07.119: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=services-5865 exec execpod-affinity9hjqv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.26.253 80'
  May 10 19:51:07.285: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.97.26.253 80\nConnection to 10.97.26.253 80 port [tcp/http] succeeded!\n"
  May 10 19:51:07.285: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 19:51:07.307: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=services-5865 exec execpod-affinity9hjqv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.97.26.253:80/ ; done'
  May 10 19:51:07.580: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.26.253:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.26.253:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.26.253:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.26.253:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.26.253:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.26.253:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.26.253:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.26.253:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.26.253:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.26.253:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.26.253:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.26.253:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.26.253:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.26.253:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.26.253:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.26.253:80/\n"
  May 10 19:51:07.580: INFO: stdout: "\naffinity-clusterip-transition-j6bvq\naffinity-clusterip-transition-tzdjb\naffinity-clusterip-transition-tzdjb\naffinity-clusterip-transition-5k4r4\naffinity-clusterip-transition-tzdjb\naffinity-clusterip-transition-j6bvq\naffinity-clusterip-transition-tzdjb\naffinity-clusterip-transition-j6bvq\naffinity-clusterip-transition-tzdjb\naffinity-clusterip-transition-5k4r4\naffinity-clusterip-transition-j6bvq\naffinity-clusterip-transition-tzdjb\naffinity-clusterip-transition-tzdjb\naffinity-clusterip-transition-j6bvq\naffinity-clusterip-transition-tzdjb\naffinity-clusterip-transition-tzdjb"
  May 10 19:51:07.580: INFO: Received response from host: affinity-clusterip-transition-j6bvq
  May 10 19:51:07.580: INFO: Received response from host: affinity-clusterip-transition-tzdjb
  May 10 19:51:07.580: INFO: Received response from host: affinity-clusterip-transition-tzdjb
  May 10 19:51:07.580: INFO: Received response from host: affinity-clusterip-transition-5k4r4
  May 10 19:51:07.580: INFO: Received response from host: affinity-clusterip-transition-tzdjb
  May 10 19:51:07.580: INFO: Received response from host: affinity-clusterip-transition-j6bvq
  May 10 19:51:07.580: INFO: Received response from host: affinity-clusterip-transition-tzdjb
  May 10 19:51:07.580: INFO: Received response from host: affinity-clusterip-transition-j6bvq
  May 10 19:51:07.580: INFO: Received response from host: affinity-clusterip-transition-tzdjb
  May 10 19:51:07.580: INFO: Received response from host: affinity-clusterip-transition-5k4r4
  May 10 19:51:07.580: INFO: Received response from host: affinity-clusterip-transition-j6bvq
  May 10 19:51:07.580: INFO: Received response from host: affinity-clusterip-transition-tzdjb
  May 10 19:51:07.580: INFO: Received response from host: affinity-clusterip-transition-tzdjb
  May 10 19:51:07.580: INFO: Received response from host: affinity-clusterip-transition-j6bvq
  May 10 19:51:07.580: INFO: Received response from host: affinity-clusterip-transition-tzdjb
  May 10 19:51:07.580: INFO: Received response from host: affinity-clusterip-transition-tzdjb
  May 10 19:51:07.603: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=services-5865 exec execpod-affinity9hjqv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.97.26.253:80/ ; done'
  May 10 19:51:07.840: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.26.253:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.26.253:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.26.253:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.26.253:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.26.253:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.26.253:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.26.253:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.26.253:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.26.253:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.26.253:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.26.253:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.26.253:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.26.253:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.26.253:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.26.253:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.26.253:80/\n"
  May 10 19:51:07.840: INFO: stdout: "\naffinity-clusterip-transition-j6bvq\naffinity-clusterip-transition-j6bvq\naffinity-clusterip-transition-j6bvq\naffinity-clusterip-transition-j6bvq\naffinity-clusterip-transition-j6bvq\naffinity-clusterip-transition-j6bvq\naffinity-clusterip-transition-j6bvq\naffinity-clusterip-transition-j6bvq\naffinity-clusterip-transition-j6bvq\naffinity-clusterip-transition-j6bvq\naffinity-clusterip-transition-j6bvq\naffinity-clusterip-transition-j6bvq\naffinity-clusterip-transition-j6bvq\naffinity-clusterip-transition-j6bvq\naffinity-clusterip-transition-j6bvq\naffinity-clusterip-transition-j6bvq"
  May 10 19:51:07.840: INFO: Received response from host: affinity-clusterip-transition-j6bvq
  May 10 19:51:07.840: INFO: Received response from host: affinity-clusterip-transition-j6bvq
  May 10 19:51:07.840: INFO: Received response from host: affinity-clusterip-transition-j6bvq
  May 10 19:51:07.840: INFO: Received response from host: affinity-clusterip-transition-j6bvq
  May 10 19:51:07.840: INFO: Received response from host: affinity-clusterip-transition-j6bvq
  May 10 19:51:07.840: INFO: Received response from host: affinity-clusterip-transition-j6bvq
  May 10 19:51:07.840: INFO: Received response from host: affinity-clusterip-transition-j6bvq
  May 10 19:51:07.840: INFO: Received response from host: affinity-clusterip-transition-j6bvq
  May 10 19:51:07.840: INFO: Received response from host: affinity-clusterip-transition-j6bvq
  May 10 19:51:07.840: INFO: Received response from host: affinity-clusterip-transition-j6bvq
  May 10 19:51:07.840: INFO: Received response from host: affinity-clusterip-transition-j6bvq
  May 10 19:51:07.840: INFO: Received response from host: affinity-clusterip-transition-j6bvq
  May 10 19:51:07.840: INFO: Received response from host: affinity-clusterip-transition-j6bvq
  May 10 19:51:07.840: INFO: Received response from host: affinity-clusterip-transition-j6bvq
  May 10 19:51:07.840: INFO: Received response from host: affinity-clusterip-transition-j6bvq
  May 10 19:51:07.840: INFO: Received response from host: affinity-clusterip-transition-j6bvq
  May 10 19:51:07.841: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May 10 19:51:07.847: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-5865, will wait for the garbage collector to delete the pods @ 05/10/24 19:51:07.872
  May 10 19:51:07.959: INFO: Deleting ReplicationController affinity-clusterip-transition took: 21.227511ms
  May 10 19:51:08.060: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.591986ms
  STEP: Destroying namespace "services-5865" for this suite. @ 05/10/24 19:51:10.893
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [72.224 seconds]
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:640

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:49:58.98
  May 10 19:49:58.980: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename statefulset @ 05/10/24 19:49:58.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:49:59.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:49:59.011
  STEP: Creating service test in namespace statefulset-8113 @ 05/10/24 19:49:59.016
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 05/10/24 19:49:59.024
  STEP: Creating stateful set ss in namespace statefulset-8113 @ 05/10/24 19:49:59.031
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-8113 @ 05/10/24 19:49:59.046
  May 10 19:49:59.051: INFO: Found 0 stateful pods, waiting for 1
  May 10 19:50:09.063: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 05/10/24 19:50:09.063
  May 10 19:50:09.073: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=statefulset-8113 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 10 19:50:09.234: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 10 19:50:09.234: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 10 19:50:09.234: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 10 19:50:09.243: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  May 10 19:50:19.264: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  May 10 19:50:19.264: INFO: Waiting for statefulset status.readyReplicas updated to 0
  May 10 19:50:19.330: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999798s
  May 10 19:50:20.340: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.987097308s
  May 10 19:50:21.348: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.976938435s
  May 10 19:50:22.355: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.968212523s
  May 10 19:50:23.367: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.961548569s
  May 10 19:50:24.377: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.949694855s
  May 10 19:50:25.384: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.939391979s
  May 10 19:50:26.398: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.933045251s
  May 10 19:50:27.411: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.918509598s
  May 10 19:50:28.423: INFO: Verifying statefulset ss doesn't scale past 1 for another 905.675207ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-8113 @ 05/10/24 19:50:29.424
  May 10 19:50:29.438: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=statefulset-8113 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 10 19:50:29.616: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 10 19:50:29.616: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 10 19:50:29.617: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 10 19:50:29.624: INFO: Found 1 stateful pods, waiting for 3
  May 10 19:50:39.633: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  May 10 19:50:39.633: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  May 10 19:50:39.633: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 05/10/24 19:50:39.633
  STEP: Scale down will halt with unhealthy stateful pod @ 05/10/24 19:50:39.633
  May 10 19:50:39.647: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=statefulset-8113 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 10 19:50:39.797: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 10 19:50:39.797: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 10 19:50:39.797: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 10 19:50:39.798: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=statefulset-8113 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 10 19:50:39.942: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 10 19:50:39.942: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 10 19:50:39.942: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 10 19:50:39.942: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=statefulset-8113 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 10 19:50:40.164: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 10 19:50:40.164: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 10 19:50:40.164: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 10 19:50:40.164: INFO: Waiting for statefulset status.readyReplicas updated to 0
  May 10 19:50:40.174: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  May 10 19:50:50.193: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  May 10 19:50:50.193: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  May 10 19:50:50.193: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  May 10 19:50:50.219: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999711s
  May 10 19:50:51.226: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.988511904s
  May 10 19:50:52.233: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.980792398s
  May 10 19:50:53.243: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.973894331s
  May 10 19:50:54.251: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.964007403s
  May 10 19:50:55.263: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.956292612s
  May 10 19:50:56.282: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.945185117s
  May 10 19:50:57.300: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.925111238s
  May 10 19:50:58.307: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.90748601s
  May 10 19:50:59.314: INFO: Verifying statefulset ss doesn't scale past 3 for another 900.352173ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-8113 @ 05/10/24 19:51:00.314
  May 10 19:51:00.322: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=statefulset-8113 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 10 19:51:00.482: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 10 19:51:00.482: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 10 19:51:00.482: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 10 19:51:00.482: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=statefulset-8113 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 10 19:51:00.719: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 10 19:51:00.719: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 10 19:51:00.719: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 10 19:51:00.719: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=statefulset-8113 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 10 19:51:00.960: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 10 19:51:00.960: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 10 19:51:00.960: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 10 19:51:00.960: INFO: Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 05/10/24 19:51:10.993
  May 10 19:51:10.993: INFO: Deleting all statefulset in ns statefulset-8113
  May 10 19:51:11.000: INFO: Scaling statefulset ss to 0
  May 10 19:51:11.034: INFO: Waiting for statefulset status.replicas updated to 0
  May 10 19:51:11.051: INFO: Deleting statefulset ss
  May 10 19:51:11.130: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8113" for this suite. @ 05/10/24 19:51:11.16
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [28.200 seconds]
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:328

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:50:44.64
  May 10 19:50:44.640: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 19:50:44.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:50:44.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:50:44.665
  STEP: Counting existing ResourceQuota @ 05/10/24 19:51:01.705
  STEP: Creating a ResourceQuota @ 05/10/24 19:51:06.71
  STEP: Ensuring resource quota status is calculated @ 05/10/24 19:51:06.717
  STEP: Creating a ConfigMap @ 05/10/24 19:51:08.744
  STEP: Ensuring resource quota status captures configMap creation @ 05/10/24 19:51:08.761
  STEP: Deleting a ConfigMap @ 05/10/24 19:51:10.77
  STEP: Ensuring resource quota status released usage @ 05/10/24 19:51:10.781
  May 10 19:51:12.821: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8454" for this suite. @ 05/10/24 19:51:12.829
  << Timeline
------------------------------
SSS
------------------------------
• [2.447 seconds]
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1342

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:11.238
  May 10 19:51:11.238: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 19:51:11.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:11.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:11.269
  May 10 19:51:11.274: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=kubectl-4230 create -f -'
  May 10 19:51:11.658: INFO: stderr: ""
  May 10 19:51:11.658: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  May 10 19:51:11.658: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=kubectl-4230 create -f -'
  May 10 19:51:12.014: INFO: stderr: ""
  May 10 19:51:12.014: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/10/24 19:51:12.014
  May 10 19:51:13.021: INFO: Selector matched 1 pods for map[app:agnhost]
  May 10 19:51:13.021: INFO: Found 1 / 1
  May 10 19:51:13.021: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  May 10 19:51:13.027: INFO: Selector matched 1 pods for map[app:agnhost]
  May 10 19:51:13.027: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  May 10 19:51:13.027: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=kubectl-4230 describe pod agnhost-primary-snkdz'
  May 10 19:51:13.131: INFO: stderr: ""
  May 10 19:51:13.131: INFO: stdout: "Name:             agnhost-primary-snkdz\nNamespace:        kubectl-4230\nPriority:         0\nService Account:  default\nNode:             ip-172-31-238-87.eu-west-3.compute.internal/172.31.238.87\nStart Time:       Fri, 10 May 2024 19:51:11 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: 8b5c990f0d010a08a9c454e394ca22db5753429507a1db6419634fd391f4c9b1\n                  cni.projectcalico.org/podIP: 10.244.8.56/32\n                  cni.projectcalico.org/podIPs: 10.244.8.56/32\nStatus:           Running\nIP:               10.244.8.56\nIPs:\n  IP:           10.244.8.56\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://62e95f826203a0a61fc89014b13f30cfca0bb59850e18e85a8e80870f5fc9cfa\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Fri, 10 May 2024 19:51:12 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-ftmnr (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-ftmnr:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-4230/agnhost-primary-snkdz to ip-172-31-238-87.eu-west-3.compute.internal\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  May 10 19:51:13.131: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=kubectl-4230 describe rc agnhost-primary'
  May 10 19:51:13.236: INFO: stderr: ""
  May 10 19:51:13.236: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-4230\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-snkdz\n"
  May 10 19:51:13.236: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=kubectl-4230 describe service agnhost-primary'
  May 10 19:51:13.359: INFO: stderr: ""
  May 10 19:51:13.359: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-4230\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.109.116.85\nIPs:               10.109.116.85\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.244.8.56:6379\nSession Affinity:  None\nEvents:            <none>\n"
  May 10 19:51:13.369: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=kubectl-4230 describe node ip-172-31-236-144.eu-west-3.compute.internal'
  May 10 19:51:13.564: INFO: stderr: ""
  May 10 19:51:13.564: INFO: stdout: "Name:               ip-172-31-236-144.eu-west-3.compute.internal\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=t3.xlarge\n                    beta.kubernetes.io/os=linux\n                    failure-domain.beta.kubernetes.io/region=eu-west-3\n                    failure-domain.beta.kubernetes.io/zone=eu-west-3a\n                    isSpotInstance=false\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-236-144.eu-west-3.compute.internal\n                    kubernetes.io/os=linux\n                    machine-controller/owned-by=6b4a49fe-a599-4c5f-a4a4-a92cdb37c539\n                    node.kubernetes.io/instance-type=t3.xlarge\n                    topology.ebs.csi.aws.com/zone=eu-west-3a\n                    topology.kubernetes.io/region=eu-west-3\n                    topology.kubernetes.io/zone=eu-west-3a\n                    v1.machine-controller.kubermatic.io/operating-system=ubuntu\n                    workerset=cncf-conformance-1-28-eu-west-3a\nAnnotations:        alpha.kubernetes.io/provided-node-ip: 172.31.236.144\n                    cluster.k8s.io/machine: kube-system/cncf-conformance-1-28-eu-west-3a-f9d966d4c-cshdg\n                    csi.volume.kubernetes.io/nodeid: {\"ebs.csi.aws.com\":\"i-0eb0ba393e678a3cd\"}\n                    flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"ba:f6:02:55:40:5a\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 172.31.236.144\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Fri, 10 May 2024 19:38:36 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-236-144.eu-west-3.compute.internal\n  AcquireTime:     <unset>\n  RenewTime:       Fri, 10 May 2024 19:51:13 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Fri, 10 May 2024 19:39:33 +0000   Fri, 10 May 2024 19:39:33 +0000   FlannelIsUp                  Flannel is running on this node\n  MemoryPressure       False   Fri, 10 May 2024 19:47:37 +0000   Fri, 10 May 2024 19:38:36 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Fri, 10 May 2024 19:47:37 +0000   Fri, 10 May 2024 19:38:36 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Fri, 10 May 2024 19:47:37 +0000   Fri, 10 May 2024 19:38:36 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Fri, 10 May 2024 19:47:37 +0000   Fri, 10 May 2024 19:39:16 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:   172.31.236.144\n  ExternalIP:   51.44.10.130\n  InternalDNS:  ip-172-31-236-144.eu-west-3.compute.internal\n  Hostname:     ip-172-31-236-144.eu-west-3.compute.internal\n  ExternalDNS:  ec2-51-44-10-130.eu-west-3.compute.amazonaws.com\nCapacity:\n  cpu:                4\n  ephemeral-storage:  50620216Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             16157800Ki\n  pods:               110\nAllocatable:\n  cpu:                3600m\n  ephemeral-storage:  44504107341\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             15645800Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec25fd179394b440bbf242234e1698f8\n  System UUID:                ec25fd17-9394-b440-bbf2-42234e1698f8\n  Boot ID:                    f7580aee-7d00-4628-b620-0769ab7e0fdd\n  Kernel Version:             6.5.0-1018-aws\n  OS Image:                   Ubuntu 22.04.4 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.31\n  Kubelet Version:            v1.28.9\n  Kube-Proxy Version:         v1.28.9\nPodCIDR:                      10.244.7.0/24\nPodCIDRs:                     10.244.7.0/24\nProviderID:                   aws:///eu-west-3a/i-0eb0ba393e678a3cd\nNon-terminated Pods:          (6 in total)\n  Namespace                   Name                    CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                    ------------  ----------  ---------------  -------------  ---\n  conformance                 e2e-conformance-test    0 (0%)        0 (0%)      0 (0%)           0 (0%)         10m\n  daemonsets-62               daemon-set-tztfn        0 (0%)        0 (0%)      0 (0%)           0 (0%)         2s\n  kube-system                 canal-zgphj             250m (6%)     0 (0%)      0 (0%)           0 (0%)         12m\n  kube-system                 ebs-csi-node-7kmv9      30m (0%)      0 (0%)      120Mi (0%)       768Mi (5%)     12m\n  kube-system                 kube-proxy-svhx8        0 (0%)        0 (0%)      0 (0%)           0 (0%)         12m\n  kube-system                 node-local-dns-fbvng    25m (0%)      0 (0%)      5Mi (0%)         0 (0%)         12m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                305m (8%)   0 (0%)\n  memory             125Mi (0%)  768Mi (5%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type    Reason                   Age                From                   Message\n  ----    ------                   ----               ----                   -------\n  Normal  Starting                 12m                kube-proxy             \n  Normal  NodeHasSufficientMemory  12m (x5 over 12m)  kubelet                Node ip-172-31-236-144.eu-west-3.compute.internal status is now: NodeHasSufficientMemory\n  Normal  NodeHasNoDiskPressure    12m (x5 over 12m)  kubelet                Node ip-172-31-236-144.eu-west-3.compute.internal status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID     12m (x5 over 12m)  kubelet                Node ip-172-31-236-144.eu-west-3.compute.internal status is now: NodeHasSufficientPID\n  Normal  Synced                   12m                cloud-node-controller  Node synced successfully\n  Normal  RegisteredNode           12m                node-controller        Node ip-172-31-236-144.eu-west-3.compute.internal event: Registered Node ip-172-31-236-144.eu-west-3.compute.internal in Controller\n  Normal  NodeReady                11m                kubelet                Node ip-172-31-236-144.eu-west-3.compute.internal status is now: NodeReady\n"
  May 10 19:51:13.564: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=kubectl-4230 describe namespace kubectl-4230'
  May 10 19:51:13.662: INFO: stderr: ""
  May 10 19:51:13.662: INFO: stdout: "Name:         kubectl-4230\nLabels:       e2e-framework=kubectl\n              e2e-run=5b4503db-a9cc-46a8-ba91-c8d15312e215\n              kubernetes.io/metadata.name=kubectl-4230\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  May 10 19:51:13.663: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4230" for this suite. @ 05/10/24 19:51:13.672
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
• [2.134 seconds]
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:104

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:13.701
  May 10 19:51:13.701: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename runtimeclass @ 05/10/24 19:51:13.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:13.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:13.744
  May 10 19:51:15.800: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9277" for this suite. @ 05/10/24 19:51:15.823
  << Timeline
------------------------------
SSS
------------------------------
• [5.914 seconds]
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:10.914
  May 10 19:51:10.914: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename daemonsets @ 05/10/24 19:51:10.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:10.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:10.937
  STEP: Creating a simple DaemonSet "daemon-set" @ 05/10/24 19:51:10.992
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/10/24 19:51:10.999
  May 10 19:51:11.013: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:51:11.013: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:51:11.013: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:51:11.017: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 19:51:11.017: INFO: Node ip-172-31-236-144.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  May 10 19:51:12.054: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:51:12.054: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:51:12.054: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:51:12.059: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 19:51:12.059: INFO: Node ip-172-31-236-144.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  May 10 19:51:13.022: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:51:13.022: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:51:13.022: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:51:13.026: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 6
  May 10 19:51:13.026: INFO: Number of running nodes: 6, number of available pods: 6 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 05/10/24 19:51:13.03
  May 10 19:51:13.053: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:51:13.053: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:51:13.053: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:51:13.062: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 6
  May 10 19:51:13.062: INFO: Number of running nodes: 6, number of available pods: 6 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 05/10/24 19:51:13.062
  STEP: Deleting DaemonSet "daemon-set" @ 05/10/24 19:51:14.082
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-62, will wait for the garbage collector to delete the pods @ 05/10/24 19:51:14.082
  May 10 19:51:14.143: INFO: Deleting DaemonSet.extensions daemon-set took: 8.57321ms
  May 10 19:51:14.244: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.700154ms
  May 10 19:51:16.751: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 19:51:16.751: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May 10 19:51:16.758: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23518"},"items":null}

  May 10 19:51:16.761: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23518"},"items":null}

  May 10 19:51:16.806: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-62" for this suite. @ 05/10/24 19:51:16.815
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.172 seconds]
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:137

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:12.846
  May 10 19:51:12.846: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 19:51:12.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:12.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:12.874
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/10/24 19:51:12.878
  STEP: Saw pod success @ 05/10/24 19:51:16.914
  May 10 19:51:16.924: INFO: Trying to get logs from node ip-172-31-238-69.eu-west-3.compute.internal pod pod-eace2f58-6514-4842-a78a-e751c50e030c container test-container: <nil>
  STEP: delete the pod @ 05/10/24 19:51:16.965
  May 10 19:51:16.997: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5002" for this suite. @ 05/10/24 19:51:17.006
  << Timeline
------------------------------
S
------------------------------
• [2.140 seconds]
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:424

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:16.849
  May 10 19:51:16.849: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename replication-controller @ 05/10/24 19:51:16.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:16.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:16.884
  STEP: Creating ReplicationController "e2e-rc-h97xn" @ 05/10/24 19:51:16.89
  May 10 19:51:16.898: INFO: Get Replication Controller "e2e-rc-h97xn" to confirm replicas
  May 10 19:51:17.906: INFO: Get Replication Controller "e2e-rc-h97xn" to confirm replicas
  May 10 19:51:17.918: INFO: Found 1 replicas for "e2e-rc-h97xn" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-h97xn" @ 05/10/24 19:51:17.918
  STEP: Updating a scale subresource @ 05/10/24 19:51:17.935
  STEP: Verifying replicas where modified for replication controller "e2e-rc-h97xn" @ 05/10/24 19:51:17.943
  May 10 19:51:17.943: INFO: Get Replication Controller "e2e-rc-h97xn" to confirm replicas
  May 10 19:51:18.954: INFO: Get Replication Controller "e2e-rc-h97xn" to confirm replicas
  May 10 19:51:18.966: INFO: Found 2 replicas for "e2e-rc-h97xn" replication controller
  May 10 19:51:18.966: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3820" for this suite. @ 05/10/24 19:51:18.976
  << Timeline
------------------------------
SS
------------------------------
• [4.176 seconds]
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:250

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:15.838
  May 10 19:51:15.838: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:51:15.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:15.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:15.875
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 19:51:15.88
  STEP: Saw pod success @ 05/10/24 19:51:19.931
  May 10 19:51:19.937: INFO: Trying to get logs from node ip-172-31-238-69.eu-west-3.compute.internal pod downwardapi-volume-c69bccca-12d7-4395-8ea7-b22717f26967 container client-container: <nil>
  STEP: delete the pod @ 05/10/24 19:51:19.951
  May 10 19:51:19.980: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4202" for this suite. @ 05/10/24 19:51:19.991
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.748 seconds]
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:17.023
  May 10 19:51:17.023: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename pods @ 05/10/24 19:51:17.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:17.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:17.052
  STEP: creating a Pod with a static label @ 05/10/24 19:51:17.074
  STEP: watching for Pod to be ready @ 05/10/24 19:51:17.089
  May 10 19:51:17.093: INFO: observed Pod pod-test in namespace pods-9799 in phase Pending with labels: map[test-pod-static:true] & conditions []
  May 10 19:51:17.099: INFO: observed Pod pod-test in namespace pods-9799 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:51:17 +0000 UTC  }]
  May 10 19:51:17.148: INFO: observed Pod pod-test in namespace pods-9799 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:51:17 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:51:17 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:51:17 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:51:17 +0000 UTC  }]
  May 10 19:51:17.531: INFO: observed Pod pod-test in namespace pods-9799 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:51:17 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:51:17 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:51:17 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:51:17 +0000 UTC  }]
  May 10 19:51:18.714: INFO: Found Pod pod-test in namespace pods-9799 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:51:17 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:51:18 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:51:18 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:51:17 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 05/10/24 19:51:18.725
  STEP: getting the Pod and ensuring that it's patched @ 05/10/24 19:51:18.761
  STEP: replacing the Pod's status Ready condition to False @ 05/10/24 19:51:18.766
  STEP: check the Pod again to ensure its Ready conditions are False @ 05/10/24 19:51:18.806
  STEP: deleting the Pod via a Collection with a LabelSelector @ 05/10/24 19:51:18.806
  STEP: watching for the Pod to be deleted @ 05/10/24 19:51:18.841
  May 10 19:51:18.850: INFO: observed event type MODIFIED
  May 10 19:51:20.707: INFO: observed event type MODIFIED
  May 10 19:51:20.908: INFO: observed event type MODIFIED
  May 10 19:51:20.965: INFO: observed event type MODIFIED
  May 10 19:51:21.709: INFO: observed event type MODIFIED
  May 10 19:51:21.731: INFO: observed event type MODIFIED
  May 10 19:51:21.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9799" for this suite. @ 05/10/24 19:51:21.763
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [2.104 seconds]
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:21.78
  May 10 19:51:21.780: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename kubelet-test @ 05/10/24 19:51:21.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:21.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:21.823
  May 10 19:51:23.866: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4497" for this suite. @ 05/10/24 19:51:23.875
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.128 seconds]
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:127

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:23.927
  May 10 19:51:23.927: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 19:51:23.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:23.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:23.949
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/10/24 19:51:23.954
  STEP: Saw pod success @ 05/10/24 19:51:27.989
  May 10 19:51:27.993: INFO: Trying to get logs from node ip-172-31-237-5.eu-west-3.compute.internal pod pod-ae20f0a9-b810-482e-a618-eeadfdb28da1 container test-container: <nil>
  STEP: delete the pod @ 05/10/24 19:51:28.015
  May 10 19:51:28.040: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2232" for this suite. @ 05/10/24 19:51:28.047
  << Timeline
------------------------------
• [13.209 seconds]
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:232

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:18.995
  May 10 19:51:18.995: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 19:51:18.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:19.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:19.077
  STEP: Counting existing ResourceQuota @ 05/10/24 19:51:19.08
  STEP: Creating a ResourceQuota @ 05/10/24 19:51:24.086
  STEP: Ensuring resource quota status is calculated @ 05/10/24 19:51:24.091
  STEP: Creating a Pod that fits quota @ 05/10/24 19:51:26.095
  STEP: Ensuring ResourceQuota status captures the pod usage @ 05/10/24 19:51:26.113
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 05/10/24 19:51:28.118
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 05/10/24 19:51:28.12
  STEP: Ensuring a pod cannot update its resource requirements @ 05/10/24 19:51:28.123
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 05/10/24 19:51:28.128
  STEP: Deleting the pod @ 05/10/24 19:51:30.134
  STEP: Ensuring resource quota status released the pod usage @ 05/10/24 19:51:30.154
  May 10 19:51:32.162: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-662" for this suite. @ 05/10/24 19:51:32.184
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [4.158 seconds]
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:54

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:28.056
  May 10 19:51:28.056: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:51:28.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:28.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:28.089
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 19:51:28.093
  STEP: Saw pod success @ 05/10/24 19:51:32.129
  May 10 19:51:32.134: INFO: Trying to get logs from node ip-172-31-238-69.eu-west-3.compute.internal pod downwardapi-volume-4a814f3f-33d9-4528-a4ea-aeda1ccca8c0 container client-container: <nil>
  STEP: delete the pod @ 05/10/24 19:51:32.152
  May 10 19:51:32.181: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8378" for this suite. @ 05/10/24 19:51:32.199
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [2.645 seconds]
[sig-node] Pods should be updated [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:32.237
  May 10 19:51:32.237: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename pods @ 05/10/24 19:51:32.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:32.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:32.27
  STEP: creating the pod @ 05/10/24 19:51:32.276
  STEP: submitting the pod to kubernetes @ 05/10/24 19:51:32.276
  STEP: verifying the pod is in kubernetes @ 05/10/24 19:51:34.327
  STEP: updating the pod @ 05/10/24 19:51:34.334
  May 10 19:51:34.851: INFO: Successfully updated pod "pod-update-62233cdc-aa71-4935-bc6c-a963d90ee703"
  STEP: verifying the updated pod is in kubernetes @ 05/10/24 19:51:34.859
  May 10 19:51:34.864: INFO: Pod update OK
  May 10 19:51:34.864: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1217" for this suite. @ 05/10/24 19:51:34.871
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [0.056 seconds]
[sig-network] Services should provide secure master service  [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:775

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:34.891
  May 10 19:51:34.891: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename services @ 05/10/24 19:51:34.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:34.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:34.921
  May 10 19:51:34.930: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1047" for this suite. @ 05/10/24 19:51:34.937
  << Timeline
------------------------------
SS
------------------------------
• [3.894 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:34.949
  May 10 19:51:34.949: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename webhook @ 05/10/24 19:51:34.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:34.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:35.002
  STEP: Setting up server cert @ 05/10/24 19:51:35.071
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 19:51:35.441
  STEP: Deploying the webhook pod @ 05/10/24 19:51:35.46
  STEP: Wait for the deployment to be ready @ 05/10/24 19:51:35.489
  May 10 19:51:35.500: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/10/24 19:51:37.522
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 19:51:37.622
  May 10 19:51:38.623: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/10/24 19:51:38.632
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/10/24 19:51:38.653
  STEP: Creating a dummy validating-webhook-configuration object @ 05/10/24 19:51:38.671
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 05/10/24 19:51:38.681
  STEP: Creating a dummy mutating-webhook-configuration object @ 05/10/24 19:51:38.688
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 05/10/24 19:51:38.698
  May 10 19:51:38.705: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7353" for this suite. @ 05/10/24 19:51:38.819
  STEP: Destroying namespace "webhook-markers-7050" for this suite. @ 05/10/24 19:51:38.826
  << Timeline
------------------------------
SSSSSS
------------------------------
• [4.252 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:38.849
  May 10 19:51:38.849: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename webhook @ 05/10/24 19:51:38.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:38.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:38.885
  STEP: Setting up server cert @ 05/10/24 19:51:38.925
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 19:51:39.78
  STEP: Deploying the webhook pod @ 05/10/24 19:51:39.789
  STEP: Wait for the deployment to be ready @ 05/10/24 19:51:39.803
  May 10 19:51:39.813: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 19:51:41.826
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 19:51:41.848
  May 10 19:51:42.849: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 05/10/24 19:51:42.859
  STEP: create a namespace for the webhook @ 05/10/24 19:51:42.879
  STEP: create a configmap should be unconditionally rejected by the webhook @ 05/10/24 19:51:42.901
  May 10 19:51:42.922: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7358" for this suite. @ 05/10/24 19:51:43.052
  STEP: Destroying namespace "webhook-markers-7736" for this suite. @ 05/10/24 19:51:43.078
  STEP: Destroying namespace "fail-closed-namespace-1552" for this suite. @ 05/10/24 19:51:43.091
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.262 seconds]
[sig-network] Ingress API should support creating Ingress API operations [Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:556

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:43.122
  May 10 19:51:43.122: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename ingress @ 05/10/24 19:51:43.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:43.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:43.162
  STEP: getting /apis @ 05/10/24 19:51:43.17
  STEP: getting /apis/networking.k8s.io @ 05/10/24 19:51:43.179
  STEP: getting /apis/networking.k8s.iov1 @ 05/10/24 19:51:43.181
  STEP: creating @ 05/10/24 19:51:43.182
  STEP: getting @ 05/10/24 19:51:43.204
  STEP: listing @ 05/10/24 19:51:43.208
  STEP: watching @ 05/10/24 19:51:43.212
  May 10 19:51:43.212: INFO: starting watch
  STEP: cluster-wide listing @ 05/10/24 19:51:43.214
  STEP: cluster-wide watching @ 05/10/24 19:51:43.217
  May 10 19:51:43.217: INFO: starting watch
  STEP: patching @ 05/10/24 19:51:43.218
  STEP: updating @ 05/10/24 19:51:43.242
  May 10 19:51:43.261: INFO: waiting for watch events with expected annotations
  May 10 19:51:43.261: INFO: saw patched and updated annotations
  STEP: patching /status @ 05/10/24 19:51:43.261
  STEP: updating /status @ 05/10/24 19:51:43.269
  STEP: get /status @ 05/10/24 19:51:43.28
  STEP: deleting @ 05/10/24 19:51:43.284
  STEP: deleting a collection @ 05/10/24 19:51:43.326
  May 10 19:51:43.362: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-3535" for this suite. @ 05/10/24 19:51:43.37
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [4.905 seconds]
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:43.395
  May 10 19:51:43.395: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 05/10/24 19:51:43.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:43.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:43.42
  STEP: Setting up the test @ 05/10/24 19:51:43.423
  STEP: Creating hostNetwork=false pod @ 05/10/24 19:51:43.423
  STEP: Creating hostNetwork=true pod @ 05/10/24 19:51:45.457
  STEP: Running the test @ 05/10/24 19:51:47.481
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 05/10/24 19:51:47.481
  May 10 19:51:47.481: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3657 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:51:47.481: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  May 10 19:51:47.482: INFO: ExecWithOptions: Clientset creation
  May 10 19:51:47.482: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3657/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  May 10 19:51:47.553: INFO: Exec stderr: ""
  May 10 19:51:47.553: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3657 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:51:47.553: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  May 10 19:51:47.555: INFO: ExecWithOptions: Clientset creation
  May 10 19:51:47.555: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3657/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  May 10 19:51:47.626: INFO: Exec stderr: ""
  May 10 19:51:47.626: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3657 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:51:47.626: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  May 10 19:51:47.626: INFO: ExecWithOptions: Clientset creation
  May 10 19:51:47.627: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3657/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  May 10 19:51:47.699: INFO: Exec stderr: ""
  May 10 19:51:47.699: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3657 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:51:47.699: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  May 10 19:51:47.700: INFO: ExecWithOptions: Clientset creation
  May 10 19:51:47.700: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3657/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  May 10 19:51:47.790: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 05/10/24 19:51:47.79
  May 10 19:51:47.790: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3657 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:51:47.790: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  May 10 19:51:47.791: INFO: ExecWithOptions: Clientset creation
  May 10 19:51:47.791: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3657/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  May 10 19:51:47.865: INFO: Exec stderr: ""
  May 10 19:51:47.865: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3657 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:51:47.865: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  May 10 19:51:47.865: INFO: ExecWithOptions: Clientset creation
  May 10 19:51:47.865: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3657/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  May 10 19:51:47.933: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 05/10/24 19:51:47.933
  May 10 19:51:47.933: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3657 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:51:47.933: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  May 10 19:51:47.934: INFO: ExecWithOptions: Clientset creation
  May 10 19:51:47.934: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3657/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  May 10 19:51:48.005: INFO: Exec stderr: ""
  May 10 19:51:48.005: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3657 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:51:48.005: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  May 10 19:51:48.006: INFO: ExecWithOptions: Clientset creation
  May 10 19:51:48.006: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3657/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  May 10 19:51:48.099: INFO: Exec stderr: ""
  May 10 19:51:48.099: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3657 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:51:48.099: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  May 10 19:51:48.099: INFO: ExecWithOptions: Clientset creation
  May 10 19:51:48.099: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3657/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  May 10 19:51:48.172: INFO: Exec stderr: ""
  May 10 19:51:48.172: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3657 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:51:48.172: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  May 10 19:51:48.173: INFO: ExecWithOptions: Clientset creation
  May 10 19:51:48.173: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3657/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  May 10 19:51:48.280: INFO: Exec stderr: ""
  May 10 19:51:48.280: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-3657" for this suite. @ 05/10/24 19:51:48.291
  << Timeline
------------------------------
SSSS
------------------------------
• [1.498 seconds]
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1027

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:48.304
  May 10 19:51:48.304: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 19:51:48.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:48.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:48.345
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/10/24 19:51:48.348
  May 10 19:51:48.348: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-4434 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  May 10 19:51:48.451: INFO: stderr: ""
  May 10 19:51:48.451: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 05/10/24 19:51:48.451
  May 10 19:51:48.451: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-4434 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
  May 10 19:51:48.533: INFO: stderr: ""
  May 10 19:51:48.533: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/10/24 19:51:48.533
  May 10 19:51:48.539: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-4434 delete pods e2e-test-httpd-pod'
  May 10 19:51:49.787: INFO: stderr: ""
  May 10 19:51:49.787: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  May 10 19:51:49.787: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4434" for this suite. @ 05/10/24 19:51:49.794
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [5.115 seconds]
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:176

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:49.822
  May 10 19:51:49.822: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename replicaset @ 05/10/24 19:51:49.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:49.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:49.846
  STEP: Create a Replicaset @ 05/10/24 19:51:49.854
  STEP: Verify that the required pods have come up. @ 05/10/24 19:51:49.862
  May 10 19:51:49.873: INFO: Pod name sample-pod: Found 0 pods out of 1
  May 10 19:51:54.879: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/10/24 19:51:54.879
  STEP: Getting /status @ 05/10/24 19:51:54.879
  May 10 19:51:54.883: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 05/10/24 19:51:54.883
  May 10 19:51:54.900: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 05/10/24 19:51:54.9
  May 10 19:51:54.902: INFO: Observed &ReplicaSet event: ADDED
  May 10 19:51:54.902: INFO: Observed &ReplicaSet event: MODIFIED
  May 10 19:51:54.902: INFO: Observed &ReplicaSet event: MODIFIED
  May 10 19:51:54.902: INFO: Observed &ReplicaSet event: MODIFIED
  May 10 19:51:54.902: INFO: Found replicaset test-rs in namespace replicaset-8369 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  May 10 19:51:54.902: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 05/10/24 19:51:54.902
  May 10 19:51:54.902: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  May 10 19:51:54.913: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 05/10/24 19:51:54.913
  May 10 19:51:54.914: INFO: Observed &ReplicaSet event: ADDED
  May 10 19:51:54.914: INFO: Observed &ReplicaSet event: MODIFIED
  May 10 19:51:54.915: INFO: Observed &ReplicaSet event: MODIFIED
  May 10 19:51:54.915: INFO: Observed &ReplicaSet event: MODIFIED
  May 10 19:51:54.915: INFO: Observed replicaset test-rs in namespace replicaset-8369 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May 10 19:51:54.915: INFO: Observed &ReplicaSet event: MODIFIED
  May 10 19:51:54.915: INFO: Found replicaset test-rs in namespace replicaset-8369 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  May 10 19:51:54.915: INFO: Replicaset test-rs has a patched status
  May 10 19:51:54.915: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8369" for this suite. @ 05/10/24 19:51:54.924
  << Timeline
------------------------------
• [0.156 seconds]
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:54.939
  May 10 19:51:54.939: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename subjectreview @ 05/10/24 19:51:54.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:54.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:55.001
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-1956" @ 05/10/24 19:51:55.018
  May 10 19:51:55.051: INFO: saUsername: "system:serviceaccount:subjectreview-1956:e2e"
  May 10 19:51:55.051: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-1956"}
  May 10 19:51:55.051: INFO: saUID: "3f57c2fe-159a-4a39-a41d-110711e6eda1"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-1956:e2e" @ 05/10/24 19:51:55.051
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-1956:e2e" @ 05/10/24 19:51:55.051
  May 10 19:51:55.056: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-1956:e2e" api 'list' configmaps in "subjectreview-1956" namespace @ 05/10/24 19:51:55.056
  May 10 19:51:55.066: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-1956:e2e" @ 05/10/24 19:51:55.066
  May 10 19:51:55.072: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  May 10 19:51:55.072: INFO: LocalSubjectAccessReview has been verified
  May 10 19:51:55.072: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-1956" for this suite. @ 05/10/24 19:51:55.08
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [16.261 seconds]
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:693

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:55.104
  May 10 19:51:55.104: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 19:51:55.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:55.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:55.13
  STEP: Creating a ResourceQuota with terminating scope @ 05/10/24 19:51:55.132
  STEP: Ensuring ResourceQuota status is calculated @ 05/10/24 19:51:55.138
  STEP: Creating a ResourceQuota with not terminating scope @ 05/10/24 19:51:57.143
  STEP: Ensuring ResourceQuota status is calculated @ 05/10/24 19:51:57.15
  STEP: Creating a long running pod @ 05/10/24 19:51:59.156
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 05/10/24 19:51:59.181
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 05/10/24 19:52:01.201
  STEP: Deleting the pod @ 05/10/24 19:52:03.206
  STEP: Ensuring resource quota status released the pod usage @ 05/10/24 19:52:03.243
  STEP: Creating a terminating pod @ 05/10/24 19:52:05.254
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 05/10/24 19:52:05.282
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 05/10/24 19:52:07.286
  STEP: Deleting the pod @ 05/10/24 19:52:09.292
  STEP: Ensuring resource quota status released the pod usage @ 05/10/24 19:52:09.324
  May 10 19:52:11.329: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2148" for this suite. @ 05/10/24 19:52:11.349
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [4.208 seconds]
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:89

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:11.374
  May 10 19:52:11.374: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:52:11.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:11.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:11.419
  STEP: Creating configMap with name projected-configmap-test-volume-map-e070305a-c6bd-41e3-81ac-379b3466f147 @ 05/10/24 19:52:11.422
  STEP: Creating a pod to test consume configMaps @ 05/10/24 19:52:11.439
  STEP: Saw pod success @ 05/10/24 19:52:15.493
  May 10 19:52:15.499: INFO: Trying to get logs from node ip-172-31-237-27.eu-west-3.compute.internal pod pod-projected-configmaps-265182a1-e003-4cbc-93d7-72ac032331cf container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 19:52:15.513
  May 10 19:52:15.561: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9711" for this suite. @ 05/10/24 19:52:15.571
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.622 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:145

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:15.599
  May 10 19:52:15.599: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/10/24 19:52:15.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:15.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:15.625
  May 10 19:52:15.632: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  May 10 19:52:16.188: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4716" for this suite. @ 05/10/24 19:52:16.204
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
• [46.137 seconds]
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:32.211
  May 10 19:51:32.211: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename init-container @ 05/10/24 19:51:32.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:32.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:32.238
  STEP: creating the pod @ 05/10/24 19:51:32.243
  May 10 19:51:32.243: INFO: PodSpec: initContainers in spec.initContainers
  May 10 19:52:18.326: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-5b71796c-69e5-421c-b4db-18012b457f93", GenerateName:"", Namespace:"init-container-8406", SelfLink:"", UID:"57b3088e-a3dc-4ae0-8491-b39989798b6c", ResourceVersion:"24557", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 19, 51, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"243241902"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"975e3ec66993cd6bdd561668344ba77b7e50b4cabd717113013dacfbaf7a505d", "cni.projectcalico.org/podIP":"10.244.5.60/32", "cni.projectcalico.org/podIPs":"10.244.5.60/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 19, 51, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c2a1f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 19, 51, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c2a258), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 19, 52, 18, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c2a288), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-5v9t7", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0043392a0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-5v9t7", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-5v9t7", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-5v9t7", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc003c8abc8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-238-69.eu-west-3.compute.internal", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc00033ce00), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003c8ac50)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003c8ac70)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc003c8ac78), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc003c8ac7c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0012905e0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 10, 19, 51, 32, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 10, 19, 51, 32, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 10, 19, 51, 32, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 10, 19, 51, 32, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.238.69", HostIPs:[]v1.HostIP(nil), PodIP:"10.244.5.60", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.244.5.60"}}, StartTime:time.Date(2024, time.May, 10, 19, 51, 32, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00033cfc0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00033d030)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"containerd://59818803e4573b24bc6c122a75ed14faea15ab283439fe9f9199d0899728477c", Started:(*bool)(0xc003c8ad1a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004339320), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(0xc003c8ad2f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004339300), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc003c8acff), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  May 10 19:52:18.326: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8406" for this suite. @ 05/10/24 19:52:18.339
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.222 seconds]
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:262

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:16.235
  May 10 19:52:16.235: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:52:16.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:16.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:16.27
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 19:52:16.278
  STEP: Saw pod success @ 05/10/24 19:52:20.31
  May 10 19:52:20.313: INFO: Trying to get logs from node ip-172-31-236-46.eu-west-3.compute.internal pod downwardapi-volume-c9ba6297-af80-4b75-a21b-40d2926a732b container client-container: <nil>
  STEP: delete the pod @ 05/10/24 19:52:20.321
  May 10 19:52:20.428: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2799" for this suite. @ 05/10/24 19:52:20.434
  << Timeline
------------------------------
• [4.205 seconds]
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:18.398
  May 10 19:52:18.398: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename secrets @ 05/10/24 19:52:18.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:18.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:18.458
  STEP: Creating secret with name secret-test-deda03d6-15a2-402f-867c-7f68474b7afe @ 05/10/24 19:52:18.467
  STEP: Creating a pod to test consume secrets @ 05/10/24 19:52:18.481
  STEP: Saw pod success @ 05/10/24 19:52:22.516
  May 10 19:52:22.519: INFO: Trying to get logs from node ip-172-31-238-87.eu-west-3.compute.internal pod pod-secrets-3314654d-198b-4887-aa08-17c99c9ef621 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 19:52:22.559
  May 10 19:52:22.582: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3594" for this suite. @ 05/10/24 19:52:22.589
  << Timeline
------------------------------
SS
------------------------------
• [4.210 seconds]
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:76

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:20.458
  May 10 19:52:20.458: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename var-expansion @ 05/10/24 19:52:20.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:20.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:20.541
  STEP: Creating a pod to test substitution in container's command @ 05/10/24 19:52:20.543
  STEP: Saw pod success @ 05/10/24 19:52:24.591
  May 10 19:52:24.600: INFO: Trying to get logs from node ip-172-31-237-5.eu-west-3.compute.internal pod var-expansion-b504f526-b77e-4111-a517-4de4a228fdd0 container dapi-container: <nil>
  STEP: delete the pod @ 05/10/24 19:52:24.61
  May 10 19:52:24.648: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8058" for this suite. @ 05/10/24 19:52:24.656
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [67.170 seconds]
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:20.06
  May 10 19:51:20.060: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename sched-preemption @ 05/10/24 19:51:20.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:20.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:20.102
  May 10 19:51:20.155: INFO: Waiting up to 1m0s for all nodes to be ready
  May 10 19:52:20.277: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/10/24 19:52:20.283
  May 10 19:52:20.327: INFO: Created pod: pod0-0-sched-preemption-low-priority
  May 10 19:52:20.377: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  May 10 19:52:20.442: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  May 10 19:52:20.494: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  May 10 19:52:20.551: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  May 10 19:52:20.567: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  May 10 19:52:20.638: INFO: Created pod: pod3-0-sched-preemption-medium-priority
  May 10 19:52:20.665: INFO: Created pod: pod3-1-sched-preemption-medium-priority
  May 10 19:52:20.719: INFO: Created pod: pod4-0-sched-preemption-medium-priority
  May 10 19:52:20.747: INFO: Created pod: pod4-1-sched-preemption-medium-priority
  May 10 19:52:20.828: INFO: Created pod: pod5-0-sched-preemption-medium-priority
  May 10 19:52:20.851: INFO: Created pod: pod5-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/10/24 19:52:20.851
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 05/10/24 19:52:22.971
  May 10 19:52:27.114: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-833" for this suite. @ 05/10/24 19:52:27.219
  << Timeline
------------------------------
S
------------------------------
• [7.124 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:22.607
  May 10 19:52:22.607: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename webhook @ 05/10/24 19:52:22.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:22.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:22.652
  STEP: Setting up server cert @ 05/10/24 19:52:22.678
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 19:52:23.223
  STEP: Deploying the webhook pod @ 05/10/24 19:52:23.232
  STEP: Wait for the deployment to be ready @ 05/10/24 19:52:23.243
  May 10 19:52:23.257: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 19:52:25.278
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 19:52:25.322
  May 10 19:52:26.322: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  May 10 19:52:26.348: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2421-crds.webhook.example.com via the AdmissionRegistration API @ 05/10/24 19:52:26.869
  STEP: Creating a custom resource while v1 is storage version @ 05/10/24 19:52:26.9
  STEP: Patching Custom Resource Definition to set v2 as storage @ 05/10/24 19:52:28.993
  STEP: Patching the custom resource while v2 is storage version @ 05/10/24 19:52:29.016
  May 10 19:52:29.065: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3569" for this suite. @ 05/10/24 19:52:29.715
  STEP: Destroying namespace "webhook-markers-2222" for this suite. @ 05/10/24 19:52:29.723
  << Timeline
------------------------------
SSSSSSSSSSSS
------------------------------
• [1.098 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:58

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:29.742
  May 10 19:52:29.742: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/10/24 19:52:29.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:29.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:29.779
  May 10 19:52:29.782: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  May 10 19:52:30.824: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9486" for this suite. @ 05/10/24 19:52:30.83
  << Timeline
------------------------------
SSSSSSSSSSSSSS
------------------------------
• [7.314 seconds]
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:61

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:24.685
  May 10 19:52:24.685: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename limitrange @ 05/10/24 19:52:24.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:24.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:24.71
  STEP: Creating a LimitRange @ 05/10/24 19:52:24.714
  STEP: Setting up watch @ 05/10/24 19:52:24.714
  STEP: Submitting a LimitRange @ 05/10/24 19:52:24.824
  STEP: Verifying LimitRange creation was observed @ 05/10/24 19:52:24.829
  STEP: Fetching the LimitRange to ensure it has proper values @ 05/10/24 19:52:24.829
  May 10 19:52:24.834: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  May 10 19:52:24.834: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 05/10/24 19:52:24.834
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 05/10/24 19:52:24.842
  May 10 19:52:24.851: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  May 10 19:52:24.851: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 05/10/24 19:52:24.851
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 05/10/24 19:52:24.859
  May 10 19:52:24.863: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  May 10 19:52:24.863: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 05/10/24 19:52:24.863
  STEP: Failing to create a Pod with more than max resources @ 05/10/24 19:52:24.871
  STEP: Updating a LimitRange @ 05/10/24 19:52:24.873
  STEP: Verifying LimitRange updating is effective @ 05/10/24 19:52:24.884
  STEP: Creating a Pod with less than former min resources @ 05/10/24 19:52:26.9
  STEP: Failing to create a Pod with more than max resources @ 05/10/24 19:52:26.933
  STEP: Deleting a LimitRange @ 05/10/24 19:52:26.942
  STEP: Verifying the LimitRange was deleted @ 05/10/24 19:52:26.965
  May 10 19:52:31.970: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 05/10/24 19:52:31.97
  May 10 19:52:31.981: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5884" for this suite. @ 05/10/24 19:52:31.991
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
• [5.310 seconds]
[sig-apps] Deployment deployment should delete old replica sets [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:27.233
  May 10 19:52:27.233: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename deployment @ 05/10/24 19:52:27.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:27.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:27.268
  May 10 19:52:27.287: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  May 10 19:52:32.300: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/10/24 19:52:32.3
  May 10 19:52:32.300: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 05/10/24 19:52:32.346
  May 10 19:52:32.403: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4945",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "811abbd7-91f3-4c41-8174-c4d4765ebe63",
      ResourceVersion: (string) (len=5) "25011",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967552,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967552,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 10 19:52:32.436: INFO: New ReplicaSet "test-cleanup-deployment-7bc75bbdf6" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4945",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9f4eae57-8166-4c15-8adf-019d98e970c1",
      ResourceVersion: (string) (len=5) "25016",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967552,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "811abbd7-91f3-4c41-8174-c4d4765ebe63",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967552,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 31 31 61 62 62  64 37 2d 39 31 66 33 2d  |\"811abbd7-91f3-|
              00000120  34 63 34 31 2d 38 31 37  34 2d 63 34 64 34 37 36  |4c41-8174-c4d476|
              00000130  35 65 62 65 36 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |5ebe63\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 10 19:52:32.436: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  May 10 19:52:32.436: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4945",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dd59f9de-6466-4802-823e-50525b530f9c",
      ResourceVersion: (string) (len=5) "25014",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967547,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "811abbd7-91f3-4c41-8174-c4d4765ebe63",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967552,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 38 31 31 61 62 62 64  |"uid\":\"811abbd|
              00000040  37 2d 39 31 66 33 2d 34  63 34 31 2d 38 31 37 34  |7-91f3-4c41-8174|
              00000050  2d 63 34 64 34 37 36 35  65 62 65 36 33 5c 22 7d  |-c4d4765ebe63\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 10 19:52:32.489: INFO: Pod "test-cleanup-controller-2ftjv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-2ftjv",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-4945",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "17a34537-999e-49cb-8249-d817bbb723a1",
      ResourceVersion: (string) (len=5) "24909",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967547,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a7be9d58eb33ebbc281d0093218d09db47b7e385518c205838cf9204a5c9513b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.6.65/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.6.65/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "dd59f9de-6466-4802-823e-50525b530f9c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  64 64 35 39 66 39 64 65  |uid\":\"dd59f9de|
              00000080  2d 36 34 36 36 2d 34 38  30 32 2d 38 32 33 65 2d  |-6466-4802-823e-|
              00000090  35 30 35 32 35 62 35 33  30 66 39 63 5c 22 7d 22  |50525b530f9c\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 36  2e 36 35 5c 22 7d 22 3a  |10.244.6.65\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fkdz5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fkdz5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-237-27.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.237.27",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.6.65",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.6.65"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967547,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967548,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1130f58ef273380556c7390f7d6d259c179b48a13be8be2487a08c0bf9c6f770",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:52:32.489: INFO: Pod "test-cleanup-deployment-7bc75bbdf6-lp2cm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-7bc75bbdf6-lp2cm",
      GenerateName: (string) (len=35) "test-cleanup-deployment-7bc75bbdf6-",
      Namespace: (string) (len=15) "deployment-4945",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c19a856d-74dc-4578-beb2-9627f6912877",
      ResourceVersion: (string) (len=5) "25024",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967552,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
          UID: (types.UID) (len=36) "9f4eae57-8166-4c15-8adf-019d98e970c1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967552,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  34 65 61 65 35 37 2d 38  |d\":\"9f4eae57-8|
              00000090  31 36 36 2d 34 63 31 35  2d 38 61 64 66 2d 30 31  |166-4c15-8adf-01|
              000000a0  39 64 39 38 65 39 37 30  63 31 5c 22 7d 22 3a 7b  |9d98e970c1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-whmm8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-whmm8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-238-69.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967552,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:52:32.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4945" for this suite. @ 05/10/24 19:52:32.508
  << Timeline
------------------------------
SS
------------------------------
• [2.230 seconds]
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:227

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:32.017
  May 10 19:52:32.017: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 19:52:32.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:32.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:32.064
  STEP: Creating Pod @ 05/10/24 19:52:32.068
  STEP: Reading file content from the nginx-container @ 05/10/24 19:52:34.132
  May 10 19:52:34.132: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-1035 PodName:pod-sharedvolume-36c8e9ce-2ff8-4e82-9da9-26a099e18317 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:52:34.132: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  May 10 19:52:34.133: INFO: ExecWithOptions: Clientset creation
  May 10 19:52:34.133: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/emptydir-1035/pods/pod-sharedvolume-36c8e9ce-2ff8-4e82-9da9-26a099e18317/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  May 10 19:52:34.231: INFO: Exec stderr: ""
  May 10 19:52:34.231: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1035" for this suite. @ 05/10/24 19:52:34.24
  << Timeline
------------------------------
• [2.372 seconds]
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:32.552
  May 10 19:52:32.552: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename deployment @ 05/10/24 19:52:32.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:32.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:32.605
  May 10 19:52:32.610: INFO: Creating deployment "test-recreate-deployment"
  May 10 19:52:32.630: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  May 10 19:52:32.665: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  May 10 19:52:34.676: INFO: Waiting deployment "test-recreate-deployment" to complete
  May 10 19:52:34.681: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  May 10 19:52:34.695: INFO: Updating deployment test-recreate-deployment
  May 10 19:52:34.695: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  May 10 19:52:34.854: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1492",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ec3c385a-5017-447e-85fd-fc8bab46293c",
      ResourceVersion: (string) (len=5) "25240",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967552,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967554,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967554,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967554,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967554,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967554,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967552,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 10 19:52:34.877: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1492",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9effd5fa-e10c-4203-a1de-adbea456d359",
      ResourceVersion: (string) (len=5) "25239",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967554,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "ec3c385a-5017-447e-85fd-fc8bab46293c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967554,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 63 33 63 33 38  35 61 2d 35 30 31 37 2d  |\"ec3c385a-5017-|
              00000120  34 34 37 65 2d 38 35 66  64 2d 66 63 38 62 61 62  |447e-85fd-fc8bab|
              00000130  34 36 32 39 33 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |46293c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967554,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 10 19:52:34.877: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  May 10 19:52:34.877: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-5cf87b5b86",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1492",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a9a3a31c-e27e-46d7-8efb-391b42223be1",
      ResourceVersion: (string) (len=5) "25228",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967552,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "ec3c385a-5017-447e-85fd-fc8bab46293c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967554,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 63 33 63 33 38  35 61 2d 35 30 31 37 2d  |\"ec3c385a-5017-|
              00000120  34 34 37 65 2d 38 35 66  64 2d 66 63 38 62 61 62  |447e-85fd-fc8bab|
              00000130  34 36 32 39 33 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |46293c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967554,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 10 19:52:34.888: INFO: Pod "test-recreate-deployment-76fb77d45-ddf2n" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-ddf2n",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-1492",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4b3b2dd4-1eb8-4eee-8f6d-2a5c861b02b2",
      ResourceVersion: (string) (len=5) "25238",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967554,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "9effd5fa-e10c-4203-a1de-adbea456d359",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967554,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 65  66 66 64 35 66 61 2d 65  |d\":\"9effd5fa-e|
              00000090  31 30 63 2d 34 32 30 33  2d 61 31 64 65 2d 61 64  |10c-4203-a1de-ad|
              000000a0  62 65 61 34 35 36 64 33  35 39 5c 22 7d 22 3a 7b  |bea456d359\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967554,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rdl6g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rdl6g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-238-87.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967554,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967554,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967554,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967554,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.238.87",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967554,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:52:34.888: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1492" for this suite. @ 05/10/24 19:52:34.905
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.204 seconds]
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:34.941
  May 10 19:52:34.941: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename pods @ 05/10/24 19:52:34.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:34.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:34.998
  STEP: creating the pod @ 05/10/24 19:52:35.007
  STEP: submitting the pod to kubernetes @ 05/10/24 19:52:35.007
  STEP: verifying QOS class is set on the pod @ 05/10/24 19:52:35.037
  May 10 19:52:35.056: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3241" for this suite. @ 05/10/24 19:52:35.079
  << Timeline
------------------------------
• [4.241 seconds]
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:91

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:35.146
  May 10 19:52:35.146: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 19:52:35.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:35.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:35.224
  STEP: Creating a pod to test downward api env vars @ 05/10/24 19:52:35.229
  STEP: Saw pod success @ 05/10/24 19:52:39.304
  May 10 19:52:39.310: INFO: Trying to get logs from node ip-172-31-238-69.eu-west-3.compute.internal pod downward-api-ea64072a-9dbf-4838-a276-c988ffdc0407 container dapi-container: <nil>
  STEP: delete the pod @ 05/10/24 19:52:39.321
  May 10 19:52:39.358: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7011" for this suite. @ 05/10/24 19:52:39.369
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [8.159 seconds]
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:152

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:34.249
  May 10 19:52:34.249: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/10/24 19:52:34.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:34.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:34.279
  STEP: create the container to handle the HTTPGet hook request. @ 05/10/24 19:52:34.292
  STEP: create the pod with lifecycle hook @ 05/10/24 19:52:36.322
  STEP: delete the pod with lifecycle hook @ 05/10/24 19:52:38.346
  STEP: check prestop hook @ 05/10/24 19:52:42.383
  May 10 19:52:42.391: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1197" for this suite. @ 05/10/24 19:52:42.397
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.157 seconds]
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:250

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:39.419
  May 10 19:52:39.419: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 19:52:39.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:39.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:39.471
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 19:52:39.477
  STEP: Saw pod success @ 05/10/24 19:52:43.517
  May 10 19:52:43.523: INFO: Trying to get logs from node ip-172-31-238-69.eu-west-3.compute.internal pod downwardapi-volume-9761456b-a911-455e-b3da-95909d81d80c container client-container: <nil>
  STEP: delete the pod @ 05/10/24 19:52:43.532
  May 10 19:52:43.556: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7186" for this suite. @ 05/10/24 19:52:43.564
  << Timeline
------------------------------
SSS
------------------------------
• [14.549 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:30.854
  May 10 19:52:30.854: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename webhook @ 05/10/24 19:52:30.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:30.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:30.879
  STEP: Setting up server cert @ 05/10/24 19:52:30.951
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 19:52:32.009
  STEP: Deploying the webhook pod @ 05/10/24 19:52:32.016
  STEP: Wait for the deployment to be ready @ 05/10/24 19:52:32.043
  May 10 19:52:32.077: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 19:52:34.09
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 19:52:34.105
  May 10 19:52:35.106: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/10/24 19:52:35.119
  STEP: create a pod that should be denied by the webhook @ 05/10/24 19:52:35.173
  STEP: create a pod that causes the webhook to hang @ 05/10/24 19:52:35.192
  STEP: create a configmap that should be denied by the webhook @ 05/10/24 19:52:45.2
  STEP: create a configmap that should be admitted by the webhook @ 05/10/24 19:52:45.209
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/10/24 19:52:45.218
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/10/24 19:52:45.226
  STEP: create a namespace that bypass the webhook @ 05/10/24 19:52:45.233
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 05/10/24 19:52:45.254
  May 10 19:52:45.266: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5507" for this suite. @ 05/10/24 19:52:45.361
  STEP: Destroying namespace "webhook-markers-5207" for this suite. @ 05/10/24 19:52:45.371
  STEP: Destroying namespace "exempted-namespace-9927" for this suite. @ 05/10/24 19:52:45.389
  << Timeline
------------------------------
SSS
------------------------------
• [0.099 seconds]
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:504

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:45.408
  May 10 19:52:45.408: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename configmap @ 05/10/24 19:52:45.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:45.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:45.434
  May 10 19:52:45.488: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9511" for this suite. @ 05/10/24 19:52:45.494
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [2.186 seconds]
[sig-network] DNS should provide DNS for pods for Hostname [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:45.513
  May 10 19:52:45.513: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename dns @ 05/10/24 19:52:45.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:45.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:45.542
  STEP: Creating a test headless service @ 05/10/24 19:52:45.544
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-3490.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-3490.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 05/10/24 19:52:45.552
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-3490.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-3490.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 05/10/24 19:52:45.552
  STEP: creating a pod to probe DNS @ 05/10/24 19:52:45.552
  STEP: submitting the pod to kubernetes @ 05/10/24 19:52:45.552
  STEP: retrieving the pod @ 05/10/24 19:52:47.597
  STEP: looking for the results for each expected name from probers @ 05/10/24 19:52:47.601
  May 10 19:52:47.631: INFO: DNS probes using dns-3490/dns-test-ed147492-0dea-4928-bf60-8f227474b72e succeeded

  May 10 19:52:47.631: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/10/24 19:52:47.638
  STEP: deleting the test headless service @ 05/10/24 19:52:47.663
  STEP: Destroying namespace "dns-3490" for this suite. @ 05/10/24 19:52:47.686
  << Timeline
------------------------------
SSSS
------------------------------
• [4.216 seconds]
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:85

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:43.583
  May 10 19:52:43.583: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:52:43.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:43.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:43.615
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 19:52:43.619
  STEP: Saw pod success @ 05/10/24 19:52:47.675
  May 10 19:52:47.683: INFO: Trying to get logs from node ip-172-31-238-69.eu-west-3.compute.internal pod downwardapi-volume-5dd86bbf-13bd-4761-927b-3c27f1ab6cad container client-container: <nil>
  STEP: delete the pod @ 05/10/24 19:52:47.696
  May 10 19:52:47.763: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5872" for this suite. @ 05/10/24 19:52:47.778
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.169 seconds]
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:187

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:47.703
  May 10 19:52:47.703: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 19:52:47.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:47.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:47.758
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/10/24 19:52:47.763
  STEP: Saw pod success @ 05/10/24 19:52:51.807
  May 10 19:52:51.811: INFO: Trying to get logs from node ip-172-31-237-27.eu-west-3.compute.internal pod pod-89790929-0a83-4a68-b9c4-1195bb913af0 container test-container: <nil>
  STEP: delete the pod @ 05/10/24 19:52:51.821
  May 10 19:52:51.856: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9403" for this suite. @ 05/10/24 19:52:51.863
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [4.279 seconds]
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:117

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:47.834
  May 10 19:52:47.834: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 19:52:47.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:47.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:47.896
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/10/24 19:52:47.901
  STEP: Saw pod success @ 05/10/24 19:52:51.967
  May 10 19:52:51.973: INFO: Trying to get logs from node ip-172-31-238-87.eu-west-3.compute.internal pod pod-21502fe0-a2e1-4bf1-8e62-b741aba047e5 container test-container: <nil>
  STEP: delete the pod @ 05/10/24 19:52:51.994
  May 10 19:52:52.083: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8127" for this suite. @ 05/10/24 19:52:52.096
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [9.704 seconds]
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2165

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:42.426
  May 10 19:52:42.426: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename services @ 05/10/24 19:52:42.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:42.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:42.46
  STEP: creating service in namespace services-873 @ 05/10/24 19:52:42.464
  STEP: creating service affinity-clusterip in namespace services-873 @ 05/10/24 19:52:42.464
  STEP: creating replication controller affinity-clusterip in namespace services-873 @ 05/10/24 19:52:42.493
  I0510 19:52:42.512968      22 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-873, replica count: 3
  I0510 19:52:45.564867      22 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 10 19:52:45.587: INFO: Creating new exec pod
  May 10 19:52:48.609: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=services-873 exec execpod-affinity78pph -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  May 10 19:52:48.789: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  May 10 19:52:48.789: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 19:52:48.789: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=services-873 exec execpod-affinity78pph -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.155.43 80'
  May 10 19:52:48.956: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.105.155.43 80\nConnection to 10.105.155.43 80 port [tcp/http] succeeded!\n"
  May 10 19:52:48.956: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 19:52:48.956: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=services-873 exec execpod-affinity78pph -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.105.155.43:80/ ; done'
  May 10 19:52:49.199: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.155.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.155.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.155.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.155.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.155.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.155.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.155.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.155.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.155.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.155.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.155.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.155.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.155.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.155.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.155.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.155.43:80/\n"
  May 10 19:52:49.199: INFO: stdout: "\naffinity-clusterip-vkr84\naffinity-clusterip-vkr84\naffinity-clusterip-vkr84\naffinity-clusterip-vkr84\naffinity-clusterip-vkr84\naffinity-clusterip-vkr84\naffinity-clusterip-vkr84\naffinity-clusterip-vkr84\naffinity-clusterip-vkr84\naffinity-clusterip-vkr84\naffinity-clusterip-vkr84\naffinity-clusterip-vkr84\naffinity-clusterip-vkr84\naffinity-clusterip-vkr84\naffinity-clusterip-vkr84\naffinity-clusterip-vkr84"
  May 10 19:52:49.199: INFO: Received response from host: affinity-clusterip-vkr84
  May 10 19:52:49.199: INFO: Received response from host: affinity-clusterip-vkr84
  May 10 19:52:49.199: INFO: Received response from host: affinity-clusterip-vkr84
  May 10 19:52:49.199: INFO: Received response from host: affinity-clusterip-vkr84
  May 10 19:52:49.199: INFO: Received response from host: affinity-clusterip-vkr84
  May 10 19:52:49.199: INFO: Received response from host: affinity-clusterip-vkr84
  May 10 19:52:49.199: INFO: Received response from host: affinity-clusterip-vkr84
  May 10 19:52:49.199: INFO: Received response from host: affinity-clusterip-vkr84
  May 10 19:52:49.199: INFO: Received response from host: affinity-clusterip-vkr84
  May 10 19:52:49.199: INFO: Received response from host: affinity-clusterip-vkr84
  May 10 19:52:49.199: INFO: Received response from host: affinity-clusterip-vkr84
  May 10 19:52:49.199: INFO: Received response from host: affinity-clusterip-vkr84
  May 10 19:52:49.199: INFO: Received response from host: affinity-clusterip-vkr84
  May 10 19:52:49.199: INFO: Received response from host: affinity-clusterip-vkr84
  May 10 19:52:49.199: INFO: Received response from host: affinity-clusterip-vkr84
  May 10 19:52:49.199: INFO: Received response from host: affinity-clusterip-vkr84
  May 10 19:52:49.199: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May 10 19:52:49.208: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-873, will wait for the garbage collector to delete the pods @ 05/10/24 19:52:49.221
  May 10 19:52:49.284: INFO: Deleting ReplicationController affinity-clusterip took: 8.282577ms
  May 10 19:52:49.385: INFO: Terminating ReplicationController affinity-clusterip pods took: 101.061747ms
  STEP: Destroying namespace "services-873" for this suite. @ 05/10/24 19:52:52.121
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [3.971 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:51.88
  May 10 19:52:51.880: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename webhook @ 05/10/24 19:52:51.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:51.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:51.915
  STEP: Setting up server cert @ 05/10/24 19:52:51.943
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 19:52:52.442
  STEP: Deploying the webhook pod @ 05/10/24 19:52:52.449
  STEP: Wait for the deployment to be ready @ 05/10/24 19:52:52.462
  May 10 19:52:52.470: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/10/24 19:52:54.484
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 19:52:54.499
  May 10 19:52:55.500: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 05/10/24 19:52:55.51
  May 10 19:52:55.532: INFO: Waiting for webhook configuration to be ready...
  STEP: create a configmap that should be updated by the webhook @ 05/10/24 19:52:55.667
  May 10 19:52:55.689: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3698" for this suite. @ 05/10/24 19:52:55.815
  STEP: Destroying namespace "webhook-markers-4781" for this suite. @ 05/10/24 19:52:55.837
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.112 seconds]
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:423

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:52.137
  May 10 19:52:52.137: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename configmap @ 05/10/24 19:52:52.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:52.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:52.161
  STEP: Creating configMap with name configmap-test-volume-a3083b30-adfd-4f4d-bbb9-a263f14fcb0a @ 05/10/24 19:52:52.164
  STEP: Creating a pod to test consume configMaps @ 05/10/24 19:52:52.172
  STEP: Saw pod success @ 05/10/24 19:52:56.196
  May 10 19:52:56.201: INFO: Trying to get logs from node ip-172-31-238-69.eu-west-3.compute.internal pod pod-configmaps-6b63c0e8-eaf8-4767-b8bf-5a8735ce2183 container configmap-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 19:52:56.209
  May 10 19:52:56.232: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8629" for this suite. @ 05/10/24 19:52:56.239
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [6.330 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:153

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:52.181
  May 10 19:52:52.181: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/10/24 19:52:52.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:52.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:52.219
  May 10 19:52:52.223: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/10/24 19:52:53.824
  May 10 19:52:53.824: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=crd-publish-openapi-9754 --namespace=crd-publish-openapi-9754 create -f -'
  May 10 19:52:54.346: INFO: stderr: ""
  May 10 19:52:54.346: INFO: stdout: "e2e-test-crd-publish-openapi-2641-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  May 10 19:52:54.346: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=crd-publish-openapi-9754 --namespace=crd-publish-openapi-9754 delete e2e-test-crd-publish-openapi-2641-crds test-cr'
  May 10 19:52:54.416: INFO: stderr: ""
  May 10 19:52:54.416: INFO: stdout: "e2e-test-crd-publish-openapi-2641-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  May 10 19:52:54.416: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=crd-publish-openapi-9754 --namespace=crd-publish-openapi-9754 apply -f -'
  May 10 19:52:55.373: INFO: stderr: ""
  May 10 19:52:55.373: INFO: stdout: "e2e-test-crd-publish-openapi-2641-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  May 10 19:52:55.373: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=crd-publish-openapi-9754 --namespace=crd-publish-openapi-9754 delete e2e-test-crd-publish-openapi-2641-crds test-cr'
  May 10 19:52:55.467: INFO: stderr: ""
  May 10 19:52:55.467: INFO: stdout: "e2e-test-crd-publish-openapi-2641-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 05/10/24 19:52:55.467
  May 10 19:52:55.467: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=crd-publish-openapi-9754 explain e2e-test-crd-publish-openapi-2641-crds'
  May 10 19:52:56.241: INFO: stderr: ""
  May 10 19:52:56.241: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-2641-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  May 10 19:52:58.466: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9754" for this suite. @ 05/10/24 19:52:58.492
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.174 seconds]
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:217

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:56.254
  May 10 19:52:56.254: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 19:52:56.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:56.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:56.302
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/10/24 19:52:56.314
  STEP: Saw pod success @ 05/10/24 19:53:00.371
  May 10 19:53:00.375: INFO: Trying to get logs from node ip-172-31-237-5.eu-west-3.compute.internal pod pod-3c2d3518-a6e3-4227-8c61-fa3cc2fc77fe container test-container: <nil>
  STEP: delete the pod @ 05/10/24 19:53:00.384
  May 10 19:53:00.406: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5056" for this suite. @ 05/10/24 19:53:00.413
  << Timeline
------------------------------
S
------------------------------
• [4.218 seconds]
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:58.533
  May 10 19:52:58.533: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:52:58.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:58.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:58.567
  STEP: Creating secret with name projected-secret-test-a29dc8e8-5b02-4064-b567-e73355c8aa4c @ 05/10/24 19:52:58.571
  STEP: Creating a pod to test consume secrets @ 05/10/24 19:52:58.58
  STEP: Saw pod success @ 05/10/24 19:53:02.619
  May 10 19:53:02.625: INFO: Trying to get logs from node ip-172-31-237-27.eu-west-3.compute.internal pod pod-projected-secrets-19f93dc2-05af-42a7-8338-18e876ebc0df container secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 19:53:02.662
  May 10 19:53:02.706: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5828" for this suite. @ 05/10/24 19:53:02.726
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [12.208 seconds]
[sig-network] Services should be able to create a functioning NodePort service [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1280

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:53:02.776
  May 10 19:53:02.776: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename services @ 05/10/24 19:53:02.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:53:02.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:53:02.819
  STEP: creating service nodeport-test with type=NodePort in namespace services-3228 @ 05/10/24 19:53:02.825
  STEP: creating replication controller nodeport-test in namespace services-3228 @ 05/10/24 19:53:02.86
  I0510 19:53:02.905998      21 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-3228, replica count: 2
  I0510 19:53:05.958189      21 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 10 19:53:05.958: INFO: Creating new exec pod
  May 10 19:53:09.000: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=services-3228 exec execpodxnmkb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  May 10 19:53:09.168: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  May 10 19:53:09.168: INFO: stdout: "nodeport-test-7twr7"
  May 10 19:53:09.168: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=services-3228 exec execpodxnmkb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.104.43.106 80'
  May 10 19:53:09.308: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.104.43.106 80\nConnection to 10.104.43.106 80 port [tcp/http] succeeded!\n"
  May 10 19:53:09.308: INFO: stdout: "nodeport-test-7twr7"
  May 10 19:53:09.308: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=services-3228 exec execpodxnmkb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.238.69 31510'
  May 10 19:53:09.452: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.238.69 31510\nConnection to 172.31.238.69 31510 port [tcp/*] succeeded!\n"
  May 10 19:53:09.452: INFO: stdout: ""
  May 10 19:53:10.452: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=services-3228 exec execpodxnmkb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.238.69 31510'
  May 10 19:53:10.627: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.238.69 31510\nConnection to 172.31.238.69 31510 port [tcp/*] succeeded!\n"
  May 10 19:53:10.627: INFO: stdout: ""
  May 10 19:53:11.453: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=services-3228 exec execpodxnmkb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.238.69 31510'
  May 10 19:53:11.641: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.238.69 31510\nConnection to 172.31.238.69 31510 port [tcp/*] succeeded!\n"
  May 10 19:53:11.641: INFO: stdout: ""
  May 10 19:53:12.453: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=services-3228 exec execpodxnmkb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.238.69 31510'
  May 10 19:53:12.615: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.238.69 31510\nConnection to 172.31.238.69 31510 port [tcp/*] succeeded!\n"
  May 10 19:53:12.615: INFO: stdout: "nodeport-test-sxlcp"
  May 10 19:53:12.615: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=services-3228 exec execpodxnmkb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.236.144 31510'
  May 10 19:53:12.780: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.236.144 31510\nConnection to 172.31.236.144 31510 port [tcp/*] succeeded!\n"
  May 10 19:53:12.780: INFO: stdout: ""
  May 10 19:53:13.781: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=services-3228 exec execpodxnmkb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.236.144 31510'
  May 10 19:53:13.934: INFO: stderr: "+ nc -v -t -w 2 172.31.236.144 31510\n+ echo hostName\nConnection to 172.31.236.144 31510 port [tcp/*] succeeded!\n"
  May 10 19:53:13.934: INFO: stdout: ""
  May 10 19:53:14.781: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=services-3228 exec execpodxnmkb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.236.144 31510'
  May 10 19:53:14.948: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.236.144 31510\nConnection to 172.31.236.144 31510 port [tcp/*] succeeded!\n"
  May 10 19:53:14.948: INFO: stdout: "nodeport-test-7twr7"
  May 10 19:53:14.948: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3228" for this suite. @ 05/10/24 19:53:14.968
  << Timeline
------------------------------
SSSSSSSSSSSSSSS
------------------------------
• [4.187 seconds]
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:207

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:53:14.995
  May 10 19:53:14.995: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 19:53:14.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:53:15.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:53:15.037
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/10/24 19:53:15.042
  STEP: Saw pod success @ 05/10/24 19:53:19.084
  May 10 19:53:19.090: INFO: Trying to get logs from node ip-172-31-237-5.eu-west-3.compute.internal pod pod-ba8a36cb-2f2e-4a78-a18f-4f3bd993639e container test-container: <nil>
  STEP: delete the pod @ 05/10/24 19:53:19.114
  May 10 19:53:19.150: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2393" for this suite. @ 05/10/24 19:53:19.16
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.166 seconds]
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:175

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:53:19.198
  May 10 19:53:19.198: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename configmap @ 05/10/24 19:53:19.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:53:19.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:53:19.23
  STEP: Creating configMap with name configmap-test-upd-95fe3f90-ca00-4a72-a756-34596b17bca6 @ 05/10/24 19:53:19.248
  STEP: Creating the pod @ 05/10/24 19:53:19.259
  STEP: Waiting for pod with text data @ 05/10/24 19:53:23.315
  STEP: Waiting for pod with binary data @ 05/10/24 19:53:23.325
  May 10 19:53:23.344: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2629" for this suite. @ 05/10/24 19:53:23.352
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.222 seconds]
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:53:23.382
  May 10 19:53:23.382: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename disruption @ 05/10/24 19:53:23.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:53:23.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:53:23.425
  STEP: creating the pdb @ 05/10/24 19:53:23.429
  STEP: Waiting for the pdb to be processed @ 05/10/24 19:53:23.437
  STEP: updating the pdb @ 05/10/24 19:53:25.486
  STEP: Waiting for the pdb to be processed @ 05/10/24 19:53:25.504
  STEP: patching the pdb @ 05/10/24 19:53:27.531
  STEP: Waiting for the pdb to be processed @ 05/10/24 19:53:27.545
  STEP: Waiting for the pdb to be deleted @ 05/10/24 19:53:27.573
  May 10 19:53:27.583: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6200" for this suite. @ 05/10/24 19:53:27.592
  << Timeline
------------------------------
• [0.089 seconds]
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:53:27.605
  May 10 19:53:27.605: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename tables @ 05/10/24 19:53:27.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:53:27.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:53:27.635
  May 10 19:53:27.642: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-6114" for this suite. @ 05/10/24 19:53:27.65
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
• [10.081 seconds]
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:430

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:53:27.707
  May 10 19:53:27.707: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename job @ 05/10/24 19:53:27.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:53:27.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:53:27.734
  STEP: Creating a job @ 05/10/24 19:53:27.738
  STEP: Ensuring job reaches completions @ 05/10/24 19:53:27.754
  May 10 19:53:37.760: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5747" for this suite. @ 05/10/24 19:53:37.771
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [20.144 seconds]
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:53:37.811
  May 10 19:53:37.811: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename watch @ 05/10/24 19:53:37.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:53:37.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:53:37.843
  STEP: creating a watch on configmaps with label A @ 05/10/24 19:53:37.847
  STEP: creating a watch on configmaps with label B @ 05/10/24 19:53:37.849
  STEP: creating a watch on configmaps with label A or B @ 05/10/24 19:53:37.85
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 05/10/24 19:53:37.852
  May 10 19:53:37.861: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9314  b6edbcc9-093d-44c0-91f8-fd6ae7ddd275 26527 0 2024-05-10 19:53:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-10 19:53:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 19:53:37.861: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9314  b6edbcc9-093d-44c0-91f8-fd6ae7ddd275 26527 0 2024-05-10 19:53:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-10 19:53:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 05/10/24 19:53:37.862
  May 10 19:53:37.874: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9314  b6edbcc9-093d-44c0-91f8-fd6ae7ddd275 26528 0 2024-05-10 19:53:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-10 19:53:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 19:53:37.874: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9314  b6edbcc9-093d-44c0-91f8-fd6ae7ddd275 26528 0 2024-05-10 19:53:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-10 19:53:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 05/10/24 19:53:37.874
  May 10 19:53:37.890: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9314  b6edbcc9-093d-44c0-91f8-fd6ae7ddd275 26529 0 2024-05-10 19:53:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-10 19:53:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 19:53:37.890: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9314  b6edbcc9-093d-44c0-91f8-fd6ae7ddd275 26529 0 2024-05-10 19:53:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-10 19:53:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 05/10/24 19:53:37.89
  May 10 19:53:37.903: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9314  b6edbcc9-093d-44c0-91f8-fd6ae7ddd275 26530 0 2024-05-10 19:53:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-10 19:53:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 19:53:37.903: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9314  b6edbcc9-093d-44c0-91f8-fd6ae7ddd275 26530 0 2024-05-10 19:53:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-10 19:53:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 05/10/24 19:53:37.903
  May 10 19:53:37.910: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9314  7141a622-4acf-4d9f-9138-1d5cd21e85b6 26531 0 2024-05-10 19:53:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-10 19:53:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 19:53:37.910: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9314  7141a622-4acf-4d9f-9138-1d5cd21e85b6 26531 0 2024-05-10 19:53:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-10 19:53:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 05/10/24 19:53:47.911
  May 10 19:53:47.927: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9314  7141a622-4acf-4d9f-9138-1d5cd21e85b6 26616 0 2024-05-10 19:53:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-10 19:53:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 19:53:47.927: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9314  7141a622-4acf-4d9f-9138-1d5cd21e85b6 26616 0 2024-05-10 19:53:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-10 19:53:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 19:53:57.928: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9314" for this suite. @ 05/10/24 19:53:57.938
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [66.164 seconds]
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:161

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:55.875
  May 10 19:52:55.875: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename cronjob @ 05/10/24 19:52:55.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:55.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:55.911
  STEP: Creating a ReplaceConcurrent cronjob @ 05/10/24 19:52:55.915
  STEP: Ensuring a job is scheduled @ 05/10/24 19:52:55.93
  STEP: Ensuring exactly one is scheduled @ 05/10/24 19:53:01.957
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/10/24 19:53:01.97
  STEP: Ensuring the job is replaced with a new one @ 05/10/24 19:53:01.984
  STEP: Removing cronjob @ 05/10/24 19:54:01.989
  May 10 19:54:02.005: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4418" for this suite. @ 05/10/24 19:54:02.016
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.293 seconds]
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:222

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:53:57.964
  May 10 19:53:57.964: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:53:57.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:53:57.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:53:57.994
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 19:53:57.998
  STEP: Saw pod success @ 05/10/24 19:54:02.079
  May 10 19:54:02.090: INFO: Trying to get logs from node ip-172-31-237-27.eu-west-3.compute.internal pod downwardapi-volume-61f13767-2864-4e36-a64d-462218345e8c container client-container: <nil>
  STEP: delete the pod @ 05/10/24 19:54:02.142
  May 10 19:54:02.226: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-66" for this suite. @ 05/10/24 19:54:02.244
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [3.991 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:54:02.076
  May 10 19:54:02.076: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename webhook @ 05/10/24 19:54:02.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:54:02.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:54:02.127
  STEP: Setting up server cert @ 05/10/24 19:54:02.245
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 19:54:02.6
  STEP: Deploying the webhook pod @ 05/10/24 19:54:02.612
  STEP: Wait for the deployment to be ready @ 05/10/24 19:54:02.635
  May 10 19:54:02.651: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 19:54:04.663
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 19:54:04.68
  May 10 19:54:05.681: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/10/24 19:54:05.777
  STEP: Creating a configMap that should be mutated @ 05/10/24 19:54:05.793
  STEP: Deleting the collection of validation webhooks @ 05/10/24 19:54:05.858
  STEP: Creating a configMap that should not be mutated @ 05/10/24 19:54:05.95
  May 10 19:54:05.963: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8470" for this suite. @ 05/10/24 19:54:06.036
  STEP: Destroying namespace "webhook-markers-575" for this suite. @ 05/10/24 19:54:06.054
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [6.954 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:176

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:54:02.271
  May 10 19:54:02.271: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename crd-webhook @ 05/10/24 19:54:02.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:54:02.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:54:02.314
  STEP: Setting up server cert @ 05/10/24 19:54:02.32
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/10/24 19:54:02.603
  STEP: Deploying the custom resource conversion webhook pod @ 05/10/24 19:54:02.677
  STEP: Wait for the deployment to be ready @ 05/10/24 19:54:02.714
  May 10 19:54:02.753: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 19:54:04.785
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 19:54:04.809
  May 10 19:54:05.810: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  May 10 19:54:05.823: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Creating a v1 custom resource @ 05/10/24 19:54:08.479
  STEP: Create a v2 custom resource @ 05/10/24 19:54:08.505
  STEP: List CRs in v1 @ 05/10/24 19:54:08.558
  STEP: List CRs in v2 @ 05/10/24 19:54:08.567
  May 10 19:54:08.576: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-6340" for this suite. @ 05/10/24 19:54:09.208
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [2.280 seconds]
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:54:09.263
  May 10 19:54:09.263: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename pods @ 05/10/24 19:54:09.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:54:09.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:54:09.318
  May 10 19:54:09.323: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: creating the pod @ 05/10/24 19:54:09.323
  STEP: submitting the pod to kubernetes @ 05/10/24 19:54:09.323
  May 10 19:54:11.518: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1060" for this suite. @ 05/10/24 19:54:11.529
  << Timeline
------------------------------
SSSSS
------------------------------
• [0.135 seconds]
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:140

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:54:11.547
  May 10 19:54:11.547: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename secrets @ 05/10/24 19:54:11.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:54:11.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:54:11.599
  STEP: Creating projection with secret that has name secret-emptykey-test-73e3e648-15f0-419a-96e5-136d944ecf32 @ 05/10/24 19:54:11.641
  May 10 19:54:11.644: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1247" for this suite. @ 05/10/24 19:54:11.662
  << Timeline
------------------------------
SSSSSSSSSSSSSSS
------------------------------
• [8.192 seconds]
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:168

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:54:06.114
  May 10 19:54:06.114: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/10/24 19:54:06.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:54:06.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:54:06.149
  STEP: create the container to handle the HTTPGet hook request. @ 05/10/24 19:54:06.158
  STEP: create the pod with lifecycle hook @ 05/10/24 19:54:08.21
  STEP: check poststart hook @ 05/10/24 19:54:10.24
  STEP: delete the pod with lifecycle hook @ 05/10/24 19:54:10.261
  May 10 19:54:14.290: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6231" for this suite. @ 05/10/24 19:54:14.297
  << Timeline
------------------------------
SS
------------------------------
• [2.355 seconds]
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:104

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:54:14.31
  May 10 19:54:14.310: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename endpointslice @ 05/10/24 19:54:14.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:54:14.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:54:14.339
  May 10 19:54:16.585: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9757" for this suite. @ 05/10/24 19:54:16.612
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.344 seconds]
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:194

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:54:16.683
  May 10 19:54:16.683: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 19:54:16.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:54:16.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:54:16.822
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 19:54:16.831
  STEP: Saw pod success @ 05/10/24 19:54:20.975
  May 10 19:54:20.978: INFO: Trying to get logs from node ip-172-31-237-27.eu-west-3.compute.internal pod downwardapi-volume-b5082dca-c6f3-46e1-b857-4bac552afdfb container client-container: <nil>
  STEP: delete the pod @ 05/10/24 19:54:20.988
  May 10 19:54:21.011: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1603" for this suite. @ 05/10/24 19:54:21.018
  << Timeline
------------------------------
SSSSSS
------------------------------
• [10.421 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:391

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:54:11.692
  May 10 19:54:11.692: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/10/24 19:54:11.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:54:11.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:54:11.76
  STEP: set up a multi version CRD @ 05/10/24 19:54:11.773
  May 10 19:54:11.773: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: rename a version @ 05/10/24 19:54:15.963
  STEP: check the new version name is served @ 05/10/24 19:54:15.982
  STEP: check the old version name is removed @ 05/10/24 19:54:17.864
  STEP: check the other version is not changed @ 05/10/24 19:54:18.606
  May 10 19:54:22.079: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4962" for this suite. @ 05/10/24 19:54:22.103
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.159 seconds]
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:54:22.155
  May 10 19:54:22.155: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename secrets @ 05/10/24 19:54:22.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:54:22.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:54:22.183
  May 10 19:54:22.270: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2544" for this suite. @ 05/10/24 19:54:22.295
  << Timeline
------------------------------
SSSSSSSSSSSS
------------------------------
• [2.100 seconds]
[sig-node] Pods should patch a pod status [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:54:21.033
  May 10 19:54:21.033: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename pods @ 05/10/24 19:54:21.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:54:21.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:54:21.057
  STEP: Create a pod @ 05/10/24 19:54:21.059
  STEP: patching /status @ 05/10/24 19:54:23.091
  May 10 19:54:23.110: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  May 10 19:54:23.110: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9506" for this suite. @ 05/10/24 19:54:23.119
  << Timeline
------------------------------
SSSSSSSSSSSSSSS
------------------------------
• [4.237 seconds]
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:54:22.325
  May 10 19:54:22.325: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename containers @ 05/10/24 19:54:22.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:54:22.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:54:22.357
  STEP: Creating a pod to test override all @ 05/10/24 19:54:22.362
  STEP: Saw pod success @ 05/10/24 19:54:26.405
  May 10 19:54:26.413: INFO: Trying to get logs from node ip-172-31-236-46.eu-west-3.compute.internal pod client-containers-7c521744-4540-4319-97d4-6374d2a566ad container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 19:54:26.434
  May 10 19:54:26.497: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3470" for this suite. @ 05/10/24 19:54:26.519
  << Timeline
------------------------------
SSSSS
------------------------------
• [15.999 seconds]
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:54:23.145
  May 10 19:54:23.145: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename daemonsets @ 05/10/24 19:54:23.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:54:23.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:54:23.175
  May 10 19:54:23.219: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/10/24 19:54:23.246
  May 10 19:54:23.254: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:23.254: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:23.254: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:23.260: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 19:54:23.260: INFO: Node ip-172-31-236-144.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  May 10 19:54:24.273: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:24.273: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:24.273: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:24.278: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  May 10 19:54:24.278: INFO: Node ip-172-31-236-144.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  May 10 19:54:25.268: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:25.268: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:25.268: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:25.274: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 6
  May 10 19:54:25.274: INFO: Number of running nodes: 6, number of available pods: 6 in daemonset daemon-set
  STEP: Update daemon pods image. @ 05/10/24 19:54:25.292
  STEP: Check that daemon pods images are updated. @ 05/10/24 19:54:25.309
  May 10 19:54:25.315: INFO: Wrong image for pod: daemon-set-4xjnd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:25.315: INFO: Wrong image for pod: daemon-set-92dkr. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:25.315: INFO: Wrong image for pod: daemon-set-hxm57. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:25.315: INFO: Wrong image for pod: daemon-set-r7xpc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:25.315: INFO: Wrong image for pod: daemon-set-wnk5s. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:25.315: INFO: Wrong image for pod: daemon-set-znvsx. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:25.334: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:25.334: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:25.334: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:26.362: INFO: Wrong image for pod: daemon-set-92dkr. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:26.362: INFO: Wrong image for pod: daemon-set-hxm57. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:26.362: INFO: Wrong image for pod: daemon-set-r7xpc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:26.362: INFO: Wrong image for pod: daemon-set-wnk5s. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:26.362: INFO: Wrong image for pod: daemon-set-znvsx. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:26.374: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:26.374: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:26.374: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:27.346: INFO: Wrong image for pod: daemon-set-92dkr. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:27.346: INFO: Wrong image for pod: daemon-set-hxm57. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:27.346: INFO: Pod daemon-set-jrpdw is not available
  May 10 19:54:27.346: INFO: Wrong image for pod: daemon-set-r7xpc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:27.346: INFO: Wrong image for pod: daemon-set-wnk5s. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:27.346: INFO: Wrong image for pod: daemon-set-znvsx. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:27.363: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:27.363: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:27.363: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:28.341: INFO: Wrong image for pod: daemon-set-hxm57. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:28.341: INFO: Wrong image for pod: daemon-set-r7xpc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:28.341: INFO: Wrong image for pod: daemon-set-wnk5s. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:28.341: INFO: Wrong image for pod: daemon-set-znvsx. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:28.349: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:28.350: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:28.350: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:29.341: INFO: Pod daemon-set-8g59q is not available
  May 10 19:54:29.341: INFO: Wrong image for pod: daemon-set-hxm57. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:29.341: INFO: Wrong image for pod: daemon-set-r7xpc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:29.341: INFO: Wrong image for pod: daemon-set-wnk5s. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:29.341: INFO: Wrong image for pod: daemon-set-znvsx. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:29.352: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:29.352: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:29.352: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:30.341: INFO: Wrong image for pod: daemon-set-hxm57. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:30.341: INFO: Wrong image for pod: daemon-set-r7xpc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:30.341: INFO: Pod daemon-set-xhwqp is not available
  May 10 19:54:30.341: INFO: Wrong image for pod: daemon-set-znvsx. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:30.347: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:30.347: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:30.347: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:31.349: INFO: Wrong image for pod: daemon-set-hxm57. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:31.349: INFO: Wrong image for pod: daemon-set-znvsx. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:31.356: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:31.356: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:31.356: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:32.342: INFO: Wrong image for pod: daemon-set-hxm57. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:32.342: INFO: Pod daemon-set-pwbwn is not available
  May 10 19:54:32.342: INFO: Wrong image for pod: daemon-set-znvsx. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:32.348: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:32.348: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:32.348: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:33.343: INFO: Wrong image for pod: daemon-set-znvsx. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:33.352: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:33.352: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:33.352: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:34.343: INFO: Pod daemon-set-djswn is not available
  May 10 19:54:34.343: INFO: Wrong image for pod: daemon-set-znvsx. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 19:54:34.354: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:34.354: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:34.355: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:35.340: INFO: Pod daemon-set-4lv5j is not available
  May 10 19:54:35.346: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:35.346: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:35.346: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 05/10/24 19:54:35.346
  May 10 19:54:35.357: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:35.357: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:35.357: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:35.362: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
  May 10 19:54:35.362: INFO: Node ip-172-31-236-46.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  May 10 19:54:36.378: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:36.378: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:36.378: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:54:36.387: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 6
  May 10 19:54:36.387: INFO: Number of running nodes: 6, number of available pods: 6 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/10/24 19:54:36.408
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5302, will wait for the garbage collector to delete the pods @ 05/10/24 19:54:36.408
  May 10 19:54:36.477: INFO: Deleting DaemonSet.extensions daemon-set took: 15.052103ms
  May 10 19:54:36.578: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.638553ms
  May 10 19:54:39.086: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 19:54:39.086: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May 10 19:54:39.091: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"27610"},"items":null}

  May 10 19:54:39.096: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"27610"},"items":null}

  May 10 19:54:39.130: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5302" for this suite. @ 05/10/24 19:54:39.137
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [2.876 seconds]
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1641

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:54:39.162
  May 10 19:54:39.162: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 19:54:39.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:54:39.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:54:39.195
  STEP: creating Agnhost RC @ 05/10/24 19:54:39.202
  May 10 19:54:39.202: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=kubectl-2940 create -f -'
  May 10 19:54:39.883: INFO: stderr: ""
  May 10 19:54:39.883: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/10/24 19:54:39.883
  May 10 19:54:40.887: INFO: Selector matched 1 pods for map[app:agnhost]
  May 10 19:54:40.887: INFO: Found 0 / 1
  May 10 19:54:41.895: INFO: Selector matched 1 pods for map[app:agnhost]
  May 10 19:54:41.895: INFO: Found 1 / 1
  May 10 19:54:41.895: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 05/10/24 19:54:41.895
  May 10 19:54:41.903: INFO: Selector matched 1 pods for map[app:agnhost]
  May 10 19:54:41.903: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  May 10 19:54:41.903: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=kubectl-2940 patch pod agnhost-primary-qt8bh -p {"metadata":{"annotations":{"x":"y"}}}'
  May 10 19:54:41.986: INFO: stderr: ""
  May 10 19:54:41.986: INFO: stdout: "pod/agnhost-primary-qt8bh patched\n"
  STEP: checking annotations @ 05/10/24 19:54:41.986
  May 10 19:54:41.998: INFO: Selector matched 1 pods for map[app:agnhost]
  May 10 19:54:41.998: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  May 10 19:54:41.999: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2940" for this suite. @ 05/10/24 19:54:42.012
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [6.158 seconds]
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:213

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:54:42.045
  May 10 19:54:42.045: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/10/24 19:54:42.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:54:42.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:54:42.074
  STEP: create the container to handle the HTTPGet hook request. @ 05/10/24 19:54:42.09
  STEP: create the pod with lifecycle hook @ 05/10/24 19:54:44.118
  STEP: delete the pod with lifecycle hook @ 05/10/24 19:54:46.143
  STEP: check prestop hook @ 05/10/24 19:54:48.161
  May 10 19:54:48.178: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6190" for this suite. @ 05/10/24 19:54:48.195
  << Timeline
------------------------------
SS
------------------------------
• [11.146 seconds]
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:451

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:54:48.206
  May 10 19:54:48.206: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 19:54:48.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:54:48.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:54:48.247
  STEP: Counting existing ResourceQuota @ 05/10/24 19:54:48.25
  STEP: Creating a ResourceQuota @ 05/10/24 19:54:53.254
  STEP: Ensuring resource quota status is calculated @ 05/10/24 19:54:53.273
  STEP: Creating a ReplicaSet @ 05/10/24 19:54:55.281
  STEP: Ensuring resource quota status captures replicaset creation @ 05/10/24 19:54:55.298
  STEP: Deleting a ReplicaSet @ 05/10/24 19:54:57.309
  STEP: Ensuring resource quota status released usage @ 05/10/24 19:54:57.319
  May 10 19:54:59.323: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1721" for this suite. @ 05/10/24 19:54:59.33
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
• [120.174 seconds]
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:53:00.431
  May 10 19:53:00.431: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename cronjob @ 05/10/24 19:53:00.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:53:00.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:53:00.516
  STEP: Creating a cronjob @ 05/10/24 19:53:00.52
  STEP: Ensuring more than one job is running at a time @ 05/10/24 19:53:00.529
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 05/10/24 19:55:00.534
  STEP: Removing cronjob @ 05/10/24 19:55:00.549
  May 10 19:55:00.564: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-652" for this suite. @ 05/10/24 19:55:00.575
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [4.693 seconds]
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:163

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:54:59.366
  May 10 19:54:59.366: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 19:54:59.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:54:59.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:54:59.39
  STEP: Creating the pod @ 05/10/24 19:54:59.392
  May 10 19:55:02.005: INFO: Successfully updated pod "annotationupdatee14469f9-80c9-4007-a86b-3495adbdbd83"
  May 10 19:55:04.039: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2286" for this suite. @ 05/10/24 19:55:04.051
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [7.130 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:00.615
  May 10 19:55:00.615: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename webhook @ 05/10/24 19:55:00.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:00.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:00.709
  STEP: Setting up server cert @ 05/10/24 19:55:00.771
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 19:55:01.308
  STEP: Deploying the webhook pod @ 05/10/24 19:55:01.321
  STEP: Wait for the deployment to be ready @ 05/10/24 19:55:01.338
  May 10 19:55:01.356: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 19:55:03.368
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 19:55:03.388
  May 10 19:55:04.389: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  May 10 19:55:04.398: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8542-crds.webhook.example.com via the AdmissionRegistration API @ 05/10/24 19:55:04.922
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/10/24 19:55:04.971
  May 10 19:55:07.035: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8740" for this suite. @ 05/10/24 19:55:07.723
  STEP: Destroying namespace "webhook-markers-979" for this suite. @ 05/10/24 19:55:07.733
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [4.145 seconds]
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:69

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:07.754
  May 10 19:55:07.754: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 19:55:07.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:07.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:07.78
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 19:55:07.783
  STEP: Saw pod success @ 05/10/24 19:55:11.819
  May 10 19:55:11.823: INFO: Trying to get logs from node ip-172-31-238-69.eu-west-3.compute.internal pod downwardapi-volume-789f3d2e-f459-409f-b7a7-dfe679070f8d container client-container: <nil>
  STEP: delete the pod @ 05/10/24 19:55:11.844
  May 10 19:55:11.882: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5505" for this suite. @ 05/10/24 19:55:11.89
  << Timeline
------------------------------
SSSSSSSSSSSSSS
------------------------------
• [4.129 seconds]
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:77

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:11.91
  May 10 19:55:11.910: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename sysctl @ 05/10/24 19:55:11.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:11.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:11.933
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 05/10/24 19:55:11.937
  STEP: Watching for error events or started pod @ 05/10/24 19:55:11.945
  STEP: Waiting for pod completion @ 05/10/24 19:55:13.975
  STEP: Checking that the pod succeeded @ 05/10/24 19:55:16.003
  STEP: Getting logs from the pod @ 05/10/24 19:55:16.003
  STEP: Checking that the sysctl is actually updated @ 05/10/24 19:55:16.013
  May 10 19:55:16.013: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-6204" for this suite. @ 05/10/24 19:55:16.03
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [6.247 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:16.055
  May 10 19:55:16.055: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename webhook @ 05/10/24 19:55:16.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:16.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:16.083
  STEP: Setting up server cert @ 05/10/24 19:55:16.144
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 19:55:16.8
  STEP: Deploying the webhook pod @ 05/10/24 19:55:16.814
  STEP: Wait for the deployment to be ready @ 05/10/24 19:55:16.849
  May 10 19:55:16.886: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 19:55:18.915
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 19:55:18.971
  May 10 19:55:19.971: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/10/24 19:55:19.991
  STEP: create a pod @ 05/10/24 19:55:20.045
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 05/10/24 19:55:22.073
  May 10 19:55:22.073: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=webhook-5225 attach --namespace=webhook-5225 to-be-attached-pod -i -c=container1'
  May 10 19:55:22.166: INFO: rc: 1
  May 10 19:55:22.166: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5225" for this suite. @ 05/10/24 19:55:22.277
  STEP: Destroying namespace "webhook-markers-8608" for this suite. @ 05/10/24 19:55:22.292
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [2.125 seconds]
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:22.322
  May 10 19:55:22.322: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename pods @ 05/10/24 19:55:22.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:22.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:22.356
  May 10 19:55:22.359: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: creating the pod @ 05/10/24 19:55:22.359
  STEP: submitting the pod to kubernetes @ 05/10/24 19:55:22.359
  May 10 19:55:24.431: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7098" for this suite. @ 05/10/24 19:55:24.439
  << Timeline
------------------------------
SSSSSSSSSSSSSS
------------------------------
• [3.063 seconds]
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:112

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:24.459
  May 10 19:55:24.459: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename replication-controller @ 05/10/24 19:55:24.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:24.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:24.484
  STEP: creating a ReplicationController @ 05/10/24 19:55:24.49
  STEP: waiting for RC to be added @ 05/10/24 19:55:24.496
  STEP: waiting for available Replicas @ 05/10/24 19:55:24.496
  STEP: patching ReplicationController @ 05/10/24 19:55:26.119
  STEP: waiting for RC to be modified @ 05/10/24 19:55:26.132
  STEP: patching ReplicationController status @ 05/10/24 19:55:26.132
  STEP: waiting for RC to be modified @ 05/10/24 19:55:26.14
  STEP: waiting for available Replicas @ 05/10/24 19:55:26.14
  STEP: fetching ReplicationController status @ 05/10/24 19:55:26.148
  STEP: patching ReplicationController scale @ 05/10/24 19:55:26.162
  STEP: waiting for RC to be modified @ 05/10/24 19:55:26.199
  STEP: waiting for ReplicationController's scale to be the max amount @ 05/10/24 19:55:26.199
  STEP: fetching ReplicationController; ensuring that it's patched @ 05/10/24 19:55:27.334
  STEP: updating ReplicationController status @ 05/10/24 19:55:27.345
  STEP: waiting for RC to be modified @ 05/10/24 19:55:27.365
  STEP: listing all ReplicationControllers @ 05/10/24 19:55:27.365
  STEP: checking that ReplicationController has expected values @ 05/10/24 19:55:27.389
  STEP: deleting ReplicationControllers by collection @ 05/10/24 19:55:27.389
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 05/10/24 19:55:27.407
  E0510 19:55:27.503352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:55:27.503: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1746" for this suite. @ 05/10/24 19:55:27.513
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [24.313 seconds]
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:04.116
  May 10 19:55:04.116: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename subpath @ 05/10/24 19:55:04.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:04.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:04.17
  STEP: Setting up data @ 05/10/24 19:55:04.184
  STEP: Creating pod pod-subpath-test-downwardapi-2x9n @ 05/10/24 19:55:04.196
  STEP: Creating a pod to test atomic-volume-subpath @ 05/10/24 19:55:04.196
  STEP: Saw pod success @ 05/10/24 19:55:28.357
  May 10 19:55:28.361: INFO: Trying to get logs from node ip-172-31-236-46.eu-west-3.compute.internal pod pod-subpath-test-downwardapi-2x9n container test-container-subpath-downwardapi-2x9n: <nil>
  STEP: delete the pod @ 05/10/24 19:55:28.374
  STEP: Deleting pod pod-subpath-test-downwardapi-2x9n @ 05/10/24 19:55:28.408
  May 10 19:55:28.408: INFO: Deleting pod "pod-subpath-test-downwardapi-2x9n" in namespace "subpath-7373"
  May 10 19:55:28.415: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7373" for this suite. @ 05/10/24 19:55:28.422
  << Timeline
------------------------------
SSSSSSSSS
------------------------------
• [61.874 seconds]
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:750

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:54:26.566
  May 10 19:54:26.566: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename statefulset @ 05/10/24 19:54:26.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:54:26.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:54:26.604
  STEP: Creating service test in namespace statefulset-5848 @ 05/10/24 19:54:26.611
  STEP: Creating stateful set ss in namespace statefulset-5848 @ 05/10/24 19:54:26.621
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-5848 @ 05/10/24 19:54:26.634
  May 10 19:54:26.644: INFO: Found 0 stateful pods, waiting for 1
  May 10 19:54:36.653: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 05/10/24 19:54:36.653
  May 10 19:54:36.675: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=statefulset-5848 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 10 19:54:36.866: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 10 19:54:36.866: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 10 19:54:36.866: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 10 19:54:36.889: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  May 10 19:54:46.897: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  May 10 19:54:46.897: INFO: Waiting for statefulset status.readyReplicas updated to 0
  May 10 19:54:46.939: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999723s
  May 10 19:54:47.949: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.97678057s
  May 10 19:54:48.956: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.968984028s
  May 10 19:54:49.964: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.961094144s
  May 10 19:54:50.971: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.954067391s
  May 10 19:54:51.981: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.946726027s
  May 10 19:54:52.988: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.936341976s
  May 10 19:54:53.996: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.928732167s
  May 10 19:54:55.007: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.921499019s
  May 10 19:54:56.017: INFO: Verifying statefulset ss doesn't scale past 3 for another 909.993712ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-5848 @ 05/10/24 19:54:57.018
  May 10 19:54:57.026: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=statefulset-5848 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 10 19:54:57.170: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 10 19:54:57.170: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 10 19:54:57.170: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 10 19:54:57.170: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=statefulset-5848 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 10 19:54:57.394: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  May 10 19:54:57.394: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 10 19:54:57.394: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 10 19:54:57.394: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=statefulset-5848 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 10 19:54:57.526: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  May 10 19:54:57.526: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 10 19:54:57.526: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 10 19:54:57.533: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  May 10 19:55:07.546: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  May 10 19:55:07.546: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  May 10 19:55:07.546: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 05/10/24 19:55:07.546
  May 10 19:55:07.559: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=statefulset-5848 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 10 19:55:07.731: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 10 19:55:07.731: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 10 19:55:07.731: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 10 19:55:07.732: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=statefulset-5848 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 10 19:55:07.936: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 10 19:55:07.936: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 10 19:55:07.936: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 10 19:55:07.936: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=statefulset-5848 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 10 19:55:08.075: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 10 19:55:08.075: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 10 19:55:08.075: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 10 19:55:08.075: INFO: Waiting for statefulset status.readyReplicas updated to 0
  May 10 19:55:08.082: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  May 10 19:55:18.113: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  May 10 19:55:18.113: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  May 10 19:55:18.113: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  May 10 19:55:18.152: INFO: POD   NODE                                         PHASE    GRACE  CONDITIONS
  May 10 19:55:18.152: INFO: ss-0  ip-172-31-238-69.eu-west-3.compute.internal  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:54:26 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:55:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:55:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:54:26 +0000 UTC  }]
  May 10 19:55:18.152: INFO: ss-1  ip-172-31-237-27.eu-west-3.compute.internal  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:54:46 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:55:08 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:55:08 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:54:46 +0000 UTC  }]
  May 10 19:55:18.152: INFO: ss-2  ip-172-31-236-46.eu-west-3.compute.internal  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:54:47 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:55:08 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:55:08 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:54:47 +0000 UTC  }]
  May 10 19:55:18.152: INFO: 
  May 10 19:55:18.152: INFO: StatefulSet ss has not reached scale 0, at 3
  May 10 19:55:19.160: INFO: POD   NODE                                         PHASE      GRACE  CONDITIONS
  May 10 19:55:19.160: INFO: ss-1  ip-172-31-237-27.eu-west-3.compute.internal  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:54:46 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:55:08 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:55:08 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:54:46 +0000 UTC  }]
  May 10 19:55:19.160: INFO: 
  May 10 19:55:19.160: INFO: StatefulSet ss has not reached scale 0, at 1
  May 10 19:55:20.171: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.973181413s
  May 10 19:55:21.183: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.961450654s
  May 10 19:55:22.205: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.949015514s
  May 10 19:55:23.218: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.928384631s
  May 10 19:55:24.225: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.915679073s
  May 10 19:55:25.236: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.908027183s
  May 10 19:55:26.255: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.897488475s
  May 10 19:55:27.262: INFO: Verifying statefulset ss doesn't scale past 0 for another 878.28621ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-5848 @ 05/10/24 19:55:28.263
  May 10 19:55:28.279: INFO: Scaling statefulset ss to 0
  May 10 19:55:28.300: INFO: Waiting for statefulset status.replicas updated to 0
  May 10 19:55:28.312: INFO: Deleting all statefulset in ns statefulset-5848
  May 10 19:55:28.323: INFO: Scaling statefulset ss to 0
  May 10 19:55:28.365: INFO: Waiting for statefulset status.replicas updated to 0
  May 10 19:55:28.378: INFO: Deleting statefulset ss
  May 10 19:55:28.412: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5848" for this suite. @ 05/10/24 19:55:28.428
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.238 seconds]
[sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:266

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:28.465
  May 10 19:55:28.465: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename ingressclass @ 05/10/24 19:55:28.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:28.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:28.517
  STEP: getting /apis @ 05/10/24 19:55:28.522
  STEP: getting /apis/networking.k8s.io @ 05/10/24 19:55:28.53
  STEP: getting /apis/networking.k8s.iov1 @ 05/10/24 19:55:28.532
  STEP: creating @ 05/10/24 19:55:28.533
  STEP: getting @ 05/10/24 19:55:28.56
  STEP: listing @ 05/10/24 19:55:28.566
  STEP: watching @ 05/10/24 19:55:28.574
  May 10 19:55:28.574: INFO: starting watch
  STEP: patching @ 05/10/24 19:55:28.576
  STEP: updating @ 05/10/24 19:55:28.585
  May 10 19:55:28.593: INFO: waiting for watch events with expected annotations
  May 10 19:55:28.594: INFO: saw patched and updated annotations
  STEP: deleting @ 05/10/24 19:55:28.594
  STEP: deleting a collection @ 05/10/24 19:55:28.62
  May 10 19:55:28.652: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-635" for this suite. @ 05/10/24 19:55:28.685
  << Timeline
------------------------------
SSSSSSSSS
------------------------------
• [0.860 seconds]
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:125

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:28.712
  May 10 19:55:28.712: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename discovery @ 05/10/24 19:55:28.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:28.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:28.771
  STEP: Setting up server cert @ 05/10/24 19:55:28.778
  May 10 19:55:29.445: INFO: Checking APIGroup: apiregistration.k8s.io
  May 10 19:55:29.448: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  May 10 19:55:29.448: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  May 10 19:55:29.448: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  May 10 19:55:29.448: INFO: Checking APIGroup: apps
  May 10 19:55:29.450: INFO: PreferredVersion.GroupVersion: apps/v1
  May 10 19:55:29.450: INFO: Versions found [{apps/v1 v1}]
  May 10 19:55:29.450: INFO: apps/v1 matches apps/v1
  May 10 19:55:29.450: INFO: Checking APIGroup: events.k8s.io
  May 10 19:55:29.452: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  May 10 19:55:29.452: INFO: Versions found [{events.k8s.io/v1 v1}]
  May 10 19:55:29.452: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  May 10 19:55:29.452: INFO: Checking APIGroup: authentication.k8s.io
  May 10 19:55:29.454: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  May 10 19:55:29.454: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  May 10 19:55:29.454: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  May 10 19:55:29.454: INFO: Checking APIGroup: authorization.k8s.io
  May 10 19:55:29.456: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  May 10 19:55:29.456: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  May 10 19:55:29.456: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  May 10 19:55:29.456: INFO: Checking APIGroup: autoscaling
  May 10 19:55:29.458: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  May 10 19:55:29.458: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  May 10 19:55:29.458: INFO: autoscaling/v2 matches autoscaling/v2
  May 10 19:55:29.458: INFO: Checking APIGroup: batch
  May 10 19:55:29.461: INFO: PreferredVersion.GroupVersion: batch/v1
  May 10 19:55:29.461: INFO: Versions found [{batch/v1 v1}]
  May 10 19:55:29.461: INFO: batch/v1 matches batch/v1
  May 10 19:55:29.461: INFO: Checking APIGroup: certificates.k8s.io
  May 10 19:55:29.464: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  May 10 19:55:29.464: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  May 10 19:55:29.464: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  May 10 19:55:29.464: INFO: Checking APIGroup: networking.k8s.io
  May 10 19:55:29.466: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  May 10 19:55:29.466: INFO: Versions found [{networking.k8s.io/v1 v1}]
  May 10 19:55:29.466: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  May 10 19:55:29.466: INFO: Checking APIGroup: policy
  May 10 19:55:29.468: INFO: PreferredVersion.GroupVersion: policy/v1
  May 10 19:55:29.468: INFO: Versions found [{policy/v1 v1}]
  May 10 19:55:29.468: INFO: policy/v1 matches policy/v1
  May 10 19:55:29.468: INFO: Checking APIGroup: rbac.authorization.k8s.io
  May 10 19:55:29.471: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  May 10 19:55:29.471: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  May 10 19:55:29.471: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  May 10 19:55:29.471: INFO: Checking APIGroup: storage.k8s.io
  May 10 19:55:29.478: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  May 10 19:55:29.478: INFO: Versions found [{storage.k8s.io/v1 v1}]
  May 10 19:55:29.478: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  May 10 19:55:29.478: INFO: Checking APIGroup: admissionregistration.k8s.io
  May 10 19:55:29.489: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  May 10 19:55:29.489: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  May 10 19:55:29.489: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  May 10 19:55:29.489: INFO: Checking APIGroup: apiextensions.k8s.io
  May 10 19:55:29.492: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  May 10 19:55:29.492: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  May 10 19:55:29.492: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  May 10 19:55:29.492: INFO: Checking APIGroup: scheduling.k8s.io
  May 10 19:55:29.496: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  May 10 19:55:29.496: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  May 10 19:55:29.496: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  May 10 19:55:29.496: INFO: Checking APIGroup: coordination.k8s.io
  May 10 19:55:29.499: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  May 10 19:55:29.499: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  May 10 19:55:29.499: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  May 10 19:55:29.499: INFO: Checking APIGroup: node.k8s.io
  May 10 19:55:29.501: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  May 10 19:55:29.501: INFO: Versions found [{node.k8s.io/v1 v1}]
  May 10 19:55:29.501: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  May 10 19:55:29.501: INFO: Checking APIGroup: discovery.k8s.io
  May 10 19:55:29.504: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  May 10 19:55:29.504: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  May 10 19:55:29.504: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  May 10 19:55:29.504: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  May 10 19:55:29.508: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
  May 10 19:55:29.508: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
  May 10 19:55:29.508: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
  May 10 19:55:29.508: INFO: Checking APIGroup: crd.projectcalico.org
  May 10 19:55:29.510: INFO: PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  May 10 19:55:29.510: INFO: Versions found [{crd.projectcalico.org/v1 v1}]
  May 10 19:55:29.510: INFO: crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  May 10 19:55:29.510: INFO: Checking APIGroup: snapshot.storage.k8s.io
  May 10 19:55:29.512: INFO: PreferredVersion.GroupVersion: snapshot.storage.k8s.io/v1
  May 10 19:55:29.512: INFO: Versions found [{snapshot.storage.k8s.io/v1 v1}]
  May 10 19:55:29.512: INFO: snapshot.storage.k8s.io/v1 matches snapshot.storage.k8s.io/v1
  May 10 19:55:29.512: INFO: Checking APIGroup: cluster.k8s.io
  May 10 19:55:29.514: INFO: PreferredVersion.GroupVersion: cluster.k8s.io/v1alpha1
  May 10 19:55:29.514: INFO: Versions found [{cluster.k8s.io/v1alpha1 v1alpha1}]
  May 10 19:55:29.514: INFO: cluster.k8s.io/v1alpha1 matches cluster.k8s.io/v1alpha1
  May 10 19:55:29.514: INFO: Checking APIGroup: operatingsystemmanager.k8c.io
  May 10 19:55:29.516: INFO: PreferredVersion.GroupVersion: operatingsystemmanager.k8c.io/v1alpha1
  May 10 19:55:29.516: INFO: Versions found [{operatingsystemmanager.k8c.io/v1alpha1 v1alpha1}]
  May 10 19:55:29.516: INFO: operatingsystemmanager.k8c.io/v1alpha1 matches operatingsystemmanager.k8c.io/v1alpha1
  May 10 19:55:29.516: INFO: Checking APIGroup: metrics.k8s.io
  May 10 19:55:29.518: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  May 10 19:55:29.518: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  May 10 19:55:29.518: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  May 10 19:55:29.519: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-9028" for this suite. @ 05/10/24 19:55:29.533
  << Timeline
------------------------------
S
------------------------------
• [2.126 seconds]
[sig-node] Pods should get a host IP [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:29.574
  May 10 19:55:29.574: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename pods @ 05/10/24 19:55:29.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:29.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:29.612
  STEP: creating pod @ 05/10/24 19:55:29.617
  May 10 19:55:31.674: INFO: Pod pod-hostip-b0d890db-437a-4368-8fae-6c14e0c06e4b has hostIP: 172.31.238.87
  May 10 19:55:31.675: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8886" for this suite. @ 05/10/24 19:55:31.686
  << Timeline
------------------------------
SSS
------------------------------
• [4.155 seconds]
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:236

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:27.549
  May 10 19:55:27.549: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:55:27.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:27.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:27.587
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 19:55:27.594
  E0510 19:55:28.504255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:29.504955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:30.505178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:31.505313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 19:55:31.634
  May 10 19:55:31.641: INFO: Trying to get logs from node ip-172-31-237-5.eu-west-3.compute.internal pod downwardapi-volume-2db07d52-2e76-4939-832f-a156be299199 container client-container: <nil>
  STEP: delete the pod @ 05/10/24 19:55:31.66
  May 10 19:55:31.684: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5040" for this suite. @ 05/10/24 19:55:31.694
  << Timeline
------------------------------
SS
------------------------------
• [5.210 seconds]
[sig-node] Pods should delete a collection of pods [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:28.436
  May 10 19:55:28.436: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename pods @ 05/10/24 19:55:28.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:28.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:28.464
  STEP: Create set of pods @ 05/10/24 19:55:28.467
  May 10 19:55:28.475: INFO: created test-pod-1
  May 10 19:55:28.495: INFO: created test-pod-2
  May 10 19:55:28.502: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 05/10/24 19:55:28.502
  STEP: waiting for all pods to be deleted @ 05/10/24 19:55:30.581
  May 10 19:55:30.584: INFO: Pod quantity 3 is different from expected quantity 0
  May 10 19:55:31.600: INFO: Pod quantity 3 is different from expected quantity 0
  May 10 19:55:32.590: INFO: Pod quantity 2 is different from expected quantity 0
  May 10 19:55:33.630: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-460" for this suite. @ 05/10/24 19:55:33.637
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [4.174 seconds]
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:157

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:33.654
  May 10 19:55:33.654: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 19:55:33.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:33.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:33.733
  STEP: Creating a pod to test emptydir volume type on node default medium @ 05/10/24 19:55:33.738
  STEP: Saw pod success @ 05/10/24 19:55:37.784
  May 10 19:55:37.787: INFO: Trying to get logs from node ip-172-31-236-46.eu-west-3.compute.internal pod pod-5793829c-8371-477f-83b7-af853f54c59c container test-container: <nil>
  STEP: delete the pod @ 05/10/24 19:55:37.796
  May 10 19:55:37.815: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7238" for this suite. @ 05/10/24 19:55:37.822
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
• [6.756 seconds]
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:163

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:31.708
  May 10 19:55:31.708: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:55:31.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:31.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:31.729
  STEP: Creating the pod @ 05/10/24 19:55:31.732
  E0510 19:55:32.505849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:33.505921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:55:34.383: INFO: Successfully updated pod "annotationupdate2e262bae-d3c6-4c4e-aa35-06324e10481e"
  E0510 19:55:34.506669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:35.507296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:36.507480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:37.508032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:55:38.431: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1936" for this suite. @ 05/10/24 19:55:38.455
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.094 seconds]
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:53

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:38.511
  May 10 19:55:38.511: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename podtemplate @ 05/10/24 19:55:38.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:38.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:38.547
  May 10 19:55:38.590: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4950" for this suite. @ 05/10/24 19:55:38.597
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.094 seconds]
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:129

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:38.635
  May 10 19:55:38.635: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename runtimeclass @ 05/10/24 19:55:38.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:38.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:38.663
  May 10 19:55:38.696: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1759" for this suite. @ 05/10/24 19:55:38.713
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
• [0.110 seconds]
[sig-node] Secrets should patch a secret [Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:154

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:38.744
  May 10 19:55:38.744: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename secrets @ 05/10/24 19:55:38.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:38.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:38.767
  STEP: creating a secret @ 05/10/24 19:55:38.774
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 05/10/24 19:55:38.779
  STEP: patching the secret @ 05/10/24 19:55:38.784
  STEP: deleting the secret using a LabelSelector @ 05/10/24 19:55:38.794
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 05/10/24 19:55:38.81
  May 10 19:55:38.814: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9266" for this suite. @ 05/10/24 19:55:38.829
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [5.169 seconds]
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:143

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:37.85
  May 10 19:55:37.850: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename replicaset @ 05/10/24 19:55:37.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:37.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:37.902
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 05/10/24 19:55:37.905
  May 10 19:55:37.919: INFO: Pod name sample-pod: Found 0 pods out of 1
  May 10 19:55:42.924: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/10/24 19:55:42.924
  STEP: getting scale subresource @ 05/10/24 19:55:42.924
  STEP: updating a scale subresource @ 05/10/24 19:55:42.927
  STEP: verifying the replicaset Spec.Replicas was modified @ 05/10/24 19:55:42.938
  STEP: Patch a scale subresource @ 05/10/24 19:55:42.947
  May 10 19:55:42.975: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3229" for this suite. @ 05/10/24 19:55:42.987
  << Timeline
------------------------------
S
------------------------------
• [0.518 seconds]
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:169

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:43.022
  May 10 19:55:43.022: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename discovery @ 05/10/24 19:55:43.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:43.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:43.059
  STEP: Setting up server cert @ 05/10/24 19:55:43.064
  STEP: Requesting APIResourceList from "/api/v1" @ 05/10/24 19:55:43.501
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 05/10/24 19:55:43.503
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 05/10/24 19:55:43.504
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 05/10/24 19:55:43.505
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 05/10/24 19:55:43.506
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 05/10/24 19:55:43.507
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 05/10/24 19:55:43.508
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 05/10/24 19:55:43.509
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 05/10/24 19:55:43.51
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 05/10/24 19:55:43.51
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 05/10/24 19:55:43.511
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 05/10/24 19:55:43.512
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 05/10/24 19:55:43.513
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 05/10/24 19:55:43.513
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 05/10/24 19:55:43.514
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 05/10/24 19:55:43.515
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 05/10/24 19:55:43.516
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 05/10/24 19:55:43.517
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 05/10/24 19:55:43.518
  May 10 19:55:43.519: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-9630" for this suite. @ 05/10/24 19:55:43.526
  << Timeline
------------------------------
• [2.242 seconds]
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:43.541
  May 10 19:55:43.541: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename deployment @ 05/10/24 19:55:43.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:43.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:43.58
  May 10 19:55:43.588: INFO: Creating simple deployment test-new-deployment
  May 10 19:55:43.614: INFO: deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 05/10/24 19:55:45.631
  STEP: updating a scale subresource @ 05/10/24 19:55:45.635
  STEP: verifying the deployment Spec.Replicas was modified @ 05/10/24 19:55:45.643
  STEP: Patch a scale subresource @ 05/10/24 19:55:45.647
  May 10 19:55:45.730: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6381",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3b80d6d1-ae3b-4e24-837e-57deea99264a",
      ResourceVersion: (string) (len=5) "29025",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967743,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 10 19:55:45.746: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6381",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fcc55144-011e-482e-b12e-b001681b8728",
      ResourceVersion: (string) (len=5) "29028",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967743,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "3b80d6d1-ae3b-4e24-837e-57deea99264a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 62 38 30 64 36  64 31 2d 61 65 33 62 2d  |\"3b80d6d1-ae3b-|
              00000120  34 65 32 34 2d 38 33 37  65 2d 35 37 64 65 65 61  |4e24-837e-57deea|
              00000130  39 39 32 36 34 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |99264a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 10 19:55:45.757: INFO: Pod "test-new-deployment-557759b7c7-7jg4j" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-7jg4j",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6381",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cf279d48-9e7b-49ef-b153-1de39c99a8a2",
      ResourceVersion: (string) (len=5) "29019",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967743,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "6082f2c36144cf118d8a6026deea72c427ac48a8429f1b724be3bc5de81d9168",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.6.84/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.6.84/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fcc55144-011e-482e-b12e-b001681b8728",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 63  63 35 35 31 34 34 2d 30  |d\":\"fcc55144-0|
              00000090  31 31 65 2d 34 38 32 65  2d 62 31 32 65 2d 62 30  |11e-482e-b12e-b0|
              000000a0  30 31 36 38 31 62 38 37  32 38 5c 22 7d 22 3a 7b  |01681b8728\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967744,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 36  2e 38 34 5c 22 7d 22 3a  |10.244.6.84\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hjgpz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hjgpz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-237-27.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.237.27",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.6.84",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.6.84"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967743,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967744,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3ffbe125abdc1e2f2cb33768c2c28baae3a931392ca045e57c1da84511f32c88",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:55:45.758: INFO: Pod "test-new-deployment-557759b7c7-xmmv2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-xmmv2",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6381",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "59d24788-b5a6-4c99-bf87-44cee2572fff",
      ResourceVersion: (string) (len=5) "29032",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fcc55144-011e-482e-b12e-b001681b8728",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 63  63 35 35 31 34 34 2d 30  |d\":\"fcc55144-0|
              00000090  31 31 65 2d 34 38 32 65  2d 62 31 32 65 2d 62 30  |11e-482e-b12e-b0|
              000000a0  30 31 36 38 31 62 38 37  32 38 5c 22 7d 22 3a 7b  |01681b8728\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-844cb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-844cb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-236-46.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.236.46",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:55:45.758: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6381" for this suite. @ 05/10/24 19:55:45.768
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [7.096 seconds]
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:76

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:38.863
  May 10 19:55:38.863: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 19:55:38.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:38.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:38.914
  STEP: Counting existing ResourceQuota @ 05/10/24 19:55:38.918
  E0510 19:55:39.508357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:40.509291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:41.509975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:42.510671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:43.511130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/10/24 19:55:43.925
  STEP: Ensuring resource quota status is calculated @ 05/10/24 19:55:43.936
  E0510 19:55:44.511836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:45.512713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:55:45.942: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8615" for this suite. @ 05/10/24 19:55:45.949
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [4.171 seconds]
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:147

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:45.804
  May 10 19:55:45.804: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 19:55:45.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:45.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:45.872
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/10/24 19:55:45.884
  STEP: Saw pod success @ 05/10/24 19:55:49.919
  May 10 19:55:49.924: INFO: Trying to get logs from node ip-172-31-238-87.eu-west-3.compute.internal pod pod-3f91d718-13e9-4a17-ab73-07a238d22d97 container test-container: <nil>
  STEP: delete the pod @ 05/10/24 19:55:49.938
  May 10 19:55:49.960: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2914" for this suite. @ 05/10/24 19:55:49.967
  << Timeline
------------------------------
• [5.238 seconds]
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:49.976
  May 10 19:55:49.976: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename sched-pred @ 05/10/24 19:55:49.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:49.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:49.996
  May 10 19:55:50.000: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  May 10 19:55:50.015: INFO: Waiting for terminating namespaces to be deleted...
  May 10 19:55:50.021: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-236-144.eu-west-3.compute.internal before test
  May 10 19:55:50.031: INFO: e2e-conformance-test from conformance started at 2024-05-10 19:40:59 +0000 UTC (2 container statuses recorded)
  May 10 19:55:50.031: INFO: 	Container conformance-container ready: true, restart count 0
  May 10 19:55:50.031: INFO: 	Container output-container ready: true, restart count 0
  May 10 19:55:50.031: INFO: canal-zgphj from kube-system started at 2024-05-10 19:38:37 +0000 UTC (2 container statuses recorded)
  May 10 19:55:50.031: INFO: 	Container calico-node ready: true, restart count 0
  May 10 19:55:50.031: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 19:55:50.031: INFO: ebs-csi-node-7kmv9 from kube-system started at 2024-05-10 19:38:37 +0000 UTC (3 container statuses recorded)
  May 10 19:55:50.031: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 19:55:50.031: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 19:55:50.031: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 19:55:50.031: INFO: kube-proxy-svhx8 from kube-system started at 2024-05-10 19:38:37 +0000 UTC (1 container statuses recorded)
  May 10 19:55:50.031: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 19:55:50.031: INFO: node-local-dns-fbvng from kube-system started at 2024-05-10 19:38:37 +0000 UTC (1 container statuses recorded)
  May 10 19:55:50.031: INFO: 	Container node-cache ready: true, restart count 0
  May 10 19:55:50.031: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-236-46.eu-west-3.compute.internal before test
  May 10 19:55:50.043: INFO: test-new-deployment-557759b7c7-xmmv2 from deployment-6381 started at 2024-05-10 19:55:45 +0000 UTC (1 container statuses recorded)
  May 10 19:55:50.043: INFO: 	Container httpd ready: false, restart count 0
  May 10 19:55:50.043: INFO: canal-c5pr9 from kube-system started at 2024-05-10 19:35:54 +0000 UTC (2 container statuses recorded)
  May 10 19:55:50.043: INFO: 	Container calico-node ready: true, restart count 0
  May 10 19:55:50.043: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 19:55:50.043: INFO: ebs-csi-node-lhfzz from kube-system started at 2024-05-10 19:35:54 +0000 UTC (3 container statuses recorded)
  May 10 19:55:50.043: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 19:55:50.043: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 19:55:50.043: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 19:55:50.043: INFO: kube-proxy-x88pq from kube-system started at 2024-05-10 19:35:54 +0000 UTC (1 container statuses recorded)
  May 10 19:55:50.043: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 19:55:50.043: INFO: node-local-dns-f2v2d from kube-system started at 2024-05-10 19:35:54 +0000 UTC (1 container statuses recorded)
  May 10 19:55:50.043: INFO: 	Container node-cache ready: true, restart count 0
  May 10 19:55:50.043: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-237-27.eu-west-3.compute.internal before test
  May 10 19:55:50.058: INFO: busybox-c9023707-6558-4646-8565-818ba0199ac5 from container-probe-5889 started at 2024-05-10 19:55:31 +0000 UTC (1 container statuses recorded)
  May 10 19:55:50.058: INFO: 	Container busybox ready: true, restart count 0
  May 10 19:55:50.058: INFO: test-new-deployment-557759b7c7-7jg4j from deployment-6381 started at 2024-05-10 19:55:43 +0000 UTC (1 container statuses recorded)
  May 10 19:55:50.058: INFO: 	Container httpd ready: true, restart count 0
  May 10 19:55:50.058: INFO: canal-86fpg from kube-system started at 2024-05-10 19:38:21 +0000 UTC (2 container statuses recorded)
  May 10 19:55:50.058: INFO: 	Container calico-node ready: true, restart count 0
  May 10 19:55:50.058: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 19:55:50.058: INFO: ebs-csi-node-qg9kf from kube-system started at 2024-05-10 19:38:21 +0000 UTC (3 container statuses recorded)
  May 10 19:55:50.058: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 19:55:50.058: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 19:55:50.058: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 19:55:50.058: INFO: kube-proxy-2gzg4 from kube-system started at 2024-05-10 19:38:21 +0000 UTC (1 container statuses recorded)
  May 10 19:55:50.058: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 19:55:50.058: INFO: node-local-dns-f4wjg from kube-system started at 2024-05-10 19:38:21 +0000 UTC (1 container statuses recorded)
  May 10 19:55:50.058: INFO: 	Container node-cache ready: true, restart count 0
  May 10 19:55:50.058: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-237-5.eu-west-3.compute.internal before test
  May 10 19:55:50.072: INFO: canal-7n86g from kube-system started at 2024-05-10 19:35:54 +0000 UTC (2 container statuses recorded)
  May 10 19:55:50.072: INFO: 	Container calico-node ready: true, restart count 0
  May 10 19:55:50.072: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 19:55:50.072: INFO: ebs-csi-node-6hgh7 from kube-system started at 2024-05-10 19:35:54 +0000 UTC (3 container statuses recorded)
  May 10 19:55:50.072: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 19:55:50.072: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 19:55:50.072: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 19:55:50.072: INFO: kube-proxy-b6mmd from kube-system started at 2024-05-10 19:35:54 +0000 UTC (1 container statuses recorded)
  May 10 19:55:50.072: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 19:55:50.072: INFO: node-local-dns-86s45 from kube-system started at 2024-05-10 19:35:54 +0000 UTC (1 container statuses recorded)
  May 10 19:55:50.072: INFO: 	Container node-cache ready: true, restart count 0
  May 10 19:55:50.072: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-238-69.eu-west-3.compute.internal before test
  May 10 19:55:50.087: INFO: canal-qhmdf from kube-system started at 2024-05-10 19:36:27 +0000 UTC (2 container statuses recorded)
  May 10 19:55:50.087: INFO: 	Container calico-node ready: true, restart count 0
  May 10 19:55:50.087: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 19:55:50.087: INFO: ebs-csi-node-bgqjk from kube-system started at 2024-05-10 19:36:27 +0000 UTC (3 container statuses recorded)
  May 10 19:55:50.087: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 19:55:50.087: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 19:55:50.087: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 19:55:50.087: INFO: kube-proxy-wkbd8 from kube-system started at 2024-05-10 19:36:27 +0000 UTC (1 container statuses recorded)
  May 10 19:55:50.087: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 19:55:50.087: INFO: node-local-dns-746vg from kube-system started at 2024-05-10 19:36:27 +0000 UTC (1 container statuses recorded)
  May 10 19:55:50.087: INFO: 	Container node-cache ready: true, restart count 0
  May 10 19:55:50.087: INFO: pod-logs-websocket-25feb600-d417-4015-b7f7-dfeeb91fad04 from pods-7098 started at 2024-05-10 19:55:22 +0000 UTC (1 container statuses recorded)
  May 10 19:55:50.087: INFO: 	Container main ready: true, restart count 0
  May 10 19:55:50.087: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-238-87.eu-west-3.compute.internal before test
  May 10 19:55:50.101: INFO: canal-cfqsw from kube-system started at 2024-05-10 19:38:46 +0000 UTC (2 container statuses recorded)
  May 10 19:55:50.101: INFO: 	Container calico-node ready: true, restart count 0
  May 10 19:55:50.101: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 19:55:50.101: INFO: ebs-csi-node-5mtfb from kube-system started at 2024-05-10 19:38:46 +0000 UTC (3 container statuses recorded)
  May 10 19:55:50.101: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 19:55:50.101: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 19:55:50.101: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 19:55:50.101: INFO: kube-proxy-n9m2f from kube-system started at 2024-05-10 19:38:46 +0000 UTC (1 container statuses recorded)
  May 10 19:55:50.101: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 19:55:50.101: INFO: node-local-dns-6d9jq from kube-system started at 2024-05-10 19:38:46 +0000 UTC (1 container statuses recorded)
  May 10 19:55:50.101: INFO: 	Container node-cache ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 05/10/24 19:55:50.101
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17ce38cb5ebe69af], Reason = [FailedScheduling], Message = [0/9 nodes are available: 3 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 6 node(s) didn't match Pod's node affinity/selector. preemption: 0/9 nodes are available: 9 Preemption is not helpful for scheduling..] @ 05/10/24 19:55:54.212
  May 10 19:55:55.197: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8379" for this suite. @ 05/10/24 19:55:55.204
  << Timeline
------------------------------
SSSSSS
------------------------------
• [6.153 seconds]
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:55.217
  May 10 19:55:55.217: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename endpointslicemirroring @ 05/10/24 19:55:55.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:55.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:55.24
  STEP: mirroring a new custom Endpoint @ 05/10/24 19:55:55.268
  May 10 19:55:55.292: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 05/10/24 19:55:57.297
  May 10 19:55:57.311: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 05/10/24 19:55:59.317
  May 10 19:55:59.348: INFO: Waiting for 0 EndpointSlices to exist, got 1
  May 10 19:56:01.352: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-19" for this suite. @ 05/10/24 19:56:01.36
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [16.285 seconds]
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:806

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:45.966
  May 10 19:55:45.966: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 19:55:45.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:45.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:45.998
  STEP: Creating a ResourceQuota with best effort scope @ 05/10/24 19:55:46.003
  STEP: Ensuring ResourceQuota status is calculated @ 05/10/24 19:55:46.013
  E0510 19:55:46.513231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:47.513748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 05/10/24 19:55:48.03
  STEP: Ensuring ResourceQuota status is calculated @ 05/10/24 19:55:48.049
  E0510 19:55:48.514176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:49.514209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 05/10/24 19:55:50.059
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 05/10/24 19:55:50.079
  E0510 19:55:50.515262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:51.516262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 05/10/24 19:55:52.085
  E0510 19:55:52.516688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:53.517231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/10/24 19:55:54.09
  STEP: Ensuring resource quota status released the pod usage @ 05/10/24 19:55:54.114
  E0510 19:55:54.517331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:55.518053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 05/10/24 19:55:56.12
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 05/10/24 19:55:56.135
  E0510 19:55:56.518509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:57.519071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 05/10/24 19:55:58.139
  E0510 19:55:58.519067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:59.520066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/10/24 19:56:00.144
  STEP: Ensuring resource quota status released the pod usage @ 05/10/24 19:56:00.175
  E0510 19:56:00.520682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:01.521747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:02.190: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8040" for this suite. @ 05/10/24 19:56:02.211
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [4.118 seconds]
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:528

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:56:01.439
  May 10 19:56:01.439: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename security-context-test @ 05/10/24 19:56:01.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:56:01.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:56:01.478
  May 10 19:56:05.532: INFO: Got logs for pod "busybox-privileged-false-14a2c2fb-5f58-4b76-b636-ee8d4ff347b9": "ip: RTNETLINK answers: Operation not permitted\n"
  May 10 19:56:05.533: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9140" for this suite. @ 05/10/24 19:56:05.54
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.186 seconds]
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:69

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:56:02.261
  May 10 19:56:02.261: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:56:02.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:56:02.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:56:02.313
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 19:56:02.316
  E0510 19:56:02.521944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:03.522190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:04.522922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:05.528240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 19:56:06.371
  May 10 19:56:06.391: INFO: Trying to get logs from node ip-172-31-236-46.eu-west-3.compute.internal pod downwardapi-volume-743b9cd8-763b-4a34-ae89-71e6c698425c container client-container: <nil>
  STEP: delete the pod @ 05/10/24 19:56:06.405
  May 10 19:56:06.430: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2821" for this suite. @ 05/10/24 19:56:06.436
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.152 seconds]
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:208

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:56:05.59
  May 10 19:56:05.590: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:56:05.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:56:05.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:56:05.615
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 19:56:05.619
  STEP: Saw pod success @ 05/10/24 19:56:09.662
  May 10 19:56:09.670: INFO: Trying to get logs from node ip-172-31-237-5.eu-west-3.compute.internal pod downwardapi-volume-2e1ea91e-91de-4c57-ace3-344c158613d8 container client-container: <nil>
  STEP: delete the pod @ 05/10/24 19:56:09.691
  May 10 19:56:09.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3840" for this suite. @ 05/10/24 19:56:09.734
  << Timeline
------------------------------
SSSSS
------------------------------
• [24.896 seconds]
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:84

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:56:06.476
  May 10 19:56:06.476: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename pod-network-test @ 05/10/24 19:56:06.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:56:06.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:56:06.503
  STEP: Performing setup for networking test in namespace pod-network-test-1133 @ 05/10/24 19:56:06.507
  STEP: creating a selector @ 05/10/24 19:56:06.507
  STEP: Creating the service pods in kubernetes @ 05/10/24 19:56:06.507
  May 10 19:56:06.507: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0510 19:56:06.524037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:07.524738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:08.525668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:09.526176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:10.526253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:11.527167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:12.528010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:13.528863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:14.529944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:15.530254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:16.531200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:17.532264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:18.533307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:19.534233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:20.534914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:21.535300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:22.536311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:23.536875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:24.536939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:25.537709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:26.537958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:27.538214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:28.538869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/10/24 19:56:28.797
  E0510 19:56:29.539361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:30.540174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:30.824: INFO: Setting MaxTries for pod polling to 66 for networking test based on endpoint count 6
  May 10 19:56:30.824: INFO: Breadth first check of 10.244.7.40 on host 172.31.236.144...
  May 10 19:56:30.827: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.3.88:9080/dial?request=hostname&protocol=http&host=10.244.7.40&port=8083&tries=1'] Namespace:pod-network-test-1133 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:56:30.827: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  May 10 19:56:30.827: INFO: ExecWithOptions: Clientset creation
  May 10 19:56:30.827: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1133/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.3.88%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.7.40%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 10 19:56:30.905: INFO: Waiting for responses: map[]
  May 10 19:56:30.906: INFO: reached 10.244.7.40 after 0/1 tries
  May 10 19:56:30.906: INFO: Breadth first check of 10.244.3.87 on host 172.31.236.46...
  May 10 19:56:30.913: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.3.88:9080/dial?request=hostname&protocol=http&host=10.244.3.87&port=8083&tries=1'] Namespace:pod-network-test-1133 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:56:30.913: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  May 10 19:56:30.914: INFO: ExecWithOptions: Clientset creation
  May 10 19:56:30.914: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1133/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.3.88%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.3.87%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 10 19:56:30.987: INFO: Waiting for responses: map[]
  May 10 19:56:30.987: INFO: reached 10.244.3.87 after 0/1 tries
  May 10 19:56:30.987: INFO: Breadth first check of 10.244.6.85 on host 172.31.237.27...
  May 10 19:56:30.992: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.3.88:9080/dial?request=hostname&protocol=http&host=10.244.6.85&port=8083&tries=1'] Namespace:pod-network-test-1133 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:56:30.992: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  May 10 19:56:30.992: INFO: ExecWithOptions: Clientset creation
  May 10 19:56:30.992: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1133/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.3.88%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.6.85%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 10 19:56:31.092: INFO: Waiting for responses: map[]
  May 10 19:56:31.092: INFO: reached 10.244.6.85 after 0/1 tries
  May 10 19:56:31.092: INFO: Breadth first check of 10.244.4.72 on host 172.31.237.5...
  May 10 19:56:31.097: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.3.88:9080/dial?request=hostname&protocol=http&host=10.244.4.72&port=8083&tries=1'] Namespace:pod-network-test-1133 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:56:31.097: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  May 10 19:56:31.098: INFO: ExecWithOptions: Clientset creation
  May 10 19:56:31.098: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1133/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.3.88%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.4.72%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 10 19:56:31.178: INFO: Waiting for responses: map[]
  May 10 19:56:31.178: INFO: reached 10.244.4.72 after 0/1 tries
  May 10 19:56:31.178: INFO: Breadth first check of 10.244.5.79 on host 172.31.238.69...
  May 10 19:56:31.186: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.3.88:9080/dial?request=hostname&protocol=http&host=10.244.5.79&port=8083&tries=1'] Namespace:pod-network-test-1133 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:56:31.186: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  May 10 19:56:31.186: INFO: ExecWithOptions: Clientset creation
  May 10 19:56:31.186: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1133/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.3.88%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.5.79%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 10 19:56:31.257: INFO: Waiting for responses: map[]
  May 10 19:56:31.257: INFO: reached 10.244.5.79 after 0/1 tries
  May 10 19:56:31.257: INFO: Breadth first check of 10.244.8.78 on host 172.31.238.87...
  May 10 19:56:31.261: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.3.88:9080/dial?request=hostname&protocol=http&host=10.244.8.78&port=8083&tries=1'] Namespace:pod-network-test-1133 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:56:31.261: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  May 10 19:56:31.261: INFO: ExecWithOptions: Clientset creation
  May 10 19:56:31.261: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1133/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.3.88%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.8.78%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 10 19:56:31.338: INFO: Waiting for responses: map[]
  May 10 19:56:31.338: INFO: reached 10.244.8.78 after 0/1 tries
  May 10 19:56:31.338: INFO: Going to retry 0 out of 6 pods....
  May 10 19:56:31.338: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1133" for this suite. @ 05/10/24 19:56:31.358
  << Timeline
------------------------------
SSS
------------------------------
• [4.141 seconds]
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:56:31.378
  May 10 19:56:31.378: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:56:31.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:56:31.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:56:31.404
  STEP: Creating projection with secret that has name projected-secret-test-36a67383-b29c-4bd8-8aba-e996c69b509a @ 05/10/24 19:56:31.41
  STEP: Creating a pod to test consume secrets @ 05/10/24 19:56:31.417
  E0510 19:56:31.540614      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:32.541438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:33.541982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:34.542735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 19:56:35.456
  May 10 19:56:35.460: INFO: Trying to get logs from node ip-172-31-238-87.eu-west-3.compute.internal pod pod-projected-secrets-1bf7056a-5536-46d3-889f-896774e53542 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 19:56:35.481
  May 10 19:56:35.503: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4762" for this suite. @ 05/10/24 19:56:35.511
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.131 seconds]
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:124

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:56:35.539
  May 10 19:56:35.539: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename configmap @ 05/10/24 19:56:35.54
  E0510 19:56:35.542913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:56:35.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:56:35.561
  STEP: Creating configMap with name configmap-test-upd-e220b6e1-3e41-4d61-9592-bf7562983fdd @ 05/10/24 19:56:35.571
  STEP: Creating the pod @ 05/10/24 19:56:35.583
  E0510 19:56:36.543369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:37.543638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-e220b6e1-3e41-4d61-9592-bf7562983fdd @ 05/10/24 19:56:37.63
  STEP: waiting to observe update in volume @ 05/10/24 19:56:37.636
  E0510 19:56:38.544277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:39.544899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:39.656: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9127" for this suite. @ 05/10/24 19:56:39.662
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
• [4.165 seconds]
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:56:39.689
  May 10 19:56:39.689: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:56:39.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:56:39.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:56:39.743
  STEP: Creating projection with secret that has name projected-secret-test-map-0c48568c-54d8-467d-b90f-657861a40d94 @ 05/10/24 19:56:39.745
  STEP: Creating a pod to test consume secrets @ 05/10/24 19:56:39.758
  E0510 19:56:40.545200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:41.545221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:42.546215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:43.547136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 19:56:43.796
  May 10 19:56:43.802: INFO: Trying to get logs from node ip-172-31-238-87.eu-west-3.compute.internal pod pod-projected-secrets-5b420f13-797f-4ef6-9bc0-19bc372d2af2 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 19:56:43.812
  May 10 19:56:43.839: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7994" for this suite. @ 05/10/24 19:56:43.846
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.163 seconds]
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:109

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:56:43.884
  May 10 19:56:43.884: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename configmap @ 05/10/24 19:56:43.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:56:43.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:56:43.911
  STEP: Creating configMap with name configmap-test-volume-map-9be84109-8802-43c6-a3e2-043f0c600eb1 @ 05/10/24 19:56:43.914
  STEP: Creating a pod to test consume configMaps @ 05/10/24 19:56:43.932
  E0510 19:56:44.547179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:45.547943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:46.548210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:47.548548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 19:56:47.969
  May 10 19:56:47.973: INFO: Trying to get logs from node ip-172-31-238-87.eu-west-3.compute.internal pod pod-configmaps-ae31535a-a405-4226-b163-73079b1e7b3f container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 19:56:47.984
  May 10 19:56:48.031: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9675" for this suite. @ 05/10/24 19:56:48.037
  << Timeline
------------------------------
SSSSSS
------------------------------
• [4.118 seconds]
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:375

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:56:48.052
  May 10 19:56:48.052: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:56:48.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:56:48.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:56:48.076
  STEP: Creating configMap with name projected-configmap-test-volume-6c6b4190-18ee-4145-81a3-a4096ad80794 @ 05/10/24 19:56:48.078
  STEP: Creating a pod to test consume configMaps @ 05/10/24 19:56:48.087
  E0510 19:56:48.549208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:49.549580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:50.550230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:51.550264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 19:56:52.12
  May 10 19:56:52.124: INFO: Trying to get logs from node ip-172-31-238-87.eu-west-3.compute.internal pod pod-projected-configmaps-e0f2c375-a824-4756-ba45-98e5c820d078 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 19:56:52.132
  May 10 19:56:52.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6546" for this suite. @ 05/10/24 19:56:52.163
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [6.246 seconds]
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:56:52.217
  May 10 19:56:52.217: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/10/24 19:56:52.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:56:52.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:56:52.246
  STEP: creating a target pod @ 05/10/24 19:56:52.256
  E0510 19:56:52.551174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:53.551968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 05/10/24 19:56:54.304
  E0510 19:56:54.552605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:55.553215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:56.553763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:57.554321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 05/10/24 19:56:58.354
  May 10 19:56:58.354: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-7313 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:56:58.354: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  May 10 19:56:58.355: INFO: ExecWithOptions: Clientset creation
  May 10 19:56:58.355: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-7313/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  May 10 19:56:58.439: INFO: Exec stderr: ""
  May 10 19:56:58.447: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-7313" for this suite. @ 05/10/24 19:56:58.454
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.143 seconds]
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:56:58.485
  May 10 19:56:58.485: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename secrets @ 05/10/24 19:56:58.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:56:58.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:56:58.51
  STEP: Creating secret with name secret-test-17f9509d-f45c-4b07-b39a-223b4292f50e @ 05/10/24 19:56:58.538
  STEP: Creating a pod to test consume secrets @ 05/10/24 19:56:58.543
  E0510 19:56:58.554850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:59.555192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:00.556211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:01.557024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:02.557732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 19:57:02.57
  May 10 19:57:02.573: INFO: Trying to get logs from node ip-172-31-238-69.eu-west-3.compute.internal pod pod-secrets-d5f92b8d-8305-465d-bb20-3ccec53e6855 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 19:57:02.581
  May 10 19:57:02.606: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-468" for this suite. @ 05/10/24 19:57:02.613
  STEP: Destroying namespace "secret-namespace-6392" for this suite. @ 05/10/24 19:57:02.62
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [5.150 seconds]
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:165

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:02.655
  May 10 19:57:02.655: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename replicaset @ 05/10/24 19:57:02.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:02.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:02.679
  STEP: Create a ReplicaSet @ 05/10/24 19:57:02.685
  STEP: Verify that the required pods have come up @ 05/10/24 19:57:02.694
  May 10 19:57:02.702: INFO: Pod name sample-pod: Found 0 pods out of 3
  E0510 19:57:03.558170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:04.558933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:05.559757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:06.560692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:07.561237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:07.710: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 05/10/24 19:57:07.71
  May 10 19:57:07.714: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 05/10/24 19:57:07.715
  STEP: DeleteCollection of the ReplicaSets @ 05/10/24 19:57:07.721
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 05/10/24 19:57:07.735
  May 10 19:57:07.741: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8781" for this suite. @ 05/10/24 19:57:07.765
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [0.207 seconds]
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1316

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:07.816
  May 10 19:57:07.816: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 19:57:07.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:07.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:07.898
  STEP: validating cluster-info @ 05/10/24 19:57:07.907
  May 10 19:57:07.907: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-3875 cluster-info'
  May 10 19:57:07.973: INFO: stderr: ""
  May 10 19:57:07.973: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.96.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  May 10 19:57:07.973: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3875" for this suite. @ 05/10/24 19:57:08
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [0.125 seconds]
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:156

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:08.029
  May 10 19:57:08.029: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename runtimeclass @ 05/10/24 19:57:08.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:08.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:08.067
  STEP: Deleting RuntimeClass runtimeclass-9182-delete-me @ 05/10/24 19:57:08.086
  STEP: Waiting for the RuntimeClass to disappear @ 05/10/24 19:57:08.108
  May 10 19:57:08.128: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9182" for this suite. @ 05/10/24 19:57:08.136
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.275 seconds]
[sig-network] Services should complete a service status lifecycle [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3326

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:08.17
  May 10 19:57:08.170: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename services @ 05/10/24 19:57:08.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:08.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:08.205
  STEP: creating a Service @ 05/10/24 19:57:08.215
  STEP: watching for the Service to be added @ 05/10/24 19:57:08.283
  May 10 19:57:08.288: INFO: Found Service test-service-jdkj4 in namespace services-3313 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
  May 10 19:57:08.288: INFO: Service test-service-jdkj4 created
  STEP: Getting /status @ 05/10/24 19:57:08.288
  May 10 19:57:08.308: INFO: Service test-service-jdkj4 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 05/10/24 19:57:08.308
  STEP: watching for the Service to be patched @ 05/10/24 19:57:08.338
  May 10 19:57:08.341: INFO: observed Service test-service-jdkj4 in namespace services-3313 with annotations: map[] & LoadBalancer: {[]}
  May 10 19:57:08.341: INFO: Found Service test-service-jdkj4 in namespace services-3313 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
  May 10 19:57:08.341: INFO: Service test-service-jdkj4 has service status patched
  STEP: updating the ServiceStatus @ 05/10/24 19:57:08.341
  May 10 19:57:08.356: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 05/10/24 19:57:08.356
  May 10 19:57:08.358: INFO: Observed Service test-service-jdkj4 in namespace services-3313 with annotations: map[] & Conditions: {[]}
  May 10 19:57:08.358: INFO: Observed event: &Service{ObjectMeta:{test-service-jdkj4  services-3313  8bfa512c-e233-46ea-8587-2fcd73bde556 30108 0 2024-05-10 19:57:08 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-05-10 19:57:08 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-05-10 19:57:08 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.98.188.227,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.98.188.227],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  May 10 19:57:08.358: INFO: Found Service test-service-jdkj4 in namespace services-3313 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  May 10 19:57:08.358: INFO: Service test-service-jdkj4 has service status updated
  STEP: patching the service @ 05/10/24 19:57:08.358
  STEP: watching for the Service to be patched @ 05/10/24 19:57:08.377
  May 10 19:57:08.381: INFO: observed Service test-service-jdkj4 in namespace services-3313 with labels: map[test-service-static:true]
  May 10 19:57:08.381: INFO: observed Service test-service-jdkj4 in namespace services-3313 with labels: map[test-service-static:true]
  May 10 19:57:08.381: INFO: observed Service test-service-jdkj4 in namespace services-3313 with labels: map[test-service-static:true]
  May 10 19:57:08.381: INFO: Found Service test-service-jdkj4 in namespace services-3313 with labels: map[test-service:patched test-service-static:true]
  May 10 19:57:08.381: INFO: Service test-service-jdkj4 patched
  STEP: deleting the service @ 05/10/24 19:57:08.381
  STEP: watching for the Service to be deleted @ 05/10/24 19:57:08.424
  May 10 19:57:08.425: INFO: Observed event: ADDED
  May 10 19:57:08.425: INFO: Observed event: MODIFIED
  May 10 19:57:08.425: INFO: Observed event: MODIFIED
  May 10 19:57:08.425: INFO: Observed event: MODIFIED
  May 10 19:57:08.425: INFO: Found Service test-service-jdkj4 in namespace services-3313 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  May 10 19:57:08.425: INFO: Service test-service-jdkj4 deleted
  May 10 19:57:08.426: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3313" for this suite. @ 05/10/24 19:57:08.435
  << Timeline
------------------------------
SS
------------------------------
• [0.090 seconds]
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:08.451
  May 10 19:57:08.451: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename conformance-tests @ 05/10/24 19:57:08.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:08.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:08.493
  STEP: Getting node addresses @ 05/10/24 19:57:08.498
  May 10 19:57:08.498: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  May 10 19:57:08.515: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-8828" for this suite. @ 05/10/24 19:57:08.527
  << Timeline
------------------------------
SSSSSS
------------------------------
• [0.093 seconds]
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:303

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:08.548
  May 10 19:57:08.548: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename namespaces @ 05/10/24 19:57:08.548
  E0510 19:57:08.561589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:08.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:08.574
  STEP: Read namespace status @ 05/10/24 19:57:08.579
  May 10 19:57:08.593: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 05/10/24 19:57:08.593
  May 10 19:57:08.603: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 05/10/24 19:57:08.603
  May 10 19:57:08.622: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  May 10 19:57:08.622: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6026" for this suite. @ 05/10/24 19:57:08.632
  << Timeline
------------------------------
SSSSS
------------------------------
• [6.148 seconds]
[sig-apps] ReplicationController should release no longer matching pods [Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:103

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:08.648
  May 10 19:57:08.648: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename replication-controller @ 05/10/24 19:57:08.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:08.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:08.673
  STEP: Given a ReplicationController is created @ 05/10/24 19:57:08.676
  STEP: When the matched label of one of its pods change @ 05/10/24 19:57:08.682
  May 10 19:57:08.686: INFO: Pod name pod-release: Found 0 pods out of 1
  E0510 19:57:09.562020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:10.562603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:11.563475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:12.563818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:13.564239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:13.707: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/10/24 19:57:13.739
  E0510 19:57:14.565253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:14.780: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3261" for this suite. @ 05/10/24 19:57:14.787
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
• [66.393 seconds]
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:56:09.748
  May 10 19:56:09.748: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename container-probe @ 05/10/24 19:56:09.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:56:09.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:56:09.769
  STEP: Creating pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616 @ 05/10/24 19:56:09.771
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/10/24 19:56:11.829
  May 10 19:56:11.845: INFO: Initial restart count of pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c is 0
  May 10 19:56:11.872: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:56:13.877: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:56:15.882: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:56:17.889: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:56:19.893: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:56:21.899: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:56:23.907: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:56:25.916: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:56:27.922: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:56:29.926: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:56:31.939: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:56:33.943: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:56:35.958: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:56:37.963: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:56:39.968: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:56:41.975: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:56:43.980: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:56:45.986: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:56:47.992: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:56:49.997: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:56:52.002: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:56:54.009: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:56:56.014: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:56:58.019: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:57:00.034: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:57:02.057: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:57:04.063: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:57:06.070: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:57:08.084: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:57:10.091: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:57:12.095: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:57:14.100: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:57:16.106: INFO: Get pod test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c in namespace container-probe-3616
  May 10 19:57:16.106: INFO: Restart count of pod container-probe-3616/test-grpc-d472a43c-23ac-4cb2-9f61-84b3731d961c is now 1 (1m4.260383552s elapsed)
  May 10 19:57:16.106: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/10/24 19:57:16.111
  STEP: Destroying namespace "container-probe-3616" for this suite. @ 05/10/24 19:57:16.13
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [2.086 seconds]
[sig-apps] Job should apply changes to a job status [Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:642

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:16.202
  May 10 19:57:16.202: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename job @ 05/10/24 19:57:16.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:16.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:16.223
  STEP: Creating a job @ 05/10/24 19:57:16.226
  STEP: Ensure pods equal to parallelism count is attached to the job @ 05/10/24 19:57:16.234
  STEP: patching /status @ 05/10/24 19:57:18.238
  STEP: updating /status @ 05/10/24 19:57:18.247
  STEP: get /status @ 05/10/24 19:57:18.258
  May 10 19:57:18.262: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3141" for this suite. @ 05/10/24 19:57:18.272
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [5.109 seconds]
[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:69

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:14.817
  May 10 19:57:14.817: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename replication-controller @ 05/10/24 19:57:14.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:14.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:14.841
  STEP: Creating replication controller my-hostname-basic-8bc3fedd-64a7-496f-b946-4ad5a992e64b @ 05/10/24 19:57:14.844
  May 10 19:57:14.856: INFO: Pod name my-hostname-basic-8bc3fedd-64a7-496f-b946-4ad5a992e64b: Found 0 pods out of 1
  E0510 19:57:15.566292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:16.567074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:17.567853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:18.568621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:19.568870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:19.864: INFO: Pod name my-hostname-basic-8bc3fedd-64a7-496f-b946-4ad5a992e64b: Found 1 pods out of 1
  May 10 19:57:19.864: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-8bc3fedd-64a7-496f-b946-4ad5a992e64b" are running
  May 10 19:57:19.879: INFO: Pod "my-hostname-basic-8bc3fedd-64a7-496f-b946-4ad5a992e64b-zdtrw" is running and ready(conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-10 19:57:14 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-10 19:57:15 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-10 19:57:15 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-10 19:57:14 +0000 UTC Reason: Message:}])
  May 10 19:57:19.879: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/10/24 19:57:19.879
  May 10 19:57:19.897: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8571" for this suite. @ 05/10/24 19:57:19.904
  << Timeline
------------------------------
• [7.102 seconds]
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:18.297
  May 10 19:57:18.297: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename daemonsets @ 05/10/24 19:57:18.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:18.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:18.353
  STEP: Creating simple DaemonSet "daemon-set" @ 05/10/24 19:57:18.393
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/10/24 19:57:18.401
  May 10 19:57:18.410: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:57:18.410: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:57:18.410: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:57:18.414: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 19:57:18.414: INFO: Node ip-172-31-236-144.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  May 10 19:57:19.422: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:57:19.422: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:57:19.422: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:57:19.427: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  May 10 19:57:19.427: INFO: Node ip-172-31-236-46.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  May 10 19:57:20.437: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:57:20.437: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:57:20.437: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:57:20.455: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 6
  May 10 19:57:20.455: INFO: Number of running nodes: 6, number of available pods: 6 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 05/10/24 19:57:20.468
  May 10 19:57:20.594: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:57:20.596: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:57:20.596: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:57:20.638: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
  May 10 19:57:20.638: INFO: Node ip-172-31-238-69.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  May 10 19:57:21.646: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:57:21.646: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:57:21.646: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:57:21.651: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
  May 10 19:57:21.652: INFO: Node ip-172-31-238-69.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  May 10 19:57:22.645: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:57:22.645: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:57:22.645: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 19:57:22.650: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 6
  May 10 19:57:22.650: INFO: Number of running nodes: 6, number of available pods: 6 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/10/24 19:57:22.655
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7999, will wait for the garbage collector to delete the pods @ 05/10/24 19:57:22.655
  May 10 19:57:22.717: INFO: Deleting DaemonSet.extensions daemon-set took: 7.904164ms
  May 10 19:57:22.818: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.888165ms
  May 10 19:57:25.324: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 19:57:25.324: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May 10 19:57:25.333: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"30563"},"items":null}

  May 10 19:57:25.339: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"30563"},"items":null}

  May 10 19:57:25.380: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7999" for this suite. @ 05/10/24 19:57:25.386
  << Timeline
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
• [6.910 seconds]
[sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:341

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:19.928
  May 10 19:57:19.928: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 19:57:19.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:19.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:19.958
  STEP: creating a replication controller @ 05/10/24 19:57:19.963
  May 10 19:57:19.963: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-2379 create -f -'
  E0510 19:57:20.569522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:20.999: INFO: stderr: ""
  May 10 19:57:20.999: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/10/24 19:57:20.999
  May 10 19:57:20.999: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-2379 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 10 19:57:21.083: INFO: stderr: ""
  May 10 19:57:21.083: INFO: stdout: "update-demo-nautilus-hb6pw update-demo-nautilus-qdct8 "
  May 10 19:57:21.083: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-2379 get pods update-demo-nautilus-hb6pw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 10 19:57:21.160: INFO: stderr: ""
  May 10 19:57:21.160: INFO: stdout: ""
  May 10 19:57:21.160: INFO: update-demo-nautilus-hb6pw is created but not running
  E0510 19:57:21.569905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:22.570215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:23.571169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:24.571760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:25.572304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:26.160: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-2379 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 10 19:57:26.242: INFO: stderr: ""
  May 10 19:57:26.242: INFO: stdout: "update-demo-nautilus-hb6pw update-demo-nautilus-qdct8 "
  May 10 19:57:26.242: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-2379 get pods update-demo-nautilus-hb6pw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 10 19:57:26.308: INFO: stderr: ""
  May 10 19:57:26.308: INFO: stdout: "true"
  May 10 19:57:26.308: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-2379 get pods update-demo-nautilus-hb6pw -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 10 19:57:26.373: INFO: stderr: ""
  May 10 19:57:26.373: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 10 19:57:26.373: INFO: validating pod update-demo-nautilus-hb6pw
  May 10 19:57:26.379: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 10 19:57:26.379: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 10 19:57:26.379: INFO: update-demo-nautilus-hb6pw is verified up and running
  May 10 19:57:26.379: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-2379 get pods update-demo-nautilus-qdct8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 10 19:57:26.456: INFO: stderr: ""
  May 10 19:57:26.456: INFO: stdout: "true"
  May 10 19:57:26.456: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-2379 get pods update-demo-nautilus-qdct8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 10 19:57:26.531: INFO: stderr: ""
  May 10 19:57:26.531: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 10 19:57:26.531: INFO: validating pod update-demo-nautilus-qdct8
  May 10 19:57:26.541: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 10 19:57:26.541: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 10 19:57:26.541: INFO: update-demo-nautilus-qdct8 is verified up and running
  STEP: using delete to clean up resources @ 05/10/24 19:57:26.541
  May 10 19:57:26.541: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-2379 delete --grace-period=0 --force -f -'
  E0510 19:57:26.572659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:26.629: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 10 19:57:26.629: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  May 10 19:57:26.629: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-2379 get rc,svc -l name=update-demo --no-headers'
  May 10 19:57:26.720: INFO: stderr: "No resources found in kubectl-2379 namespace.\n"
  May 10 19:57:26.720: INFO: stdout: ""
  May 10 19:57:26.720: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-2379 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  May 10 19:57:26.791: INFO: stderr: ""
  May 10 19:57:26.791: INFO: stdout: ""
  May 10 19:57:26.791: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2379" for this suite. @ 05/10/24 19:57:26.815
  << Timeline
------------------------------
SSS
------------------------------
• [13.437 seconds]
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:638

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:26.842
  May 10 19:57:26.842: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename gc @ 05/10/24 19:57:26.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:26.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:26.897
  STEP: create the rc @ 05/10/24 19:57:26.924
  W0510 19:57:26.939967      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0510 19:57:27.573349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:28.574083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:29.574823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:30.575204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:31.576310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:32.577233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 05/10/24 19:57:32.952
  STEP: wait for the rc to be deleted @ 05/10/24 19:57:32.97
  E0510 19:57:33.578247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:33.989: INFO: 80 pods remaining
  May 10 19:57:33.989: INFO: 80 pods has nil DeletionTimestamp
  May 10 19:57:33.989: INFO: 
  E0510 19:57:34.578314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:35.044: INFO: 72 pods remaining
  May 10 19:57:35.044: INFO: 71 pods has nil DeletionTimestamp
  May 10 19:57:35.044: INFO: 
  E0510 19:57:35.579151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:35.994: INFO: 60 pods remaining
  May 10 19:57:35.994: INFO: 60 pods has nil DeletionTimestamp
  May 10 19:57:35.994: INFO: 
  E0510 19:57:36.579929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:36.982: INFO: 40 pods remaining
  May 10 19:57:36.982: INFO: 40 pods has nil DeletionTimestamp
  May 10 19:57:36.982: INFO: 
  E0510 19:57:37.580999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:38.022: INFO: 32 pods remaining
  May 10 19:57:38.022: INFO: 31 pods has nil DeletionTimestamp
  May 10 19:57:38.022: INFO: 
  E0510 19:57:38.581254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:38.987: INFO: 20 pods remaining
  May 10 19:57:38.987: INFO: 20 pods has nil DeletionTimestamp
  May 10 19:57:38.987: INFO: 
  E0510 19:57:39.581915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/10/24 19:57:39.977
  May 10 19:57:40.240: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May 10 19:57:40.241: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-782" for this suite. @ 05/10/24 19:57:40.258
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
• [18.561 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:309

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:25.409
  May 10 19:57:25.409: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/10/24 19:57:25.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:25.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:25.458
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 05/10/24 19:57:25.463
  May 10 19:57:25.463: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 05/10/24 19:57:34.089
  May 10 19:57:34.089: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  May 10 19:57:36.160: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  May 10 19:57:43.947: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8848" for this suite. @ 05/10/24 19:57:43.959
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
• [3.133 seconds]
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:85

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:43.982
  May 10 19:57:43.982: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename replication-controller @ 05/10/24 19:57:43.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:44.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:44.013
  May 10 19:57:44.016: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 05/10/24 19:57:45.053
  STEP: Checking rc "condition-test" has the desired failure condition set @ 05/10/24 19:57:45.062
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 05/10/24 19:57:46.076
  May 10 19:57:46.086: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 05/10/24 19:57:46.086
  May 10 19:57:47.096: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9280" for this suite. @ 05/10/24 19:57:47.106
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [10.314 seconds]
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1455

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:47.124
  May 10 19:57:47.124: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename services @ 05/10/24 19:57:47.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:47.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:47.194
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-4710 @ 05/10/24 19:57:47.202
  STEP: changing the ExternalName service to type=NodePort @ 05/10/24 19:57:47.215
  STEP: creating replication controller externalname-service in namespace services-4710 @ 05/10/24 19:57:47.262
  I0510 19:57:47.298072      24 runners.go:197] Created replication controller with name: externalname-service, namespace: services-4710, replica count: 2
  I0510 19:57:50.349131      24 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 10 19:57:50.349: INFO: Creating new exec pod
  May 10 19:57:53.377: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=services-4710 exec execpodzh6dp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  May 10 19:57:53.515: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  May 10 19:57:53.515: INFO: stdout: ""
  May 10 19:57:54.517: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=services-4710 exec execpodzh6dp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  May 10 19:57:54.678: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  May 10 19:57:54.678: INFO: stdout: ""
  May 10 19:57:55.516: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=services-4710 exec execpodzh6dp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  May 10 19:57:55.665: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  May 10 19:57:55.665: INFO: stdout: "externalname-service-cmsl8"
  May 10 19:57:55.665: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=services-4710 exec execpodzh6dp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.106.85.15 80'
  May 10 19:57:55.825: INFO: stderr: "+ + echonc hostName -v\n -t -w 2 10.106.85.15 80\nConnection to 10.106.85.15 80 port [tcp/http] succeeded!\n"
  May 10 19:57:55.825: INFO: stdout: "externalname-service-cmsl8"
  May 10 19:57:55.825: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=services-4710 exec execpodzh6dp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.238.87 32729'
  May 10 19:57:55.973: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.238.87 32729\nConnection to 172.31.238.87 32729 port [tcp/*] succeeded!\n"
  May 10 19:57:55.973: INFO: stdout: "externalname-service-cmsl8"
  May 10 19:57:55.973: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=services-4710 exec execpodzh6dp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.238.69 32729'
  May 10 19:57:56.158: INFO: stderr: "+ + echonc hostName\n -v -t -w 2 172.31.238.69 32729\nConnection to 172.31.238.69 32729 port [tcp/*] succeeded!\n"
  May 10 19:57:56.159: INFO: stdout: ""
  May 10 19:57:57.159: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=services-4710 exec execpodzh6dp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.238.69 32729'
  May 10 19:57:57.325: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.238.69 32729\nConnection to 172.31.238.69 32729 port [tcp/*] succeeded!\n"
  May 10 19:57:57.325: INFO: stdout: "externalname-service-8fp4z"
  May 10 19:57:57.325: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May 10 19:57:57.343: INFO: Cleaning up the ExternalName to NodePort test service
  STEP: Destroying namespace "services-4710" for this suite. @ 05/10/24 19:57:57.429
  << Timeline
------------------------------
SSSSSSSSSSSS
------------------------------
• [4.109 seconds]
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:57.446
  May 10 19:57:57.446: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename kubelet-test @ 05/10/24 19:57:57.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:57.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:57.472
  STEP: Waiting for pod completion @ 05/10/24 19:57:57.489
  May 10 19:58:01.534: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1999" for this suite. @ 05/10/24 19:58:01.546
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [22.195 seconds]
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:40.292
  May 10 19:57:40.292: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename container-probe @ 05/10/24 19:57:40.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:40.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:40.319
  STEP: Creating pod liveness-f1abee14-98b0-42c8-878f-a37fd9974b39 in namespace container-probe-3384 @ 05/10/24 19:57:40.322
  E0510 19:57:40.582340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:41.583330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/10/24 19:57:42.359
  May 10 19:57:42.373: INFO: Initial restart count of pod liveness-f1abee14-98b0-42c8-878f-a37fd9974b39 is 0
  May 10 19:57:42.381: INFO: Get pod liveness-f1abee14-98b0-42c8-878f-a37fd9974b39 in namespace container-probe-3384
  E0510 19:57:42.583434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:43.584337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:44.386: INFO: Get pod liveness-f1abee14-98b0-42c8-878f-a37fd9974b39 in namespace container-probe-3384
  E0510 19:57:44.584407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:45.584520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:46.391: INFO: Get pod liveness-f1abee14-98b0-42c8-878f-a37fd9974b39 in namespace container-probe-3384
  E0510 19:57:46.585082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:47.586036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:48.394: INFO: Get pod liveness-f1abee14-98b0-42c8-878f-a37fd9974b39 in namespace container-probe-3384
  E0510 19:57:48.587959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:49.588260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:50.407: INFO: Get pod liveness-f1abee14-98b0-42c8-878f-a37fd9974b39 in namespace container-probe-3384
  E0510 19:57:50.588877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:51.589852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:52.411: INFO: Get pod liveness-f1abee14-98b0-42c8-878f-a37fd9974b39 in namespace container-probe-3384
  E0510 19:57:52.590489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:53.590865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:54.416: INFO: Get pod liveness-f1abee14-98b0-42c8-878f-a37fd9974b39 in namespace container-probe-3384
  E0510 19:57:54.591844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:55.592302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:56.424: INFO: Get pod liveness-f1abee14-98b0-42c8-878f-a37fd9974b39 in namespace container-probe-3384
  E0510 19:57:56.593350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:57.594229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:58.429: INFO: Get pod liveness-f1abee14-98b0-42c8-878f-a37fd9974b39 in namespace container-probe-3384
  E0510 19:57:58.594636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:59.595320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:00.437: INFO: Get pod liveness-f1abee14-98b0-42c8-878f-a37fd9974b39 in namespace container-probe-3384
  E0510 19:58:00.595598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:01.596361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:02.442: INFO: Get pod liveness-f1abee14-98b0-42c8-878f-a37fd9974b39 in namespace container-probe-3384
  May 10 19:58:02.442: INFO: Restart count of pod container-probe-3384/liveness-f1abee14-98b0-42c8-878f-a37fd9974b39 is now 1 (20.069026852s elapsed)
  May 10 19:58:02.442: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/10/24 19:58:02.451
  STEP: Destroying namespace "container-probe-3384" for this suite. @ 05/10/24 19:58:02.472
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.202 seconds]
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:47

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:58:01.578
  May 10 19:58:01.578: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:58:01.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:58:01.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:58:01.604
  STEP: Creating configMap with name projected-configmap-test-volume-0c080b8e-9c02-4545-bd99-f318d883a646 @ 05/10/24 19:58:01.606
  STEP: Creating a pod to test consume configMaps @ 05/10/24 19:58:01.615
  STEP: Saw pod success @ 05/10/24 19:58:05.66
  May 10 19:58:05.665: INFO: Trying to get logs from node ip-172-31-237-5.eu-west-3.compute.internal pod pod-projected-configmaps-f5ec4bd1-f8d1-4762-97b3-58271e67fa27 container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 19:58:05.68
  May 10 19:58:05.708: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3100" for this suite. @ 05/10/24 19:58:05.716
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.154 seconds]
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:208

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:58:02.506
  May 10 19:58:02.506: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 19:58:02.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:58:02.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:58:02.545
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 19:58:02.556
  E0510 19:58:02.596696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:03.597310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:04.597873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:05.598748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:06.599012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 19:58:06.599
  May 10 19:58:06.603: INFO: Trying to get logs from node ip-172-31-238-87.eu-west-3.compute.internal pod downwardapi-volume-ae9ac36c-8aea-46f5-bdf2-47818c60d229 container client-container: <nil>
  STEP: delete the pod @ 05/10/24 19:58:06.619
  May 10 19:58:06.643: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-875" for this suite. @ 05/10/24 19:58:06.651
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [0.108 seconds]
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:58:06.671
  May 10 19:58:06.671: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename kubelet-test @ 05/10/24 19:58:06.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:58:06.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:58:06.697
  May 10 19:58:06.754: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3565" for this suite. @ 05/10/24 19:58:06.764
  << Timeline
------------------------------
SSSSSS
------------------------------
• [4.124 seconds]
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:45

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:58:06.784
  May 10 19:58:06.784: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 19:58:06.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:58:06.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:58:06.813
  STEP: Creating a pod to test downward api env vars @ 05/10/24 19:58:06.816
  E0510 19:58:07.599262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:08.599315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:09.599878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:10.600645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 19:58:10.859
  May 10 19:58:10.863: INFO: Trying to get logs from node ip-172-31-238-69.eu-west-3.compute.internal pod downward-api-8e824f07-2b94-4472-b7f6-398caea7dd86 container dapi-container: <nil>
  STEP: delete the pod @ 05/10/24 19:58:10.872
  May 10 19:58:10.892: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7685" for this suite. @ 05/10/24 19:58:10.899
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
• [4.125 seconds]
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:109

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:58:10.927
  May 10 19:58:10.927: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:58:10.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:58:10.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:58:10.953
  STEP: Creating configMap with name projected-configmap-test-volume-map-15331826-fe3d-4936-9492-eb904dd39a52 @ 05/10/24 19:58:10.956
  STEP: Creating a pod to test consume configMaps @ 05/10/24 19:58:10.962
  E0510 19:58:11.601078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:12.601360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:13.602209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:14.603279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 19:58:15.002
  May 10 19:58:15.007: INFO: Trying to get logs from node ip-172-31-238-69.eu-west-3.compute.internal pod pod-projected-configmaps-47ba08c1-f88e-4935-a15d-779e290edeb1 container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 19:58:15.017
  May 10 19:58:15.037: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4511" for this suite. @ 05/10/24 19:58:15.044
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
• [11.172 seconds]
[sig-node] PreStop should call prestop when killing a pod  [Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:58:05.801
  May 10 19:58:05.801: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename prestop @ 05/10/24 19:58:05.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:58:05.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:58:05.829
  STEP: Creating server pod server in namespace prestop-9998 @ 05/10/24 19:58:05.833
  STEP: Waiting for pods to come up. @ 05/10/24 19:58:05.851
  STEP: Creating tester pod tester in namespace prestop-9998 @ 05/10/24 19:58:09.873
  STEP: Deleting pre-stop pod @ 05/10/24 19:58:11.903
  May 10 19:58:16.929: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  May 10 19:58:16.930: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Deleting the server pod @ 05/10/24 19:58:16.94
  STEP: Destroying namespace "prestop-9998" for this suite. @ 05/10/24 19:58:16.961
  << Timeline
------------------------------
SSSSSSSSSSSSSS
------------------------------
• [0.291 seconds]
[sig-network] Services should delete a collection of services [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3552

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:58:16.983
  May 10 19:58:16.983: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename services @ 05/10/24 19:58:16.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:58:17.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:58:17.012
  STEP: creating a collection of services @ 05/10/24 19:58:17.015
  May 10 19:58:17.015: INFO: Creating e2e-svc-a-g2klz
  May 10 19:58:17.033: INFO: Creating e2e-svc-b-vtdfv
  May 10 19:58:17.114: INFO: Creating e2e-svc-c-7fnrt
  STEP: deleting service collection @ 05/10/24 19:58:17.171
  May 10 19:58:17.252: INFO: Collection of services has been deleted
  May 10 19:58:17.252: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3005" for this suite. @ 05/10/24 19:58:17.264
  << Timeline
------------------------------
• [0.061 seconds]
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:58:17.276
  May 10 19:58:17.276: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename field-validation @ 05/10/24 19:58:17.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:58:17.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:58:17.302
  STEP: apply creating a deployment @ 05/10/24 19:58:17.306
  May 10 19:58:17.308: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1492" for this suite. @ 05/10/24 19:58:17.328
  << Timeline
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
• [4.164 seconds]
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:58:17.349
  May 10 19:58:17.349: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:58:17.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:58:17.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:58:17.373
  STEP: Creating projection with secret that has name projected-secret-test-5e591619-990a-46d9-9248-a154e42d2e76 @ 05/10/24 19:58:17.376
  STEP: Creating a pod to test consume secrets @ 05/10/24 19:58:17.382
  STEP: Saw pod success @ 05/10/24 19:58:21.413
  May 10 19:58:21.420: INFO: Trying to get logs from node ip-172-31-236-46.eu-west-3.compute.internal pod pod-projected-secrets-59030174-759b-4adb-8649-0ad0c529fb31 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 19:58:21.431
  May 10 19:58:21.474: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9329" for this suite. @ 05/10/24 19:58:21.494
  << Timeline
------------------------------
SSSS
------------------------------
• [9.121 seconds]
[sig-network] Services should serve multiport endpoints from pods  [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:846

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:58:15.067
  May 10 19:58:15.067: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename services @ 05/10/24 19:58:15.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:58:15.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:58:15.094
  STEP: creating service multi-endpoint-test in namespace services-4230 @ 05/10/24 19:58:15.097
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4230 to expose endpoints map[] @ 05/10/24 19:58:15.122
  May 10 19:58:15.130: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0510 19:58:15.604264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:16.140: INFO: successfully validated that service multi-endpoint-test in namespace services-4230 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4230 @ 05/10/24 19:58:16.14
  E0510 19:58:16.604665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:17.605189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4230 to expose endpoints map[pod1:[100]] @ 05/10/24 19:58:18.176
  May 10 19:58:18.198: INFO: successfully validated that service multi-endpoint-test in namespace services-4230 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-4230 @ 05/10/24 19:58:18.198
  E0510 19:58:18.605753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:19.606239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4230 to expose endpoints map[pod1:[100] pod2:[101]] @ 05/10/24 19:58:20.24
  May 10 19:58:20.268: INFO: successfully validated that service multi-endpoint-test in namespace services-4230 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 05/10/24 19:58:20.268
  May 10 19:58:20.268: INFO: Creating new exec pod
  E0510 19:58:20.606942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:21.607971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:22.608316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:23.299: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=services-4230 exec execpodtxfs8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  May 10 19:58:23.470: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  May 10 19:58:23.470: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 19:58:23.470: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=services-4230 exec execpodtxfs8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.111.141.236 80'
  E0510 19:58:23.608747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:23.627: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.111.141.236 80\nConnection to 10.111.141.236 80 port [tcp/http] succeeded!\n"
  May 10 19:58:23.627: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 19:58:23.627: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=services-4230 exec execpodtxfs8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  May 10 19:58:23.848: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  May 10 19:58:23.848: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 19:58:23.848: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=services-4230 exec execpodtxfs8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.111.141.236 81'
  May 10 19:58:24.028: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.111.141.236 81\nConnection to 10.111.141.236 81 port [tcp/*] succeeded!\n"
  May 10 19:58:24.028: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4230 @ 05/10/24 19:58:24.028
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4230 to expose endpoints map[pod2:[101]] @ 05/10/24 19:58:24.061
  May 10 19:58:24.082: INFO: successfully validated that service multi-endpoint-test in namespace services-4230 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-4230 @ 05/10/24 19:58:24.082
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4230 to expose endpoints map[] @ 05/10/24 19:58:24.106
  May 10 19:58:24.122: INFO: successfully validated that service multi-endpoint-test in namespace services-4230 exposes endpoints map[]
  May 10 19:58:24.122: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4230" for this suite. @ 05/10/24 19:58:24.175
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [10.183 seconds]
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:58:21.518
  May 10 19:58:21.518: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename watch @ 05/10/24 19:58:21.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:58:21.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:58:21.57
  STEP: creating a watch on configmaps with a certain label @ 05/10/24 19:58:21.578
  STEP: creating a new configmap @ 05/10/24 19:58:21.579
  STEP: modifying the configmap once @ 05/10/24 19:58:21.595
  STEP: changing the label value of the configmap @ 05/10/24 19:58:21.618
  STEP: Expecting to observe a delete notification for the watched object @ 05/10/24 19:58:21.641
  May 10 19:58:21.641: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6235  55499d0a-6846-41a9-a3c6-4a1f667ba4ee 33290 0 2024-05-10 19:58:21 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-10 19:58:21 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 19:58:21.642: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6235  55499d0a-6846-41a9-a3c6-4a1f667ba4ee 33291 0 2024-05-10 19:58:21 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-10 19:58:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 19:58:21.642: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6235  55499d0a-6846-41a9-a3c6-4a1f667ba4ee 33292 0 2024-05-10 19:58:21 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-10 19:58:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 05/10/24 19:58:21.642
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 05/10/24 19:58:21.66
  STEP: changing the label value of the configmap back @ 05/10/24 19:58:31.66
  STEP: modifying the configmap a third time @ 05/10/24 19:58:31.67
  STEP: deleting the configmap @ 05/10/24 19:58:31.678
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 05/10/24 19:58:31.685
  May 10 19:58:31.685: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6235  55499d0a-6846-41a9-a3c6-4a1f667ba4ee 33417 0 2024-05-10 19:58:21 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-10 19:58:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 19:58:31.685: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6235  55499d0a-6846-41a9-a3c6-4a1f667ba4ee 33418 0 2024-05-10 19:58:21 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-10 19:58:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 19:58:31.685: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6235  55499d0a-6846-41a9-a3c6-4a1f667ba4ee 33419 0 2024-05-10 19:58:21 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-10 19:58:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 19:58:31.685: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6235" for this suite. @ 05/10/24 19:58:31.692
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
• [8.150 seconds]
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:58:31.715
  May 10 19:58:31.715: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename dns @ 05/10/24 19:58:31.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:58:31.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:58:31.745
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-1988.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-1988.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 05/10/24 19:58:31.751
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-1988.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-1988.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 05/10/24 19:58:31.751
  STEP: creating a pod to probe /etc/hosts @ 05/10/24 19:58:31.751
  STEP: submitting the pod to kubernetes @ 05/10/24 19:58:31.751
  STEP: retrieving the pod @ 05/10/24 19:58:39.796
  STEP: looking for the results for each expected name from probers @ 05/10/24 19:58:39.801
  May 10 19:58:39.822: INFO: DNS probes using dns-1988/dns-test-422097c5-3197-4b17-9fa7-4c3e19a41c21 succeeded

  May 10 19:58:39.822: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/10/24 19:58:39.837
  STEP: Destroying namespace "dns-1988" for this suite. @ 05/10/24 19:58:39.854
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [243.507 seconds]
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:31.704
  May 10 19:55:31.704: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename container-probe @ 05/10/24 19:55:31.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:31.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:31.777
  STEP: Creating pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889 @ 05/10/24 19:55:31.781
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/10/24 19:55:33.815
  May 10 19:55:33.823: INFO: Initial restart count of pod busybox-c9023707-6558-4646-8565-818ba0199ac5 is 0
  May 10 19:55:33.834: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:55:35.842: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:55:37.862: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:55:39.870: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:55:41.877: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:55:43.892: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:55:45.901: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:55:47.913: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:55:49.925: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:55:51.936: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:55:53.943: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:55:55.951: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:55:57.964: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:55:59.976: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:56:01.991: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:56:04.000: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:56:06.008: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:56:08.018: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:56:10.025: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:56:12.038: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:56:14.046: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:56:16.054: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:56:18.061: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:56:20.070: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:56:22.079: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:56:24.087: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:56:26.095: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:56:28.102: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:56:30.109: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:56:32.121: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:56:34.132: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:56:36.149: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:56:38.158: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:56:40.176: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:56:42.183: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:56:44.191: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:56:46.203: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:56:48.210: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:56:50.220: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:56:52.232: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:56:54.240: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:56:56.249: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:56:58.259: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:57:00.267: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:57:02.278: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:57:04.298: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:57:06.306: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:57:08.330: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:57:10.339: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:57:12.365: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:57:14.372: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:57:16.383: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:57:18.391: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:57:20.402: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:57:22.409: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:57:24.420: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:57:26.427: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:57:28.466: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:57:30.508: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:57:32.522: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:57:34.531: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:57:36.558: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:57:38.567: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:57:40.574: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:57:42.580: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:57:44.588: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:57:46.595: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:57:48.604: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:57:50.618: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:57:52.626: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:57:54.633: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:57:56.642: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:57:58.662: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:58:00.674: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:58:02.689: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:58:04.699: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:58:06.712: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:58:08.720: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:58:10.727: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:58:12.734: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:58:14.742: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:58:16.751: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:58:18.760: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:58:20.776: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:58:22.793: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:58:24.802: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:58:26.808: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:58:28.815: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:58:30.827: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:58:32.838: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:58:34.847: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:58:36.855: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:58:38.863: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:58:40.872: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:58:42.879: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:58:44.887: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:58:46.899: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:58:48.906: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:58:50.914: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:58:52.928: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:58:54.938: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:58:56.944: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:58:58.957: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:59:00.970: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:59:02.979: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:59:04.988: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:59:06.996: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:59:09.004: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:59:11.020: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:59:13.030: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:59:15.038: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:59:17.052: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:59:19.069: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:59:21.080: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:59:23.090: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:59:25.100: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:59:27.113: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:59:29.123: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:59:31.131: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:59:33.141: INFO: Get pod busybox-c9023707-6558-4646-8565-818ba0199ac5 in namespace container-probe-5889
  May 10 19:59:35.142: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/10/24 19:59:35.161
  STEP: Destroying namespace "container-probe-5889" for this suite. @ 05/10/24 19:59:35.191
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [0.199 seconds]
[sig-instrumentation] Events API should delete a collection of events [Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:35.222
  May 10 19:59:35.222: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename events @ 05/10/24 19:59:35.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:59:35.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:59:35.267
  STEP: Create set of events @ 05/10/24 19:59:35.273
  STEP: get a list of Events with a label in the current namespace @ 05/10/24 19:59:35.326
  STEP: delete a list of events @ 05/10/24 19:59:35.332
  May 10 19:59:35.332: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/10/24 19:59:35.39
  May 10 19:59:35.397: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6779" for this suite. @ 05/10/24 19:59:35.409
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
• [4.251 seconds]
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:87

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:35.433
  May 10 19:59:35.433: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 19:59:35.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:59:35.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:59:35.525
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 05/10/24 19:59:35.533
  STEP: Saw pod success @ 05/10/24 19:59:39.576
  May 10 19:59:39.583: INFO: Trying to get logs from node ip-172-31-238-69.eu-west-3.compute.internal pod pod-4c62a204-3dc3-42fe-ab1a-b54eb2ee311a container test-container: <nil>
  STEP: delete the pod @ 05/10/24 19:59:39.602
  May 10 19:59:39.647: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-355" for this suite. @ 05/10/24 19:59:39.658
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.234 seconds]
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:89

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:39.712
  May 10 19:59:39.712: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename configmap @ 05/10/24 19:59:39.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:59:39.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:59:39.767
  STEP: Creating configMap with name configmap-test-volume-map-7d593567-0fa8-4d83-b3f5-d145de21bab9 @ 05/10/24 19:59:39.772
  STEP: Creating a pod to test consume configMaps @ 05/10/24 19:59:39.781
  STEP: Saw pod success @ 05/10/24 19:59:43.832
  May 10 19:59:43.847: INFO: Trying to get logs from node ip-172-31-237-5.eu-west-3.compute.internal pod pod-configmaps-b5a956d4-6dd5-45e5-919f-105c4eb5ee73 container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 19:59:43.871
  May 10 19:59:43.915: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9997" for this suite. @ 05/10/24 19:59:43.927
  << Timeline
------------------------------
S
------------------------------
• [2.191 seconds]
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:43.949
  May 10 19:59:43.949: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename container-runtime @ 05/10/24 19:59:43.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:59:43.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:59:43.989
  STEP: create the container @ 05/10/24 19:59:43.994
  W0510 19:59:44.018570      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/10/24 19:59:44.018
  STEP: get the container status @ 05/10/24 19:59:46.056
  STEP: the container should be terminated @ 05/10/24 19:59:46.064
  STEP: the termination message should be set @ 05/10/24 19:59:46.064
  May 10 19:59:46.064: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 05/10/24 19:59:46.064
  May 10 19:59:46.098: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7437" for this suite. @ 05/10/24 19:59:46.121
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.120 seconds]
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:46.164
  May 10 19:59:46.164: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename kubelet-test @ 05/10/24 19:59:46.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:59:46.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:59:46.211
  May 10 19:59:50.250: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-978" for this suite. @ 05/10/24 19:59:50.271
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [6.342 seconds]
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:50.301
  May 10 19:59:50.301: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename secrets @ 05/10/24 19:59:50.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:59:50.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:59:50.347
  STEP: Creating secret with name s-test-opt-del-e21637b4-69fa-4dc7-b2d7-07dcade2cbb2 @ 05/10/24 19:59:50.381
  STEP: Creating secret with name s-test-opt-upd-c8062397-827b-4b24-8624-4d881909d6d3 @ 05/10/24 19:59:50.391
  STEP: Creating the pod @ 05/10/24 19:59:50.4
  STEP: Deleting secret s-test-opt-del-e21637b4-69fa-4dc7-b2d7-07dcade2cbb2 @ 05/10/24 19:59:52.499
  STEP: Updating secret s-test-opt-upd-c8062397-827b-4b24-8624-4d881909d6d3 @ 05/10/24 19:59:52.515
  STEP: Creating secret with name s-test-opt-create-67df4edd-1e6c-4a31-8ad9-9ecc49aa29a8 @ 05/10/24 19:59:52.524
  STEP: waiting to observe update in volume @ 05/10/24 19:59:52.54
  May 10 19:59:56.611: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8265" for this suite. @ 05/10/24 19:59:56.623
  << Timeline
------------------------------
SSSSSS
------------------------------
• [3.307 seconds]
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:56.649
  May 10 19:59:56.649: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename field-validation @ 05/10/24 19:59:56.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:59:56.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:59:56.689
  May 10 19:59:56.696: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  May 10 19:59:59.908: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2518" for this suite. @ 05/10/24 19:59:59.944
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.396 seconds]
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:197

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:59.97
  May 10 19:59:59.970: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 19:59:59.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:00:00.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:00:00.125
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/10/24 20:00:00.157
  STEP: Saw pod success @ 05/10/24 20:00:04.261
  May 10 20:00:04.276: INFO: Trying to get logs from node ip-172-31-238-69.eu-west-3.compute.internal pod pod-634628d9-84c2-4fea-845c-744857f6ad90 container test-container: <nil>
  STEP: delete the pod @ 05/10/24 20:00:04.289
  May 10 20:00:04.337: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1525" for this suite. @ 05/10/24 20:00:04.35
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [1.981 seconds]
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1707

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:00:04.375
  May 10 20:00:04.375: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 20:00:04.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:00:04.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:00:04.413
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/10/24 20:00:04.419
  May 10 20:00:04.419: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=kubectl-6666 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  May 10 20:00:04.520: INFO: stderr: ""
  May 10 20:00:04.520: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/10/24 20:00:04.52
  May 10 20:00:04.535: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=kubectl-6666 delete pods e2e-test-httpd-pod'
  May 10 20:00:06.324: INFO: stderr: ""
  May 10 20:00:06.324: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  May 10 20:00:06.324: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6666" for this suite. @ 05/10/24 20:00:06.337
  << Timeline
------------------------------
SSSSSSSSSSSSSS
------------------------------
• [4.267 seconds]
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:99

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:00:06.366
  May 10 20:00:06.366: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename configmap @ 05/10/24 20:00:06.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:00:06.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:00:06.407
  STEP: Creating configMap with name configmap-test-volume-map-b1830216-d751-4f99-bbcd-c71b3ee5210d @ 05/10/24 20:00:06.412
  STEP: Creating a pod to test consume configMaps @ 05/10/24 20:00:06.439
  STEP: Saw pod success @ 05/10/24 20:00:10.528
  May 10 20:00:10.535: INFO: Trying to get logs from node ip-172-31-237-27.eu-west-3.compute.internal pod pod-configmaps-2c1c0da5-0a81-4c60-97b5-608e9bc9cd8b container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 20:00:10.558
  May 10 20:00:10.606: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8056" for this suite. @ 05/10/24 20:00:10.62
  << Timeline
------------------------------
SS
------------------------------
• [37.514 seconds]
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:00:10.639
  May 10 20:00:10.639: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename dns @ 05/10/24 20:00:10.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:00:10.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:00:10.687
  STEP: Creating a test headless service @ 05/10/24 20:00:10.693
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2641.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-2641.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2641.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-2641.svc.cluster.local;sleep 1; done
   @ 05/10/24 20:00:10.705
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2641.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-2641.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2641.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-2641.svc.cluster.local;sleep 1; done
   @ 05/10/24 20:00:10.705
  STEP: creating a pod to probe DNS @ 05/10/24 20:00:10.705
  STEP: submitting the pod to kubernetes @ 05/10/24 20:00:10.705
  STEP: retrieving the pod @ 05/10/24 20:00:12.789
  STEP: looking for the results for each expected name from probers @ 05/10/24 20:00:12.808
  May 10 20:00:12.826: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:12.841: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:12.857: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:12.879: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:12.896: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:12.907: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:12.916: INFO: Unable to read jessie_udp@dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:12.923: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:12.923: INFO: Lookups using dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local wheezy_udp@dns-test-service-2.dns-2641.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2641.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local jessie_udp@dns-test-service-2.dns-2641.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2641.svc.cluster.local]

  May 10 20:00:12.934: INFO: Pod client logs for webserver: 
  May 10 20:00:12.946: INFO: Pod client logs for querier: 
  May 10 20:00:12.963: INFO: Pod client logs for jessie-querier: 
  May 10 20:00:17.973: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:17.981: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:17.993: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:18.005: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:18.014: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:18.027: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:18.036: INFO: Unable to read jessie_udp@dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:18.044: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:18.044: INFO: Lookups using dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local wheezy_udp@dns-test-service-2.dns-2641.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2641.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local jessie_udp@dns-test-service-2.dns-2641.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2641.svc.cluster.local]

  May 10 20:00:18.058: INFO: Pod client logs for webserver: 
  May 10 20:00:18.074: INFO: Pod client logs for querier: 
  May 10 20:00:18.087: INFO: Pod client logs for jessie-querier: 
  May 10 20:00:22.971: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:22.978: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:22.986: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:22.994: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:23.004: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:23.013: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:23.020: INFO: Unable to read jessie_udp@dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:23.028: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:23.028: INFO: Lookups using dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local wheezy_udp@dns-test-service-2.dns-2641.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2641.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local jessie_udp@dns-test-service-2.dns-2641.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2641.svc.cluster.local]

  May 10 20:00:23.040: INFO: Pod client logs for webserver: 
  May 10 20:00:23.052: INFO: Pod client logs for querier: 
  May 10 20:00:23.071: INFO: Pod client logs for jessie-querier: 
  May 10 20:00:27.972: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:27.981: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:27.989: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:27.996: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:28.004: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:28.011: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:28.019: INFO: Unable to read jessie_udp@dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:28.028: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:28.028: INFO: Lookups using dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local wheezy_udp@dns-test-service-2.dns-2641.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2641.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local jessie_udp@dns-test-service-2.dns-2641.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2641.svc.cluster.local]

  May 10 20:00:28.045: INFO: Pod client logs for webserver: 
  May 10 20:00:28.057: INFO: Pod client logs for querier: 
  May 10 20:00:28.069: INFO: Pod client logs for jessie-querier: 
  May 10 20:00:32.971: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:32.980: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:32.987: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:32.994: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:33.001: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:33.008: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:33.015: INFO: Unable to read jessie_udp@dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:33.025: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:33.025: INFO: Lookups using dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local wheezy_udp@dns-test-service-2.dns-2641.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2641.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local jessie_udp@dns-test-service-2.dns-2641.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2641.svc.cluster.local]

  May 10 20:00:33.037: INFO: Pod client logs for webserver: 
  May 10 20:00:33.053: INFO: Pod client logs for querier: 
  May 10 20:00:33.065: INFO: Pod client logs for jessie-querier: 
  May 10 20:00:37.973: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:37.981: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:37.989: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:37.998: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:38.009: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:38.018: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:38.035: INFO: Unable to read jessie_udp@dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:38.044: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:38.044: INFO: Lookups using dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local wheezy_udp@dns-test-service-2.dns-2641.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2641.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local jessie_udp@dns-test-service-2.dns-2641.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2641.svc.cluster.local]

  May 10 20:00:38.056: INFO: Pod client logs for webserver: 
  May 10 20:00:38.069: INFO: Pod client logs for querier: 
  May 10 20:00:38.086: INFO: Pod client logs for jessie-querier: 
  May 10 20:00:42.972: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:42.980: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:43.001: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:43.010: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:43.018: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:43.025: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:43.033: INFO: Unable to read jessie_udp@dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:43.045: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-2641.svc.cluster.local from pod dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820: the server could not find the requested resource (get pods dns-test-10220740-b135-4d29-bf1b-9eaa40b99820)
  May 10 20:00:43.045: INFO: Lookups using dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local wheezy_udp@dns-test-service-2.dns-2641.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2641.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2641.svc.cluster.local jessie_udp@dns-test-service-2.dns-2641.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2641.svc.cluster.local]

  May 10 20:00:43.062: INFO: Pod client logs for webserver: 
  May 10 20:00:43.078: INFO: Pod client logs for querier: 
  May 10 20:00:43.093: INFO: Pod client logs for jessie-querier: 
  May 10 20:00:48.040: INFO: DNS probes using dns-2641/dns-test-10220740-b135-4d29-bf1b-9eaa40b99820 succeeded

  May 10 20:00:48.040: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/10/24 20:00:48.057
  STEP: deleting the test headless service @ 05/10/24 20:00:48.093
  STEP: Destroying namespace "dns-2641" for this suite. @ 05/10/24 20:00:48.133
  << Timeline
------------------------------
SSSS
------------------------------
• [2.216 seconds]
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:00:48.158
  May 10 20:00:48.158: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/10/24 20:00:48.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:00:48.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:00:48.206
  May 10 20:00:50.293: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Cleaning up the secret @ 05/10/24 20:00:50.305
  STEP: Cleaning up the configmap @ 05/10/24 20:00:50.318
  STEP: Cleaning up the pod @ 05/10/24 20:00:50.334
  STEP: Destroying namespace "emptydir-wrapper-9901" for this suite. @ 05/10/24 20:00:50.357
  << Timeline
------------------------------
SSS
------------------------------
• [4.223 seconds]
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:95

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:00:50.377
  May 10 20:00:50.377: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename var-expansion @ 05/10/24 20:00:50.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:00:50.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:00:50.426
  STEP: Creating a pod to test substitution in container's args @ 05/10/24 20:00:50.434
  STEP: Saw pod success @ 05/10/24 20:00:54.506
  May 10 20:00:54.517: INFO: Trying to get logs from node ip-172-31-237-27.eu-west-3.compute.internal pod var-expansion-b100146b-53fb-45c2-8c40-ac848bb0f784 container dapi-container: <nil>
  STEP: delete the pod @ 05/10/24 20:00:54.546
  May 10 20:00:54.578: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6094" for this suite. @ 05/10/24 20:00:54.588
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
• [0.186 seconds]
[sig-node] PodTemplates should delete a collection of pod templates [Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:122

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:00:54.615
  May 10 20:00:54.615: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename podtemplate @ 05/10/24 20:00:54.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:00:54.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:00:54.652
  STEP: Create set of pod templates @ 05/10/24 20:00:54.657
  May 10 20:00:54.666: INFO: created test-podtemplate-1
  May 10 20:00:54.675: INFO: created test-podtemplate-2
  May 10 20:00:54.688: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 05/10/24 20:00:54.688
  STEP: delete collection of pod templates @ 05/10/24 20:00:54.695
  May 10 20:00:54.695: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 05/10/24 20:00:54.754
  May 10 20:00:54.754: INFO: requesting list of pod templates to confirm quantity
  May 10 20:00:54.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6009" for this suite. @ 05/10/24 20:00:54.787
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [4.191 seconds]
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:00:54.808
  May 10 20:00:54.808: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename disruption @ 05/10/24 20:00:54.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:00:54.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:00:54.84
  STEP: Waiting for the pdb to be processed @ 05/10/24 20:00:54.853
  STEP: Updating PodDisruptionBudget status @ 05/10/24 20:00:56.868
  STEP: Waiting for all pods to be running @ 05/10/24 20:00:56.881
  May 10 20:00:56.894: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 05/10/24 20:00:58.901
  STEP: Waiting for the pdb to be processed @ 05/10/24 20:00:58.925
  STEP: Patching PodDisruptionBudget status @ 05/10/24 20:00:58.942
  STEP: Waiting for the pdb to be processed @ 05/10/24 20:00:58.961
  May 10 20:00:58.969: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7100" for this suite. @ 05/10/24 20:00:58.98
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
• [16.187 seconds]
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:161

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:00:59.019
  May 10 20:00:59.019: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 20:00:59.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:00:59.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:00:59.056
  STEP: Discovering how many secrets are in namespace by default @ 05/10/24 20:00:59.06
  STEP: Counting existing ResourceQuota @ 05/10/24 20:01:04.088
  STEP: Creating a ResourceQuota @ 05/10/24 20:01:09.095
  STEP: Ensuring resource quota status is calculated @ 05/10/24 20:01:09.105
  STEP: Creating a Secret @ 05/10/24 20:01:11.113
  STEP: Ensuring resource quota status captures secret creation @ 05/10/24 20:01:11.144
  STEP: Deleting a secret @ 05/10/24 20:01:13.153
  STEP: Ensuring resource quota status released usage @ 05/10/24 20:01:13.166
  May 10 20:01:15.173: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2516" for this suite. @ 05/10/24 20:01:15.187
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [25.139 seconds]
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:95

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:01:15.214
  May 10 20:01:15.214: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename pod-network-test @ 05/10/24 20:01:15.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:01:15.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:01:15.246
  STEP: Performing setup for networking test in namespace pod-network-test-3412 @ 05/10/24 20:01:15.251
  STEP: creating a selector @ 05/10/24 20:01:15.251
  STEP: Creating the service pods in kubernetes @ 05/10/24 20:01:15.251
  May 10 20:01:15.251: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/10/24 20:01:37.623
  May 10 20:01:39.660: INFO: Setting MaxTries for pod polling to 66 for networking test based on endpoint count 6
  May 10 20:01:39.660: INFO: Breadth first check of 10.244.7.58 on host 172.31.236.144...
  May 10 20:01:39.665: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.5.112:9080/dial?request=hostname&protocol=udp&host=10.244.7.58&port=8081&tries=1'] Namespace:pod-network-test-3412 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:01:39.666: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  May 10 20:01:39.666: INFO: ExecWithOptions: Clientset creation
  May 10 20:01:39.666: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3412/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.5.112%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.7.58%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 10 20:01:39.747: INFO: Waiting for responses: map[]
  May 10 20:01:39.747: INFO: reached 10.244.7.58 after 0/1 tries
  May 10 20:01:39.747: INFO: Breadth first check of 10.244.3.115 on host 172.31.236.46...
  May 10 20:01:39.761: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.5.112:9080/dial?request=hostname&protocol=udp&host=10.244.3.115&port=8081&tries=1'] Namespace:pod-network-test-3412 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:01:39.761: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  May 10 20:01:39.761: INFO: ExecWithOptions: Clientset creation
  May 10 20:01:39.761: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3412/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.5.112%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.3.115%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 10 20:01:39.862: INFO: Waiting for responses: map[]
  May 10 20:01:39.862: INFO: reached 10.244.3.115 after 0/1 tries
  May 10 20:01:39.862: INFO: Breadth first check of 10.244.6.112 on host 172.31.237.27...
  May 10 20:01:39.876: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.5.112:9080/dial?request=hostname&protocol=udp&host=10.244.6.112&port=8081&tries=1'] Namespace:pod-network-test-3412 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:01:39.876: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  May 10 20:01:39.876: INFO: ExecWithOptions: Clientset creation
  May 10 20:01:39.876: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3412/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.5.112%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.6.112%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 10 20:01:39.973: INFO: Waiting for responses: map[]
  May 10 20:01:39.973: INFO: reached 10.244.6.112 after 0/1 tries
  May 10 20:01:39.973: INFO: Breadth first check of 10.244.4.98 on host 172.31.237.5...
  May 10 20:01:39.990: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.5.112:9080/dial?request=hostname&protocol=udp&host=10.244.4.98&port=8081&tries=1'] Namespace:pod-network-test-3412 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:01:39.990: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  May 10 20:01:39.990: INFO: ExecWithOptions: Clientset creation
  May 10 20:01:39.990: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3412/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.5.112%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.4.98%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 10 20:01:40.084: INFO: Waiting for responses: map[]
  May 10 20:01:40.084: INFO: reached 10.244.4.98 after 0/1 tries
  May 10 20:01:40.084: INFO: Breadth first check of 10.244.5.111 on host 172.31.238.69...
  May 10 20:01:40.094: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.5.112:9080/dial?request=hostname&protocol=udp&host=10.244.5.111&port=8081&tries=1'] Namespace:pod-network-test-3412 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:01:40.094: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  May 10 20:01:40.095: INFO: ExecWithOptions: Clientset creation
  May 10 20:01:40.095: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3412/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.5.112%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.5.111%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 10 20:01:40.187: INFO: Waiting for responses: map[]
  May 10 20:01:40.187: INFO: reached 10.244.5.111 after 0/1 tries
  May 10 20:01:40.187: INFO: Breadth first check of 10.244.8.110 on host 172.31.238.87...
  May 10 20:01:40.218: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.5.112:9080/dial?request=hostname&protocol=udp&host=10.244.8.110&port=8081&tries=1'] Namespace:pod-network-test-3412 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:01:40.218: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  May 10 20:01:40.218: INFO: ExecWithOptions: Clientset creation
  May 10 20:01:40.218: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3412/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.5.112%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.8.110%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 10 20:01:40.314: INFO: Waiting for responses: map[]
  May 10 20:01:40.314: INFO: reached 10.244.8.110 after 0/1 tries
  May 10 20:01:40.314: INFO: Going to retry 0 out of 6 pods....
  May 10 20:01:40.315: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3412" for this suite. @ 05/10/24 20:01:40.329
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
• [0.265 seconds]
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:398

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:01:40.367
  May 10 20:01:40.367: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename namespaces @ 05/10/24 20:01:40.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:01:40.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:01:40.41
  STEP: Creating namespace "e2e-ns-v9dl5" @ 05/10/24 20:01:40.415
  May 10 20:01:40.474: INFO: Namespace "e2e-ns-v9dl5-4058" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-v9dl5-4058" @ 05/10/24 20:01:40.474
  May 10 20:01:40.499: INFO: Namespace "e2e-ns-v9dl5-4058" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-v9dl5-4058" @ 05/10/24 20:01:40.499
  May 10 20:01:40.543: INFO: Namespace "e2e-ns-v9dl5-4058" has []v1.FinalizerName{"kubernetes"}
  May 10 20:01:40.543: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4064" for this suite. @ 05/10/24 20:01:40.571
  STEP: Destroying namespace "e2e-ns-v9dl5-4058" for this suite. @ 05/10/24 20:01:40.608
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [0.081 seconds]
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:138

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:01:40.644
  May 10 20:01:40.644: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename configmap @ 05/10/24 20:01:40.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:01:40.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:01:40.688
  STEP: Creating configMap that has name configmap-test-emptyKey-7e5d082e-4bbf-4a7e-8cd8-2a7b2ccf5366 @ 05/10/24 20:01:40.693
  May 10 20:01:40.696: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7337" for this suite. @ 05/10/24 20:01:40.706
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [4.404 seconds]
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:01:40.736
  May 10 20:01:40.736: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename daemonsets @ 05/10/24 20:01:40.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:01:40.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:01:40.77
  STEP: Creating simple DaemonSet "daemon-set" @ 05/10/24 20:01:40.87
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/10/24 20:01:40.88
  May 10 20:01:40.898: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:01:40.898: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:01:40.898: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:01:40.911: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 20:01:40.911: INFO: Node ip-172-31-236-144.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  May 10 20:01:41.922: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:01:41.922: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:01:41.922: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:01:41.930: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 20:01:41.930: INFO: Node ip-172-31-236-144.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  May 10 20:01:42.925: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:01:42.925: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:01:42.925: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:01:42.934: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
  May 10 20:01:42.934: INFO: Node ip-172-31-237-27.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  May 10 20:01:43.926: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:01:43.926: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:01:43.926: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:01:43.936: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
  May 10 20:01:43.936: INFO: Node ip-172-31-237-27.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  May 10 20:01:44.924: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:01:44.932: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:01:44.932: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:01:44.940: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 6
  May 10 20:01:44.940: INFO: Number of running nodes: 6, number of available pods: 6 in daemonset daemon-set
  STEP: listing all DaemonSets @ 05/10/24 20:01:44.957
  STEP: DeleteCollection of the DaemonSets @ 05/10/24 20:01:44.974
  STEP: Verify that ReplicaSets have been deleted @ 05/10/24 20:01:45.006
  May 10 20:01:45.048: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"35075"},"items":null}

  May 10 20:01:45.060: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"35076"},"items":[{"metadata":{"name":"daemon-set-4dkjh","generateName":"daemon-set-","namespace":"daemonsets-7361","uid":"7782970f-93a7-4e51-bcc1-a265fc18fbd4","resourceVersion":"35047","creationTimestamp":"2024-05-10T20:01:40Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"a17a4f15cede4c2ceb3927efc30cc4b5ec3b6158495b737762614da84278a83e","cni.projectcalico.org/podIP":"10.244.3.116/32","cni.projectcalico.org/podIPs":"10.244.3.116/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"b73cb9ee-2e5c-4261-81a3-a38bb4aadea3","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:01:40Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b73cb9ee-2e5c-4261-81a3-a38bb4aadea3\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:01:41Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:01:42Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.3.116\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-qw6b6","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-qw6b6","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-236-46.eu-west-3.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-236-46.eu-west-3.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:01:40Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:01:42Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:01:42Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:01:40Z"}],"hostIP":"172.31.236.46","podIP":"10.244.3.116","podIPs":[{"ip":"10.244.3.116"}],"startTime":"2024-05-10T20:01:40Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-10T20:01:41Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://7c10d19578cb458c0ec677f53adabc6aaea0dab9fce7fa0a410cacdac41745ae","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-66q77","generateName":"daemon-set-","namespace":"daemonsets-7361","uid":"3272596d-77c7-4536-ad2a-2800ae3ec13e","resourceVersion":"35074","creationTimestamp":"2024-05-10T20:01:40Z","deletionTimestamp":"2024-05-10T20:02:15Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"9bdcd295c557d8dae4e7b9e54222832f36b92d7eebcdf8b80e00e850e5415f47","cni.projectcalico.org/podIP":"10.244.7.59/32","cni.projectcalico.org/podIPs":"10.244.7.59/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"b73cb9ee-2e5c-4261-81a3-a38bb4aadea3","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:01:40Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b73cb9ee-2e5c-4261-81a3-a38bb4aadea3\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:01:41Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:01:41Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.7.59\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-khsvh","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-khsvh","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-236-144.eu-west-3.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-236-144.eu-west-3.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:01:41Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:01:41Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:01:41Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:01:40Z"}],"hostIP":"172.31.236.144","podIP":"10.244.7.59","podIPs":[{"ip":"10.244.7.59"}],"startTime":"2024-05-10T20:01:41Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-10T20:01:41Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://0179b8d02f3b9b281445639ae27331198079068c57f89d31af3d228075295733","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-8ssr9","generateName":"daemon-set-","namespace":"daemonsets-7361","uid":"9fd72fac-5834-4afc-9b29-ce33efc4fd6f","resourceVersion":"35075","creationTimestamp":"2024-05-10T20:01:40Z","deletionTimestamp":"2024-05-10T20:02:15Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"3d67610af998f5be3150d2772ce4a8815ae48abbfc569193a10a11238f4251a2","cni.projectcalico.org/podIP":"10.244.5.113/32","cni.projectcalico.org/podIPs":"10.244.5.113/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"b73cb9ee-2e5c-4261-81a3-a38bb4aadea3","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:01:40Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b73cb9ee-2e5c-4261-81a3-a38bb4aadea3\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:01:41Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:01:42Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.5.113\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-bwfsh","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-bwfsh","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-238-69.eu-west-3.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-238-69.eu-west-3.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:01:41Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:01:42Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:01:42Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:01:40Z"}],"hostIP":"172.31.238.69","podIP":"10.244.5.113","podIPs":[{"ip":"10.244.5.113"}],"startTime":"2024-05-10T20:01:41Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-10T20:01:41Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://a1eb271db279774b04c21957b64a5fc19b32945f45610f4fb91fe042886b67e9","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-b7tn9","generateName":"daemon-set-","namespace":"daemonsets-7361","uid":"eea266e8-660c-4312-a020-139341528a05","resourceVersion":"35053","creationTimestamp":"2024-05-10T20:01:40Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"126a56d39670b7c719f8c0a7abd67402386520ff843ad26aafddf1e3d0a9e190","cni.projectcalico.org/podIP":"10.244.4.99/32","cni.projectcalico.org/podIPs":"10.244.4.99/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"b73cb9ee-2e5c-4261-81a3-a38bb4aadea3","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:01:40Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b73cb9ee-2e5c-4261-81a3-a38bb4aadea3\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:01:41Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:01:42Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.4.99\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-lkjsb","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-lkjsb","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-237-5.eu-west-3.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-237-5.eu-west-3.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:01:40Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:01:42Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:01:42Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:01:40Z"}],"hostIP":"172.31.237.5","podIP":"10.244.4.99","podIPs":[{"ip":"10.244.4.99"}],"startTime":"2024-05-10T20:01:40Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-10T20:01:41Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://775059de21dab22434884c1edf41bc66a9d16ed47b248eb5a7bf48d8127d17d2","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-jxk77","generateName":"daemon-set-","namespace":"daemonsets-7361","uid":"8da22c51-1084-4a89-810d-6b2325375964","resourceVersion":"35069","creationTimestamp":"2024-05-10T20:01:40Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"77f7e8293b56a8cbd25b67f7c042f665b2fad2f6e3cdb979e89d539aeb0c9250","cni.projectcalico.org/podIP":"10.244.6.113/32","cni.projectcalico.org/podIPs":"10.244.6.113/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"b73cb9ee-2e5c-4261-81a3-a38bb4aadea3","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:01:40Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b73cb9ee-2e5c-4261-81a3-a38bb4aadea3\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:01:43Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:01:44Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.6.113\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-qtl75","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-qtl75","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-237-27.eu-west-3.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-237-27.eu-west-3.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:01:41Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:01:44Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:01:44Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:01:40Z"}],"hostIP":"172.31.237.27","podIP":"10.244.6.113","podIPs":[{"ip":"10.244.6.113"}],"startTime":"2024-05-10T20:01:41Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-10T20:01:43Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://62a5af327dec2991bf872f5ce9124378274afb7c46e33bd79367dae10d1a1c43","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-zshm6","generateName":"daemon-set-","namespace":"daemonsets-7361","uid":"d304b17d-ed1f-4956-bbea-48b7fa7fca2a","resourceVersion":"35057","creationTimestamp":"2024-05-10T20:01:40Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"e5b125cf180ecd84cdde8ccf64741b3a34158b0d0bfc25661782e4b5e0cbac5a","cni.projectcalico.org/podIP":"10.244.8.111/32","cni.projectcalico.org/podIPs":"10.244.8.111/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"b73cb9ee-2e5c-4261-81a3-a38bb4aadea3","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:01:40Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b73cb9ee-2e5c-4261-81a3-a38bb4aadea3\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:01:41Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:01:42Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.8.111\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-lnvdq","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-lnvdq","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-238-87.eu-west-3.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-238-87.eu-west-3.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:01:40Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:01:42Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:01:42Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:01:40Z"}],"hostIP":"172.31.238.87","podIP":"10.244.8.111","podIPs":[{"ip":"10.244.8.111"}],"startTime":"2024-05-10T20:01:40Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-10T20:01:41Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://3283f019e98848563e3ca355922af0d2815529dc9a71fc267ac547df5542bb25","started":true}],"qosClass":"BestEffort"}}]}

  May 10 20:01:45.120: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7361" for this suite. @ 05/10/24 20:01:45.128
  << Timeline
------------------------------
SSSS
------------------------------
• [10.359 seconds]
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:321

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:01:45.144
  May 10 20:01:45.144: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename gc @ 05/10/24 20:01:45.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:01:45.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:01:45.175
  STEP: create the rc @ 05/10/24 20:01:45.18
  W0510 20:01:45.189145      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 05/10/24 20:01:50.218
  STEP: wait for all pods to be garbage collected @ 05/10/24 20:01:50.232
  STEP: Gathering metrics @ 05/10/24 20:01:55.248
  May 10 20:01:55.482: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May 10 20:01:55.482: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3140" for this suite. @ 05/10/24 20:01:55.491
  << Timeline
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
• [243.030 seconds]
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:58:39.872
  May 10 19:58:39.872: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename container-probe @ 05/10/24 19:58:39.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:58:39.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:58:39.896
  STEP: Creating pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375 @ 05/10/24 19:58:39.9
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/10/24 19:58:41.923
  May 10 19:58:41.927: INFO: Initial restart count of pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b is 0
  May 10 19:58:41.932: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:58:43.936: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:58:45.940: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:58:47.944: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:58:49.950: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:58:51.958: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:58:53.962: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:58:55.967: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:58:57.978: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:58:59.985: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:59:01.990: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:59:03.994: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:59:06.003: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:59:08.012: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:59:10.017: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:59:12.030: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:59:14.036: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:59:16.041: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:59:18.048: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:59:20.054: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:59:22.060: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:59:24.065: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:59:26.076: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:59:28.081: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:59:30.086: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:59:32.093: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:59:34.104: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:59:36.108: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:59:38.113: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:59:40.118: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:59:42.123: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:59:44.128: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:59:46.136: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:59:48.142: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:59:50.156: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:59:52.187: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:59:54.192: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:59:56.197: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 19:59:58.206: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:00:00.219: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:00:02.250: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:00:04.259: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:00:06.264: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:00:08.272: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:00:10.302: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:00:12.307: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:00:14.311: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:00:16.319: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:00:18.324: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:00:20.329: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:00:22.334: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:00:24.341: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:00:26.347: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:00:28.356: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:00:30.362: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:00:32.367: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:00:34.373: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:00:36.377: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:00:38.382: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:00:40.387: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:00:42.391: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:00:44.403: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:00:46.417: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:00:48.421: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:00:50.427: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:00:52.434: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:00:54.438: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:00:56.443: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:00:58.448: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:01:00.456: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:01:02.465: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:01:04.471: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:01:06.481: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:01:08.494: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:01:10.500: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:01:12.509: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:01:14.520: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:01:16.526: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:01:18.534: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:01:20.538: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:01:22.544: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:01:24.549: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:01:26.554: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:01:28.558: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:01:30.568: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:01:32.573: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:01:34.579: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:01:36.586: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:01:38.593: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:01:40.636: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:01:42.641: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:01:44.647: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:01:46.654: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:01:48.659: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:01:50.668: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:01:52.672: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:01:54.677: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:01:56.682: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:01:58.687: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:02:00.698: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:02:02.705: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:02:04.710: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:02:06.717: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:02:08.722: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:02:10.726: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:02:12.732: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:02:14.743: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:02:16.749: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:02:18.760: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:02:20.766: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:02:22.774: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:02:24.785: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:02:26.791: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:02:28.800: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:02:30.806: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:02:32.813: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:02:34.818: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:02:36.827: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:02:38.832: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:02:40.838: INFO: Get pod test-webserver-67c625db-f9f1-4913-8df4-27f96933bd0b in namespace container-probe-6375
  May 10 20:02:42.838: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/10/24 20:02:42.846
  STEP: Destroying namespace "container-probe-6375" for this suite. @ 05/10/24 20:02:42.89
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.268 seconds]
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:85

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:02:42.933
  May 10 20:02:42.933: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 20:02:42.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:02:43.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:02:43.027
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 20:02:43.031
  STEP: Saw pod success @ 05/10/24 20:02:47.071
  May 10 20:02:47.075: INFO: Trying to get logs from node ip-172-31-237-5.eu-west-3.compute.internal pod downwardapi-volume-605645d3-bfcf-4f26-85cc-71fadaa035fe container client-container: <nil>
  STEP: delete the pod @ 05/10/24 20:02:47.09
  May 10 20:02:47.138: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9398" for this suite. @ 05/10/24 20:02:47.162
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [6.472 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:236

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:02:47.22
  May 10 20:02:47.220: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/10/24 20:02:47.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:02:47.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:02:47.263
  May 10 20:02:47.268: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/10/24 20:02:49.339
  May 10 20:02:49.339: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=crd-publish-openapi-166 --namespace=crd-publish-openapi-166 create -f -'
  May 10 20:02:50.006: INFO: stderr: ""
  May 10 20:02:50.006: INFO: stdout: "e2e-test-crd-publish-openapi-6340-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  May 10 20:02:50.006: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=crd-publish-openapi-166 --namespace=crd-publish-openapi-166 delete e2e-test-crd-publish-openapi-6340-crds test-cr'
  May 10 20:02:50.094: INFO: stderr: ""
  May 10 20:02:50.094: INFO: stdout: "e2e-test-crd-publish-openapi-6340-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  May 10 20:02:50.094: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=crd-publish-openapi-166 --namespace=crd-publish-openapi-166 apply -f -'
  May 10 20:02:51.019: INFO: stderr: ""
  May 10 20:02:51.019: INFO: stdout: "e2e-test-crd-publish-openapi-6340-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  May 10 20:02:51.019: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=crd-publish-openapi-166 --namespace=crd-publish-openapi-166 delete e2e-test-crd-publish-openapi-6340-crds test-cr'
  May 10 20:02:51.097: INFO: stderr: ""
  May 10 20:02:51.097: INFO: stdout: "e2e-test-crd-publish-openapi-6340-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/10/24 20:02:51.097
  May 10 20:02:51.097: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=crd-publish-openapi-166 explain e2e-test-crd-publish-openapi-6340-crds'
  May 10 20:02:51.692: INFO: stderr: ""
  May 10 20:02:51.692: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-6340-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  May 10 20:02:53.670: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-166" for this suite. @ 05/10/24 20:02:53.683
  << Timeline
------------------------------
SSS
------------------------------
• [0.149 seconds]
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:946

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:02:53.699
  May 10 20:02:53.699: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 20:02:53.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:02:53.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:02:53.724
  STEP: Creating a ResourceQuota @ 05/10/24 20:02:53.727
  STEP: Getting a ResourceQuota @ 05/10/24 20:02:53.733
  STEP: Listing all ResourceQuotas with LabelSelector @ 05/10/24 20:02:53.747
  STEP: Patching the ResourceQuota @ 05/10/24 20:02:53.767
  STEP: Deleting a Collection of ResourceQuotas @ 05/10/24 20:02:53.796
  STEP: Verifying the deleted ResourceQuota @ 05/10/24 20:02:53.816
  May 10 20:02:53.825: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1636" for this suite. @ 05/10/24 20:02:53.835
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [3.238 seconds]
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:02:53.884
  May 10 20:02:53.884: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename field-validation @ 05/10/24 20:02:53.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:02:53.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:02:53.909
  May 10 20:02:53.912: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  W0510 20:02:56.540892      24 warnings.go:70] unknown field "alpha"
  W0510 20:02:56.540901      24 warnings.go:70] unknown field "beta"
  W0510 20:02:56.540903      24 warnings.go:70] unknown field "delta"
  W0510 20:02:56.540905      24 warnings.go:70] unknown field "epsilon"
  W0510 20:02:56.540907      24 warnings.go:70] unknown field "gamma"
  May 10 20:02:57.082: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1101" for this suite. @ 05/10/24 20:02:57.111
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
• [4.161 seconds]
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:93

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:02:57.141
  May 10 20:02:57.141: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename configmap @ 05/10/24 20:02:57.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:02:57.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:02:57.168
  STEP: Creating configMap configmap-3710/configmap-test-25bc41dd-4c23-4967-917a-5638c8d6a07a @ 05/10/24 20:02:57.171
  STEP: Creating a pod to test consume configMaps @ 05/10/24 20:02:57.178
  STEP: Saw pod success @ 05/10/24 20:03:01.222
  May 10 20:03:01.234: INFO: Trying to get logs from node ip-172-31-236-46.eu-west-3.compute.internal pod pod-configmaps-6fbe4078-1ca5-41d7-b95d-ec3c1df093c2 container env-test: <nil>
  STEP: delete the pod @ 05/10/24 20:03:01.259
  May 10 20:03:01.282: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3710" for this suite. @ 05/10/24 20:03:01.288
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [8.075 seconds]
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:370

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:03:01.332
  May 10 20:03:01.332: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename job @ 05/10/24 20:03:01.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:03:01.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:03:01.368
  STEP: Creating Indexed job @ 05/10/24 20:03:01.375
  STEP: Ensuring job reaches completions @ 05/10/24 20:03:01.383
  STEP: Ensuring pods with index for job exist @ 05/10/24 20:03:09.388
  May 10 20:03:09.392: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6357" for this suite. @ 05/10/24 20:03:09.399
  << Timeline
------------------------------
SSSSSSSSS
------------------------------
• [4.150 seconds]
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:131

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:03:09.415
  May 10 20:03:09.415: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename replicaset @ 05/10/24 20:03:09.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:03:09.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:03:09.45
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 05/10/24 20:03:09.455
  STEP: When a replicaset with a matching selector is created @ 05/10/24 20:03:11.482
  STEP: Then the orphan pod is adopted @ 05/10/24 20:03:11.488
  STEP: When the matched label of one of its pods change @ 05/10/24 20:03:12.499
  May 10 20:03:12.503: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/10/24 20:03:12.517
  May 10 20:03:13.540: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1029" for this suite. @ 05/10/24 20:03:13.557
  << Timeline
------------------------------
SSSSS
------------------------------
• [80.660 seconds]
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:331

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:01:55.523
  May 10 20:01:55.523: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename statefulset @ 05/10/24 20:01:55.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:01:55.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:01:55.559
  STEP: Creating service test in namespace statefulset-6214 @ 05/10/24 20:01:55.564
  STEP: Creating a new StatefulSet @ 05/10/24 20:01:55.574
  May 10 20:01:55.606: INFO: Found 0 stateful pods, waiting for 3
  May 10 20:02:05.619: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  May 10 20:02:05.619: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  May 10 20:02:05.619: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/10/24 20:02:05.643
  May 10 20:02:05.678: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 05/10/24 20:02:05.678
  STEP: Not applying an update when the partition is greater than the number of replicas @ 05/10/24 20:02:15.708
  STEP: Performing a canary update @ 05/10/24 20:02:15.708
  May 10 20:02:15.756: INFO: Updating stateful set ss2
  May 10 20:02:15.783: INFO: Waiting for Pod statefulset-6214/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 05/10/24 20:02:25.8
  May 10 20:02:25.866: INFO: Found 1 stateful pods, waiting for 3
  May 10 20:02:35.877: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  May 10 20:02:35.877: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  May 10 20:02:35.877: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 05/10/24 20:02:35.9
  May 10 20:02:35.938: INFO: Updating stateful set ss2
  May 10 20:02:35.970: INFO: Waiting for Pod statefulset-6214/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  May 10 20:02:46.032: INFO: Updating stateful set ss2
  May 10 20:02:46.057: INFO: Waiting for StatefulSet statefulset-6214/ss2 to complete update
  May 10 20:02:46.057: INFO: Waiting for Pod statefulset-6214/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  May 10 20:02:56.072: INFO: Deleting all statefulset in ns statefulset-6214
  May 10 20:02:56.080: INFO: Scaling statefulset ss2 to 0
  May 10 20:03:16.120: INFO: Waiting for statefulset status.replicas updated to 0
  May 10 20:03:16.126: INFO: Deleting statefulset ss2
  May 10 20:03:16.151: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6214" for this suite. @ 05/10/24 20:03:16.164
  << Timeline
------------------------------
SSSSSSSSSSSSSS
------------------------------
• [4.233 seconds]
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:236

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:03:16.196
  May 10 20:03:16.196: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 20:03:16.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:03:16.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:03:16.227
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 20:03:16.233
  STEP: Saw pod success @ 05/10/24 20:03:20.298
  May 10 20:03:20.321: INFO: Trying to get logs from node ip-172-31-236-46.eu-west-3.compute.internal pod downwardapi-volume-0dce8146-b236-4790-a2b0-bec20568f656 container client-container: <nil>
  STEP: delete the pod @ 05/10/24 20:03:20.348
  May 10 20:03:20.381: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4090" for this suite. @ 05/10/24 20:03:20.4
  << Timeline
------------------------------
SSS
------------------------------
• [1.333 seconds]
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:479

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:03:20.432
  May 10 20:03:20.432: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename gc @ 05/10/24 20:03:20.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:03:20.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:03:20.475
  STEP: create the deployment @ 05/10/24 20:03:20.48
  W0510 20:03:20.493380      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/10/24 20:03:20.493
  STEP: delete the deployment @ 05/10/24 20:03:21.012
  STEP: wait for all rs to be garbage collected @ 05/10/24 20:03:21.026
  STEP: expected 0 pods, got 2 pods @ 05/10/24 20:03:21.054
  STEP: Gathering metrics @ 05/10/24 20:03:21.588
  May 10 20:03:21.742: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May 10 20:03:21.742: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9870" for this suite. @ 05/10/24 20:03:21.752
  << Timeline
------------------------------
SSSSSSSSSSSSSSS
------------------------------
• [21.214 seconds]
[sig-apps] Deployment deployment should support rollover [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:03:13.571
  May 10 20:03:13.571: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename deployment @ 05/10/24 20:03:13.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:03:13.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:03:13.601
  May 10 20:03:13.619: INFO: Pod name rollover-pod: Found 0 pods out of 1
  May 10 20:03:18.625: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/10/24 20:03:18.625
  May 10 20:03:18.625: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  May 10 20:03:20.632: INFO: Creating deployment "test-rollover-deployment"
  May 10 20:03:20.644: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  May 10 20:03:22.660: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  May 10 20:03:22.670: INFO: Ensure that both replica sets have 1 created replica
  May 10 20:03:22.678: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  May 10 20:03:22.688: INFO: Updating deployment test-rollover-deployment
  May 10 20:03:22.688: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  May 10 20:03:24.703: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  May 10 20:03:24.720: INFO: Make sure deployment "test-rollover-deployment" is complete
  May 10 20:03:24.740: INFO: all replica sets need to contain the pod-template-hash label
  May 10 20:03:24.740: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 20, 3, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 20, 3, 20, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 20, 3, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 20, 3, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 20:03:26.762: INFO: all replica sets need to contain the pod-template-hash label
  May 10 20:03:26.762: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 20, 3, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 20, 3, 20, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 20, 3, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 20, 3, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 20:03:28.754: INFO: all replica sets need to contain the pod-template-hash label
  May 10 20:03:28.754: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 20, 3, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 20, 3, 20, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 20, 3, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 20, 3, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 20:03:30.749: INFO: all replica sets need to contain the pod-template-hash label
  May 10 20:03:30.749: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 20, 3, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 20, 3, 20, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 20, 3, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 20, 3, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 20:03:32.758: INFO: all replica sets need to contain the pod-template-hash label
  May 10 20:03:32.758: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 20, 3, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 20, 3, 20, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 20, 3, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 20, 3, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 20:03:34.748: INFO: 
  May 10 20:03:34.748: INFO: Ensure that both old replica sets have no replicas
  May 10 20:03:34.758: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1289",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2f7569c5-85a9-4659-9ee8-385b0f3a1eb0",
      ResourceVersion: (string) (len=5) "36666",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968200,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968202,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968213,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968200,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968200,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968213,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968200,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-68774655d5\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 10 20:03:34.763: INFO: New ReplicaSet "test-rollover-deployment-68774655d5" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-68774655d5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1289",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5922e738-70f3-444f-9d26-96b5cca82626",
      ResourceVersion: (string) (len=5) "36656",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968202,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "2f7569c5-85a9-4659-9ee8-385b0f3a1eb0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968202,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 66 37 35 36 39  63 35 2d 38 35 61 39 2d  |\"2f7569c5-85a9-|
              00000120  34 36 35 39 2d 39 65 65  38 2d 33 38 35 62 30 66  |4659-9ee8-385b0f|
              00000130  33 61 31 65 62 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |3a1eb0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968213,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 10 20:03:34.763: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  May 10 20:03:34.763: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1289",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a1eca55e-c7ac-4f16-9755-8aafe5c667d6",
      ResourceVersion: (string) (len=5) "36665",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968193,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "2f7569c5-85a9-4659-9ee8-385b0f3a1eb0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968193,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968213,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  32 66 37 35 36 39 63 35  2d 38 35 61 39 2d 34 36  |2f7569c5-85a9-46|
              000000c0  35 39 2d 39 65 65 38 2d  33 38 35 62 30 66 33 61  |59-9ee8-385b0f3a|
              000000d0  31 65 62 30 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |1eb0\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968213,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 10 20:03:34.763: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1289",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "af25b73d-9ae5-4470-b323-e029c740b40e",
      ResourceVersion: (string) (len=5) "36556",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968200,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "2f7569c5-85a9-4659-9ee8-385b0f3a1eb0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968202,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 66 37 35 36 39  63 35 2d 38 35 61 39 2d  |\"2f7569c5-85a9-|
              00000120  34 36 35 39 2d 39 65 65  38 2d 33 38 35 62 30 66  |4659-9ee8-385b0f|
              00000130  33 61 31 65 62 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |3a1eb0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968202,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 10 20:03:34.767: INFO: Pod "test-rollover-deployment-68774655d5-fhsc6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-68774655d5-fhsc6",
      GenerateName: (string) (len=36) "test-rollover-deployment-68774655d5-",
      Namespace: (string) (len=15) "deployment-1289",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0704ead6-e0e5-4bc5-9d60-6c25b25a39e1",
      ResourceVersion: (string) (len=5) "36568",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968202,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "31990d10fd1aeda12c5bfa89076f6cf320933192fa43f473c754cf21e84be934",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.244.6.118/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.244.6.118/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-68774655d5",
          UID: (types.UID) (len=36) "5922e738-70f3-444f-9d26-96b5cca82626",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968202,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 39  32 32 65 37 33 38 2d 37  |d\":\"5922e738-7|
              00000090  30 66 33 2d 34 34 34 66  2d 39 64 32 36 2d 39 36  |0f3-444f-9d26-96|
              000000a0  62 35 63 63 61 38 32 36  32 36 5c 22 7d 22 3a 7b  |b5cca82626\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968203,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968203,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 36  2e 31 31 38 5c 22 7d 22  |10.244.6.118\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m6gd8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m6gd8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-237-27.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968202,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968203,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968203,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968202,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.237.27",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.244.6.118",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.6.118"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968202,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850968203,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://1e930214f9076d5b79522f31862cb298cc40b5448e1b08f873e63885d7f822a0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 20:03:34.767: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1289" for this suite. @ 05/10/24 20:03:34.775
  << Timeline
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
• [11.403 seconds]
[sig-network] Services should serve a basic endpoint from pods  [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:785

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:03:34.81
  May 10 20:03:34.810: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename services @ 05/10/24 20:03:34.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:03:34.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:03:34.833
  STEP: creating service endpoint-test2 in namespace services-8561 @ 05/10/24 20:03:34.837
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8561 to expose endpoints map[] @ 05/10/24 20:03:34.889
  May 10 20:03:34.900: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  May 10 20:03:35.910: INFO: successfully validated that service endpoint-test2 in namespace services-8561 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-8561 @ 05/10/24 20:03:35.91
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8561 to expose endpoints map[pod1:[80]] @ 05/10/24 20:03:37.936
  May 10 20:03:37.961: INFO: successfully validated that service endpoint-test2 in namespace services-8561 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 05/10/24 20:03:37.961
  May 10 20:03:37.961: INFO: Creating new exec pod
  May 10 20:03:40.988: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=services-8561 exec execpodl2bw8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  May 10 20:03:41.146: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  May 10 20:03:41.146: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 20:03:41.146: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=services-8561 exec execpodl2bw8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.222.102 80'
  May 10 20:03:41.313: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.103.222.102 80\nConnection to 10.103.222.102 80 port [tcp/http] succeeded!\n"
  May 10 20:03:41.313: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-8561 @ 05/10/24 20:03:41.313
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8561 to expose endpoints map[pod1:[80] pod2:[80]] @ 05/10/24 20:03:43.345
  May 10 20:03:43.363: INFO: successfully validated that service endpoint-test2 in namespace services-8561 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 05/10/24 20:03:43.363
  May 10 20:03:44.364: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=services-8561 exec execpodl2bw8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  May 10 20:03:44.512: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  May 10 20:03:44.512: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 20:03:44.512: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=services-8561 exec execpodl2bw8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.222.102 80'
  May 10 20:03:44.698: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.103.222.102 80\nConnection to 10.103.222.102 80 port [tcp/http] succeeded!\n"
  May 10 20:03:44.698: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-8561 @ 05/10/24 20:03:44.698
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8561 to expose endpoints map[pod2:[80]] @ 05/10/24 20:03:44.757
  May 10 20:03:44.784: INFO: successfully validated that service endpoint-test2 in namespace services-8561 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 05/10/24 20:03:44.784
  May 10 20:03:45.784: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=services-8561 exec execpodl2bw8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  May 10 20:03:45.952: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  May 10 20:03:45.952: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 20:03:45.952: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=services-8561 exec execpodl2bw8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.222.102 80'
  May 10 20:03:46.115: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.103.222.102 80\nConnection to 10.103.222.102 80 port [tcp/http] succeeded!\n"
  May 10 20:03:46.116: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-8561 @ 05/10/24 20:03:46.116
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8561 to expose endpoints map[] @ 05/10/24 20:03:46.141
  May 10 20:03:46.160: INFO: successfully validated that service endpoint-test2 in namespace services-8561 exposes endpoints map[]
  May 10 20:03:46.160: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8561" for this suite. @ 05/10/24 20:03:46.205
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.159 seconds]
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:97

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:03:46.233
  May 10 20:03:46.233: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 20:03:46.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:03:46.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:03:46.251
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/10/24 20:03:46.255
  STEP: Saw pod success @ 05/10/24 20:03:50.301
  May 10 20:03:50.305: INFO: Trying to get logs from node ip-172-31-238-69.eu-west-3.compute.internal pod pod-e453aec6-e1e1-43c7-a359-8a218b54b22b container test-container: <nil>
  STEP: delete the pod @ 05/10/24 20:03:50.319
  May 10 20:03:50.357: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5154" for this suite. @ 05/10/24 20:03:50.383
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [8.063 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:69

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:03:50.417
  May 10 20:03:50.417: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/10/24 20:03:50.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:03:50.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:03:50.444
  May 10 20:03:50.448: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 05/10/24 20:03:52.57
  May 10 20:03:52.570: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=crd-publish-openapi-3107 --namespace=crd-publish-openapi-3107 create -f -'
  May 10 20:03:53.326: INFO: stderr: ""
  May 10 20:03:53.326: INFO: stdout: "e2e-test-crd-publish-openapi-1823-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  May 10 20:03:53.326: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=crd-publish-openapi-3107 --namespace=crd-publish-openapi-3107 delete e2e-test-crd-publish-openapi-1823-crds test-foo'
  May 10 20:03:53.410: INFO: stderr: ""
  May 10 20:03:53.410: INFO: stdout: "e2e-test-crd-publish-openapi-1823-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  May 10 20:03:53.410: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=crd-publish-openapi-3107 --namespace=crd-publish-openapi-3107 apply -f -'
  May 10 20:03:53.957: INFO: stderr: ""
  May 10 20:03:53.957: INFO: stdout: "e2e-test-crd-publish-openapi-1823-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  May 10 20:03:53.957: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=crd-publish-openapi-3107 --namespace=crd-publish-openapi-3107 delete e2e-test-crd-publish-openapi-1823-crds test-foo'
  May 10 20:03:54.042: INFO: stderr: ""
  May 10 20:03:54.042: INFO: stdout: "e2e-test-crd-publish-openapi-1823-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 05/10/24 20:03:54.042
  May 10 20:03:54.042: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=crd-publish-openapi-3107 --namespace=crd-publish-openapi-3107 create -f -'
  May 10 20:03:54.615: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 05/10/24 20:03:54.615
  May 10 20:03:54.615: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=crd-publish-openapi-3107 --namespace=crd-publish-openapi-3107 create -f -'
  May 10 20:03:54.782: INFO: rc: 1
  May 10 20:03:54.782: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=crd-publish-openapi-3107 --namespace=crd-publish-openapi-3107 apply -f -'
  May 10 20:03:54.986: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 05/10/24 20:03:54.986
  May 10 20:03:54.986: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=crd-publish-openapi-3107 --namespace=crd-publish-openapi-3107 create -f -'
  May 10 20:03:55.198: INFO: rc: 1
  May 10 20:03:55.198: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=crd-publish-openapi-3107 --namespace=crd-publish-openapi-3107 apply -f -'
  May 10 20:03:55.434: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 05/10/24 20:03:55.434
  May 10 20:03:55.434: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=crd-publish-openapi-3107 explain e2e-test-crd-publish-openapi-1823-crds'
  May 10 20:03:55.652: INFO: stderr: ""
  May 10 20:03:55.652: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1823-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 05/10/24 20:03:55.652
  May 10 20:03:55.652: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=crd-publish-openapi-3107 explain e2e-test-crd-publish-openapi-1823-crds.metadata'
  May 10 20:03:55.870: INFO: stderr: ""
  May 10 20:03:55.870: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1823-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  May 10 20:03:55.870: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=crd-publish-openapi-3107 explain e2e-test-crd-publish-openapi-1823-crds.spec'
  May 10 20:03:56.093: INFO: stderr: ""
  May 10 20:03:56.093: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1823-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  May 10 20:03:56.093: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=crd-publish-openapi-3107 explain e2e-test-crd-publish-openapi-1823-crds.spec.bars'
  May 10 20:03:56.367: INFO: stderr: ""
  May 10 20:03:56.367: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1823-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 05/10/24 20:03:56.367
  May 10 20:03:56.367: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=crd-publish-openapi-3107 explain e2e-test-crd-publish-openapi-1823-crds.spec.bars2'
  May 10 20:03:56.595: INFO: rc: 1
  May 10 20:03:58.406: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3107" for this suite. @ 05/10/24 20:03:58.433
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
• [336.156 seconds]
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:58:24.194
  May 10 19:58:24.194: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename cronjob @ 05/10/24 19:58:24.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:58:24.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:58:24.266
  STEP: Creating a ForbidConcurrent cronjob @ 05/10/24 19:58:24.276
  STEP: Ensuring a job is scheduled @ 05/10/24 19:58:24.283
  E0510 19:58:24.608952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:25.609856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:26.610727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:27.611316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:28.611464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:29.611799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:30.612289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:31.613379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:32.614003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:33.614812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:34.615127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:35.615225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:36.616207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:37.617248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:38.617335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:39.618040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:40.618153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:41.618255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:42.618558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:43.619223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:44.619990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:45.620740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:46.621664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:47.622412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:48.622665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:49.623423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:50.623987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:51.624953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:52.625406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:53.626159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:54.626709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:55.627652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:56.628375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:57.629146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:58.629635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:59.630404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 05/10/24 19:59:00.291
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/10/24 19:59:00.295
  STEP: Ensuring no more jobs are scheduled @ 05/10/24 19:59:00.301
  E0510 19:59:00.631238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:01.631332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:02.631399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:03.632133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:04.633022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:05.633145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:06.633739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:07.634357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:08.635109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:09.636004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:10.636882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:11.636966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:12.637022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:13.637129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:14.637272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:15.638058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:16.638325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:17.639142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:18.640101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:19.640925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:20.642011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:21.643018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:22.643061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:23.643963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:24.644062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:25.644184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:26.644738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:27.645463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:28.646433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:29.647320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:30.648397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:31.648556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:32.649443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:33.650382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:34.651498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:35.652457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:36.653359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:37.654110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:38.655065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:39.656046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:40.656601      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:41.657349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:42.658252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:43.659057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:44.659232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:45.660243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:46.660680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:47.661310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:48.662357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:49.663185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:50.663648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:51.664367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:52.665087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:53.665985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:54.666786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:55.667375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:56.667751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:57.668394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:58.668761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:59.669410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:00.670191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:01.671274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:02.672181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:03.673177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:04.674024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:05.674376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:06.674852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:07.675466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:08.675854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:09.676361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:10.676693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:11.677382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:12.677523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:13.678508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:14.679365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:15.680297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:16.681238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:17.682231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:18.682304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:19.683116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:20.683267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:21.683314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:22.684300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:23.685109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:24.685217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:25.685296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:26.686299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:27.687279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:28.687687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:29.688390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:30.688714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:31.689467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:32.690186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:33.690974      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:34.691693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:35.692618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:36.692699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:37.693796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:38.694280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:39.694396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:40.695380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:41.696464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:42.697993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:43.698804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:44.699780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:45.700806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:46.701389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:47.701439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:48.701687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:49.702582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:50.703095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:51.703454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:52.704360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:53.705252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:54.705290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:55.705488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:56.706369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:57.707142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:58.708222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:59.709222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:00.710235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:01.710371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:02.711244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:03.712276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:04.712416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:05.712642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:06.713428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:07.714166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:08.714406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:09.714810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:10.714936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:11.715291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:12.715415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:13.716119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:14.716182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:15.716547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:16.717154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:17.718175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:18.718824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:19.719396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:20.719833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:21.719996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:22.720739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:23.721384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:24.721833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:25.722558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:26.723670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:27.724667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:28.724703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:29.725330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:30.725722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:31.726608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:32.726814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:33.727461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:34.728068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:35.728163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:36.728321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:37.729252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:38.729393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:39.730218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:40.730891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:41.730891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:42.733044      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:43.733577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:44.734304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:45.734624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:46.734835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:47.735419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:48.735517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:49.736442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:50.736424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:51.737444      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:52.737860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:53.738601      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:54.738726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:55.739780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:56.740308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:57.741206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:58.742089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:59.743035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:00.743891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:01.744122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:02.744567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:03.745474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:04.745901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:05.746582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:06.746621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:07.747166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:08.747936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:09.748396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:10.748934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:11.749215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:12.749899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:13.750461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:14.751061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:15.751464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:16.752474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:17.753211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:18.754279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:19.755282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:20.756267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:21.756389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:22.757372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:23.757389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:24.757649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:25.758637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:26.759472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:27.759630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:28.759793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:29.760396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:30.761507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:31.762577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:32.763500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:33.764561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:34.765241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:35.765445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:36.766208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:37.766845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:38.767744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:39.768436      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:40.769169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:41.770168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:42.770836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:43.772715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:44.773270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:45.773730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:46.774569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:47.775303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:48.775820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:49.776746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:50.777313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:51.778274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:52.778715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:53.779623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:54.780522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:55.780543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:56.781465      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:57.782455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:58.782952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:59.783423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:00.783717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:01.784513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:02.784609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:03.785451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:04.786196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:05.786577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:06.787363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:07.787391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:08.788493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:09.789521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:10.789699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:11.790530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:12.790655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:13.791463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:14.792490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:15.793667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:16.793781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:17.794748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:18.795694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:19.796489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:20.797452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:21.798216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:22.799239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:23.800077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:24.800200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:25.800698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:26.801508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:27.802102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:28.803026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:29.804040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:30.805073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:31.805985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:32.806816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:33.807486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:34.807808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:35.808093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:36.808383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:37.809242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:38.809419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:39.810311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:40.811296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:41.812292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:42.812342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:43.813214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:44.813798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:45.814054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:46.815025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:47.815011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:48.815952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:49.817026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:50.817354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:51.817469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:52.817752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:53.818433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:54.819493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:55.820532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:56.820857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:57.821484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:58.822108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:59.822204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 05/10/24 20:04:00.312
  May 10 20:04:00.320: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6051" for this suite. @ 05/10/24 20:04:00.33
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [0.105 seconds]
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:808

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:00.36
  May 10 20:04:00.360: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename svcaccounts @ 05/10/24 20:04:00.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:00.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:00.407
  STEP: Creating ServiceAccount "e2e-sa-nq8jt"  @ 05/10/24 20:04:00.415
  May 10 20:04:00.428: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-nq8jt"  @ 05/10/24 20:04:00.429
  May 10 20:04:00.441: INFO: AutomountServiceAccountToken: true
  May 10 20:04:00.441: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7920" for this suite. @ 05/10/24 20:04:00.452
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [39.137 seconds]
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:03:21.775
  May 10 20:03:21.775: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename dns @ 05/10/24 20:03:21.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:03:21.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:03:21.812
  STEP: Creating a test headless service @ 05/10/24 20:03:21.817
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8849 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8849;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8849 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8849;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8849.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8849.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8849.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8849.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8849.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-8849.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8849.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-8849.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8849.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-8849.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8849.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-8849.svc;check="$$(dig +notcp +noall +answer +search 200.114.104.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.104.114.200_udp@PTR;check="$$(dig +tcp +noall +answer +search 200.114.104.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.104.114.200_tcp@PTR;sleep 1; done
   @ 05/10/24 20:03:21.86
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8849 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8849;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8849 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8849;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8849.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8849.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8849.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8849.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8849.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8849.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8849.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8849.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8849.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8849.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8849.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8849.svc;check="$$(dig +notcp +noall +answer +search 200.114.104.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.104.114.200_udp@PTR;check="$$(dig +tcp +noall +answer +search 200.114.104.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.104.114.200_tcp@PTR;sleep 1; done
   @ 05/10/24 20:03:21.86
  STEP: creating a pod to probe DNS @ 05/10/24 20:03:21.86
  STEP: submitting the pod to kubernetes @ 05/10/24 20:03:21.86
  STEP: retrieving the pod @ 05/10/24 20:03:29.941
  STEP: looking for the results for each expected name from probers @ 05/10/24 20:03:29.947
  May 10 20:03:29.956: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:29.965: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:29.973: INFO: Unable to read wheezy_udp@dns-test-service.dns-8849 from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:29.981: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8849 from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:29.991: INFO: Unable to read wheezy_udp@dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:30.000: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:30.040: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:30.052: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:30.098: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:30.107: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:30.117: INFO: Unable to read jessie_udp@dns-test-service.dns-8849 from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:30.125: INFO: Unable to read jessie_tcp@dns-test-service.dns-8849 from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:30.134: INFO: Unable to read jessie_udp@dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:30.143: INFO: Unable to read jessie_tcp@dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:30.153: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:30.165: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:30.201: INFO: Lookups using dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8849 wheezy_tcp@dns-test-service.dns-8849 wheezy_udp@dns-test-service.dns-8849.svc wheezy_tcp@dns-test-service.dns-8849.svc wheezy_udp@_http._tcp.dns-test-service.dns-8849.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8849.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8849 jessie_tcp@dns-test-service.dns-8849 jessie_udp@dns-test-service.dns-8849.svc jessie_tcp@dns-test-service.dns-8849.svc jessie_udp@_http._tcp.dns-test-service.dns-8849.svc jessie_tcp@_http._tcp.dns-test-service.dns-8849.svc]

  May 10 20:03:30.214: INFO: Pod client logs for webserver: 
  May 10 20:03:30.227: INFO: Pod client logs for querier: 
  May 10 20:03:30.240: INFO: Pod client logs for jessie-querier: 
  May 10 20:03:35.249: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:35.257: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:35.265: INFO: Unable to read wheezy_udp@dns-test-service.dns-8849 from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:35.273: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8849 from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:35.280: INFO: Unable to read wheezy_udp@dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:35.290: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:35.299: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:35.306: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:35.361: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:35.369: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:35.380: INFO: Unable to read jessie_udp@dns-test-service.dns-8849 from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:35.388: INFO: Unable to read jessie_tcp@dns-test-service.dns-8849 from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:35.399: INFO: Unable to read jessie_udp@dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:35.407: INFO: Unable to read jessie_tcp@dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:35.430: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:35.439: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:35.478: INFO: Lookups using dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8849 wheezy_tcp@dns-test-service.dns-8849 wheezy_udp@dns-test-service.dns-8849.svc wheezy_tcp@dns-test-service.dns-8849.svc wheezy_udp@_http._tcp.dns-test-service.dns-8849.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8849.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8849 jessie_tcp@dns-test-service.dns-8849 jessie_udp@dns-test-service.dns-8849.svc jessie_tcp@dns-test-service.dns-8849.svc jessie_udp@_http._tcp.dns-test-service.dns-8849.svc jessie_tcp@_http._tcp.dns-test-service.dns-8849.svc]

  May 10 20:03:35.494: INFO: Pod client logs for webserver: 
  May 10 20:03:35.511: INFO: Pod client logs for querier: 
  May 10 20:03:35.528: INFO: Pod client logs for jessie-querier: 
  May 10 20:03:40.260: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:40.269: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:40.283: INFO: Unable to read wheezy_udp@dns-test-service.dns-8849 from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:40.296: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8849 from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:40.309: INFO: Unable to read wheezy_udp@dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:40.327: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:40.341: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:40.358: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:40.404: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:40.411: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:40.420: INFO: Unable to read jessie_udp@dns-test-service.dns-8849 from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:40.427: INFO: Unable to read jessie_tcp@dns-test-service.dns-8849 from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:40.436: INFO: Unable to read jessie_udp@dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:40.444: INFO: Unable to read jessie_tcp@dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:40.453: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:40.463: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:40.505: INFO: Lookups using dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8849 wheezy_tcp@dns-test-service.dns-8849 wheezy_udp@dns-test-service.dns-8849.svc wheezy_tcp@dns-test-service.dns-8849.svc wheezy_udp@_http._tcp.dns-test-service.dns-8849.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8849.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8849 jessie_tcp@dns-test-service.dns-8849 jessie_udp@dns-test-service.dns-8849.svc jessie_tcp@dns-test-service.dns-8849.svc jessie_udp@_http._tcp.dns-test-service.dns-8849.svc jessie_tcp@_http._tcp.dns-test-service.dns-8849.svc]

  May 10 20:03:40.520: INFO: Pod client logs for webserver: 
  May 10 20:03:40.533: INFO: Pod client logs for querier: 
  May 10 20:03:40.545: INFO: Pod client logs for jessie-querier: 
  May 10 20:03:45.248: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:45.256: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:45.265: INFO: Unable to read wheezy_udp@dns-test-service.dns-8849 from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:45.272: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8849 from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:45.280: INFO: Unable to read wheezy_udp@dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:45.288: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:45.295: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:45.302: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:45.348: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:45.355: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:45.362: INFO: Unable to read jessie_udp@dns-test-service.dns-8849 from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:45.369: INFO: Unable to read jessie_tcp@dns-test-service.dns-8849 from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:45.376: INFO: Unable to read jessie_udp@dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:45.383: INFO: Unable to read jessie_tcp@dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:45.389: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:45.398: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:45.428: INFO: Lookups using dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8849 wheezy_tcp@dns-test-service.dns-8849 wheezy_udp@dns-test-service.dns-8849.svc wheezy_tcp@dns-test-service.dns-8849.svc wheezy_udp@_http._tcp.dns-test-service.dns-8849.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8849.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8849 jessie_tcp@dns-test-service.dns-8849 jessie_udp@dns-test-service.dns-8849.svc jessie_tcp@dns-test-service.dns-8849.svc jessie_udp@_http._tcp.dns-test-service.dns-8849.svc jessie_tcp@_http._tcp.dns-test-service.dns-8849.svc]

  May 10 20:03:45.441: INFO: Pod client logs for webserver: 
  May 10 20:03:45.462: INFO: Pod client logs for querier: 
  May 10 20:03:45.493: INFO: Pod client logs for jessie-querier: 
  May 10 20:03:50.250: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:50.281: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:50.290: INFO: Unable to read wheezy_udp@dns-test-service.dns-8849 from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:50.300: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8849 from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:50.309: INFO: Unable to read wheezy_udp@dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:50.318: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:50.326: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:50.337: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:50.390: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:50.404: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:50.413: INFO: Unable to read jessie_udp@dns-test-service.dns-8849 from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:50.423: INFO: Unable to read jessie_tcp@dns-test-service.dns-8849 from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:50.446: INFO: Unable to read jessie_udp@dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:50.455: INFO: Unable to read jessie_tcp@dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:50.466: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:50.493: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:50.537: INFO: Lookups using dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8849 wheezy_tcp@dns-test-service.dns-8849 wheezy_udp@dns-test-service.dns-8849.svc wheezy_tcp@dns-test-service.dns-8849.svc wheezy_udp@_http._tcp.dns-test-service.dns-8849.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8849.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8849 jessie_tcp@dns-test-service.dns-8849 jessie_udp@dns-test-service.dns-8849.svc jessie_tcp@dns-test-service.dns-8849.svc jessie_udp@_http._tcp.dns-test-service.dns-8849.svc jessie_tcp@_http._tcp.dns-test-service.dns-8849.svc]

  May 10 20:03:50.551: INFO: Pod client logs for webserver: 
  May 10 20:03:50.563: INFO: Pod client logs for querier: 
  May 10 20:03:50.577: INFO: Pod client logs for jessie-querier: 
  May 10 20:03:55.304: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:55.315: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:55.426: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:55.436: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8849.svc from pod dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c: the server could not find the requested resource (get pods dns-test-876cdc91-dd74-446b-a209-4612f776897c)
  May 10 20:03:55.469: INFO: Lookups using dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c failed for: [wheezy_udp@_http._tcp.dns-test-service.dns-8849.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8849.svc jessie_udp@_http._tcp.dns-test-service.dns-8849.svc jessie_tcp@_http._tcp.dns-test-service.dns-8849.svc]

  May 10 20:03:55.484: INFO: Pod client logs for webserver: 
  May 10 20:03:55.501: INFO: Pod client logs for querier: 
  May 10 20:03:55.530: INFO: Pod client logs for jessie-querier: 
  May 10 20:04:00.566: INFO: DNS probes using dns-8849/dns-test-876cdc91-dd74-446b-a209-4612f776897c succeeded

  May 10 20:04:00.566: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/10/24 20:04:00.578
  STEP: deleting the test service @ 05/10/24 20:04:00.624
  STEP: deleting the test headless service @ 05/10/24 20:04:00.791
  STEP: Destroying namespace "dns-8849" for this suite. @ 05/10/24 20:04:00.9
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [0.234 seconds]
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:647

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:00.92
  May 10 20:04:00.920: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename svcaccounts @ 05/10/24 20:04:00.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:00.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:00.961
  STEP: creating a ServiceAccount @ 05/10/24 20:04:00.966
  STEP: watching for the ServiceAccount to be added @ 05/10/24 20:04:00.993
  STEP: patching the ServiceAccount @ 05/10/24 20:04:00.997
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 05/10/24 20:04:01.018
  STEP: deleting the ServiceAccount @ 05/10/24 20:04:01.041
  May 10 20:04:01.101: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2833" for this suite. @ 05/10/24 20:04:01.121
  << Timeline
------------------------------
SS
------------------------------
• [4.540 seconds]
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:03:58.495
  May 10 20:03:58.495: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename init-container @ 05/10/24 20:03:58.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:03:58.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:03:58.529
  STEP: creating the pod @ 05/10/24 20:03:58.533
  May 10 20:03:58.533: INFO: PodSpec: initContainers in spec.initContainers
  May 10 20:04:03.006: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6065" for this suite. @ 05/10/24 20:04:03.022
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [6.375 seconds]
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:00.496
  May 10 20:04:00.496: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename kubectl-logs @ 05/10/24 20:04:00.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:00.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:00.521
  STEP: creating an pod @ 05/10/24 20:04:00.525
  May 10 20:04:00.525: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-logs-674 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  May 10 20:04:00.697: INFO: stderr: ""
  May 10 20:04:00.697: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 05/10/24 20:04:00.697
  May 10 20:04:00.697: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0510 20:04:00.823263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:01.824309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:04:02.714: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 05/10/24 20:04:02.714
  May 10 20:04:02.714: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-logs-674 logs logs-generator logs-generator'
  E0510 20:04:02.824936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:04:02.852: INFO: stderr: ""
  May 10 20:04:02.852: INFO: stdout: "I0510 20:04:01.439887       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/8vr 206\nI0510 20:04:01.640000       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/57w 312\nI0510 20:04:01.840568       1 logs_generator.go:76] 2 POST /api/v1/namespaces/default/pods/kpd 442\nI0510 20:04:02.040937       1 logs_generator.go:76] 3 GET /api/v1/namespaces/ns/pods/t2g 259\nI0510 20:04:02.240282       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/pfk 575\nI0510 20:04:02.440692       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/x8m 479\nI0510 20:04:02.640053       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/qd8b 324\nI0510 20:04:02.840401       1 logs_generator.go:76] 7 POST /api/v1/namespaces/kube-system/pods/5785 564\n"
  STEP: limiting log lines @ 05/10/24 20:04:02.852
  May 10 20:04:02.852: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-logs-674 logs logs-generator logs-generator --tail=1'
  May 10 20:04:02.934: INFO: stderr: ""
  May 10 20:04:02.934: INFO: stdout: "I0510 20:04:02.840401       1 logs_generator.go:76] 7 POST /api/v1/namespaces/kube-system/pods/5785 564\n"
  May 10 20:04:02.934: INFO: got output "I0510 20:04:02.840401       1 logs_generator.go:76] 7 POST /api/v1/namespaces/kube-system/pods/5785 564\n"
  STEP: limiting log bytes @ 05/10/24 20:04:02.934
  May 10 20:04:02.934: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-logs-674 logs logs-generator logs-generator --limit-bytes=1'
  May 10 20:04:03.081: INFO: stderr: ""
  May 10 20:04:03.081: INFO: stdout: "I"
  May 10 20:04:03.081: INFO: got output "I"
  STEP: exposing timestamps @ 05/10/24 20:04:03.081
  May 10 20:04:03.082: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-logs-674 logs logs-generator logs-generator --tail=1 --timestamps'
  May 10 20:04:03.209: INFO: stderr: ""
  May 10 20:04:03.209: INFO: stdout: "2024-05-10T20:04:03.040835868Z I0510 20:04:03.040726       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/8tl 378\n"
  May 10 20:04:03.209: INFO: got output "2024-05-10T20:04:03.040835868Z I0510 20:04:03.040726       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/8tl 378\n"
  STEP: restricting to a time range @ 05/10/24 20:04:03.209
  E0510 20:04:03.825741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:04.826531      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:04:05.710: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-logs-674 logs logs-generator logs-generator --since=1s'
  May 10 20:04:05.816: INFO: stderr: ""
  May 10 20:04:05.816: INFO: stdout: "I0510 20:04:04.840010       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/f588 208\nI0510 20:04:05.040358       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/264c 374\nI0510 20:04:05.240687       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/4js 311\nI0510 20:04:05.439977       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/qshh 532\nI0510 20:04:05.640317       1 logs_generator.go:76] 21 GET /api/v1/namespaces/default/pods/624 220\n"
  May 10 20:04:05.816: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-logs-674 logs logs-generator logs-generator --since=24h'
  E0510 20:04:05.826545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:04:05.940: INFO: stderr: ""
  May 10 20:04:05.941: INFO: stdout: "I0510 20:04:01.439887       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/8vr 206\nI0510 20:04:01.640000       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/57w 312\nI0510 20:04:01.840568       1 logs_generator.go:76] 2 POST /api/v1/namespaces/default/pods/kpd 442\nI0510 20:04:02.040937       1 logs_generator.go:76] 3 GET /api/v1/namespaces/ns/pods/t2g 259\nI0510 20:04:02.240282       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/pfk 575\nI0510 20:04:02.440692       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/x8m 479\nI0510 20:04:02.640053       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/qd8b 324\nI0510 20:04:02.840401       1 logs_generator.go:76] 7 POST /api/v1/namespaces/kube-system/pods/5785 564\nI0510 20:04:03.040726       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/8tl 378\nI0510 20:04:03.240110       1 logs_generator.go:76] 9 POST /api/v1/namespaces/kube-system/pods/8krv 293\nI0510 20:04:03.440456       1 logs_generator.go:76] 10 GET /api/v1/namespaces/kube-system/pods/bhgg 246\nI0510 20:04:03.640809       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/ns/pods/q8d 487\nI0510 20:04:03.840116       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/kube-system/pods/995r 558\nI0510 20:04:04.040446       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/ns/pods/8zt4 544\nI0510 20:04:04.240882       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/ns/pods/p7l 435\nI0510 20:04:04.440229       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/default/pods/fkm 390\nI0510 20:04:04.640640       1 logs_generator.go:76] 16 GET /api/v1/namespaces/kube-system/pods/cx5t 597\nI0510 20:04:04.840010       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/f588 208\nI0510 20:04:05.040358       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/264c 374\nI0510 20:04:05.240687       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/4js 311\nI0510 20:04:05.439977       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/qshh 532\nI0510 20:04:05.640317       1 logs_generator.go:76] 21 GET /api/v1/namespaces/default/pods/624 220\nI0510 20:04:05.840659       1 logs_generator.go:76] 22 POST /api/v1/namespaces/default/pods/hr47 363\n"
  May 10 20:04:05.941: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-logs-674 delete pod logs-generator'
  E0510 20:04:06.826817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:04:06.850: INFO: stderr: ""
  May 10 20:04:06.850: INFO: stdout: "pod \"logs-generator\" deleted\n"
  May 10 20:04:06.850: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-674" for this suite. @ 05/10/24 20:04:06.861
  << Timeline
------------------------------
S
------------------------------
• [0.140 seconds]
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:830

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:06.875
  May 10 20:04:06.875: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 20:04:06.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:06.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:06.896
  STEP: validating api versions @ 05/10/24 20:04:06.904
  May 10 20:04:06.904: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-2490 api-versions'
  May 10 20:04:06.993: INFO: stderr: ""
  May 10 20:04:06.993: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncluster.k8s.io/v1alpha1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\noperatingsystemmanager.k8c.io/v1alpha1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nsnapshot.storage.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  May 10 20:04:06.994: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2490" for this suite. @ 05/10/24 20:04:07.005
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [4.162 seconds]
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:03.101
  May 10 20:04:03.101: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename containers @ 05/10/24 20:04:03.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:03.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:03.135
  STEP: Creating a pod to test override command @ 05/10/24 20:04:03.139
  STEP: Saw pod success @ 05/10/24 20:04:07.179
  May 10 20:04:07.184: INFO: Trying to get logs from node ip-172-31-237-27.eu-west-3.compute.internal pod client-containers-a5d49866-810a-459a-97d1-82302ae9e685 container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 20:04:07.205
  May 10 20:04:07.242: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6754" for this suite. @ 05/10/24 20:04:07.252
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [6.537 seconds]
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:252

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:01.159
  May 10 20:04:01.159: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename namespaces @ 05/10/24 20:04:01.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:01.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:01.216
  STEP: Creating a test namespace @ 05/10/24 20:04:01.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:01.264
  STEP: Creating a service in the namespace @ 05/10/24 20:04:01.277
  STEP: Deleting the namespace @ 05/10/24 20:04:01.459
  STEP: Waiting for the namespace to be removed. @ 05/10/24 20:04:01.538
  STEP: Recreating the namespace @ 05/10/24 20:04:07.545
  STEP: Verifying there is no service in the namespace @ 05/10/24 20:04:07.595
  May 10 20:04:07.633: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2970" for this suite. @ 05/10/24 20:04:07.653
  STEP: Destroying namespace "nsdeletetest-9525" for this suite. @ 05/10/24 20:04:07.671
  May 10 20:04:07.683: INFO: Namespace nsdeletetest-9525 was already deleted
  STEP: Destroying namespace "nsdeletetest-3420" for this suite. @ 05/10/24 20:04:07.683
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.155 seconds]
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:115

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:07.025
  May 10 20:04:07.025: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename var-expansion @ 05/10/24 20:04:07.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:07.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:07.067
  STEP: Creating a pod to test substitution in volume subpath @ 05/10/24 20:04:07.07
  E0510 20:04:07.827162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:08.827947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:09.828094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:10.829175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 20:04:11.115
  May 10 20:04:11.120: INFO: Trying to get logs from node ip-172-31-238-87.eu-west-3.compute.internal pod var-expansion-9bb8221d-7ce0-4f7c-aff4-9f3e33179d52 container dapi-container: <nil>
  STEP: delete the pod @ 05/10/24 20:04:11.144
  May 10 20:04:11.165: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9428" for this suite. @ 05/10/24 20:04:11.171
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.225 seconds]
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:07.718
  May 10 20:04:07.718: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename sched-pred @ 05/10/24 20:04:07.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:07.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:07.768
  May 10 20:04:07.774: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  May 10 20:04:07.808: INFO: Waiting for terminating namespaces to be deleted...
  May 10 20:04:07.844: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-236-144.eu-west-3.compute.internal before test
  May 10 20:04:07.879: INFO: e2e-conformance-test from conformance started at 2024-05-10 19:40:59 +0000 UTC (2 container statuses recorded)
  May 10 20:04:07.879: INFO: 	Container conformance-container ready: true, restart count 0
  May 10 20:04:07.879: INFO: 	Container output-container ready: true, restart count 0
  May 10 20:04:07.879: INFO: canal-zgphj from kube-system started at 2024-05-10 19:38:37 +0000 UTC (2 container statuses recorded)
  May 10 20:04:07.879: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:04:07.879: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:04:07.879: INFO: ebs-csi-node-7kmv9 from kube-system started at 2024-05-10 19:38:37 +0000 UTC (3 container statuses recorded)
  May 10 20:04:07.879: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:04:07.879: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:04:07.879: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:04:07.879: INFO: kube-proxy-svhx8 from kube-system started at 2024-05-10 19:38:37 +0000 UTC (1 container statuses recorded)
  May 10 20:04:07.879: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:04:07.879: INFO: node-local-dns-fbvng from kube-system started at 2024-05-10 19:38:37 +0000 UTC (1 container statuses recorded)
  May 10 20:04:07.879: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:04:07.879: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-236-46.eu-west-3.compute.internal before test
  May 10 20:04:07.901: INFO: canal-c5pr9 from kube-system started at 2024-05-10 19:35:54 +0000 UTC (2 container statuses recorded)
  May 10 20:04:07.901: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:04:07.901: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:04:07.901: INFO: ebs-csi-node-lhfzz from kube-system started at 2024-05-10 19:35:54 +0000 UTC (3 container statuses recorded)
  May 10 20:04:07.901: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:04:07.901: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:04:07.901: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:04:07.901: INFO: kube-proxy-x88pq from kube-system started at 2024-05-10 19:35:54 +0000 UTC (1 container statuses recorded)
  May 10 20:04:07.901: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:04:07.901: INFO: node-local-dns-f2v2d from kube-system started at 2024-05-10 19:35:54 +0000 UTC (1 container statuses recorded)
  May 10 20:04:07.901: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:04:07.901: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-237-27.eu-west-3.compute.internal before test
  May 10 20:04:07.928: INFO: pod1 from hostport-131 started at 2024-05-10 20:04:07 +0000 UTC (1 container statuses recorded)
  May 10 20:04:07.928: INFO: 	Container agnhost ready: false, restart count 0
  May 10 20:04:07.928: INFO: pod-init-9c439164-c04a-43a6-9976-7ac905d68c02 from init-container-6065 started at 2024-05-10 20:03:58 +0000 UTC (1 container statuses recorded)
  May 10 20:04:07.928: INFO: 	Container run1 ready: false, restart count 0
  May 10 20:04:07.928: INFO: canal-86fpg from kube-system started at 2024-05-10 19:38:21 +0000 UTC (2 container statuses recorded)
  May 10 20:04:07.928: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:04:07.928: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:04:07.928: INFO: ebs-csi-node-qg9kf from kube-system started at 2024-05-10 19:38:21 +0000 UTC (3 container statuses recorded)
  May 10 20:04:07.928: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:04:07.928: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:04:07.928: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:04:07.928: INFO: kube-proxy-2gzg4 from kube-system started at 2024-05-10 19:38:21 +0000 UTC (1 container statuses recorded)
  May 10 20:04:07.928: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:04:07.928: INFO: node-local-dns-f4wjg from kube-system started at 2024-05-10 19:38:21 +0000 UTC (1 container statuses recorded)
  May 10 20:04:07.928: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:04:07.928: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-237-5.eu-west-3.compute.internal before test
  May 10 20:04:07.953: INFO: canal-7n86g from kube-system started at 2024-05-10 19:35:54 +0000 UTC (2 container statuses recorded)
  May 10 20:04:07.953: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:04:07.953: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:04:07.953: INFO: ebs-csi-node-6hgh7 from kube-system started at 2024-05-10 19:35:54 +0000 UTC (3 container statuses recorded)
  May 10 20:04:07.953: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:04:07.953: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:04:07.953: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:04:07.953: INFO: kube-proxy-b6mmd from kube-system started at 2024-05-10 19:35:54 +0000 UTC (1 container statuses recorded)
  May 10 20:04:07.953: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:04:07.953: INFO: node-local-dns-86s45 from kube-system started at 2024-05-10 19:35:54 +0000 UTC (1 container statuses recorded)
  May 10 20:04:07.953: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:04:07.953: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-238-69.eu-west-3.compute.internal before test
  May 10 20:04:07.967: INFO: canal-qhmdf from kube-system started at 2024-05-10 19:36:27 +0000 UTC (2 container statuses recorded)
  May 10 20:04:07.967: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:04:07.967: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:04:07.967: INFO: ebs-csi-node-bgqjk from kube-system started at 2024-05-10 19:36:27 +0000 UTC (3 container statuses recorded)
  May 10 20:04:07.967: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:04:07.967: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:04:07.967: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:04:07.967: INFO: kube-proxy-wkbd8 from kube-system started at 2024-05-10 19:36:27 +0000 UTC (1 container statuses recorded)
  May 10 20:04:07.967: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:04:07.967: INFO: node-local-dns-746vg from kube-system started at 2024-05-10 19:36:27 +0000 UTC (1 container statuses recorded)
  May 10 20:04:07.967: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:04:07.967: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-238-87.eu-west-3.compute.internal before test
  May 10 20:04:07.982: INFO: canal-cfqsw from kube-system started at 2024-05-10 19:38:46 +0000 UTC (2 container statuses recorded)
  May 10 20:04:07.982: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:04:07.982: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:04:07.982: INFO: ebs-csi-node-5mtfb from kube-system started at 2024-05-10 19:38:46 +0000 UTC (3 container statuses recorded)
  May 10 20:04:07.982: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:04:07.982: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:04:07.982: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:04:07.982: INFO: kube-proxy-n9m2f from kube-system started at 2024-05-10 19:38:46 +0000 UTC (1 container statuses recorded)
  May 10 20:04:07.982: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:04:07.982: INFO: node-local-dns-6d9jq from kube-system started at 2024-05-10 19:38:46 +0000 UTC (1 container statuses recorded)
  May 10 20:04:07.982: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:04:07.982: INFO: var-expansion-9bb8221d-7ce0-4f7c-aff4-9f3e33179d52 from var-expansion-9428 started at 2024-05-10 20:04:07 +0000 UTC (1 container statuses recorded)
  May 10 20:04:07.982: INFO: 	Container dapi-container ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-236-144.eu-west-3.compute.internal @ 05/10/24 20:04:08.08
  STEP: verifying the node has the label node ip-172-31-236-46.eu-west-3.compute.internal @ 05/10/24 20:04:08.124
  STEP: verifying the node has the label node ip-172-31-237-27.eu-west-3.compute.internal @ 05/10/24 20:04:08.154
  STEP: verifying the node has the label node ip-172-31-237-5.eu-west-3.compute.internal @ 05/10/24 20:04:08.188
  STEP: verifying the node has the label node ip-172-31-238-69.eu-west-3.compute.internal @ 05/10/24 20:04:08.214
  STEP: verifying the node has the label node ip-172-31-238-87.eu-west-3.compute.internal @ 05/10/24 20:04:08.249
  May 10 20:04:08.290: INFO: Pod e2e-conformance-test requesting resource cpu=0m on Node ip-172-31-236-144.eu-west-3.compute.internal
  May 10 20:04:08.290: INFO: Pod pod1 requesting resource cpu=0m on Node ip-172-31-237-27.eu-west-3.compute.internal
  May 10 20:04:08.290: INFO: Pod canal-7n86g requesting resource cpu=250m on Node ip-172-31-237-5.eu-west-3.compute.internal
  May 10 20:04:08.290: INFO: Pod canal-86fpg requesting resource cpu=250m on Node ip-172-31-237-27.eu-west-3.compute.internal
  May 10 20:04:08.290: INFO: Pod canal-c5pr9 requesting resource cpu=250m on Node ip-172-31-236-46.eu-west-3.compute.internal
  May 10 20:04:08.290: INFO: Pod canal-cfqsw requesting resource cpu=250m on Node ip-172-31-238-87.eu-west-3.compute.internal
  May 10 20:04:08.290: INFO: Pod canal-qhmdf requesting resource cpu=250m on Node ip-172-31-238-69.eu-west-3.compute.internal
  May 10 20:04:08.290: INFO: Pod canal-zgphj requesting resource cpu=250m on Node ip-172-31-236-144.eu-west-3.compute.internal
  May 10 20:04:08.290: INFO: Pod ebs-csi-node-5mtfb requesting resource cpu=30m on Node ip-172-31-238-87.eu-west-3.compute.internal
  May 10 20:04:08.290: INFO: Pod ebs-csi-node-6hgh7 requesting resource cpu=30m on Node ip-172-31-237-5.eu-west-3.compute.internal
  May 10 20:04:08.290: INFO: Pod ebs-csi-node-7kmv9 requesting resource cpu=30m on Node ip-172-31-236-144.eu-west-3.compute.internal
  May 10 20:04:08.290: INFO: Pod ebs-csi-node-bgqjk requesting resource cpu=30m on Node ip-172-31-238-69.eu-west-3.compute.internal
  May 10 20:04:08.290: INFO: Pod ebs-csi-node-lhfzz requesting resource cpu=30m on Node ip-172-31-236-46.eu-west-3.compute.internal
  May 10 20:04:08.290: INFO: Pod ebs-csi-node-qg9kf requesting resource cpu=30m on Node ip-172-31-237-27.eu-west-3.compute.internal
  May 10 20:04:08.290: INFO: Pod kube-proxy-2gzg4 requesting resource cpu=0m on Node ip-172-31-237-27.eu-west-3.compute.internal
  May 10 20:04:08.290: INFO: Pod kube-proxy-b6mmd requesting resource cpu=0m on Node ip-172-31-237-5.eu-west-3.compute.internal
  May 10 20:04:08.290: INFO: Pod kube-proxy-n9m2f requesting resource cpu=0m on Node ip-172-31-238-87.eu-west-3.compute.internal
  May 10 20:04:08.290: INFO: Pod kube-proxy-svhx8 requesting resource cpu=0m on Node ip-172-31-236-144.eu-west-3.compute.internal
  May 10 20:04:08.290: INFO: Pod kube-proxy-wkbd8 requesting resource cpu=0m on Node ip-172-31-238-69.eu-west-3.compute.internal
  May 10 20:04:08.290: INFO: Pod kube-proxy-x88pq requesting resource cpu=0m on Node ip-172-31-236-46.eu-west-3.compute.internal
  May 10 20:04:08.290: INFO: Pod node-local-dns-6d9jq requesting resource cpu=25m on Node ip-172-31-238-87.eu-west-3.compute.internal
  May 10 20:04:08.290: INFO: Pod node-local-dns-746vg requesting resource cpu=25m on Node ip-172-31-238-69.eu-west-3.compute.internal
  May 10 20:04:08.290: INFO: Pod node-local-dns-86s45 requesting resource cpu=25m on Node ip-172-31-237-5.eu-west-3.compute.internal
  May 10 20:04:08.290: INFO: Pod node-local-dns-f2v2d requesting resource cpu=25m on Node ip-172-31-236-46.eu-west-3.compute.internal
  May 10 20:04:08.290: INFO: Pod node-local-dns-f4wjg requesting resource cpu=25m on Node ip-172-31-237-27.eu-west-3.compute.internal
  May 10 20:04:08.290: INFO: Pod node-local-dns-fbvng requesting resource cpu=25m on Node ip-172-31-236-144.eu-west-3.compute.internal
  May 10 20:04:08.290: INFO: Pod var-expansion-9bb8221d-7ce0-4f7c-aff4-9f3e33179d52 requesting resource cpu=0m on Node ip-172-31-238-87.eu-west-3.compute.internal
  STEP: Starting Pods to consume most of the cluster CPU. @ 05/10/24 20:04:08.29
  May 10 20:04:08.290: INFO: Creating a pod which consumes cpu=2306m on Node ip-172-31-237-27.eu-west-3.compute.internal
  May 10 20:04:08.308: INFO: Creating a pod which consumes cpu=2306m on Node ip-172-31-237-5.eu-west-3.compute.internal
  May 10 20:04:08.325: INFO: Creating a pod which consumes cpu=2306m on Node ip-172-31-238-69.eu-west-3.compute.internal
  May 10 20:04:08.345: INFO: Creating a pod which consumes cpu=2306m on Node ip-172-31-238-87.eu-west-3.compute.internal
  May 10 20:04:08.387: INFO: Creating a pod which consumes cpu=2306m on Node ip-172-31-236-144.eu-west-3.compute.internal
  May 10 20:04:08.409: INFO: Creating a pod which consumes cpu=2306m on Node ip-172-31-236-46.eu-west-3.compute.internal
  STEP: Creating another pod that requires unavailable amount of CPU. @ 05/10/24 20:04:10.553
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0011db0a-523c-43b3-9d2a-7753837dcc43.17ce393e6b034817], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9433/filler-pod-0011db0a-523c-43b3-9d2a-7753837dcc43 to ip-172-31-237-27.eu-west-3.compute.internal] @ 05/10/24 20:04:10.565
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0011db0a-523c-43b3-9d2a-7753837dcc43.17ce393e8f46be2b], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/10/24 20:04:10.565
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0011db0a-523c-43b3-9d2a-7753837dcc43.17ce393e90ec6a87], Reason = [Created], Message = [Created container filler-pod-0011db0a-523c-43b3-9d2a-7753837dcc43] @ 05/10/24 20:04:10.565
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0011db0a-523c-43b3-9d2a-7753837dcc43.17ce393e9827f6c5], Reason = [Started], Message = [Started container filler-pod-0011db0a-523c-43b3-9d2a-7753837dcc43] @ 05/10/24 20:04:10.565
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-31ea6889-6762-4b2d-934c-042cceb5bc49.17ce393e72bedf10], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9433/filler-pod-31ea6889-6762-4b2d-934c-042cceb5bc49 to ip-172-31-236-144.eu-west-3.compute.internal] @ 05/10/24 20:04:10.565
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-31ea6889-6762-4b2d-934c-042cceb5bc49.17ce393e955225f6], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/10/24 20:04:10.565
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-31ea6889-6762-4b2d-934c-042cceb5bc49.17ce393e965425f8], Reason = [Created], Message = [Created container filler-pod-31ea6889-6762-4b2d-934c-042cceb5bc49] @ 05/10/24 20:04:10.565
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-31ea6889-6762-4b2d-934c-042cceb5bc49.17ce393e9aee4b70], Reason = [Started], Message = [Started container filler-pod-31ea6889-6762-4b2d-934c-042cceb5bc49] @ 05/10/24 20:04:10.565
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-49d52744-fa9d-406b-bb7e-32418625e86e.17ce393e72c2372a], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9433/filler-pod-49d52744-fa9d-406b-bb7e-32418625e86e to ip-172-31-236-46.eu-west-3.compute.internal] @ 05/10/24 20:04:10.565
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-49d52744-fa9d-406b-bb7e-32418625e86e.17ce393e94d857e8], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/10/24 20:04:10.565
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-49d52744-fa9d-406b-bb7e-32418625e86e.17ce393e9608efbf], Reason = [Created], Message = [Created container filler-pod-49d52744-fa9d-406b-bb7e-32418625e86e] @ 05/10/24 20:04:10.565
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-49d52744-fa9d-406b-bb7e-32418625e86e.17ce393e9b27fe38], Reason = [Started], Message = [Started container filler-pod-49d52744-fa9d-406b-bb7e-32418625e86e] @ 05/10/24 20:04:10.565
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-63484fcf-425b-40c0-91f5-76d20cae6b8e.17ce393e6d454be5], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9433/filler-pod-63484fcf-425b-40c0-91f5-76d20cae6b8e to ip-172-31-238-69.eu-west-3.compute.internal] @ 05/10/24 20:04:10.565
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-63484fcf-425b-40c0-91f5-76d20cae6b8e.17ce393e8ed3c371], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/10/24 20:04:10.565
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-63484fcf-425b-40c0-91f5-76d20cae6b8e.17ce393e8ff62072], Reason = [Created], Message = [Created container filler-pod-63484fcf-425b-40c0-91f5-76d20cae6b8e] @ 05/10/24 20:04:10.565
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-63484fcf-425b-40c0-91f5-76d20cae6b8e.17ce393e95990c2b], Reason = [Started], Message = [Started container filler-pod-63484fcf-425b-40c0-91f5-76d20cae6b8e] @ 05/10/24 20:04:10.565
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f3259088-3547-4a6b-90ed-f40a99f83278.17ce393e70d4b1f2], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9433/filler-pod-f3259088-3547-4a6b-90ed-f40a99f83278 to ip-172-31-238-87.eu-west-3.compute.internal] @ 05/10/24 20:04:10.565
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f3259088-3547-4a6b-90ed-f40a99f83278.17ce393e931134ce], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/10/24 20:04:10.565
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f3259088-3547-4a6b-90ed-f40a99f83278.17ce393e947aa473], Reason = [Created], Message = [Created container filler-pod-f3259088-3547-4a6b-90ed-f40a99f83278] @ 05/10/24 20:04:10.565
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f3259088-3547-4a6b-90ed-f40a99f83278.17ce393e9a319334], Reason = [Started], Message = [Started container filler-pod-f3259088-3547-4a6b-90ed-f40a99f83278] @ 05/10/24 20:04:10.565
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f4ed7337-bab7-480b-8ad5-2f3c07dd8afd.17ce393e6c9c0096], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9433/filler-pod-f4ed7337-bab7-480b-8ad5-2f3c07dd8afd to ip-172-31-237-5.eu-west-3.compute.internal] @ 05/10/24 20:04:10.565
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f4ed7337-bab7-480b-8ad5-2f3c07dd8afd.17ce393e91888c6e], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/10/24 20:04:10.565
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f4ed7337-bab7-480b-8ad5-2f3c07dd8afd.17ce393e93add3e4], Reason = [Created], Message = [Created container filler-pod-f4ed7337-bab7-480b-8ad5-2f3c07dd8afd] @ 05/10/24 20:04:10.565
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f4ed7337-bab7-480b-8ad5-2f3c07dd8afd.17ce393e9876ddb1], Reason = [Started], Message = [Started container filler-pod-f4ed7337-bab7-480b-8ad5-2f3c07dd8afd] @ 05/10/24 20:04:10.565
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17ce393ef25befeb], Reason = [FailedScheduling], Message = [0/9 nodes are available: 3 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 6 Insufficient cpu. preemption: 0/9 nodes are available: 3 Preemption is not helpful for scheduling, 6 No preemption victims found for incoming pod..] @ 05/10/24 20:04:10.61
  STEP: removing the label node off the node ip-172-31-236-144.eu-west-3.compute.internal @ 05/10/24 20:04:11.597
  STEP: verifying the node doesn't have the label node @ 05/10/24 20:04:11.64
  STEP: removing the label node off the node ip-172-31-236-46.eu-west-3.compute.internal @ 05/10/24 20:04:11.664
  STEP: verifying the node doesn't have the label node @ 05/10/24 20:04:11.693
  STEP: removing the label node off the node ip-172-31-237-27.eu-west-3.compute.internal @ 05/10/24 20:04:11.711
  STEP: verifying the node doesn't have the label node @ 05/10/24 20:04:11.749
  STEP: removing the label node off the node ip-172-31-237-5.eu-west-3.compute.internal @ 05/10/24 20:04:11.755
  STEP: verifying the node doesn't have the label node @ 05/10/24 20:04:11.783
  STEP: removing the label node off the node ip-172-31-238-69.eu-west-3.compute.internal @ 05/10/24 20:04:11.792
  STEP: verifying the node doesn't have the label node @ 05/10/24 20:04:11.837
  STEP: removing the label node off the node ip-172-31-238-87.eu-west-3.compute.internal @ 05/10/24 20:04:11.85
  STEP: verifying the node doesn't have the label node @ 05/10/24 20:04:11.91
  May 10 20:04:11.918: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9433" for this suite. @ 05/10/24 20:04:11.929
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
• [6.734 seconds]
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:131

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:11.966
  May 10 20:04:11.966: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename projected @ 05/10/24 20:04:11.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:12.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:12.007
  STEP: Creating the pod @ 05/10/24 20:04:12.012
  May 10 20:04:14.625: INFO: Successfully updated pod "labelsupdate735cae60-075d-4baf-a4a4-2b036a4cb08e"
  May 10 20:04:18.676: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8897" for this suite. @ 05/10/24 20:04:18.687
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [15.530 seconds]
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:07.271
  May 10 20:04:07.271: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename hostport @ 05/10/24 20:04:07.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:07.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:07.322
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 05/10/24 20:04:07.336
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.237.27 on the node which pod1 resides and expect scheduled @ 05/10/24 20:04:09.363
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.237.27 but use UDP protocol on the node which pod2 resides @ 05/10/24 20:04:13.399
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 05/10/24 20:04:17.457
  May 10 20:04:17.457: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.237.27 http://127.0.0.1:54323/hostname] Namespace:hostport-131 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:04:17.457: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  May 10 20:04:17.457: INFO: ExecWithOptions: Clientset creation
  May 10 20:04:17.457: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-131/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.237.27+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.237.27, port: 54323 @ 05/10/24 20:04:17.567
  May 10 20:04:17.567: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.237.27:54323/hostname] Namespace:hostport-131 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:04:17.567: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  May 10 20:04:17.568: INFO: ExecWithOptions: Clientset creation
  May 10 20:04:17.568: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-131/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.237.27%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.237.27, port: 54323 UDP @ 05/10/24 20:04:17.671
  May 10 20:04:17.671: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.237.27 54323] Namespace:hostport-131 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:04:17.671: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  May 10 20:04:17.671: INFO: ExecWithOptions: Clientset creation
  May 10 20:04:17.671: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-131/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.237.27+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  May 10 20:04:22.773: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-131" for this suite. @ 05/10/24 20:04:22.786
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [2.194 seconds]
[sig-network] DNS should provide DNS for the cluster  [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:22.81
  May 10 20:04:22.810: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename dns @ 05/10/24 20:04:22.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:22.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:22.842
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/10/24 20:04:22.848
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/10/24 20:04:22.848
  STEP: creating a pod to probe DNS @ 05/10/24 20:04:22.848
  STEP: submitting the pod to kubernetes @ 05/10/24 20:04:22.848
  STEP: retrieving the pod @ 05/10/24 20:04:24.883
  STEP: looking for the results for each expected name from probers @ 05/10/24 20:04:24.889
  May 10 20:04:24.923: INFO: DNS probes using dns-6337/dns-test-e6e9b367-8a86-4302-8164-32d3e1ef9879 succeeded

  May 10 20:04:24.924: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/10/24 20:04:24.938
  STEP: Destroying namespace "dns-6337" for this suite. @ 05/10/24 20:04:24.973
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [6.716 seconds]
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:131

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:25.038
  May 10 20:04:25.038: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 20:04:25.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:25.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:25.071
  STEP: Creating the pod @ 05/10/24 20:04:25.093
  May 10 20:04:27.670: INFO: Successfully updated pod "labelsupdatee758499d-82df-42b5-8a47-338c8e24d158"
  May 10 20:04:31.723: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8935" for this suite. @ 05/10/24 20:04:31.741
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [5.165 seconds]
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:124

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:31.813
  May 10 20:04:31.813: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename controllerrevisions @ 05/10/24 20:04:31.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:31.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:31.848
  STEP: Creating DaemonSet "e2e-b5bqf-daemon-set" @ 05/10/24 20:04:31.923
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/10/24 20:04:31.931
  May 10 20:04:31.941: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:04:31.941: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:04:31.942: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:04:31.957: INFO: Number of nodes with available pods controlled by daemonset e2e-b5bqf-daemon-set: 0
  May 10 20:04:31.957: INFO: Node ip-172-31-236-144.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  May 10 20:04:32.967: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:04:32.967: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:04:32.967: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:04:32.978: INFO: Number of nodes with available pods controlled by daemonset e2e-b5bqf-daemon-set: 3
  May 10 20:04:32.978: INFO: Node ip-172-31-236-144.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  May 10 20:04:33.975: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:04:33.975: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:04:33.975: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:04:33.984: INFO: Number of nodes with available pods controlled by daemonset e2e-b5bqf-daemon-set: 6
  May 10 20:04:33.984: INFO: Number of running nodes: 6, number of available pods: 6 in daemonset e2e-b5bqf-daemon-set
  STEP: Confirm DaemonSet "e2e-b5bqf-daemon-set" successfully created with "daemonset-name=e2e-b5bqf-daemon-set" label @ 05/10/24 20:04:33.989
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-b5bqf-daemon-set" @ 05/10/24 20:04:34.001
  May 10 20:04:34.007: INFO: Located ControllerRevision: "e2e-b5bqf-daemon-set-785448cbb9"
  STEP: Patching ControllerRevision "e2e-b5bqf-daemon-set-785448cbb9" @ 05/10/24 20:04:34.013
  May 10 20:04:34.024: INFO: e2e-b5bqf-daemon-set-785448cbb9 has been patched
  STEP: Create a new ControllerRevision @ 05/10/24 20:04:34.024
  May 10 20:04:34.030: INFO: Created ControllerRevision: e2e-b5bqf-daemon-set-6fb649944f
  STEP: Confirm that there are two ControllerRevisions @ 05/10/24 20:04:34.03
  May 10 20:04:34.030: INFO: Requesting list of ControllerRevisions to confirm quantity
  May 10 20:04:34.035: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-b5bqf-daemon-set-785448cbb9" @ 05/10/24 20:04:34.035
  STEP: Confirm that there is only one ControllerRevision @ 05/10/24 20:04:34.07
  May 10 20:04:34.070: INFO: Requesting list of ControllerRevisions to confirm quantity
  May 10 20:04:34.084: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-b5bqf-daemon-set-6fb649944f" @ 05/10/24 20:04:34.089
  May 10 20:04:34.102: INFO: e2e-b5bqf-daemon-set-6fb649944f has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 05/10/24 20:04:34.102
  W0510 20:04:34.111692      24 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 05/10/24 20:04:34.111
  May 10 20:04:34.111: INFO: Requesting list of ControllerRevisions to confirm quantity
  May 10 20:04:35.118: INFO: Requesting list of ControllerRevisions to confirm quantity
  May 10 20:04:35.126: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-b5bqf-daemon-set-6fb649944f=updated" @ 05/10/24 20:04:35.126
  STEP: Confirm that there is only one ControllerRevision @ 05/10/24 20:04:35.147
  May 10 20:04:35.147: INFO: Requesting list of ControllerRevisions to confirm quantity
  May 10 20:04:35.153: INFO: Found 1 ControllerRevisions
  May 10 20:04:35.158: INFO: ControllerRevision "e2e-b5bqf-daemon-set-544b8fbb4d" has revision 3
  STEP: Deleting DaemonSet "e2e-b5bqf-daemon-set" @ 05/10/24 20:04:35.164
  STEP: deleting DaemonSet.extensions e2e-b5bqf-daemon-set in namespace controllerrevisions-1862, will wait for the garbage collector to delete the pods @ 05/10/24 20:04:35.164
  May 10 20:04:35.230: INFO: Deleting DaemonSet.extensions e2e-b5bqf-daemon-set took: 10.848903ms
  May 10 20:04:35.331: INFO: Terminating DaemonSet.extensions e2e-b5bqf-daemon-set pods took: 100.736728ms
  May 10 20:04:36.739: INFO: Number of nodes with available pods controlled by daemonset e2e-b5bqf-daemon-set: 0
  May 10 20:04:36.739: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-b5bqf-daemon-set
  May 10 20:04:36.759: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"37840"},"items":null}

  May 10 20:04:36.780: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"37840"},"items":null}

  May 10 20:04:36.948: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-1862" for this suite. @ 05/10/24 20:04:36.965
  << Timeline
------------------------------
S
------------------------------
• [8.961 seconds]
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:36.982
  May 10 20:04:36.982: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename daemonsets @ 05/10/24 20:04:36.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:37.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:37.041
  May 10 20:04:37.113: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 05/10/24 20:04:37.125
  May 10 20:04:37.139: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 20:04:37.139: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 05/10/24 20:04:37.139
  May 10 20:04:37.209: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 20:04:37.209: INFO: Node ip-172-31-236-46.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  May 10 20:04:38.218: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 20:04:38.218: INFO: Node ip-172-31-236-46.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  May 10 20:04:39.215: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May 10 20:04:39.215: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 05/10/24 20:04:39.222
  May 10 20:04:39.283: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May 10 20:04:39.283: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  May 10 20:04:40.292: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 20:04:40.292: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 05/10/24 20:04:40.292
  May 10 20:04:40.315: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 20:04:40.315: INFO: Node ip-172-31-236-46.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  May 10 20:04:41.327: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 20:04:41.327: INFO: Node ip-172-31-236-46.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  May 10 20:04:42.324: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 20:04:42.324: INFO: Node ip-172-31-236-46.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  May 10 20:04:43.324: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May 10 20:04:43.324: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/10/24 20:04:43.354
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3309, will wait for the garbage collector to delete the pods @ 05/10/24 20:04:43.354
  May 10 20:04:43.424: INFO: Deleting DaemonSet.extensions daemon-set took: 12.49205ms
  May 10 20:04:43.525: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.535617ms
  May 10 20:04:45.831: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 20:04:45.831: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May 10 20:04:45.835: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"37996"},"items":null}

  May 10 20:04:45.840: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"37996"},"items":null}

  May 10 20:04:45.920: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3309" for this suite. @ 05/10/24 20:04:45.929
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
• [4.149 seconds]
[sig-auth] ServiceAccounts should mount projected service account token [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:275

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:45.955
  May 10 20:04:45.955: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename svcaccounts @ 05/10/24 20:04:45.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:45.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:45.981
  STEP: Creating a pod to test service account token:  @ 05/10/24 20:04:45.985
  STEP: Saw pod success @ 05/10/24 20:04:50.022
  May 10 20:04:50.027: INFO: Trying to get logs from node ip-172-31-237-27.eu-west-3.compute.internal pod test-pod-f2d8eda7-cbbe-4ce6-b0df-f3302ea9b24e container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 20:04:50.036
  May 10 20:04:50.085: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2810" for this suite. @ 05/10/24 20:04:50.094
  << Timeline
------------------------------
• [19.843 seconds]
[sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:354

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:50.105
  May 10 20:04:50.105: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 20:04:50.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:50.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:50.136
  STEP: creating a replication controller @ 05/10/24 20:04:50.14
  May 10 20:04:50.140: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=kubectl-3837 create -f -'
  May 10 20:04:50.729: INFO: stderr: ""
  May 10 20:04:50.729: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/10/24 20:04:50.729
  May 10 20:04:50.729: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=kubectl-3837 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 10 20:04:50.802: INFO: stderr: ""
  May 10 20:04:50.802: INFO: stdout: "update-demo-nautilus-5sv8d update-demo-nautilus-lxc7z "
  May 10 20:04:50.802: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=kubectl-3837 get pods update-demo-nautilus-5sv8d -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 10 20:04:50.863: INFO: stderr: ""
  May 10 20:04:50.863: INFO: stdout: ""
  May 10 20:04:50.863: INFO: update-demo-nautilus-5sv8d is created but not running
  May 10 20:04:55.863: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=kubectl-3837 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 10 20:04:55.954: INFO: stderr: ""
  May 10 20:04:55.954: INFO: stdout: "update-demo-nautilus-5sv8d update-demo-nautilus-lxc7z "
  May 10 20:04:55.954: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=kubectl-3837 get pods update-demo-nautilus-5sv8d -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 10 20:04:56.073: INFO: stderr: ""
  May 10 20:04:56.073: INFO: stdout: "true"
  May 10 20:04:56.073: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=kubectl-3837 get pods update-demo-nautilus-5sv8d -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 10 20:04:56.151: INFO: stderr: ""
  May 10 20:04:56.151: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 10 20:04:56.151: INFO: validating pod update-demo-nautilus-5sv8d
  May 10 20:04:56.159: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 10 20:04:56.159: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 10 20:04:56.159: INFO: update-demo-nautilus-5sv8d is verified up and running
  May 10 20:04:56.159: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=kubectl-3837 get pods update-demo-nautilus-lxc7z -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 10 20:04:56.228: INFO: stderr: ""
  May 10 20:04:56.228: INFO: stdout: "true"
  May 10 20:04:56.228: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=kubectl-3837 get pods update-demo-nautilus-lxc7z -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 10 20:04:56.326: INFO: stderr: ""
  May 10 20:04:56.326: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 10 20:04:56.326: INFO: validating pod update-demo-nautilus-lxc7z
  May 10 20:04:56.334: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 10 20:04:56.334: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 10 20:04:56.334: INFO: update-demo-nautilus-lxc7z is verified up and running
  STEP: scaling down the replication controller @ 05/10/24 20:04:56.334
  May 10 20:04:56.337: INFO: scanned /root for discovery docs: <nil>
  May 10 20:04:56.337: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=kubectl-3837 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  May 10 20:04:57.458: INFO: stderr: ""
  May 10 20:04:57.458: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/10/24 20:04:57.458
  May 10 20:04:57.458: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=kubectl-3837 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 10 20:04:57.553: INFO: stderr: ""
  May 10 20:04:57.553: INFO: stdout: "update-demo-nautilus-5sv8d update-demo-nautilus-lxc7z "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 05/10/24 20:04:57.553
  May 10 20:05:02.554: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=kubectl-3837 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 10 20:05:02.659: INFO: stderr: ""
  May 10 20:05:02.659: INFO: stdout: "update-demo-nautilus-lxc7z "
  May 10 20:05:02.659: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=kubectl-3837 get pods update-demo-nautilus-lxc7z -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 10 20:05:02.743: INFO: stderr: ""
  May 10 20:05:02.743: INFO: stdout: "true"
  May 10 20:05:02.743: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=kubectl-3837 get pods update-demo-nautilus-lxc7z -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 10 20:05:02.825: INFO: stderr: ""
  May 10 20:05:02.826: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 10 20:05:02.826: INFO: validating pod update-demo-nautilus-lxc7z
  May 10 20:05:02.833: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 10 20:05:02.833: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 10 20:05:02.833: INFO: update-demo-nautilus-lxc7z is verified up and running
  STEP: scaling up the replication controller @ 05/10/24 20:05:02.833
  May 10 20:05:02.835: INFO: scanned /root for discovery docs: <nil>
  May 10 20:05:02.835: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=kubectl-3837 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  May 10 20:05:03.926: INFO: stderr: ""
  May 10 20:05:03.926: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/10/24 20:05:03.926
  May 10 20:05:03.926: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=kubectl-3837 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 10 20:05:04.026: INFO: stderr: ""
  May 10 20:05:04.026: INFO: stdout: "update-demo-nautilus-lxc7z update-demo-nautilus-qwqlm "
  May 10 20:05:04.026: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=kubectl-3837 get pods update-demo-nautilus-lxc7z -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 10 20:05:04.108: INFO: stderr: ""
  May 10 20:05:04.108: INFO: stdout: "true"
  May 10 20:05:04.108: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=kubectl-3837 get pods update-demo-nautilus-lxc7z -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 10 20:05:04.194: INFO: stderr: ""
  May 10 20:05:04.194: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 10 20:05:04.194: INFO: validating pod update-demo-nautilus-lxc7z
  May 10 20:05:04.203: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 10 20:05:04.203: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 10 20:05:04.203: INFO: update-demo-nautilus-lxc7z is verified up and running
  May 10 20:05:04.203: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=kubectl-3837 get pods update-demo-nautilus-qwqlm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 10 20:05:04.276: INFO: stderr: ""
  May 10 20:05:04.276: INFO: stdout: ""
  May 10 20:05:04.276: INFO: update-demo-nautilus-qwqlm is created but not running
  May 10 20:05:09.277: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=kubectl-3837 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 10 20:05:09.363: INFO: stderr: ""
  May 10 20:05:09.363: INFO: stdout: "update-demo-nautilus-lxc7z update-demo-nautilus-qwqlm "
  May 10 20:05:09.364: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=kubectl-3837 get pods update-demo-nautilus-lxc7z -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 10 20:05:09.431: INFO: stderr: ""
  May 10 20:05:09.431: INFO: stdout: "true"
  May 10 20:05:09.431: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=kubectl-3837 get pods update-demo-nautilus-lxc7z -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 10 20:05:09.517: INFO: stderr: ""
  May 10 20:05:09.517: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 10 20:05:09.517: INFO: validating pod update-demo-nautilus-lxc7z
  May 10 20:05:09.523: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 10 20:05:09.523: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 10 20:05:09.523: INFO: update-demo-nautilus-lxc7z is verified up and running
  May 10 20:05:09.523: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=kubectl-3837 get pods update-demo-nautilus-qwqlm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 10 20:05:09.601: INFO: stderr: ""
  May 10 20:05:09.601: INFO: stdout: "true"
  May 10 20:05:09.601: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=kubectl-3837 get pods update-demo-nautilus-qwqlm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 10 20:05:09.688: INFO: stderr: ""
  May 10 20:05:09.688: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 10 20:05:09.688: INFO: validating pod update-demo-nautilus-qwqlm
  May 10 20:05:09.696: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 10 20:05:09.696: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 10 20:05:09.696: INFO: update-demo-nautilus-qwqlm is verified up and running
  STEP: using delete to clean up resources @ 05/10/24 20:05:09.696
  May 10 20:05:09.696: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=kubectl-3837 delete --grace-period=0 --force -f -'
  May 10 20:05:09.769: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 10 20:05:09.769: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  May 10 20:05:09.769: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=kubectl-3837 get rc,svc -l name=update-demo --no-headers'
  May 10 20:05:09.860: INFO: stderr: "No resources found in kubectl-3837 namespace.\n"
  May 10 20:05:09.860: INFO: stdout: ""
  May 10 20:05:09.860: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-374089931 --namespace=kubectl-3837 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  May 10 20:05:09.929: INFO: stderr: ""
  May 10 20:05:09.929: INFO: stdout: ""
  May 10 20:05:09.929: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3837" for this suite. @ 05/10/24 20:05:09.939
  << Timeline
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
• [0.151 seconds]
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:05:09.96
  May 10 20:05:09.960: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename watch @ 05/10/24 20:05:09.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:05:10.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:05:10.013
  STEP: creating a new configmap @ 05/10/24 20:05:10.018
  STEP: modifying the configmap once @ 05/10/24 20:05:10.037
  STEP: modifying the configmap a second time @ 05/10/24 20:05:10.059
  STEP: deleting the configmap @ 05/10/24 20:05:10.073
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 05/10/24 20:05:10.082
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 05/10/24 20:05:10.084
  May 10 20:05:10.084: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-4305  8dfcae0d-f45f-4565-b76b-7b42ea333543 38228 0 2024-05-10 20:05:10 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-05-10 20:05:10 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 20:05:10.084: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-4305  8dfcae0d-f45f-4565-b76b-7b42ea333543 38229 0 2024-05-10 20:05:10 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-05-10 20:05:10 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 20:05:10.085: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4305" for this suite. @ 05/10/24 20:05:10.095
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [12.638 seconds]
[sig-network] Service endpoints latency should not be very high  [Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:05:10.13
  May 10 20:05:10.130: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename svc-latency @ 05/10/24 20:05:10.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:05:10.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:05:10.17
  May 10 20:05:10.175: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-5733 @ 05/10/24 20:05:10.176
  I0510 20:05:10.187798      24 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-5733, replica count: 1
  I0510 20:05:11.239229      24 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 10 20:05:11.404: INFO: Created: latency-svc-jwkkz
  May 10 20:05:11.415: INFO: Got endpoints: latency-svc-jwkkz [75.582877ms]
  May 10 20:05:11.477: INFO: Created: latency-svc-jzvw6
  May 10 20:05:11.482: INFO: Got endpoints: latency-svc-jzvw6 [67.316416ms]
  May 10 20:05:11.505: INFO: Created: latency-svc-qw8g8
  May 10 20:05:11.522: INFO: Got endpoints: latency-svc-qw8g8 [107.452872ms]
  May 10 20:05:11.537: INFO: Created: latency-svc-pxpj4
  May 10 20:05:11.546: INFO: Got endpoints: latency-svc-pxpj4 [130.77757ms]
  May 10 20:05:11.612: INFO: Created: latency-svc-4lwnd
  May 10 20:05:11.624: INFO: Got endpoints: latency-svc-4lwnd [207.930369ms]
  May 10 20:05:11.803: INFO: Created: latency-svc-x2qcf
  May 10 20:05:11.818: INFO: Got endpoints: latency-svc-x2qcf [402.149238ms]
  May 10 20:05:11.851: INFO: Created: latency-svc-2rkk9
  May 10 20:05:11.861: INFO: Got endpoints: latency-svc-2rkk9 [445.296239ms]
  May 10 20:05:11.880: INFO: Created: latency-svc-zvfg8
  May 10 20:05:11.907: INFO: Got endpoints: latency-svc-zvfg8 [488.230845ms]
  May 10 20:05:11.968: INFO: Created: latency-svc-4t7wh
  May 10 20:05:11.978: INFO: Got endpoints: latency-svc-4t7wh [561.724458ms]
  May 10 20:05:12.054: INFO: Created: latency-svc-dw2dx
  May 10 20:05:12.076: INFO: Got endpoints: latency-svc-dw2dx [659.503128ms]
  May 10 20:05:12.088: INFO: Created: latency-svc-frf56
  May 10 20:05:12.101: INFO: Got endpoints: latency-svc-frf56 [680.911527ms]
  May 10 20:05:12.108: INFO: Created: latency-svc-kfpq8
  May 10 20:05:12.114: INFO: Got endpoints: latency-svc-kfpq8 [693.647899ms]
  May 10 20:05:12.154: INFO: Created: latency-svc-r8rzc
  May 10 20:05:12.154: INFO: Got endpoints: latency-svc-r8rzc [734.412166ms]
  May 10 20:05:12.241: INFO: Created: latency-svc-cwlvs
  May 10 20:05:12.243: INFO: Got endpoints: latency-svc-cwlvs [822.493057ms]
  May 10 20:05:12.298: INFO: Created: latency-svc-lggxv
  May 10 20:05:12.314: INFO: Got endpoints: latency-svc-lggxv [897.264158ms]
  May 10 20:05:12.332: INFO: Created: latency-svc-9v6v7
  May 10 20:05:12.334: INFO: Got endpoints: latency-svc-9v6v7 [918.808635ms]
  May 10 20:05:12.373: INFO: Created: latency-svc-6f8jz
  May 10 20:05:12.373: INFO: Got endpoints: latency-svc-6f8jz [891.252994ms]
  May 10 20:05:12.458: INFO: Created: latency-svc-zxg9p
  May 10 20:05:12.466: INFO: Got endpoints: latency-svc-zxg9p [943.339767ms]
  May 10 20:05:12.529: INFO: Created: latency-svc-bpp8s
  May 10 20:05:12.537: INFO: Got endpoints: latency-svc-bpp8s [991.682999ms]
  May 10 20:05:12.554: INFO: Created: latency-svc-9zhd9
  May 10 20:05:12.566: INFO: Got endpoints: latency-svc-9zhd9 [941.962883ms]
  May 10 20:05:12.594: INFO: Created: latency-svc-42bzl
  May 10 20:05:12.603: INFO: Got endpoints: latency-svc-42bzl [784.650138ms]
  May 10 20:05:12.722: INFO: Created: latency-svc-nlwnx
  May 10 20:05:12.724: INFO: Got endpoints: latency-svc-nlwnx [862.262727ms]
  May 10 20:05:12.807: INFO: Created: latency-svc-6mv7c
  May 10 20:05:12.812: INFO: Got endpoints: latency-svc-6mv7c [905.007597ms]
  May 10 20:05:12.878: INFO: Created: latency-svc-4rrbn
  May 10 20:05:12.883: INFO: Got endpoints: latency-svc-4rrbn [807.411421ms]
  May 10 20:05:12.901: INFO: Created: latency-svc-k9fnk
  May 10 20:05:12.908: INFO: Got endpoints: latency-svc-k9fnk [807.284424ms]
  May 10 20:05:12.996: INFO: Created: latency-svc-zn7p2
  May 10 20:05:13.008: INFO: Got endpoints: latency-svc-zn7p2 [893.579665ms]
  May 10 20:05:13.026: INFO: Created: latency-svc-5m69m
  May 10 20:05:13.026: INFO: Got endpoints: latency-svc-5m69m [872.280309ms]
  May 10 20:05:13.042: INFO: Created: latency-svc-x6xw6
  May 10 20:05:13.051: INFO: Got endpoints: latency-svc-x6xw6 [808.446032ms]
  May 10 20:05:13.072: INFO: Created: latency-svc-kdw6k
  May 10 20:05:13.083: INFO: Got endpoints: latency-svc-kdw6k [769.726606ms]
  May 10 20:05:13.230: INFO: Created: latency-svc-vm5bn
  May 10 20:05:13.238: INFO: Got endpoints: latency-svc-vm5bn [904.23801ms]
  May 10 20:05:13.250: INFO: Created: latency-svc-xd5hc
  May 10 20:05:13.255: INFO: Got endpoints: latency-svc-xd5hc [881.378604ms]
  May 10 20:05:13.274: INFO: Created: latency-svc-dsxp4
  May 10 20:05:13.279: INFO: Got endpoints: latency-svc-dsxp4 [813.559404ms]
  May 10 20:05:13.291: INFO: Created: latency-svc-6g9pd
  May 10 20:05:13.358: INFO: Got endpoints: latency-svc-6g9pd [821.136267ms]
  May 10 20:05:13.382: INFO: Created: latency-svc-mgcq5
  May 10 20:05:13.440: INFO: Got endpoints: latency-svc-mgcq5 [874.727267ms]
  May 10 20:05:13.448: INFO: Created: latency-svc-vmd4r
  May 10 20:05:13.462: INFO: Got endpoints: latency-svc-vmd4r [859.75013ms]
  May 10 20:05:13.475: INFO: Created: latency-svc-tjnkp
  May 10 20:05:13.483: INFO: Got endpoints: latency-svc-tjnkp [759.648849ms]
  May 10 20:05:13.499: INFO: Created: latency-svc-x9lnf
  May 10 20:05:13.499: INFO: Created: latency-svc-psrbn
  May 10 20:05:13.608: INFO: Got endpoints: latency-svc-x9lnf [1.630189051s]
  May 10 20:05:13.608: INFO: Got endpoints: latency-svc-psrbn [796.266737ms]
  May 10 20:05:13.630: INFO: Created: latency-svc-8l6sq
  May 10 20:05:13.630: INFO: Got endpoints: latency-svc-8l6sq [746.949566ms]
  May 10 20:05:13.697: INFO: Created: latency-svc-mfpzb
  May 10 20:05:13.712: INFO: Got endpoints: latency-svc-mfpzb [803.924681ms]
  May 10 20:05:13.729: INFO: Created: latency-svc-vphxd
  May 10 20:05:13.735: INFO: Got endpoints: latency-svc-vphxd [726.899673ms]
  May 10 20:05:13.752: INFO: Created: latency-svc-j8c26
  May 10 20:05:13.824: INFO: Got endpoints: latency-svc-j8c26 [798.208236ms]
  May 10 20:05:13.839: INFO: Created: latency-svc-z7dqr
  May 10 20:05:13.848: INFO: Got endpoints: latency-svc-z7dqr [796.639547ms]
  May 10 20:05:13.919: INFO: Created: latency-svc-pkdkf
  May 10 20:05:13.927: INFO: Got endpoints: latency-svc-pkdkf [843.688195ms]
  May 10 20:05:13.935: INFO: Created: latency-svc-nxnsj
  May 10 20:05:13.944: INFO: Got endpoints: latency-svc-nxnsj [705.655413ms]
  May 10 20:05:13.963: INFO: Created: latency-svc-7mvdf
  May 10 20:05:14.071: INFO: Got endpoints: latency-svc-7mvdf [816.125328ms]
  May 10 20:05:14.084: INFO: Created: latency-svc-wmn5j
  May 10 20:05:14.093: INFO: Got endpoints: latency-svc-wmn5j [813.15987ms]
  May 10 20:05:14.196: INFO: Created: latency-svc-vf26c
  May 10 20:05:14.203: INFO: Got endpoints: latency-svc-vf26c [844.539065ms]
  May 10 20:05:14.226: INFO: Created: latency-svc-dr7hr
  May 10 20:05:14.243: INFO: Got endpoints: latency-svc-dr7hr [802.470944ms]
  May 10 20:05:14.252: INFO: Created: latency-svc-l5tq8
  May 10 20:05:14.262: INFO: Got endpoints: latency-svc-l5tq8 [799.61165ms]
  May 10 20:05:14.338: INFO: Created: latency-svc-fg4gp
  May 10 20:05:14.345: INFO: Got endpoints: latency-svc-fg4gp [861.722023ms]
  May 10 20:05:14.422: INFO: Created: latency-svc-fhg4d
  May 10 20:05:14.426: INFO: Got endpoints: latency-svc-fhg4d [817.897334ms]
  May 10 20:05:14.461: INFO: Created: latency-svc-ttbrl
  May 10 20:05:14.508: INFO: Got endpoints: latency-svc-ttbrl [899.801105ms]
  May 10 20:05:14.533: INFO: Created: latency-svc-n9d4l
  May 10 20:05:14.536: INFO: Got endpoints: latency-svc-n9d4l [905.464697ms]
  May 10 20:05:14.655: INFO: Created: latency-svc-nxznw
  May 10 20:05:14.655: INFO: Got endpoints: latency-svc-nxznw [942.769665ms]
  May 10 20:05:14.713: INFO: Created: latency-svc-ddh6q
  May 10 20:05:14.738: INFO: Got endpoints: latency-svc-ddh6q [1.003231909s]
  May 10 20:05:14.755: INFO: Created: latency-svc-bpb9s
  May 10 20:05:14.763: INFO: Got endpoints: latency-svc-bpb9s [938.419355ms]
  May 10 20:05:15.604: INFO: Created: latency-svc-dsq92
  May 10 20:05:15.604: INFO: Created: latency-svc-7zmt4
  May 10 20:05:15.612: INFO: Created: latency-svc-w5jn9
  May 10 20:05:15.612: INFO: Created: latency-svc-vtt7l
  May 10 20:05:15.612: INFO: Created: latency-svc-mn6qr
  May 10 20:05:15.612: INFO: Created: latency-svc-6r2x8
  May 10 20:05:15.612: INFO: Created: latency-svc-bttwv
  May 10 20:05:15.612: INFO: Created: latency-svc-tpwd5
  May 10 20:05:15.612: INFO: Created: latency-svc-qch74
  May 10 20:05:15.612: INFO: Created: latency-svc-b6bxl
  May 10 20:05:15.624: INFO: Created: latency-svc-n6txw
  May 10 20:05:15.626: INFO: Created: latency-svc-qjrpp
  May 10 20:05:15.627: INFO: Created: latency-svc-q4hd6
  May 10 20:05:15.627: INFO: Created: latency-svc-kmgdb
  May 10 20:05:15.627: INFO: Created: latency-svc-cqzkz
  May 10 20:05:15.649: INFO: Got endpoints: latency-svc-tpwd5 [1.556848012s]
  May 10 20:05:15.654: INFO: Got endpoints: latency-svc-7zmt4 [1.806700882s]
  May 10 20:05:15.654: INFO: Got endpoints: latency-svc-6r2x8 [1.392333351s]
  May 10 20:05:15.662: INFO: Got endpoints: latency-svc-mn6qr [924.212141ms]
  May 10 20:05:15.662: INFO: Got endpoints: latency-svc-dsq92 [899.2887ms]
  May 10 20:05:15.662: INFO: Got endpoints: latency-svc-b6bxl [1.735136552s]
  May 10 20:05:15.696: INFO: Got endpoints: latency-svc-vtt7l [1.492788404s]
  May 10 20:05:15.696: INFO: Got endpoints: latency-svc-qch74 [1.752294517s]
  May 10 20:05:15.696: INFO: Got endpoints: latency-svc-w5jn9 [1.452987155s]
  May 10 20:05:15.702: INFO: Got endpoints: latency-svc-qjrpp [1.357266354s]
  May 10 20:05:15.702: INFO: Got endpoints: latency-svc-bttwv [1.631463936s]
  May 10 20:05:15.725: INFO: Created: latency-svc-t7k86
  May 10 20:05:15.728: INFO: Got endpoints: latency-svc-n6txw [1.073009892s]
  May 10 20:05:15.728: INFO: Got endpoints: latency-svc-q4hd6 [1.220280167s]
  May 10 20:05:15.728: INFO: Got endpoints: latency-svc-cqzkz [1.302247831s]
  May 10 20:05:15.734: INFO: Got endpoints: latency-svc-kmgdb [1.198092097s]
  May 10 20:05:15.744: INFO: Got endpoints: latency-svc-t7k86 [94.851796ms]
  May 10 20:05:15.773: INFO: Created: latency-svc-29nw2
  May 10 20:05:15.775: INFO: Got endpoints: latency-svc-29nw2 [120.527074ms]
  May 10 20:05:15.941: INFO: Created: latency-svc-7pvcj
  May 10 20:05:15.944: INFO: Got endpoints: latency-svc-7pvcj [289.2432ms]
  May 10 20:05:16.030: INFO: Created: latency-svc-nndbr
  May 10 20:05:16.069: INFO: Got endpoints: latency-svc-nndbr [406.913524ms]
  May 10 20:05:16.070: INFO: Created: latency-svc-kv97t
  May 10 20:05:16.092: INFO: Got endpoints: latency-svc-kv97t [429.984203ms]
  May 10 20:05:16.099: INFO: Created: latency-svc-lqcw8
  May 10 20:05:16.163: INFO: Got endpoints: latency-svc-lqcw8 [500.298697ms]
  May 10 20:05:16.171: INFO: Created: latency-svc-g5k5b
  May 10 20:05:16.245: INFO: Got endpoints: latency-svc-g5k5b [549.618396ms]
  May 10 20:05:16.295: INFO: Created: latency-svc-cqrhm
  May 10 20:05:16.323: INFO: Got endpoints: latency-svc-cqrhm [627.438817ms]
  May 10 20:05:16.331: INFO: Created: latency-svc-5tn7d
  May 10 20:05:16.431: INFO: Got endpoints: latency-svc-5tn7d [728.414721ms]
  May 10 20:05:16.440: INFO: Created: latency-svc-mtjwq
  May 10 20:05:16.452: INFO: Got endpoints: latency-svc-mtjwq [749.730241ms]
  May 10 20:05:16.512: INFO: Created: latency-svc-lgmbq
  May 10 20:05:16.529: INFO: Created: latency-svc-fw4lx
  May 10 20:05:16.542: INFO: Got endpoints: latency-svc-lgmbq [813.536947ms]
  May 10 20:05:16.542: INFO: Got endpoints: latency-svc-fw4lx [813.612132ms]
  May 10 20:05:16.549: INFO: Created: latency-svc-6xgf2
  May 10 20:05:16.627: INFO: Got endpoints: latency-svc-6xgf2 [898.456003ms]
  May 10 20:05:16.636: INFO: Created: latency-svc-ng7jb
  May 10 20:05:16.645: INFO: Got endpoints: latency-svc-ng7jb [910.817354ms]
  May 10 20:05:16.748: INFO: Created: latency-svc-nj2l4
  May 10 20:05:16.775: INFO: Got endpoints: latency-svc-nj2l4 [1.031100271s]
  May 10 20:05:16.796: INFO: Created: latency-svc-l79hl
  May 10 20:05:16.804: INFO: Got endpoints: latency-svc-l79hl [1.02900802s]
  May 10 20:05:16.819: INFO: Created: latency-svc-dz24s
  May 10 20:05:16.822: INFO: Got endpoints: latency-svc-dz24s [878.610186ms]
  May 10 20:05:16.893: INFO: Created: latency-svc-sjcx6
  May 10 20:05:16.991: INFO: Got endpoints: latency-svc-sjcx6 [921.895707ms]
  May 10 20:05:16.999: INFO: Created: latency-svc-9plp5
  May 10 20:05:17.008: INFO: Got endpoints: latency-svc-9plp5 [915.605961ms]
  May 10 20:05:17.017: INFO: Created: latency-svc-qxb6m
  May 10 20:05:17.017: INFO: Created: latency-svc-242vg
  May 10 20:05:17.030: INFO: Created: latency-svc-j5ljh
  May 10 20:05:17.135: INFO: Got endpoints: latency-svc-qxb6m [972.505255ms]
  May 10 20:05:17.136: INFO: Got endpoints: latency-svc-242vg [1.4405936s]
  May 10 20:05:17.136: INFO: Got endpoints: latency-svc-j5ljh [891.033207ms]
  May 10 20:05:17.145: INFO: Created: latency-svc-b6ndf
  May 10 20:05:17.242: INFO: Got endpoints: latency-svc-b6ndf [919.015113ms]
  May 10 20:05:17.250: INFO: Created: latency-svc-nhv4n
  May 10 20:05:17.259: INFO: Got endpoints: latency-svc-nhv4n [827.655838ms]
  May 10 20:05:17.274: INFO: Created: latency-svc-q96mk
  May 10 20:05:17.279: INFO: Got endpoints: latency-svc-q96mk [826.744836ms]
  May 10 20:05:17.288: INFO: Created: latency-svc-pmncc
  May 10 20:05:17.353: INFO: Got endpoints: latency-svc-pmncc [810.759619ms]
  May 10 20:05:17.363: INFO: Created: latency-svc-tnhps
  May 10 20:05:17.368: INFO: Got endpoints: latency-svc-tnhps [826.163957ms]
  May 10 20:05:17.383: INFO: Created: latency-svc-qt2sp
  May 10 20:05:17.400: INFO: Created: latency-svc-mmtjq
  May 10 20:05:17.413: INFO: Got endpoints: latency-svc-mmtjq [768.145783ms]
  May 10 20:05:17.413: INFO: Got endpoints: latency-svc-qt2sp [786.571684ms]
  May 10 20:05:17.425: INFO: Created: latency-svc-wgdd2
  May 10 20:05:17.509: INFO: Got endpoints: latency-svc-wgdd2 [733.221824ms]
  May 10 20:05:17.520: INFO: Created: latency-svc-crppj
  May 10 20:05:17.559: INFO: Created: latency-svc-4vpt5
  May 10 20:05:17.645: INFO: Got endpoints: latency-svc-crppj [840.511393ms]
  May 10 20:05:17.645: INFO: Got endpoints: latency-svc-4vpt5 [822.423272ms]
  May 10 20:05:17.647: INFO: Created: latency-svc-r4szm
  May 10 20:05:17.647: INFO: Got endpoints: latency-svc-r4szm [655.8042ms]
  May 10 20:05:17.667: INFO: Created: latency-svc-vlf7b
  May 10 20:05:17.672: INFO: Got endpoints: latency-svc-vlf7b [663.940732ms]
  May 10 20:05:17.778: INFO: Created: latency-svc-279ks
  May 10 20:05:17.778: INFO: Got endpoints: latency-svc-279ks [642.55685ms]
  May 10 20:05:17.815: INFO: Created: latency-svc-dmljk
  May 10 20:05:17.822: INFO: Got endpoints: latency-svc-dmljk [685.129079ms]
  May 10 20:05:17.832: INFO: Created: latency-svc-rlczk
  May 10 20:05:17.848: INFO: Created: latency-svc-6k9wf
  May 10 20:05:17.935: INFO: Got endpoints: latency-svc-6k9wf [692.409811ms]
  May 10 20:05:17.935: INFO: Got endpoints: latency-svc-rlczk [798.471079ms]
  May 10 20:05:17.942: INFO: Created: latency-svc-jpwzb
  May 10 20:05:17.944: INFO: Got endpoints: latency-svc-jpwzb [685.882865ms]
  May 10 20:05:17.964: INFO: Created: latency-svc-75clj
  May 10 20:05:17.973: INFO: Got endpoints: latency-svc-75clj [693.553127ms]
  May 10 20:05:17.982: INFO: Created: latency-svc-kxm6n
  May 10 20:05:18.015: INFO: Got endpoints: latency-svc-kxm6n [662.305907ms]
  May 10 20:05:18.027: INFO: Created: latency-svc-42m75
  May 10 20:05:18.109: INFO: Got endpoints: latency-svc-42m75 [740.629774ms]
  May 10 20:05:18.115: INFO: Created: latency-svc-d8x6r
  May 10 20:05:18.162: INFO: Got endpoints: latency-svc-d8x6r [749.423805ms]
  May 10 20:05:18.171: INFO: Created: latency-svc-b9x82
  May 10 20:05:18.180: INFO: Got endpoints: latency-svc-b9x82 [766.752443ms]
  May 10 20:05:18.190: INFO: Created: latency-svc-8jk62
  May 10 20:05:18.207: INFO: Got endpoints: latency-svc-8jk62 [698.331072ms]
  May 10 20:05:18.216: INFO: Created: latency-svc-475gr
  May 10 20:05:18.306: INFO: Got endpoints: latency-svc-475gr [660.955691ms]
  May 10 20:05:18.316: INFO: Created: latency-svc-46f8b
  May 10 20:05:18.355: INFO: Created: latency-svc-fql6z
  May 10 20:05:18.355: INFO: Got endpoints: latency-svc-46f8b [710.836654ms]
  May 10 20:05:18.364: INFO: Got endpoints: latency-svc-fql6z [717.072077ms]
  May 10 20:05:18.379: INFO: Created: latency-svc-t76fl
  May 10 20:05:18.388: INFO: Got endpoints: latency-svc-t76fl [716.277026ms]
  May 10 20:05:18.401: INFO: Created: latency-svc-28ft9
  May 10 20:05:18.446: INFO: Got endpoints: latency-svc-28ft9 [668.504865ms]
  May 10 20:05:18.483: INFO: Created: latency-svc-khrzg
  May 10 20:05:18.491: INFO: Got endpoints: latency-svc-khrzg [669.017872ms]
  May 10 20:05:18.498: INFO: Created: latency-svc-x898h
  May 10 20:05:18.509: INFO: Got endpoints: latency-svc-x898h [574.085258ms]
  May 10 20:05:18.526: INFO: Created: latency-svc-njcck
  May 10 20:05:18.588: INFO: Got endpoints: latency-svc-njcck [652.65443ms]
  May 10 20:05:18.596: INFO: Created: latency-svc-gsthr
  May 10 20:05:18.600: INFO: Got endpoints: latency-svc-gsthr [655.858366ms]
  May 10 20:05:18.710: INFO: Created: latency-svc-zw79c
  May 10 20:05:18.714: INFO: Got endpoints: latency-svc-zw79c [741.477584ms]
  May 10 20:05:18.790: INFO: Created: latency-svc-8lmv8
  May 10 20:05:18.811: INFO: Got endpoints: latency-svc-8lmv8 [796.398287ms]
  May 10 20:05:18.852: INFO: Created: latency-svc-ff5qp
  May 10 20:05:18.859: INFO: Got endpoints: latency-svc-ff5qp [750.587252ms]
  May 10 20:05:18.914: INFO: Created: latency-svc-wh7tt
  May 10 20:05:18.970: INFO: Got endpoints: latency-svc-wh7tt [807.467624ms]
  May 10 20:05:18.984: INFO: Created: latency-svc-ds6l8
  May 10 20:05:18.990: INFO: Got endpoints: latency-svc-ds6l8 [810.351619ms]
  May 10 20:05:18.999: INFO: Created: latency-svc-v7j5w
  May 10 20:05:19.007: INFO: Got endpoints: latency-svc-v7j5w [800.242028ms]
  May 10 20:05:19.051: INFO: Created: latency-svc-d4k49
  May 10 20:05:19.117: INFO: Got endpoints: latency-svc-d4k49 [811.663501ms]
  May 10 20:05:19.125: INFO: Created: latency-svc-hsbvh
  May 10 20:05:19.202: INFO: Got endpoints: latency-svc-hsbvh [846.898675ms]
  May 10 20:05:19.209: INFO: Created: latency-svc-6ksxx
  May 10 20:05:19.230: INFO: Got endpoints: latency-svc-6ksxx [866.199903ms]
  May 10 20:05:19.236: INFO: Created: latency-svc-xwx9k
  May 10 20:05:19.246: INFO: Got endpoints: latency-svc-xwx9k [857.610569ms]
  May 10 20:05:19.255: INFO: Created: latency-svc-ptkqh
  May 10 20:05:19.350: INFO: Got endpoints: latency-svc-ptkqh [903.334604ms]
  May 10 20:05:19.358: INFO: Created: latency-svc-x2ltp
  May 10 20:05:19.423: INFO: Got endpoints: latency-svc-x2ltp [932.387886ms]
  May 10 20:05:19.435: INFO: Created: latency-svc-dbjw9
  May 10 20:05:19.447: INFO: Got endpoints: latency-svc-dbjw9 [937.99179ms]
  May 10 20:05:19.460: INFO: Created: latency-svc-fwbnb
  May 10 20:05:19.488: INFO: Got endpoints: latency-svc-fwbnb [900.247691ms]
  May 10 20:05:19.508: INFO: Created: latency-svc-wdmnl
  May 10 20:05:19.573: INFO: Got endpoints: latency-svc-wdmnl [972.726431ms]
  May 10 20:05:19.584: INFO: Created: latency-svc-h9vpv
  May 10 20:05:19.653: INFO: Got endpoints: latency-svc-h9vpv [939.325369ms]
  May 10 20:05:19.658: INFO: Created: latency-svc-jqkqq
  May 10 20:05:19.666: INFO: Got endpoints: latency-svc-jqkqq [854.886036ms]
  May 10 20:05:19.679: INFO: Created: latency-svc-qhxxn
  May 10 20:05:19.688: INFO: Got endpoints: latency-svc-qhxxn [828.57659ms]
  May 10 20:05:19.698: INFO: Created: latency-svc-grcbd
  May 10 20:05:19.757: INFO: Got endpoints: latency-svc-grcbd [786.829284ms]
  May 10 20:05:19.764: INFO: Created: latency-svc-smwfs
  May 10 20:05:19.843: INFO: Got endpoints: latency-svc-smwfs [852.952191ms]
  May 10 20:05:19.856: INFO: Created: latency-svc-rg42p
  May 10 20:05:19.873: INFO: Got endpoints: latency-svc-rg42p [866.124445ms]
  May 10 20:05:19.880: INFO: Created: latency-svc-74qgx
  May 10 20:05:19.889: INFO: Got endpoints: latency-svc-74qgx [771.390099ms]
  May 10 20:05:19.896: INFO: Created: latency-svc-nbdxm
  May 10 20:05:19.983: INFO: Got endpoints: latency-svc-nbdxm [781.060924ms]
  May 10 20:05:19.995: INFO: Created: latency-svc-xqgq6
  May 10 20:05:20.055: INFO: Got endpoints: latency-svc-xqgq6 [824.326086ms]
  May 10 20:05:20.064: INFO: Created: latency-svc-svrtg
  May 10 20:05:20.081: INFO: Got endpoints: latency-svc-svrtg [834.669666ms]
  May 10 20:05:20.095: INFO: Created: latency-svc-pnlpz
  May 10 20:05:20.121: INFO: Created: latency-svc-z89nx
  May 10 20:05:20.123: INFO: Got endpoints: latency-svc-pnlpz [773.8723ms]
  May 10 20:05:20.185: INFO: Got endpoints: latency-svc-z89nx [761.940486ms]
  May 10 20:05:20.192: INFO: Created: latency-svc-cz5c9
  May 10 20:05:20.286: INFO: Got endpoints: latency-svc-cz5c9 [838.725806ms]
  May 10 20:05:20.290: INFO: Created: latency-svc-qkmff
  May 10 20:05:20.302: INFO: Got endpoints: latency-svc-qkmff [813.584061ms]
  May 10 20:05:20.311: INFO: Created: latency-svc-56zxj
  May 10 20:05:20.320: INFO: Got endpoints: latency-svc-56zxj [747.015775ms]
  May 10 20:05:20.334: INFO: Created: latency-svc-wwdqf
  May 10 20:05:20.407: INFO: Got endpoints: latency-svc-wwdqf [753.814776ms]
  May 10 20:05:20.418: INFO: Created: latency-svc-lsw8s
  May 10 20:05:20.499: INFO: Got endpoints: latency-svc-lsw8s [833.128157ms]
  May 10 20:05:20.518: INFO: Created: latency-svc-pkb24
  May 10 20:05:20.554: INFO: Got endpoints: latency-svc-pkb24 [866.040703ms]
  May 10 20:05:20.566: INFO: Created: latency-svc-nmwsh
  May 10 20:05:20.575: INFO: Created: latency-svc-b5wz2
  May 10 20:05:20.641: INFO: Created: latency-svc-dt7x2
  May 10 20:05:20.706: INFO: Got endpoints: latency-svc-dt7x2 [832.104893ms]
  May 10 20:05:20.707: INFO: Got endpoints: latency-svc-nmwsh [950.481426ms]
  May 10 20:05:20.707: INFO: Got endpoints: latency-svc-b5wz2 [863.668004ms]
  May 10 20:05:20.713: INFO: Created: latency-svc-r57xx
  May 10 20:05:20.751: INFO: Got endpoints: latency-svc-r57xx [861.970491ms]
  May 10 20:05:20.763: INFO: Created: latency-svc-6kvft
  May 10 20:05:20.790: INFO: Got endpoints: latency-svc-6kvft [806.249526ms]
  May 10 20:05:20.791: INFO: Created: latency-svc-spz48
  May 10 20:05:20.846: INFO: Got endpoints: latency-svc-spz48 [791.780068ms]
  May 10 20:05:20.852: INFO: Created: latency-svc-nmtfc
  May 10 20:05:20.922: INFO: Got endpoints: latency-svc-nmtfc [841.243705ms]
  May 10 20:05:20.932: INFO: Created: latency-svc-9q985
  May 10 20:05:20.939: INFO: Got endpoints: latency-svc-9q985 [815.21108ms]
  May 10 20:05:20.954: INFO: Created: latency-svc-qck66
  May 10 20:05:20.960: INFO: Got endpoints: latency-svc-qck66 [774.87849ms]
  May 10 20:05:20.979: INFO: Created: latency-svc-hxhwv
  May 10 20:05:21.043: INFO: Got endpoints: latency-svc-hxhwv [757.337174ms]
  May 10 20:05:21.076: INFO: Created: latency-svc-22l7l
  May 10 20:05:21.076: INFO: Got endpoints: latency-svc-22l7l [774.111724ms]
  May 10 20:05:21.091: INFO: Created: latency-svc-mnfgb
  May 10 20:05:21.102: INFO: Got endpoints: latency-svc-mnfgb [781.54212ms]
  May 10 20:05:21.107: INFO: Created: latency-svc-4mt4m
  May 10 20:05:21.117: INFO: Got endpoints: latency-svc-4mt4m [710.1511ms]
  May 10 20:05:21.123: INFO: Created: latency-svc-zfsq2
  May 10 20:05:21.208: INFO: Got endpoints: latency-svc-zfsq2 [708.455791ms]
  May 10 20:05:21.214: INFO: Created: latency-svc-8jzhj
  May 10 20:05:21.227: INFO: Got endpoints: latency-svc-8jzhj [672.660969ms]
  May 10 20:05:21.238: INFO: Created: latency-svc-qnwv6
  May 10 20:05:21.246: INFO: Got endpoints: latency-svc-qnwv6 [540.34325ms]
  May 10 20:05:21.253: INFO: Created: latency-svc-7w8rf
  May 10 20:05:21.265: INFO: Got endpoints: latency-svc-7w8rf [557.598546ms]
  May 10 20:05:21.273: INFO: Created: latency-svc-wcm7f
  May 10 20:05:21.384: INFO: Got endpoints: latency-svc-wcm7f [676.567439ms]
  May 10 20:05:21.399: INFO: Created: latency-svc-7kkdt
  May 10 20:05:21.414: INFO: Got endpoints: latency-svc-7kkdt [662.658312ms]
  May 10 20:05:21.423: INFO: Created: latency-svc-p9cvn
  May 10 20:05:21.449: INFO: Got endpoints: latency-svc-p9cvn [659.057992ms]
  May 10 20:05:21.455: INFO: Created: latency-svc-d7nqr
  May 10 20:05:21.464: INFO: Got endpoints: latency-svc-d7nqr [617.609489ms]
  May 10 20:05:21.475: INFO: Created: latency-svc-7tlvm
  May 10 20:05:21.546: INFO: Got endpoints: latency-svc-7tlvm [624.467788ms]
  May 10 20:05:21.587: INFO: Created: latency-svc-znbt7
  May 10 20:05:21.587: INFO: Got endpoints: latency-svc-znbt7 [648.487015ms]
  May 10 20:05:21.605: INFO: Created: latency-svc-9f96g
  May 10 20:05:21.609: INFO: Got endpoints: latency-svc-9f96g [649.36412ms]
  May 10 20:05:21.623: INFO: Created: latency-svc-xxx8m
  May 10 20:05:21.742: INFO: Got endpoints: latency-svc-xxx8m [699.263973ms]
  May 10 20:05:21.753: INFO: Created: latency-svc-v67rp
  May 10 20:05:21.843: INFO: Got endpoints: latency-svc-v67rp [766.967492ms]
  May 10 20:05:21.859: INFO: Created: latency-svc-t94hx
  May 10 20:05:21.868: INFO: Got endpoints: latency-svc-t94hx [766.559819ms]
  May 10 20:05:21.879: INFO: Created: latency-svc-f7257
  May 10 20:05:21.895: INFO: Got endpoints: latency-svc-f7257 [777.145896ms]
  May 10 20:05:21.901: INFO: Created: latency-svc-8c65d
  May 10 20:05:21.906: INFO: Got endpoints: latency-svc-8c65d [697.654019ms]
  May 10 20:05:21.963: INFO: Created: latency-svc-b4d2r
  May 10 20:05:22.015: INFO: Got endpoints: latency-svc-b4d2r [788.537145ms]
  May 10 20:05:22.027: INFO: Created: latency-svc-rkgqm
  May 10 20:05:22.045: INFO: Got endpoints: latency-svc-rkgqm [798.915114ms]
  May 10 20:05:22.050: INFO: Created: latency-svc-c86l6
  May 10 20:05:22.082: INFO: Got endpoints: latency-svc-c86l6 [816.912133ms]
  May 10 20:05:22.096: INFO: Created: latency-svc-z6mlf
  May 10 20:05:22.254: INFO: Created: latency-svc-9prjb
  May 10 20:05:22.261: INFO: Got endpoints: latency-svc-9prjb [847.75147ms]
  May 10 20:05:22.261: INFO: Got endpoints: latency-svc-z6mlf [877.575975ms]
  May 10 20:05:22.335: INFO: Created: latency-svc-rwn7h
  May 10 20:05:22.357: INFO: Got endpoints: latency-svc-rwn7h [907.99393ms]
  May 10 20:05:22.386: INFO: Created: latency-svc-czh8l
  May 10 20:05:22.396: INFO: Got endpoints: latency-svc-czh8l [931.835736ms]
  May 10 20:05:22.418: INFO: Created: latency-svc-67smz
  May 10 20:05:22.481: INFO: Got endpoints: latency-svc-67smz [934.705944ms]
  May 10 20:05:22.488: INFO: Created: latency-svc-m2rgr
  May 10 20:05:22.494: INFO: Got endpoints: latency-svc-m2rgr [907.298693ms]
  May 10 20:05:22.548: INFO: Created: latency-svc-5l7g4
  May 10 20:05:22.562: INFO: Got endpoints: latency-svc-5l7g4 [952.732468ms]
  May 10 20:05:22.605: INFO: Created: latency-svc-vmsqt
  May 10 20:05:22.605: INFO: Got endpoints: latency-svc-vmsqt [862.180691ms]
  May 10 20:05:22.619: INFO: Created: latency-svc-gpdgj
  May 10 20:05:22.668: INFO: Got endpoints: latency-svc-gpdgj [825.11125ms]
  May 10 20:05:22.674: INFO: Created: latency-svc-khf2s
  May 10 20:05:22.695: INFO: Got endpoints: latency-svc-khf2s [826.910454ms]
  May 10 20:05:22.695: INFO: Latencies: [67.316416ms 94.851796ms 107.452872ms 120.527074ms 130.77757ms 207.930369ms 289.2432ms 402.149238ms 406.913524ms 429.984203ms 445.296239ms 488.230845ms 500.298697ms 540.34325ms 549.618396ms 557.598546ms 561.724458ms 574.085258ms 617.609489ms 624.467788ms 627.438817ms 642.55685ms 648.487015ms 649.36412ms 652.65443ms 655.8042ms 655.858366ms 659.057992ms 659.503128ms 660.955691ms 662.305907ms 662.658312ms 663.940732ms 668.504865ms 669.017872ms 672.660969ms 676.567439ms 680.911527ms 685.129079ms 685.882865ms 692.409811ms 693.553127ms 693.647899ms 697.654019ms 698.331072ms 699.263973ms 705.655413ms 708.455791ms 710.1511ms 710.836654ms 716.277026ms 717.072077ms 726.899673ms 728.414721ms 733.221824ms 734.412166ms 740.629774ms 741.477584ms 746.949566ms 747.015775ms 749.423805ms 749.730241ms 750.587252ms 753.814776ms 757.337174ms 759.648849ms 761.940486ms 766.559819ms 766.752443ms 766.967492ms 768.145783ms 769.726606ms 771.390099ms 773.8723ms 774.111724ms 774.87849ms 777.145896ms 781.060924ms 781.54212ms 784.650138ms 786.571684ms 786.829284ms 788.537145ms 791.780068ms 796.266737ms 796.398287ms 796.639547ms 798.208236ms 798.471079ms 798.915114ms 799.61165ms 800.242028ms 802.470944ms 803.924681ms 806.249526ms 807.284424ms 807.411421ms 807.467624ms 808.446032ms 810.351619ms 810.759619ms 811.663501ms 813.15987ms 813.536947ms 813.559404ms 813.584061ms 813.612132ms 815.21108ms 816.125328ms 816.912133ms 817.897334ms 821.136267ms 822.423272ms 822.493057ms 824.326086ms 825.11125ms 826.163957ms 826.744836ms 826.910454ms 827.655838ms 828.57659ms 832.104893ms 833.128157ms 834.669666ms 838.725806ms 840.511393ms 841.243705ms 843.688195ms 844.539065ms 846.898675ms 847.75147ms 852.952191ms 854.886036ms 857.610569ms 859.75013ms 861.722023ms 861.970491ms 862.180691ms 862.262727ms 863.668004ms 866.040703ms 866.124445ms 866.199903ms 872.280309ms 874.727267ms 877.575975ms 878.610186ms 881.378604ms 891.033207ms 891.252994ms 893.579665ms 897.264158ms 898.456003ms 899.2887ms 899.801105ms 900.247691ms 903.334604ms 904.23801ms 905.007597ms 905.464697ms 907.298693ms 907.99393ms 910.817354ms 915.605961ms 918.808635ms 919.015113ms 921.895707ms 924.212141ms 931.835736ms 932.387886ms 934.705944ms 937.99179ms 938.419355ms 939.325369ms 941.962883ms 942.769665ms 943.339767ms 950.481426ms 952.732468ms 972.505255ms 972.726431ms 991.682999ms 1.003231909s 1.02900802s 1.031100271s 1.073009892s 1.198092097s 1.220280167s 1.302247831s 1.357266354s 1.392333351s 1.4405936s 1.452987155s 1.492788404s 1.556848012s 1.630189051s 1.631463936s 1.735136552s 1.752294517s 1.806700882s]
  May 10 20:05:22.695: INFO: 50 %ile: 810.759619ms
  May 10 20:05:22.695: INFO: 90 %ile: 972.726431ms
  May 10 20:05:22.695: INFO: 99 %ile: 1.752294517s
  May 10 20:05:22.695: INFO: Total sample count: 200
  May 10 20:05:22.696: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-5733" for this suite. @ 05/10/24 20:05:22.745
  << Timeline
------------------------------
SSS
------------------------------
• [20.414 seconds]
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:901

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:05:22.773
  May 10 20:05:22.773: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename statefulset @ 05/10/24 20:05:22.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:05:22.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:05:22.809
  STEP: Creating service test in namespace statefulset-1704 @ 05/10/24 20:05:22.814
  STEP: Creating statefulset ss in namespace statefulset-1704 @ 05/10/24 20:05:22.826
  May 10 20:05:22.847: INFO: Found 0 stateful pods, waiting for 1
  May 10 20:05:32.872: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 05/10/24 20:05:32.896
  STEP: updating a scale subresource @ 05/10/24 20:05:32.901
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/10/24 20:05:32.916
  STEP: Patch a scale subresource @ 05/10/24 20:05:32.922
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/10/24 20:05:32.937
  May 10 20:05:32.953: INFO: Deleting all statefulset in ns statefulset-1704
  May 10 20:05:33.010: INFO: Scaling statefulset ss to 0
  May 10 20:05:43.127: INFO: Waiting for statefulset status.replicas updated to 0
  May 10 20:05:43.135: INFO: Deleting statefulset ss
  May 10 20:05:43.164: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1704" for this suite. @ 05/10/24 20:05:43.174
  << Timeline
------------------------------
SS
------------------------------
• [4.095 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:05:43.193
  May 10 20:05:43.193: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename webhook @ 05/10/24 20:05:43.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:05:43.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:05:43.245
  STEP: Setting up server cert @ 05/10/24 20:05:43.314
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 20:05:43.876
  STEP: Deploying the webhook pod @ 05/10/24 20:05:43.888
  STEP: Wait for the deployment to be ready @ 05/10/24 20:05:43.922
  May 10 20:05:43.935: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 20:05:45.954
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 20:05:45.974
  May 10 20:05:46.975: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 05/10/24 20:05:46.988
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/10/24 20:05:47.006
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 05/10/24 20:05:47.015
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/10/24 20:05:47.029
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 05/10/24 20:05:47.048
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/10/24 20:05:47.061
  May 10 20:05:47.079: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-955" for this suite. @ 05/10/24 20:05:47.245
  STEP: Destroying namespace "webhook-markers-1374" for this suite. @ 05/10/24 20:05:47.266
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [20.292 seconds]
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1030

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:05:47.307
  May 10 20:05:47.307: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename statefulset @ 05/10/24 20:05:47.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:05:47.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:05:47.345
  STEP: Creating service test in namespace statefulset-1953 @ 05/10/24 20:05:47.353
  STEP: Creating statefulset ss in namespace statefulset-1953 @ 05/10/24 20:05:47.382
  May 10 20:05:47.410: INFO: Found 0 stateful pods, waiting for 1
  May 10 20:05:57.416: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 05/10/24 20:05:57.427
  STEP: Getting /status @ 05/10/24 20:05:57.45
  May 10 20:05:57.463: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 05/10/24 20:05:57.463
  May 10 20:05:57.479: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 05/10/24 20:05:57.479
  May 10 20:05:57.482: INFO: Observed &StatefulSet event: ADDED
  May 10 20:05:57.482: INFO: Found Statefulset ss in namespace statefulset-1953 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May 10 20:05:57.482: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 05/10/24 20:05:57.482
  May 10 20:05:57.482: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  May 10 20:05:57.495: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 05/10/24 20:05:57.495
  May 10 20:05:57.497: INFO: Observed &StatefulSet event: ADDED
  May 10 20:05:57.498: INFO: Deleting all statefulset in ns statefulset-1953
  May 10 20:05:57.503: INFO: Scaling statefulset ss to 0
  May 10 20:06:07.532: INFO: Waiting for statefulset status.replicas updated to 0
  May 10 20:06:07.537: INFO: Deleting statefulset ss
  May 10 20:06:07.559: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1953" for this suite. @ 05/10/24 20:06:07.581
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [5.263 seconds]
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:817

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:06:07.606
  May 10 20:06:07.606: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename gc @ 05/10/24 20:06:07.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:06:07.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:06:07.642
  May 10 20:06:07.738: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"4eb7e37d-f0aa-4f28-9427-f5484fdb984d", Controller:(*bool)(0xc00334340e), BlockOwnerDeletion:(*bool)(0xc00334340f)}}
  May 10 20:06:07.753: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"9339c4fb-636b-4fa6-ac77-b7b4cdf1b943", Controller:(*bool)(0xc0043cc58e), BlockOwnerDeletion:(*bool)(0xc0043cc58f)}}
  May 10 20:06:07.767: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"e457d63e-af6f-46b4-afff-0162cd872e16", Controller:(*bool)(0xc00334368a), BlockOwnerDeletion:(*bool)(0xc00334368b)}}
  May 10 20:06:12.815: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6727" for this suite. @ 05/10/24 20:06:12.842
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.458 seconds]
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:06:12.889
  May 10 20:06:12.889: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename sched-pred @ 05/10/24 20:06:12.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:06:12.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:06:12.925
  May 10 20:06:12.929: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  May 10 20:06:12.953: INFO: Waiting for terminating namespaces to be deleted...
  May 10 20:06:12.960: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-236-144.eu-west-3.compute.internal before test
  May 10 20:06:12.982: INFO: e2e-conformance-test from conformance started at 2024-05-10 19:40:59 +0000 UTC (2 container statuses recorded)
  May 10 20:06:12.982: INFO: 	Container conformance-container ready: true, restart count 0
  May 10 20:06:12.982: INFO: 	Container output-container ready: true, restart count 0
  May 10 20:06:12.982: INFO: canal-zgphj from kube-system started at 2024-05-10 19:38:37 +0000 UTC (2 container statuses recorded)
  May 10 20:06:12.982: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:06:12.982: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:06:12.982: INFO: ebs-csi-node-7kmv9 from kube-system started at 2024-05-10 19:38:37 +0000 UTC (3 container statuses recorded)
  May 10 20:06:12.982: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:06:12.982: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:06:12.982: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:06:12.982: INFO: kube-proxy-svhx8 from kube-system started at 2024-05-10 19:38:37 +0000 UTC (1 container statuses recorded)
  May 10 20:06:12.982: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:06:12.982: INFO: node-local-dns-fbvng from kube-system started at 2024-05-10 19:38:37 +0000 UTC (1 container statuses recorded)
  May 10 20:06:12.982: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:06:12.982: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-236-46.eu-west-3.compute.internal before test
  May 10 20:06:13.012: INFO: canal-c5pr9 from kube-system started at 2024-05-10 19:35:54 +0000 UTC (2 container statuses recorded)
  May 10 20:06:13.012: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:06:13.012: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:06:13.012: INFO: ebs-csi-node-lhfzz from kube-system started at 2024-05-10 19:35:54 +0000 UTC (3 container statuses recorded)
  May 10 20:06:13.012: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:06:13.012: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:06:13.012: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:06:13.012: INFO: kube-proxy-x88pq from kube-system started at 2024-05-10 19:35:54 +0000 UTC (1 container statuses recorded)
  May 10 20:06:13.012: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:06:13.012: INFO: node-local-dns-f2v2d from kube-system started at 2024-05-10 19:35:54 +0000 UTC (1 container statuses recorded)
  May 10 20:06:13.012: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:06:13.012: INFO: pod4 from sched-pred-3280 started at 2024-05-10 20:04:21 +0000 UTC (1 container statuses recorded)
  May 10 20:06:13.012: INFO: 	Container agnhost ready: true, restart count 0
  May 10 20:06:13.012: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-237-27.eu-west-3.compute.internal before test
  May 10 20:06:13.053: INFO: canal-86fpg from kube-system started at 2024-05-10 19:38:21 +0000 UTC (2 container statuses recorded)
  May 10 20:06:13.053: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:06:13.053: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:06:13.053: INFO: ebs-csi-node-qg9kf from kube-system started at 2024-05-10 19:38:21 +0000 UTC (3 container statuses recorded)
  May 10 20:06:13.053: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:06:13.053: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:06:13.053: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:06:13.053: INFO: kube-proxy-2gzg4 from kube-system started at 2024-05-10 19:38:21 +0000 UTC (1 container statuses recorded)
  May 10 20:06:13.053: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:06:13.053: INFO: node-local-dns-f4wjg from kube-system started at 2024-05-10 19:38:21 +0000 UTC (1 container statuses recorded)
  May 10 20:06:13.053: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:06:13.053: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-237-5.eu-west-3.compute.internal before test
  May 10 20:06:13.066: INFO: canal-7n86g from kube-system started at 2024-05-10 19:35:54 +0000 UTC (2 container statuses recorded)
  May 10 20:06:13.066: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:06:13.066: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:06:13.066: INFO: ebs-csi-node-6hgh7 from kube-system started at 2024-05-10 19:35:54 +0000 UTC (3 container statuses recorded)
  May 10 20:06:13.066: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:06:13.066: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:06:13.066: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:06:13.066: INFO: kube-proxy-b6mmd from kube-system started at 2024-05-10 19:35:54 +0000 UTC (1 container statuses recorded)
  May 10 20:06:13.066: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:06:13.066: INFO: node-local-dns-86s45 from kube-system started at 2024-05-10 19:35:54 +0000 UTC (1 container statuses recorded)
  May 10 20:06:13.066: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:06:13.066: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-238-69.eu-west-3.compute.internal before test
  May 10 20:06:13.078: INFO: canal-qhmdf from kube-system started at 2024-05-10 19:36:27 +0000 UTC (2 container statuses recorded)
  May 10 20:06:13.078: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:06:13.078: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:06:13.078: INFO: ebs-csi-node-bgqjk from kube-system started at 2024-05-10 19:36:27 +0000 UTC (3 container statuses recorded)
  May 10 20:06:13.078: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:06:13.078: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:06:13.078: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:06:13.078: INFO: kube-proxy-wkbd8 from kube-system started at 2024-05-10 19:36:27 +0000 UTC (1 container statuses recorded)
  May 10 20:06:13.078: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:06:13.078: INFO: node-local-dns-746vg from kube-system started at 2024-05-10 19:36:27 +0000 UTC (1 container statuses recorded)
  May 10 20:06:13.078: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:06:13.078: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-238-87.eu-west-3.compute.internal before test
  May 10 20:06:13.097: INFO: canal-cfqsw from kube-system started at 2024-05-10 19:38:46 +0000 UTC (2 container statuses recorded)
  May 10 20:06:13.097: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:06:13.097: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:06:13.097: INFO: ebs-csi-node-5mtfb from kube-system started at 2024-05-10 19:38:46 +0000 UTC (3 container statuses recorded)
  May 10 20:06:13.097: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:06:13.097: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:06:13.097: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:06:13.097: INFO: kube-proxy-n9m2f from kube-system started at 2024-05-10 19:38:46 +0000 UTC (1 container statuses recorded)
  May 10 20:06:13.097: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:06:13.097: INFO: node-local-dns-6d9jq from kube-system started at 2024-05-10 19:38:46 +0000 UTC (1 container statuses recorded)
  May 10 20:06:13.097: INFO: 	Container node-cache ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/10/24 20:06:13.098
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/10/24 20:06:15.132
  STEP: Trying to apply a random label on the found node. @ 05/10/24 20:06:15.153
  STEP: verifying the node has the label kubernetes.io/e2e-cee4e286-30a8-4c58-a6eb-d0bf71b0fa6f 42 @ 05/10/24 20:06:15.187
  STEP: Trying to relaunch the pod, now with labels. @ 05/10/24 20:06:15.214
  STEP: removing the label kubernetes.io/e2e-cee4e286-30a8-4c58-a6eb-d0bf71b0fa6f off the node ip-172-31-238-87.eu-west-3.compute.internal @ 05/10/24 20:06:17.263
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-cee4e286-30a8-4c58-a6eb-d0bf71b0fa6f @ 05/10/24 20:06:17.3
  May 10 20:06:17.311: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9046" for this suite. @ 05/10/24 20:06:17.321
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.273 seconds]
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:218

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:06:17.367
  May 10 20:06:17.367: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 20:06:17.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:06:17.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:06:17.416
  STEP: Creating a pod to test downward api env vars @ 05/10/24 20:06:17.42
  STEP: Saw pod success @ 05/10/24 20:06:21.563
  May 10 20:06:21.569: INFO: Trying to get logs from node ip-172-31-237-27.eu-west-3.compute.internal pod downward-api-096d4813-742c-4642-8044-8ec4a9defee5 container dapi-container: <nil>
  STEP: delete the pod @ 05/10/24 20:06:21.589
  May 10 20:06:21.616: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9163" for this suite. @ 05/10/24 20:06:21.625
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [14.571 seconds]
[sig-network] DNS should provide DNS for ExternalName services [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:06:21.672
  May 10 20:06:21.672: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename dns @ 05/10/24 20:06:21.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:06:21.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:06:21.712
  STEP: Creating a test externalName service @ 05/10/24 20:06:21.716
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8375.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8375.svc.cluster.local; sleep 1; done
   @ 05/10/24 20:06:21.736
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8375.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8375.svc.cluster.local; sleep 1; done
   @ 05/10/24 20:06:21.736
  STEP: creating a pod to probe DNS @ 05/10/24 20:06:21.736
  STEP: submitting the pod to kubernetes @ 05/10/24 20:06:21.736
  STEP: retrieving the pod @ 05/10/24 20:06:23.769
  STEP: looking for the results for each expected name from probers @ 05/10/24 20:06:23.78
  May 10 20:06:23.801: INFO: DNS probes using dns-test-65c89a91-5888-425b-be6b-603136b39998 succeeded

  STEP: changing the externalName to bar.example.com @ 05/10/24 20:06:23.801
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8375.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8375.svc.cluster.local; sleep 1; done
   @ 05/10/24 20:06:23.819
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8375.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8375.svc.cluster.local; sleep 1; done
   @ 05/10/24 20:06:23.819
  STEP: creating a second pod to probe DNS @ 05/10/24 20:06:23.819
  STEP: submitting the pod to kubernetes @ 05/10/24 20:06:23.819
  STEP: retrieving the pod @ 05/10/24 20:06:25.845
  STEP: looking for the results for each expected name from probers @ 05/10/24 20:06:25.851
  May 10 20:06:25.864: INFO: DNS probes using dns-test-d5867462-a115-4a6d-ae98-947cd26c3f13 succeeded

  STEP: changing the service to type=ClusterIP @ 05/10/24 20:06:25.864
  W0510 20:06:25.901710      24 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8375.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-8375.svc.cluster.local; sleep 1; done
   @ 05/10/24 20:06:25.901
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8375.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-8375.svc.cluster.local; sleep 1; done
   @ 05/10/24 20:06:25.901
  STEP: creating a third pod to probe DNS @ 05/10/24 20:06:25.901
  STEP: submitting the pod to kubernetes @ 05/10/24 20:06:25.916
  STEP: retrieving the pod @ 05/10/24 20:06:35.978
  STEP: looking for the results for each expected name from probers @ 05/10/24 20:06:35.992
  May 10 20:06:36.026: INFO: DNS probes using dns-test-98822e65-e00b-49f1-b3cf-493fc94bf85d succeeded

  May 10 20:06:36.027: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/10/24 20:06:36.044
  STEP: deleting the pod @ 05/10/24 20:06:36.079
  STEP: deleting the pod @ 05/10/24 20:06:36.11
  STEP: deleting the test externalName service @ 05/10/24 20:06:36.184
  STEP: Destroying namespace "dns-8375" for this suite. @ 05/10/24 20:06:36.225
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [4.294 seconds]
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:06:36.25
  May 10 20:06:36.250: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename secrets @ 05/10/24 20:06:36.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:06:36.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:06:36.3
  STEP: Creating secret with name secret-test-a2e41320-c975-4b6b-8f7c-e8cd9f472bad @ 05/10/24 20:06:36.311
  STEP: Creating a pod to test consume secrets @ 05/10/24 20:06:36.326
  STEP: Saw pod success @ 05/10/24 20:06:40.395
  May 10 20:06:40.401: INFO: Trying to get logs from node ip-172-31-238-87.eu-west-3.compute.internal pod pod-secrets-588de5d8-035b-444c-baf9-8b8894990a4d container secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 20:06:40.419
  May 10 20:06:40.451: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6342" for this suite. @ 05/10/24 20:06:40.46
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.096 seconds]
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:06:40.591
  May 10 20:06:40.591: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename field-validation @ 05/10/24 20:06:40.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:06:40.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:06:40.637
  STEP: apply creating a deployment @ 05/10/24 20:06:40.641
  May 10 20:06:40.644: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9701" for this suite. @ 05/10/24 20:06:40.674
  << Timeline
------------------------------
SSSSS
------------------------------
• [4.205 seconds]
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:57

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:06:40.694
  May 10 20:06:40.694: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename configmap @ 05/10/24 20:06:40.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:06:40.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:06:40.736
  STEP: Creating configMap with name configmap-test-volume-1389e4a5-6ab3-4930-ae41-447b1446a383 @ 05/10/24 20:06:40.744
  STEP: Creating a pod to test consume configMaps @ 05/10/24 20:06:40.756
  STEP: Saw pod success @ 05/10/24 20:06:44.792
  May 10 20:06:44.799: INFO: Trying to get logs from node ip-172-31-238-69.eu-west-3.compute.internal pod pod-configmaps-cc9092c5-dc2c-4716-b14d-17a4e8b5264c container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 20:06:44.824
  May 10 20:06:44.874: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1932" for this suite. @ 05/10/24 20:06:44.884
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [20.253 seconds]
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:961

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:06:44.924
  May 10 20:06:44.924: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename statefulset @ 05/10/24 20:06:44.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:06:44.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:06:44.951
  STEP: Creating service test in namespace statefulset-6819 @ 05/10/24 20:06:44.956
  May 10 20:06:44.993: INFO: Found 0 stateful pods, waiting for 1
  May 10 20:06:55.002: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 05/10/24 20:06:55.02
  W0510 20:06:55.039945      24 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  May 10 20:06:55.068: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  May 10 20:06:55.068: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  May 10 20:07:05.076: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  May 10 20:07:05.076: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 05/10/24 20:07:05.089
  STEP: Delete all of the StatefulSets @ 05/10/24 20:07:05.096
  STEP: Verify that StatefulSets have been deleted @ 05/10/24 20:07:05.116
  May 10 20:07:05.122: INFO: Deleting all statefulset in ns statefulset-6819
  May 10 20:07:05.153: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6819" for this suite. @ 05/10/24 20:07:05.163
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
• [25.588 seconds]
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:07:05.19
  May 10 20:07:05.190: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename container-runtime @ 05/10/24 20:07:05.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:07:05.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:07:05.224
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 05/10/24 20:07:05.244
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 05/10/24 20:07:23.43
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 05/10/24 20:07:23.437
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 05/10/24 20:07:23.447
  STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] @ 05/10/24 20:07:23.447
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 05/10/24 20:07:23.477
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 05/10/24 20:07:26.511
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 05/10/24 20:07:27.525
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 05/10/24 20:07:27.537
  STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] @ 05/10/24 20:07:27.537
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 05/10/24 20:07:27.645
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 05/10/24 20:07:28.674
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 05/10/24 20:07:30.693
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 05/10/24 20:07:30.704
  STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] @ 05/10/24 20:07:30.704
  May 10 20:07:30.742: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1797" for this suite. @ 05/10/24 20:07:30.768
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [210.149 seconds]
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1013

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:11.198
  May 10 20:04:11.198: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 20:04:11.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:11.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:11.24
  STEP: Creating resourceQuota "e2e-rq-status-5d8hp" @ 05/10/24 20:04:11.249
  May 10 20:04:11.259: INFO: Resource quota "e2e-rq-status-5d8hp" reports spec: hard cpu limit of 500m
  May 10 20:04:11.259: INFO: Resource quota "e2e-rq-status-5d8hp" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-5d8hp" /status @ 05/10/24 20:04:11.259
  STEP: Confirm /status for "e2e-rq-status-5d8hp" resourceQuota via watch @ 05/10/24 20:04:11.268
  May 10 20:04:11.269: INFO: observed resourceQuota "e2e-rq-status-5d8hp" in namespace "resourcequota-6151" with hard status: v1.ResourceList(nil)
  May 10 20:04:11.269: INFO: Found resourceQuota "e2e-rq-status-5d8hp" in namespace "resourcequota-6151" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  May 10 20:04:11.269: INFO: ResourceQuota "e2e-rq-status-5d8hp" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 05/10/24 20:04:11.276
  May 10 20:04:11.282: INFO: Resource quota "e2e-rq-status-5d8hp" reports spec: hard cpu limit of 1
  May 10 20:04:11.282: INFO: Resource quota "e2e-rq-status-5d8hp" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-5d8hp" /status @ 05/10/24 20:04:11.282
  STEP: Confirm /status for "e2e-rq-status-5d8hp" resourceQuota via watch @ 05/10/24 20:04:11.296
  May 10 20:04:11.297: INFO: observed resourceQuota "e2e-rq-status-5d8hp" in namespace "resourcequota-6151" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  May 10 20:04:11.297: INFO: Found resourceQuota "e2e-rq-status-5d8hp" in namespace "resourcequota-6151" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  May 10 20:04:11.297: INFO: ResourceQuota "e2e-rq-status-5d8hp" /status was patched
  STEP: Get "e2e-rq-status-5d8hp" /status @ 05/10/24 20:04:11.297
  May 10 20:04:11.302: INFO: Resourcequota "e2e-rq-status-5d8hp" reports status: hard cpu of 1
  May 10 20:04:11.302: INFO: Resourcequota "e2e-rq-status-5d8hp" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-5d8hp" /status before checking Spec is unchanged @ 05/10/24 20:04:11.306
  May 10 20:04:11.313: INFO: Resourcequota "e2e-rq-status-5d8hp" reports status: hard cpu of 2
  May 10 20:04:11.313: INFO: Resourcequota "e2e-rq-status-5d8hp" reports status: hard memory of 2Gi
  May 10 20:04:11.314: INFO: Found resourceQuota "e2e-rq-status-5d8hp" in namespace "resourcequota-6151" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  E0510 20:04:11.830155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:12.830997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:13.831941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:14.832569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:15.832884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:16.833507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:17.833737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:18.834398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:19.835225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:20.836281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:21.836875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:22.837552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:23.837755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:24.838499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:25.838835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:26.839534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:27.840251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:28.841065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:29.842060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:30.842864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:31.843152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:32.844128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:33.844961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:34.845468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:35.845968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:36.846830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:37.847687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:38.848530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:39.849454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:40.850483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:41.850787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:42.851566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:43.851606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:44.852618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:45.852850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:46.852980      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:47.853483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:48.854607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:49.855537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:50.856497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:51.857515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:52.858603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:53.859642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:54.860533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:55.860646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:56.861526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:57.865979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:58.866673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:59.867501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:00.867826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:01.868612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:02.869654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:03.869816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:04.870602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:05.871035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:06.871146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:07.871176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:08.872143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:09.873106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:10.874283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:11.874852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:12.875595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:13.876550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:14.877554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:15.877991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:16.878318      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:17.879354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:18.880128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:19.880511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:20.881470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:21.882528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:22.883344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:23.883921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:24.884556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:25.884922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:26.885983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:27.886524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:28.887373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:29.888740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:30.889834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:31.890866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:32.891548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:33.892304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:34.893258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:35.893904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:36.894864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:37.895571      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:38.896549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:39.897324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:40.898122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:41.897533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:42.898332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:43.898837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:44.899559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:45.900487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:46.901116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:47.901908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:48.902661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:49.902726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:50.903768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:51.904133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:52.904299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:53.905246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:54.906133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:55.906230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:56.906308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:57.906818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:58.907710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:59.908805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:00.909429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:01.910027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:02.911108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:03.912071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:04.913680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:05.914044      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:06.914622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:07.915716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:08.916611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:09.917295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:10.917658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:11.918706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:12.919599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:13.920683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:14.921671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:15.921975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:16.922883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:17.923734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:18.924779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:19.925692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:20.926717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:21.927362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:22.928192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:23.929086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:24.929733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:25.930063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:26.930940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:27.931639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:28.932586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:29.933547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:30.933878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:31.934697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:32.935571      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:33.936338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:34.937393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:35.937550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:36.937703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:37.938788      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:38.939635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:39.940631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:40.940703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:41.940963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:42.941585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:43.942458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:44.942537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:45.943539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:46.944333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:47.945178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:48.945331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:49.946331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:50.946379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:51.946820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:52.946910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:53.947636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:54.948691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:55.948866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:56.949688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:57.950641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:58.951591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:59.952654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:00.952703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:01.953485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:02.953530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:03.954099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:04.954687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:05.954870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:06.954946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:07.955621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:08.955745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:09.956596      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:10.957642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:11.958629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:12.959676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:13.960700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:14.960913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:15.962003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:16.962741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:17.963603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:18.964485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:19.965321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:20.965496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:21.965675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:22.965730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:23.966611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:24.967610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:25.968235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:26.968354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:27.969273      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:28.970257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:29.970542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:30.970617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:31.971507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:32.972304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:33.973763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:34.974771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:35.975215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:36.976092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:37.976285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:38.977019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:39.977906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:40.978320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:07:41.322: INFO: ResourceQuota "e2e-rq-status-5d8hp" Spec was unchanged and /status reset
  May 10 20:07:41.323: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6151" for this suite. @ 05/10/24 20:07:41.335
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
• [2.915 seconds]
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:07:41.364
  May 10 20:07:41.364: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename watch @ 05/10/24 20:07:41.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:07:41.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:07:41.394
  STEP: getting a starting resourceVersion @ 05/10/24 20:07:41.397
  STEP: starting a background goroutine to produce watch events @ 05/10/24 20:07:41.401
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 05/10/24 20:07:41.401
  E0510 20:07:41.978898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:42.978962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:43.979137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:07:44.171: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6022" for this suite. @ 05/10/24 20:07:44.221
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [18.778 seconds]
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:713

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:07:30.803
  May 10 20:07:30.803: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename gc @ 05/10/24 20:07:30.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:07:30.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:07:30.837
  STEP: create the rc1 @ 05/10/24 20:07:30.85
  STEP: create the rc2 @ 05/10/24 20:07:30.859
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 05/10/24 20:07:36.874
  STEP: delete the rc simpletest-rc-to-be-deleted @ 05/10/24 20:07:37.612
  STEP: wait for the rc to be deleted @ 05/10/24 20:07:37.629
  May 10 20:07:42.648: INFO: 71 pods remaining
  May 10 20:07:42.648: INFO: 71 pods has nil DeletionTimestamp
  May 10 20:07:42.648: INFO: 
  STEP: Gathering metrics @ 05/10/24 20:07:47.648
  May 10 20:07:47.820: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May 10 20:07:47.820: INFO: Deleting pod "simpletest-rc-to-be-deleted-2246m" in namespace "gc-801"
  May 10 20:07:47.861: INFO: Deleting pod "simpletest-rc-to-be-deleted-2cbsz" in namespace "gc-801"
  May 10 20:07:47.906: INFO: Deleting pod "simpletest-rc-to-be-deleted-2d65v" in namespace "gc-801"
  May 10 20:07:47.939: INFO: Deleting pod "simpletest-rc-to-be-deleted-2pvj4" in namespace "gc-801"
  May 10 20:07:47.966: INFO: Deleting pod "simpletest-rc-to-be-deleted-2xcxl" in namespace "gc-801"
  May 10 20:07:47.994: INFO: Deleting pod "simpletest-rc-to-be-deleted-2zmjl" in namespace "gc-801"
  May 10 20:07:48.019: INFO: Deleting pod "simpletest-rc-to-be-deleted-45tts" in namespace "gc-801"
  May 10 20:07:48.040: INFO: Deleting pod "simpletest-rc-to-be-deleted-48z5j" in namespace "gc-801"
  May 10 20:07:48.071: INFO: Deleting pod "simpletest-rc-to-be-deleted-49wpw" in namespace "gc-801"
  May 10 20:07:48.096: INFO: Deleting pod "simpletest-rc-to-be-deleted-4btcr" in namespace "gc-801"
  May 10 20:07:48.129: INFO: Deleting pod "simpletest-rc-to-be-deleted-4fhzz" in namespace "gc-801"
  May 10 20:07:48.148: INFO: Deleting pod "simpletest-rc-to-be-deleted-4snct" in namespace "gc-801"
  May 10 20:07:48.180: INFO: Deleting pod "simpletest-rc-to-be-deleted-4zw6d" in namespace "gc-801"
  May 10 20:07:48.211: INFO: Deleting pod "simpletest-rc-to-be-deleted-5bzxr" in namespace "gc-801"
  May 10 20:07:48.230: INFO: Deleting pod "simpletest-rc-to-be-deleted-62cgq" in namespace "gc-801"
  May 10 20:07:48.252: INFO: Deleting pod "simpletest-rc-to-be-deleted-6ngmw" in namespace "gc-801"
  May 10 20:07:48.301: INFO: Deleting pod "simpletest-rc-to-be-deleted-6st2f" in namespace "gc-801"
  May 10 20:07:48.330: INFO: Deleting pod "simpletest-rc-to-be-deleted-756cv" in namespace "gc-801"
  May 10 20:07:48.359: INFO: Deleting pod "simpletest-rc-to-be-deleted-79kdm" in namespace "gc-801"
  May 10 20:07:48.377: INFO: Deleting pod "simpletest-rc-to-be-deleted-7f95s" in namespace "gc-801"
  May 10 20:07:48.400: INFO: Deleting pod "simpletest-rc-to-be-deleted-7j4nm" in namespace "gc-801"
  May 10 20:07:48.423: INFO: Deleting pod "simpletest-rc-to-be-deleted-7ttxh" in namespace "gc-801"
  May 10 20:07:48.444: INFO: Deleting pod "simpletest-rc-to-be-deleted-89crk" in namespace "gc-801"
  May 10 20:07:48.489: INFO: Deleting pod "simpletest-rc-to-be-deleted-9cgx7" in namespace "gc-801"
  May 10 20:07:48.539: INFO: Deleting pod "simpletest-rc-to-be-deleted-9ngtg" in namespace "gc-801"
  May 10 20:07:48.571: INFO: Deleting pod "simpletest-rc-to-be-deleted-9nt64" in namespace "gc-801"
  May 10 20:07:48.623: INFO: Deleting pod "simpletest-rc-to-be-deleted-9swkp" in namespace "gc-801"
  May 10 20:07:48.660: INFO: Deleting pod "simpletest-rc-to-be-deleted-9vrjm" in namespace "gc-801"
  May 10 20:07:48.684: INFO: Deleting pod "simpletest-rc-to-be-deleted-bp95s" in namespace "gc-801"
  May 10 20:07:48.713: INFO: Deleting pod "simpletest-rc-to-be-deleted-bslr5" in namespace "gc-801"
  May 10 20:07:48.740: INFO: Deleting pod "simpletest-rc-to-be-deleted-c4w7t" in namespace "gc-801"
  May 10 20:07:48.762: INFO: Deleting pod "simpletest-rc-to-be-deleted-cbk78" in namespace "gc-801"
  May 10 20:07:48.785: INFO: Deleting pod "simpletest-rc-to-be-deleted-cldft" in namespace "gc-801"
  May 10 20:07:48.820: INFO: Deleting pod "simpletest-rc-to-be-deleted-dbm5g" in namespace "gc-801"
  May 10 20:07:48.846: INFO: Deleting pod "simpletest-rc-to-be-deleted-dg2b9" in namespace "gc-801"
  May 10 20:07:48.885: INFO: Deleting pod "simpletest-rc-to-be-deleted-djd5c" in namespace "gc-801"
  May 10 20:07:48.936: INFO: Deleting pod "simpletest-rc-to-be-deleted-dww9d" in namespace "gc-801"
  May 10 20:07:48.975: INFO: Deleting pod "simpletest-rc-to-be-deleted-dxpmb" in namespace "gc-801"
  May 10 20:07:49.007: INFO: Deleting pod "simpletest-rc-to-be-deleted-f6476" in namespace "gc-801"
  May 10 20:07:49.070: INFO: Deleting pod "simpletest-rc-to-be-deleted-f76fz" in namespace "gc-801"
  May 10 20:07:49.106: INFO: Deleting pod "simpletest-rc-to-be-deleted-fd2gf" in namespace "gc-801"
  May 10 20:07:49.154: INFO: Deleting pod "simpletest-rc-to-be-deleted-fgrvw" in namespace "gc-801"
  May 10 20:07:49.200: INFO: Deleting pod "simpletest-rc-to-be-deleted-ftdrm" in namespace "gc-801"
  May 10 20:07:49.228: INFO: Deleting pod "simpletest-rc-to-be-deleted-gfcvf" in namespace "gc-801"
  May 10 20:07:49.273: INFO: Deleting pod "simpletest-rc-to-be-deleted-glqk6" in namespace "gc-801"
  May 10 20:07:49.311: INFO: Deleting pod "simpletest-rc-to-be-deleted-gw9ld" in namespace "gc-801"
  May 10 20:07:49.345: INFO: Deleting pod "simpletest-rc-to-be-deleted-gz2x9" in namespace "gc-801"
  May 10 20:07:49.395: INFO: Deleting pod "simpletest-rc-to-be-deleted-hs7nr" in namespace "gc-801"
  May 10 20:07:49.445: INFO: Deleting pod "simpletest-rc-to-be-deleted-hvn9c" in namespace "gc-801"
  May 10 20:07:49.498: INFO: Deleting pod "simpletest-rc-to-be-deleted-jl8lf" in namespace "gc-801"
  May 10 20:07:49.529: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-801" for this suite. @ 05/10/24 20:07:49.538
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [4.050 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:07:49.589
  May 10 20:07:49.589: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename webhook @ 05/10/24 20:07:49.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:07:49.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:07:49.647
  STEP: Setting up server cert @ 05/10/24 20:07:49.694
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 20:07:50.154
  STEP: Deploying the webhook pod @ 05/10/24 20:07:50.176
  STEP: Wait for the deployment to be ready @ 05/10/24 20:07:50.193
  May 10 20:07:50.204: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 20:07:52.222
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 20:07:52.321
  May 10 20:07:53.321: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 05/10/24 20:07:53.335
  May 10 20:07:53.372: INFO: Waiting for webhook configuration to be ready...
  STEP: Creating a custom resource definition that should be denied by the webhook @ 05/10/24 20:07:53.483
  May 10 20:07:53.483: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  May 10 20:07:53.495: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9120" for this suite. @ 05/10/24 20:07:53.61
  STEP: Destroying namespace "webhook-markers-2904" for this suite. @ 05/10/24 20:07:53.627
  << Timeline
------------------------------
• [10.792 seconds]
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2224

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:07:44.304
  May 10 20:07:44.304: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename services @ 05/10/24 20:07:44.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:07:44.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:07:44.35
  STEP: creating service in namespace services-5182 @ 05/10/24 20:07:44.352
  STEP: creating service affinity-nodeport-transition in namespace services-5182 @ 05/10/24 20:07:44.352
  STEP: creating replication controller affinity-nodeport-transition in namespace services-5182 @ 05/10/24 20:07:44.377
  I0510 20:07:44.399219      22 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-5182, replica count: 3
  E0510 20:07:44.979496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:45.979823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:46.980696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 20:07:47.450866      22 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 10 20:07:47.465: INFO: Creating new exec pod
  E0510 20:07:47.981783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:48.982727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:49.983790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:07:50.502: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=services-5182 exec execpod-affinityt9wpz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  May 10 20:07:50.706: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  May 10 20:07:50.706: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 20:07:50.706: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=services-5182 exec execpod-affinityt9wpz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.60.23 80'
  May 10 20:07:50.851: INFO: stderr: "+ nc -v -t -w 2 10.101.60.23 80\n+ echo hostName\nConnection to 10.101.60.23 80 port [tcp/http] succeeded!\n"
  May 10 20:07:50.851: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 20:07:50.851: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=services-5182 exec execpod-affinityt9wpz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.238.69 31173'
  E0510 20:07:50.984108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:07:50.995: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.238.69 31173\nConnection to 172.31.238.69 31173 port [tcp/*] succeeded!\n"
  May 10 20:07:50.995: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 20:07:50.995: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=services-5182 exec execpod-affinityt9wpz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.237.27 31173'
  May 10 20:07:51.183: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.237.27 31173\nConnection to 172.31.237.27 31173 port [tcp/*] succeeded!\n"
  May 10 20:07:51.183: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 20:07:51.196: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=services-5182 exec execpod-affinityt9wpz -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.236.144:31173/ ; done'
  May 10 20:07:51.440: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:31173/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:31173/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:31173/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:31173/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:31173/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:31173/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:31173/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:31173/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:31173/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:31173/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:31173/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:31173/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:31173/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:31173/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:31173/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:31173/\n"
  May 10 20:07:51.440: INFO: stdout: "\naffinity-nodeport-transition-t5zhz\naffinity-nodeport-transition-t5zhz\naffinity-nodeport-transition-dxwh7\naffinity-nodeport-transition-dxwh7\naffinity-nodeport-transition-t5zhz\naffinity-nodeport-transition-dxwh7\naffinity-nodeport-transition-t5zhz\naffinity-nodeport-transition-t5zhz\naffinity-nodeport-transition-dxwh7\naffinity-nodeport-transition-mqk4s\naffinity-nodeport-transition-t5zhz\naffinity-nodeport-transition-t5zhz\naffinity-nodeport-transition-mqk4s\naffinity-nodeport-transition-dxwh7\naffinity-nodeport-transition-t5zhz\naffinity-nodeport-transition-t5zhz"
  May 10 20:07:51.440: INFO: Received response from host: affinity-nodeport-transition-t5zhz
  May 10 20:07:51.440: INFO: Received response from host: affinity-nodeport-transition-t5zhz
  May 10 20:07:51.440: INFO: Received response from host: affinity-nodeport-transition-dxwh7
  May 10 20:07:51.440: INFO: Received response from host: affinity-nodeport-transition-dxwh7
  May 10 20:07:51.440: INFO: Received response from host: affinity-nodeport-transition-t5zhz
  May 10 20:07:51.440: INFO: Received response from host: affinity-nodeport-transition-dxwh7
  May 10 20:07:51.440: INFO: Received response from host: affinity-nodeport-transition-t5zhz
  May 10 20:07:51.440: INFO: Received response from host: affinity-nodeport-transition-t5zhz
  May 10 20:07:51.440: INFO: Received response from host: affinity-nodeport-transition-dxwh7
  May 10 20:07:51.440: INFO: Received response from host: affinity-nodeport-transition-mqk4s
  May 10 20:07:51.440: INFO: Received response from host: affinity-nodeport-transition-t5zhz
  May 10 20:07:51.440: INFO: Received response from host: affinity-nodeport-transition-t5zhz
  May 10 20:07:51.440: INFO: Received response from host: affinity-nodeport-transition-mqk4s
  May 10 20:07:51.440: INFO: Received response from host: affinity-nodeport-transition-dxwh7
  May 10 20:07:51.440: INFO: Received response from host: affinity-nodeport-transition-t5zhz
  May 10 20:07:51.440: INFO: Received response from host: affinity-nodeport-transition-t5zhz
  May 10 20:07:51.451: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=services-5182 exec execpod-affinityt9wpz -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.236.144:31173/ ; done'
  May 10 20:07:51.728: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:31173/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:31173/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:31173/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:31173/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:31173/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:31173/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:31173/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:31173/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:31173/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:31173/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:31173/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:31173/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:31173/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:31173/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:31173/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.236.144:31173/\n"
  May 10 20:07:51.728: INFO: stdout: "\naffinity-nodeport-transition-mqk4s\naffinity-nodeport-transition-mqk4s\naffinity-nodeport-transition-mqk4s\naffinity-nodeport-transition-mqk4s\naffinity-nodeport-transition-mqk4s\naffinity-nodeport-transition-mqk4s\naffinity-nodeport-transition-mqk4s\naffinity-nodeport-transition-mqk4s\naffinity-nodeport-transition-mqk4s\naffinity-nodeport-transition-mqk4s\naffinity-nodeport-transition-mqk4s\naffinity-nodeport-transition-mqk4s\naffinity-nodeport-transition-mqk4s\naffinity-nodeport-transition-mqk4s\naffinity-nodeport-transition-mqk4s\naffinity-nodeport-transition-mqk4s"
  May 10 20:07:51.728: INFO: Received response from host: affinity-nodeport-transition-mqk4s
  May 10 20:07:51.728: INFO: Received response from host: affinity-nodeport-transition-mqk4s
  May 10 20:07:51.728: INFO: Received response from host: affinity-nodeport-transition-mqk4s
  May 10 20:07:51.728: INFO: Received response from host: affinity-nodeport-transition-mqk4s
  May 10 20:07:51.728: INFO: Received response from host: affinity-nodeport-transition-mqk4s
  May 10 20:07:51.728: INFO: Received response from host: affinity-nodeport-transition-mqk4s
  May 10 20:07:51.728: INFO: Received response from host: affinity-nodeport-transition-mqk4s
  May 10 20:07:51.728: INFO: Received response from host: affinity-nodeport-transition-mqk4s
  May 10 20:07:51.728: INFO: Received response from host: affinity-nodeport-transition-mqk4s
  May 10 20:07:51.728: INFO: Received response from host: affinity-nodeport-transition-mqk4s
  May 10 20:07:51.728: INFO: Received response from host: affinity-nodeport-transition-mqk4s
  May 10 20:07:51.728: INFO: Received response from host: affinity-nodeport-transition-mqk4s
  May 10 20:07:51.728: INFO: Received response from host: affinity-nodeport-transition-mqk4s
  May 10 20:07:51.728: INFO: Received response from host: affinity-nodeport-transition-mqk4s
  May 10 20:07:51.728: INFO: Received response from host: affinity-nodeport-transition-mqk4s
  May 10 20:07:51.728: INFO: Received response from host: affinity-nodeport-transition-mqk4s
  May 10 20:07:51.729: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May 10 20:07:51.739: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-5182, will wait for the garbage collector to delete the pods @ 05/10/24 20:07:51.769
  May 10 20:07:51.848: INFO: Deleting ReplicationController affinity-nodeport-transition took: 22.175674ms
  May 10 20:07:51.949: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 101.131479ms
  E0510 20:07:51.984258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:52.985259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:53.986037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:54.986890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-5182" for this suite. @ 05/10/24 20:07:55.078
  << Timeline
------------------------------
• [4.199 seconds]
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:74

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:07:53.64
  May 10 20:07:53.640: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename projected @ 05/10/24 20:07:53.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:07:53.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:07:53.676
  STEP: Creating configMap with name projected-configmap-test-volume-bd4e3303-2661-4ac5-86f9-192067f35788 @ 05/10/24 20:07:53.68
  STEP: Creating a pod to test consume configMaps @ 05/10/24 20:07:53.688
  STEP: Saw pod success @ 05/10/24 20:07:57.726
  May 10 20:07:57.733: INFO: Trying to get logs from node ip-172-31-238-69.eu-west-3.compute.internal pod pod-projected-configmaps-bfb83997-361f-41a3-b56b-c521584d31f3 container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 20:07:57.751
  May 10 20:07:57.813: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6127" for this suite. @ 05/10/24 20:07:57.825
  << Timeline
------------------------------
SSSSSSSSSSSSSS
------------------------------
• [6.318 seconds]
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:07:55.098
  May 10 20:07:55.098: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/10/24 20:07:55.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:07:55.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:07:55.128
  STEP: creating a target pod @ 05/10/24 20:07:55.132
  E0510 20:07:55.987421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:56.987478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 05/10/24 20:07:57.178
  E0510 20:07:57.987660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:58.988648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:59.989024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:00.989785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 05/10/24 20:08:01.215
  May 10 20:08:01.215: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-3814 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:08:01.215: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  May 10 20:08:01.215: INFO: ExecWithOptions: Clientset creation
  May 10 20:08:01.215: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-3814/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  May 10 20:08:01.290: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 05/10/24 20:08:01.304
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 05/10/24 20:08:01.322
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 05/10/24 20:08:01.368
  May 10 20:08:01.373: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-3814" for this suite. @ 05/10/24 20:08:01.393
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.220 seconds]
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:46

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:07:57.854
  May 10 20:07:57.854: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename secrets @ 05/10/24 20:07:57.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:07:57.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:07:57.887
  STEP: Creating secret with name secret-test-92b88611-3536-4599-82cd-cb4acb3d9eba @ 05/10/24 20:07:57.892
  STEP: Creating a pod to test consume secrets @ 05/10/24 20:07:57.898
  STEP: Saw pod success @ 05/10/24 20:08:01.934
  May 10 20:08:01.952: INFO: Trying to get logs from node ip-172-31-237-5.eu-west-3.compute.internal pod pod-secrets-790cb248-4ad6-40ed-aef8-1e40bf081078 container secret-env-test: <nil>
  STEP: delete the pod @ 05/10/24 20:08:01.984
  May 10 20:08:02.047: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5908" for this suite. @ 05/10/24 20:08:02.062
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [14.444 seconds]
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:792

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:08:01.452
  May 10 20:08:01.452: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename statefulset @ 05/10/24 20:08:01.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:08:01.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:08:01.518
  STEP: Creating service test in namespace statefulset-5981 @ 05/10/24 20:08:01.534
  STEP: Looking for a node to schedule stateful set and pod @ 05/10/24 20:08:01.557
  STEP: Creating pod with conflicting port in namespace statefulset-5981 @ 05/10/24 20:08:01.583
  STEP: Waiting until pod test-pod will start running in namespace statefulset-5981 @ 05/10/24 20:08:01.617
  E0510 20:08:01.990668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:02.990783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-5981 @ 05/10/24 20:08:03.644
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-5981 @ 05/10/24 20:08:03.65
  May 10 20:08:03.666: INFO: Observed stateful pod in namespace: statefulset-5981, name: ss-0, uid: 6adb0082-4e6b-460d-8053-df2580b679d4, status phase: Pending. Waiting for statefulset controller to delete.
  May 10 20:08:03.700: INFO: Observed stateful pod in namespace: statefulset-5981, name: ss-0, uid: 6adb0082-4e6b-460d-8053-df2580b679d4, status phase: Failed. Waiting for statefulset controller to delete.
  May 10 20:08:03.714: INFO: Observed stateful pod in namespace: statefulset-5981, name: ss-0, uid: 6adb0082-4e6b-460d-8053-df2580b679d4, status phase: Failed. Waiting for statefulset controller to delete.
  May 10 20:08:03.723: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-5981
  STEP: Removing pod with conflicting port in namespace statefulset-5981 @ 05/10/24 20:08:03.723
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-5981 and will be in running state @ 05/10/24 20:08:03.754
  E0510 20:08:03.991385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:04.992454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:08:05.775: INFO: Deleting all statefulset in ns statefulset-5981
  May 10 20:08:05.786: INFO: Scaling statefulset ss to 0
  E0510 20:08:05.992524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:06.993650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:07.993861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:08.994825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:09.995709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:10.995755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:11.996776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:12.997710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:13.998722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:14.998846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:08:15.822: INFO: Waiting for statefulset status.replicas updated to 0
  May 10 20:08:15.828: INFO: Deleting statefulset ss
  May 10 20:08:15.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5981" for this suite. @ 05/10/24 20:08:15.886
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
• [5.964 seconds]
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:08:15.912
  May 10 20:08:15.912: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename deployment @ 05/10/24 20:08:15.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:08:15.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:08:15.935
  STEP: creating a Deployment @ 05/10/24 20:08:15.943
  STEP: waiting for Deployment to be created @ 05/10/24 20:08:15.948
  STEP: waiting for all Replicas to be Ready @ 05/10/24 20:08:15.949
  May 10 20:08:15.950: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 10 20:08:15.950: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 10 20:08:15.964: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 10 20:08:15.964: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 10 20:08:15.983: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 10 20:08:15.983: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0510 20:08:15.998997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:08:16.032: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 10 20:08:16.032: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 10 20:08:16.739: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  May 10 20:08:16.739: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  E0510 20:08:16.999007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:08:17.453: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 05/10/24 20:08:17.453
  May 10 20:08:17.465: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 05/10/24 20:08:17.465
  May 10 20:08:17.467: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 0
  May 10 20:08:17.467: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 0
  May 10 20:08:17.467: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 0
  May 10 20:08:17.467: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 0
  May 10 20:08:17.467: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 0
  May 10 20:08:17.467: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 0
  May 10 20:08:17.467: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 0
  May 10 20:08:17.467: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 0
  May 10 20:08:17.467: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 1
  May 10 20:08:17.467: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 1
  May 10 20:08:17.467: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 2
  May 10 20:08:17.467: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 2
  May 10 20:08:17.467: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 2
  May 10 20:08:17.467: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 2
  May 10 20:08:17.477: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 2
  May 10 20:08:17.477: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 2
  May 10 20:08:17.500: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 2
  May 10 20:08:17.500: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 2
  May 10 20:08:17.526: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 1
  May 10 20:08:17.526: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 1
  May 10 20:08:17.554: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 1
  May 10 20:08:17.554: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 1
  E0510 20:08:17.999112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:08:18.759: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 2
  May 10 20:08:18.759: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 2
  May 10 20:08:18.800: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 1
  STEP: listing Deployments @ 05/10/24 20:08:18.8
  May 10 20:08:18.806: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 05/10/24 20:08:18.806
  May 10 20:08:18.825: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 05/10/24 20:08:18.825
  May 10 20:08:18.839: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  May 10 20:08:18.849: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  May 10 20:08:18.899: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  May 10 20:08:18.935: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  May 10 20:08:18.980: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0510 20:08:19.000058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:08:19.014: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0510 20:08:20.000564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:08:20.300: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  May 10 20:08:20.489: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  May 10 20:08:20.579: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  May 10 20:08:20.652: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0510 20:08:21.001022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:08:21.745: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 05/10/24 20:08:21.789
  STEP: fetching the DeploymentStatus @ 05/10/24 20:08:21.801
  May 10 20:08:21.807: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 1
  May 10 20:08:21.807: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 1
  May 10 20:08:21.807: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 1
  May 10 20:08:21.807: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 1
  May 10 20:08:21.807: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 1
  May 10 20:08:21.808: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 1
  May 10 20:08:21.808: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 2
  May 10 20:08:21.808: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 3
  May 10 20:08:21.808: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 2
  May 10 20:08:21.808: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 2
  May 10 20:08:21.808: INFO: observed Deployment test-deployment in namespace deployment-8158 with ReadyReplicas 3
  STEP: deleting the Deployment @ 05/10/24 20:08:21.808
  May 10 20:08:21.823: INFO: observed event type MODIFIED
  May 10 20:08:21.823: INFO: observed event type MODIFIED
  May 10 20:08:21.823: INFO: observed event type MODIFIED
  May 10 20:08:21.823: INFO: observed event type MODIFIED
  May 10 20:08:21.823: INFO: observed event type MODIFIED
  May 10 20:08:21.824: INFO: observed event type MODIFIED
  May 10 20:08:21.824: INFO: observed event type MODIFIED
  May 10 20:08:21.824: INFO: observed event type MODIFIED
  May 10 20:08:21.824: INFO: observed event type MODIFIED
  May 10 20:08:21.824: INFO: observed event type MODIFIED
  May 10 20:08:21.824: INFO: observed event type MODIFIED
  May 10 20:08:21.824: INFO: observed event type MODIFIED
  May 10 20:08:21.824: INFO: observed event type MODIFIED
  May 10 20:08:21.824: INFO: observed event type MODIFIED
  May 10 20:08:21.832: INFO: Log out all the ReplicaSets if there is no deployment created
  May 10 20:08:21.837: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8158",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "98dda26f-570e-4a4e-8043-1e7c233f0e3a",
      ResourceVersion: (string) (len=5) "44197",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968497,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "d5aa7bd7-bf3e-410a-82aa-9dc38cb738c2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 64 35 61 61  37 62 64 37 2d 62 66 33  |":\"d5aa7bd7-bf3|
              00000130  65 2d 34 31 30 61 2d 38  32 61 61 2d 39 64 63 33  |e-410a-82aa-9dc3|
              00000140  38 63 62 37 33 38 63 32  5c 22 7d 22 3a 7b 7d 7d  |8cb738c2\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  May 10 20:08:21.844: INFO: pod: "test-deployment-64fd565c98-27nq9":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-27nq9",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-8158",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "07080a94-78a5-4239-a09a-34657581895b",
      ResourceVersion: (string) (len=5) "44193",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968497,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968503,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "195e14ca1e63fb7b78a20bf53f647d58abd5de5b923398cba1ca37ceded080f9",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.244.6.153/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.244.6.153/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "98dda26f-570e-4a4e-8043-1e7c233f0e3a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  39 38 64 64 61 32 36 66  |uid\":\"98dda26f|
              000000a0  2d 35 37 30 65 2d 34 61  34 65 2d 38 30 34 33 2d  |-570e-4a4e-8043-|
              000000b0  31 65 37 63 32 33 33 66  30 65 33 61 5c 22 7d 22  |1e7c233f0e3a\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 36  2e 31 35 33 5c 22 7d 22  |10.244.6.153\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hbt5m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hbt5m",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-237-27.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.237.27",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.244.6.153",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.6.153"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968497,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850968498,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://b2fdf3cc29e789117f75354998ea446e797ccf7a8af45282115642239a3fec59",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  May 10 20:08:21.845: INFO: pod: "test-deployment-64fd565c98-c25zg":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-c25zg",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-8158",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2b89aada-8e19-4d35-9a95-b9f6cb1e56d9",
      ResourceVersion: (string) (len=5) "44143",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968498,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968502,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "93c0364bbf78dbaacfad2982e831b481a4eb6a0a59eed79bfda120c2ce7c6d16",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.244.3.150/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.244.3.150/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "98dda26f-570e-4a4e-8043-1e7c233f0e3a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  39 38 64 64 61 32 36 66  |uid\":\"98dda26f|
              000000a0  2d 35 37 30 65 2d 34 61  34 65 2d 38 30 34 33 2d  |-570e-4a4e-8043-|
              000000b0  31 65 37 63 32 33 33 66  30 65 33 61 5c 22 7d 22  |1e7c233f0e3a\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 33  2e 31 35 30 5c 22 7d 22  |10.244.3.150\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fjwvt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fjwvt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-236-46.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.236.46",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.244.3.150",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.3.150"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968498,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850968499,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://f3726eb9e1d3bd380b17ec6e384e867673194404417fd2daacc4678bc7c9a3a5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  May 10 20:08:21.845: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8158",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d050eab4-f5c6-4342-b8d6-a69a44784066",
      ResourceVersion: (string) (len=5) "44189",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968498,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "d5aa7bd7-bf3e-410a-82aa-9dc38cb738c2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 64 35 61 61  37 62 64 37 2d 62 66 33  |":\"d5aa7bd7-bf3|
              00000130  65 2d 34 31 30 61 2d 38  32 61 61 2d 39 64 63 33  |e-410a-82aa-9dc3|
              00000140  38 63 62 37 33 38 63 32  5c 22 7d 22 3a 7b 7d 7d  |8cb738c2\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  May 10 20:08:21.852: INFO: pod: "test-deployment-79ff746c4-92r9c":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-92r9c",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-8158",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "af7aa54a-34ca-4f2f-bc8c-fd5d9f725129",
      ResourceVersion: (string) (len=5) "44188",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968500,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "ab76e7512e0bdcb28caab2bfa74a3b9440d6cd1af9516589d87c2e4837d9cda0",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.244.6.154/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.244.6.154/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "d050eab4-f5c6-4342-b8d6-a69a44784066",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  64 30 35 30 65 61 62 34  |uid\":\"d050eab4|
              000000a0  2d 66 35 63 36 2d 34 33  34 32 2d 62 38 64 36 2d  |-f5c6-4342-b8d6-|
              000000b0  61 36 39 61 34 34 37 38  34 30 36 36 5c 22 7d 22  |a69a44784066\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 36  2e 31 35 34 5c 22 7d 22  |10.244.6.154\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2qp5m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2qp5m",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-237-27.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.237.27",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.244.6.154",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.6.154"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968500,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850968501,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://27a916ee5aa920acc46adc6551f54e1a466acba218b64b01693879a2e3b8b5bc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  May 10 20:08:21.852: INFO: pod: "test-deployment-79ff746c4-sh84b":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-sh84b",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-8158",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c18e9f56-99b5-4bc7-b1c7-c8384bacface",
      ResourceVersion: (string) (len=5) "44136",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968498,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9a9eb77c88fd1f19606e073e9c970d7f6bd527864851d10f21f41426ea900bc8",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.244.5.148/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.244.5.148/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "d050eab4-f5c6-4342-b8d6-a69a44784066",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  64 30 35 30 65 61 62 34  |uid\":\"d050eab4|
              000000a0  2d 66 35 63 36 2d 34 33  34 32 2d 62 38 64 36 2d  |-f5c6-4342-b8d6-|
              000000b0  61 36 39 61 34 34 37 38  34 30 36 36 5c 22 7d 22  |a69a44784066\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 35  2e 31 34 38 5c 22 7d 22  |10.244.5.148\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4rcc2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4rcc2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-238-69.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.238.69",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.244.5.148",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.5.148"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968498,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850968499,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0be22e2ba5f518d79d7d06757057dcb2db83899cf2c1a72472661c506a8d519c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  May 10 20:08:21.853: INFO: ReplicaSet "test-deployment-7fcc79b8c7":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-7fcc79b8c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8158",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f9bf06c2-e9d5-456b-af6a-862181ded34e",
      ResourceVersion: (string) (len=5) "44085",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968495,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "d5aa7bd7-bf3e-410a-82aa-9dc38cb738c2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 64 35 61 61  37 62 64 37 2d 62 66 33  |":\"d5aa7bd7-bf3|
              00000130  65 2d 34 31 30 61 2d 38  32 61 61 2d 39 64 63 33  |e-410a-82aa-9dc3|
              00000140  38 63 62 37 33 38 63 32  5c 22 7d 22 3a 7b 7d 7d  |8cb738c2\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  May 10 20:08:21.862: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8158" for this suite. @ 05/10/24 20:08:21.868
  << Timeline
------------------------------
SSSSSSSSS
------------------------------
• [4.134 seconds]
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:167

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:08:21.909
  May 10 20:08:21.909: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 20:08:21.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:08:21.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:08:21.934
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/10/24 20:08:21.936
  E0510 20:08:22.001640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:23.001901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:24.002473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:25.003378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 20:08:25.981
  May 10 20:08:25.986: INFO: Trying to get logs from node ip-172-31-238-69.eu-west-3.compute.internal pod pod-ea38213b-487b-4ad1-8405-8f9fe58f2753 container test-container: <nil>
  E0510 20:08:26.004314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 05/10/24 20:08:26.004
  May 10 20:08:26.024: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2588" for this suite. @ 05/10/24 20:08:26.032
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
• [3.363 seconds]
[sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1575

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:08:26.057
  May 10 20:08:26.057: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 20:08:26.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:08:26.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:08:26.086
  STEP: creating the pod @ 05/10/24 20:08:26.093
  May 10 20:08:26.093: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-7627 create -f -'
  May 10 20:08:26.798: INFO: stderr: ""
  May 10 20:08:26.798: INFO: stdout: "pod/pause created\n"
  E0510 20:08:27.004396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:28.004960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 05/10/24 20:08:28.807
  May 10 20:08:28.808: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-7627 label pods pause testing-label=testing-label-value'
  May 10 20:08:28.898: INFO: stderr: ""
  May 10 20:08:28.898: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 05/10/24 20:08:28.898
  May 10 20:08:28.898: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-7627 get pod pause -L testing-label'
  May 10 20:08:28.964: INFO: stderr: ""
  May 10 20:08:28.964: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 05/10/24 20:08:28.964
  May 10 20:08:28.964: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-7627 label pods pause testing-label-'
  E0510 20:08:29.005094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:08:29.056: INFO: stderr: ""
  May 10 20:08:29.056: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 05/10/24 20:08:29.056
  May 10 20:08:29.056: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-7627 get pod pause -L testing-label'
  May 10 20:08:29.135: INFO: stderr: ""
  May 10 20:08:29.135: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 05/10/24 20:08:29.135
  May 10 20:08:29.135: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-7627 delete --grace-period=0 --force -f -'
  May 10 20:08:29.221: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 10 20:08:29.221: INFO: stdout: "pod \"pause\" force deleted\n"
  May 10 20:08:29.221: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-7627 get rc,svc -l name=pause --no-headers'
  May 10 20:08:29.322: INFO: stderr: "No resources found in kubectl-7627 namespace.\n"
  May 10 20:08:29.322: INFO: stdout: ""
  May 10 20:08:29.322: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-321879523 --namespace=kubectl-7627 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  May 10 20:08:29.405: INFO: stderr: ""
  May 10 20:08:29.405: INFO: stdout: ""
  May 10 20:08:29.406: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7627" for this suite. @ 05/10/24 20:08:29.412
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [4.070 seconds]
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:486

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:08:29.426
  May 10 20:08:29.426: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename security-context-test @ 05/10/24 20:08:29.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:08:29.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:08:29.45
  E0510 20:08:30.005867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:31.006243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:32.007234      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:33.008033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:08:33.478: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3387" for this suite. @ 05/10/24 20:08:33.486
  << Timeline
------------------------------
• [2.227 seconds]
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:08:33.498
  May 10 20:08:33.498: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename proxy @ 05/10/24 20:08:33.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:08:33.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:08:33.527
  May 10 20:08:33.531: INFO: Creating pod...
  E0510 20:08:34.008731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:35.009477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:08:35.561: INFO: Creating service...
  May 10 20:08:35.612: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5000/pods/agnhost/proxy?method=DELETE
  May 10 20:08:35.628: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  May 10 20:08:35.628: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5000/pods/agnhost/proxy?method=OPTIONS
  May 10 20:08:35.633: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  May 10 20:08:35.633: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5000/pods/agnhost/proxy?method=PATCH
  May 10 20:08:35.637: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  May 10 20:08:35.637: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5000/pods/agnhost/proxy?method=POST
  May 10 20:08:35.642: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  May 10 20:08:35.642: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5000/pods/agnhost/proxy?method=PUT
  May 10 20:08:35.646: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  May 10 20:08:35.646: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5000/services/e2e-proxy-test-service/proxy?method=DELETE
  May 10 20:08:35.655: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  May 10 20:08:35.655: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5000/services/e2e-proxy-test-service/proxy?method=OPTIONS
  May 10 20:08:35.663: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  May 10 20:08:35.663: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5000/services/e2e-proxy-test-service/proxy?method=PATCH
  May 10 20:08:35.670: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  May 10 20:08:35.670: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5000/services/e2e-proxy-test-service/proxy?method=POST
  May 10 20:08:35.676: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  May 10 20:08:35.676: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5000/services/e2e-proxy-test-service/proxy?method=PUT
  May 10 20:08:35.684: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  May 10 20:08:35.684: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5000/pods/agnhost/proxy?method=GET
  May 10 20:08:35.688: INFO: http.Client request:GET StatusCode:301
  May 10 20:08:35.688: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5000/services/e2e-proxy-test-service/proxy?method=GET
  May 10 20:08:35.696: INFO: http.Client request:GET StatusCode:301
  May 10 20:08:35.696: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5000/pods/agnhost/proxy?method=HEAD
  May 10 20:08:35.701: INFO: http.Client request:HEAD StatusCode:301
  May 10 20:08:35.701: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5000/services/e2e-proxy-test-service/proxy?method=HEAD
  May 10 20:08:35.706: INFO: http.Client request:HEAD StatusCode:301
  May 10 20:08:35.706: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5000" for this suite. @ 05/10/24 20:08:35.713
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [5.232 seconds]
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:08:35.75
  May 10 20:08:35.750: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename daemonsets @ 05/10/24 20:08:35.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:08:35.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:08:35.789
  STEP: Creating simple DaemonSet "daemon-set" @ 05/10/24 20:08:35.845
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/10/24 20:08:35.852
  May 10 20:08:35.869: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:08:35.869: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:08:35.869: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:08:35.883: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 20:08:35.883: INFO: Node ip-172-31-236-144.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  E0510 20:08:36.010139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:08:36.891: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:08:36.891: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:08:36.891: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:08:36.898: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May 10 20:08:36.898: INFO: Node ip-172-31-236-144.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  E0510 20:08:37.011156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:08:37.890: INFO: DaemonSet pods can't tolerate node ip-172-31-236-8.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:08:37.890: INFO: DaemonSet pods can't tolerate node ip-172-31-237-217.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:08:37.890: INFO: DaemonSet pods can't tolerate node ip-172-31-238-233.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:08:37.894: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 6
  May 10 20:08:37.894: INFO: Number of running nodes: 6, number of available pods: 6 in daemonset daemon-set
  STEP: Getting /status @ 05/10/24 20:08:37.898
  May 10 20:08:37.901: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 05/10/24 20:08:37.901
  May 10 20:08:37.910: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 05/10/24 20:08:37.911
  May 10 20:08:37.912: INFO: Observed &DaemonSet event: ADDED
  May 10 20:08:37.912: INFO: Observed &DaemonSet event: MODIFIED
  May 10 20:08:37.912: INFO: Observed &DaemonSet event: MODIFIED
  May 10 20:08:37.913: INFO: Observed &DaemonSet event: MODIFIED
  May 10 20:08:37.913: INFO: Observed &DaemonSet event: MODIFIED
  May 10 20:08:37.913: INFO: Observed &DaemonSet event: MODIFIED
  May 10 20:08:37.913: INFO: Observed &DaemonSet event: MODIFIED
  May 10 20:08:37.913: INFO: Observed &DaemonSet event: MODIFIED
  May 10 20:08:37.913: INFO: Observed &DaemonSet event: MODIFIED
  May 10 20:08:37.913: INFO: Found daemon set daemon-set in namespace daemonsets-7195 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  May 10 20:08:37.913: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 05/10/24 20:08:37.913
  STEP: watching for the daemon set status to be patched @ 05/10/24 20:08:37.924
  May 10 20:08:37.928: INFO: Observed &DaemonSet event: ADDED
  May 10 20:08:37.929: INFO: Observed &DaemonSet event: MODIFIED
  May 10 20:08:37.929: INFO: Observed &DaemonSet event: MODIFIED
  May 10 20:08:37.929: INFO: Observed &DaemonSet event: MODIFIED
  May 10 20:08:37.929: INFO: Observed &DaemonSet event: MODIFIED
  May 10 20:08:37.929: INFO: Observed &DaemonSet event: MODIFIED
  May 10 20:08:37.929: INFO: Observed &DaemonSet event: MODIFIED
  May 10 20:08:37.929: INFO: Observed &DaemonSet event: MODIFIED
  May 10 20:08:37.929: INFO: Observed &DaemonSet event: MODIFIED
  May 10 20:08:37.929: INFO: Observed daemon set daemon-set in namespace daemonsets-7195 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  May 10 20:08:37.929: INFO: Observed &DaemonSet event: MODIFIED
  May 10 20:08:37.929: INFO: Found daemon set daemon-set in namespace daemonsets-7195 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  May 10 20:08:37.929: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 05/10/24 20:08:37.934
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7195, will wait for the garbage collector to delete the pods @ 05/10/24 20:08:37.934
  May 10 20:08:37.995: INFO: Deleting DaemonSet.extensions daemon-set took: 7.156537ms
  E0510 20:08:38.011846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:08:38.096: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.066219ms
  E0510 20:08:39.012665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:40.013138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:08:40.915: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 20:08:40.915: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May 10 20:08:40.922: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"44600"},"items":null}

  May 10 20:08:40.928: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"44600"},"items":null}

  May 10 20:08:40.966: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7195" for this suite. @ 05/10/24 20:08:40.973
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
S
[sig-storage] CSI Mock volume expansion Expansion with recovery[Feature:RecoverVolumeExpansionFailure] should record target size in allocated resources
k8s.io/kubernetes/test/e2e/storage/csi_mock/csi_volume_expansion.go:428

  Timeline >>
  E0510 20:08:41.013201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  << Timeline
------------------------------
SSSSSSSSSSSSSS
------------------------------
• [0.220 seconds]
[sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:189

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:08:41.023
  May 10 20:08:41.023: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename runtimeclass @ 05/10/24 20:08:41.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:08:41.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:08:41.046
  STEP: getting /apis @ 05/10/24 20:08:41.05
  STEP: getting /apis/node.k8s.io @ 05/10/24 20:08:41.055
  STEP: getting /apis/node.k8s.io/v1 @ 05/10/24 20:08:41.056
  STEP: creating @ 05/10/24 20:08:41.057
  STEP: watching @ 05/10/24 20:08:41.082
  May 10 20:08:41.082: INFO: starting watch
  STEP: getting @ 05/10/24 20:08:41.091
  STEP: listing @ 05/10/24 20:08:41.094
  STEP: patching @ 05/10/24 20:08:41.111
  STEP: updating @ 05/10/24 20:08:41.133
  May 10 20:08:41.141: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 05/10/24 20:08:41.141
  STEP: deleting a collection @ 05/10/24 20:08:41.161
  May 10 20:08:41.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2259" for this suite. @ 05/10/24 20:08:41.224
  << Timeline
------------------------------
SSSSSSSSSSSS
------------------------------
• [0.164 seconds]
[sig-apps] CronJob should support CronJob API operations [Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:324

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:08:41.252
  May 10 20:08:41.252: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename cronjob @ 05/10/24 20:08:41.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:08:41.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:08:41.275
  STEP: Creating a cronjob @ 05/10/24 20:08:41.278
  STEP: creating @ 05/10/24 20:08:41.278
  STEP: getting @ 05/10/24 20:08:41.285
  STEP: listing @ 05/10/24 20:08:41.29
  STEP: watching @ 05/10/24 20:08:41.293
  May 10 20:08:41.293: INFO: starting watch
  STEP: cluster-wide listing @ 05/10/24 20:08:41.294
  STEP: cluster-wide watching @ 05/10/24 20:08:41.301
  May 10 20:08:41.301: INFO: starting watch
  STEP: patching @ 05/10/24 20:08:41.302
  STEP: updating @ 05/10/24 20:08:41.311
  May 10 20:08:41.327: INFO: waiting for watch events with expected annotations
  May 10 20:08:41.327: INFO: saw patched and updated annotations
  STEP: patching /status @ 05/10/24 20:08:41.327
  STEP: updating /status @ 05/10/24 20:08:41.338
  STEP: get /status @ 05/10/24 20:08:41.357
  STEP: deleting @ 05/10/24 20:08:41.364
  STEP: deleting a collection @ 05/10/24 20:08:41.383
  May 10 20:08:41.397: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1303" for this suite. @ 05/10/24 20:08:41.404
  << Timeline
------------------------------
• [7.184 seconds]
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:513

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:08:41.418
  May 10 20:08:41.418: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename job @ 05/10/24 20:08:41.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:08:41.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:08:41.454
  STEP: Creating a job @ 05/10/24 20:08:41.46
  STEP: Ensuring active pods == parallelism @ 05/10/24 20:08:41.469
  E0510 20:08:42.013680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:43.014216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 05/10/24 20:08:43.473
  May 10 20:08:43.992: INFO: Successfully updated pod "adopt-release-czrtm"
  STEP: Checking that the Job readopts the Pod @ 05/10/24 20:08:43.992
  E0510 20:08:44.015297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:45.015654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 05/10/24 20:08:46.006
  E0510 20:08:46.016718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:08:46.527: INFO: Successfully updated pod "adopt-release-czrtm"
  STEP: Checking that the Job releases the Pod @ 05/10/24 20:08:46.527
  E0510 20:08:47.017120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:48.018045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:08:48.540: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3124" for this suite. @ 05/10/24 20:08:48.552
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.086 seconds]
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:55

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:08:48.634
  May 10 20:08:48.634: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename runtimeclass @ 05/10/24 20:08:48.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:08:48.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:08:48.682
  May 10 20:08:48.696: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4812" for this suite. @ 05/10/24 20:08:48.707
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.116 seconds]
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:08:48.746
  May 10 20:08:48.746: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename containers @ 05/10/24 20:08:48.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:08:48.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:08:48.773
  STEP: Creating a pod to test override arguments @ 05/10/24 20:08:48.777
  E0510 20:08:49.018358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:50.019181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:51.019391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:52.019918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 20:08:52.803
  May 10 20:08:52.806: INFO: Trying to get logs from node ip-172-31-237-5.eu-west-3.compute.internal pod client-containers-c176a4ac-cba6-490a-ae69-d1cf929b6eca container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 20:08:52.821
  May 10 20:08:52.846: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4086" for this suite. @ 05/10/24 20:08:52.854
  << Timeline
------------------------------
SSSSSSSSS
------------------------------
• [3.161 seconds]
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:94

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:08:52.869
  May 10 20:08:52.869: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename replication-controller @ 05/10/24 20:08:52.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:08:52.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:08:52.927
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 05/10/24 20:08:52.932
  E0510 20:08:53.020580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:54.020974      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 05/10/24 20:08:54.969
  STEP: Then the orphan pod is adopted @ 05/10/24 20:08:54.981
  E0510 20:08:55.022061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:08:56.015: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0510 20:08:56.022243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-8279" for this suite. @ 05/10/24 20:08:56.022
  << Timeline
------------------------------
SS
------------------------------
• [304.463 seconds]
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:18.717
  May 10 20:04:18.717: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename sched-pred @ 05/10/24 20:04:18.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:18.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:18.769
  May 10 20:04:18.775: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  May 10 20:04:18.791: INFO: Waiting for terminating namespaces to be deleted...
  May 10 20:04:18.798: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-236-144.eu-west-3.compute.internal before test
  May 10 20:04:18.817: INFO: e2e-conformance-test from conformance started at 2024-05-10 19:40:59 +0000 UTC (2 container statuses recorded)
  May 10 20:04:18.817: INFO: 	Container conformance-container ready: true, restart count 0
  May 10 20:04:18.817: INFO: 	Container output-container ready: true, restart count 0
  May 10 20:04:18.817: INFO: canal-zgphj from kube-system started at 2024-05-10 19:38:37 +0000 UTC (2 container statuses recorded)
  May 10 20:04:18.817: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:04:18.817: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:04:18.817: INFO: ebs-csi-node-7kmv9 from kube-system started at 2024-05-10 19:38:37 +0000 UTC (3 container statuses recorded)
  May 10 20:04:18.817: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:04:18.817: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:04:18.817: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:04:18.817: INFO: kube-proxy-svhx8 from kube-system started at 2024-05-10 19:38:37 +0000 UTC (1 container statuses recorded)
  May 10 20:04:18.817: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:04:18.817: INFO: node-local-dns-fbvng from kube-system started at 2024-05-10 19:38:37 +0000 UTC (1 container statuses recorded)
  May 10 20:04:18.817: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:04:18.817: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-236-46.eu-west-3.compute.internal before test
  May 10 20:04:18.833: INFO: canal-c5pr9 from kube-system started at 2024-05-10 19:35:54 +0000 UTC (2 container statuses recorded)
  May 10 20:04:18.833: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:04:18.833: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:04:18.833: INFO: ebs-csi-node-lhfzz from kube-system started at 2024-05-10 19:35:54 +0000 UTC (3 container statuses recorded)
  May 10 20:04:18.833: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:04:18.833: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:04:18.833: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:04:18.833: INFO: kube-proxy-x88pq from kube-system started at 2024-05-10 19:35:54 +0000 UTC (1 container statuses recorded)
  May 10 20:04:18.833: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:04:18.833: INFO: node-local-dns-f2v2d from kube-system started at 2024-05-10 19:35:54 +0000 UTC (1 container statuses recorded)
  May 10 20:04:18.833: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:04:18.833: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-237-27.eu-west-3.compute.internal before test
  May 10 20:04:18.852: INFO: e2e-host-exec from hostport-131 started at 2024-05-10 20:04:15 +0000 UTC (1 container statuses recorded)
  May 10 20:04:18.852: INFO: 	Container e2e-host-exec ready: true, restart count 0
  May 10 20:04:18.852: INFO: pod1 from hostport-131 started at 2024-05-10 20:04:07 +0000 UTC (1 container statuses recorded)
  May 10 20:04:18.852: INFO: 	Container agnhost ready: true, restart count 0
  May 10 20:04:18.852: INFO: pod2 from hostport-131 started at 2024-05-10 20:04:09 +0000 UTC (1 container statuses recorded)
  May 10 20:04:18.852: INFO: 	Container agnhost ready: true, restart count 0
  May 10 20:04:18.852: INFO: pod3 from hostport-131 started at 2024-05-10 20:04:13 +0000 UTC (1 container statuses recorded)
  May 10 20:04:18.852: INFO: 	Container agnhost ready: true, restart count 0
  May 10 20:04:18.852: INFO: canal-86fpg from kube-system started at 2024-05-10 19:38:21 +0000 UTC (2 container statuses recorded)
  May 10 20:04:18.852: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:04:18.852: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:04:18.852: INFO: ebs-csi-node-qg9kf from kube-system started at 2024-05-10 19:38:21 +0000 UTC (3 container statuses recorded)
  May 10 20:04:18.852: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:04:18.852: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:04:18.852: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:04:18.852: INFO: kube-proxy-2gzg4 from kube-system started at 2024-05-10 19:38:21 +0000 UTC (1 container statuses recorded)
  May 10 20:04:18.852: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:04:18.852: INFO: node-local-dns-f4wjg from kube-system started at 2024-05-10 19:38:21 +0000 UTC (1 container statuses recorded)
  May 10 20:04:18.852: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:04:18.852: INFO: filler-pod-0011db0a-523c-43b3-9d2a-7753837dcc43 from sched-pred-9433 started at 2024-05-10 20:04:08 +0000 UTC (1 container statuses recorded)
  May 10 20:04:18.852: INFO: 	Container filler-pod-0011db0a-523c-43b3-9d2a-7753837dcc43 ready: false, restart count 0
  May 10 20:04:18.852: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-237-5.eu-west-3.compute.internal before test
  May 10 20:04:18.868: INFO: canal-7n86g from kube-system started at 2024-05-10 19:35:54 +0000 UTC (2 container statuses recorded)
  May 10 20:04:18.868: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:04:18.868: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:04:18.868: INFO: ebs-csi-node-6hgh7 from kube-system started at 2024-05-10 19:35:54 +0000 UTC (3 container statuses recorded)
  May 10 20:04:18.868: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:04:18.868: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:04:18.868: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:04:18.868: INFO: kube-proxy-b6mmd from kube-system started at 2024-05-10 19:35:54 +0000 UTC (1 container statuses recorded)
  May 10 20:04:18.868: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:04:18.868: INFO: node-local-dns-86s45 from kube-system started at 2024-05-10 19:35:54 +0000 UTC (1 container statuses recorded)
  May 10 20:04:18.868: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:04:18.868: INFO: filler-pod-f4ed7337-bab7-480b-8ad5-2f3c07dd8afd from sched-pred-9433 started at 2024-05-10 20:04:08 +0000 UTC (1 container statuses recorded)
  May 10 20:04:18.868: INFO: 	Container filler-pod-f4ed7337-bab7-480b-8ad5-2f3c07dd8afd ready: false, restart count 0
  May 10 20:04:18.868: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-238-69.eu-west-3.compute.internal before test
  May 10 20:04:18.920: INFO: canal-qhmdf from kube-system started at 2024-05-10 19:36:27 +0000 UTC (2 container statuses recorded)
  May 10 20:04:18.920: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:04:18.920: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:04:18.920: INFO: ebs-csi-node-bgqjk from kube-system started at 2024-05-10 19:36:27 +0000 UTC (3 container statuses recorded)
  May 10 20:04:18.920: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:04:18.920: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:04:18.920: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:04:18.920: INFO: kube-proxy-wkbd8 from kube-system started at 2024-05-10 19:36:27 +0000 UTC (1 container statuses recorded)
  May 10 20:04:18.920: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:04:18.920: INFO: node-local-dns-746vg from kube-system started at 2024-05-10 19:36:27 +0000 UTC (1 container statuses recorded)
  May 10 20:04:18.920: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:04:18.920: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-238-87.eu-west-3.compute.internal before test
  May 10 20:04:18.935: INFO: canal-cfqsw from kube-system started at 2024-05-10 19:38:46 +0000 UTC (2 container statuses recorded)
  May 10 20:04:18.935: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:04:18.935: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:04:18.935: INFO: ebs-csi-node-5mtfb from kube-system started at 2024-05-10 19:38:46 +0000 UTC (3 container statuses recorded)
  May 10 20:04:18.935: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:04:18.935: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:04:18.935: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:04:18.935: INFO: kube-proxy-n9m2f from kube-system started at 2024-05-10 19:38:46 +0000 UTC (1 container statuses recorded)
  May 10 20:04:18.935: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:04:18.935: INFO: node-local-dns-6d9jq from kube-system started at 2024-05-10 19:38:46 +0000 UTC (1 container statuses recorded)
  May 10 20:04:18.935: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:04:18.935: INFO: labelsupdate735cae60-075d-4baf-a4a4-2b036a4cb08e from projected-8897 started at 2024-05-10 20:04:12 +0000 UTC (1 container statuses recorded)
  May 10 20:04:18.935: INFO: 	Container client-container ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/10/24 20:04:18.936
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/10/24 20:04:20.988
  STEP: Trying to apply a random label on the found node. @ 05/10/24 20:04:21.031
  STEP: verifying the node has the label kubernetes.io/e2e-d24f58d0-02ba-4d64-9f4d-9436a0610ff3 95 @ 05/10/24 20:04:21.065
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 05/10/24 20:04:21.076
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.236.46 on the node which pod4 resides and expect not scheduled @ 05/10/24 20:04:23.102
  STEP: removing the label kubernetes.io/e2e-d24f58d0-02ba-4d64-9f4d-9436a0610ff3 off the node ip-172-31-236-46.eu-west-3.compute.internal @ 05/10/24 20:09:23.112
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-d24f58d0-02ba-4d64-9f4d-9436a0610ff3 @ 05/10/24 20:09:23.135
  May 10 20:09:23.145: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3280" for this suite. @ 05/10/24 20:09:23.163
  << Timeline
------------------------------
SSSSS
------------------------------
• [6.195 seconds]
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:189

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:09:23.186
  May 10 20:09:23.186: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename var-expansion @ 05/10/24 20:09:23.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:09:23.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:09:23.239
  May 10 20:09:25.298: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May 10 20:09:25.311: INFO: Deleting pod "var-expansion-aefe77d7-5bbe-4f6c-a03a-90699bce3b1a" in namespace "var-expansion-3378"
  May 10 20:09:25.332: INFO: Wait up to 5m0s for pod "var-expansion-aefe77d7-5bbe-4f6c-a03a-90699bce3b1a" to be fully deleted
  STEP: Destroying namespace "var-expansion-3378" for this suite. @ 05/10/24 20:09:29.362
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.239 seconds]
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:57

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:09:29.4
  May 10 20:09:29.400: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename projected @ 05/10/24 20:09:29.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:09:29.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:09:29.44
  STEP: Creating configMap with name projected-configmap-test-volume-2082b242-5c6a-4ce9-9809-b09e3cfbbf8b @ 05/10/24 20:09:29.446
  STEP: Creating a pod to test consume configMaps @ 05/10/24 20:09:29.456
  STEP: Saw pod success @ 05/10/24 20:09:33.511
  May 10 20:09:33.519: INFO: Trying to get logs from node ip-172-31-237-27.eu-west-3.compute.internal pod pod-projected-configmaps-aae3c1b7-d5ac-4222-b64a-e7d265552e6d container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 20:09:33.543
  May 10 20:09:33.604: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4922" for this suite. @ 05/10/24 20:09:33.616
  << Timeline
------------------------------
SSSSSSSSSSSSSS
------------------------------
• [24.362 seconds]
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:09:33.648
  May 10 20:09:33.648: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename subpath @ 05/10/24 20:09:33.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:09:33.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:09:33.707
  STEP: Setting up data @ 05/10/24 20:09:33.714
  STEP: Creating pod pod-subpath-test-secret-f4t7 @ 05/10/24 20:09:33.735
  STEP: Creating a pod to test atomic-volume-subpath @ 05/10/24 20:09:33.735
  STEP: Saw pod success @ 05/10/24 20:09:57.916
  May 10 20:09:57.924: INFO: Trying to get logs from node ip-172-31-237-27.eu-west-3.compute.internal pod pod-subpath-test-secret-f4t7 container test-container-subpath-secret-f4t7: <nil>
  STEP: delete the pod @ 05/10/24 20:09:57.946
  STEP: Deleting pod pod-subpath-test-secret-f4t7 @ 05/10/24 20:09:57.983
  May 10 20:09:57.983: INFO: Deleting pod "pod-subpath-test-secret-f4t7" in namespace "subpath-3300"
  May 10 20:09:57.989: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3300" for this suite. @ 05/10/24 20:09:58
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [4.272 seconds]
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:129

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:09:58.017
  May 10 20:09:58.017: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename security-context @ 05/10/24 20:09:58.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:09:58.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:09:58.052
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/10/24 20:09:58.057
  STEP: Saw pod success @ 05/10/24 20:10:02.134
  May 10 20:10:02.150: INFO: Trying to get logs from node ip-172-31-237-27.eu-west-3.compute.internal pod security-context-6883bddb-43f6-4084-904a-66cd9bfd225e container test-container: <nil>
  STEP: delete the pod @ 05/10/24 20:10:02.179
  May 10 20:10:02.249: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-5457" for this suite. @ 05/10/24 20:10:02.27
  << Timeline
------------------------------
SSS
------------------------------
• [0.268 seconds]
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:169

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:02.294
  May 10 20:10:02.294: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename configmap @ 05/10/24 20:10:02.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:02.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:02.34
  STEP: creating a ConfigMap @ 05/10/24 20:10:02.347
  STEP: fetching the ConfigMap @ 05/10/24 20:10:02.38
  STEP: patching the ConfigMap @ 05/10/24 20:10:02.396
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 05/10/24 20:10:02.414
  STEP: deleting the ConfigMap by collection with a label selector @ 05/10/24 20:10:02.436
  STEP: listing all ConfigMaps in test namespace @ 05/10/24 20:10:02.47
  May 10 20:10:02.496: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3124" for this suite. @ 05/10/24 20:10:02.523
  << Timeline
------------------------------
SS
------------------------------
• [4.215 seconds]
[sig-apps] ReplicaSet Replace and Patch tests [Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:154

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:02.57
  May 10 20:10:02.570: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename replicaset @ 05/10/24 20:10:02.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:02.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:02.636
  May 10 20:10:02.686: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/10/24 20:10:02.686
  STEP: Scaling up "test-rs" replicaset  @ 05/10/24 20:10:04.722
  May 10 20:10:04.745: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 05/10/24 20:10:04.745
  May 10 20:10:04.788: INFO: observed ReplicaSet test-rs in namespace replicaset-7925 with ReadyReplicas 1, AvailableReplicas 1
  May 10 20:10:04.841: INFO: observed ReplicaSet test-rs in namespace replicaset-7925 with ReadyReplicas 1, AvailableReplicas 1
  May 10 20:10:04.841: INFO: observed ReplicaSet test-rs in namespace replicaset-7925 with ReadyReplicas 1, AvailableReplicas 1
  May 10 20:10:05.524: INFO: observed ReplicaSet test-rs in namespace replicaset-7925 with ReadyReplicas 2, AvailableReplicas 2
  May 10 20:10:06.756: INFO: observed Replicaset test-rs in namespace replicaset-7925 with ReadyReplicas 3 found true
  May 10 20:10:06.757: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7925" for this suite. @ 05/10/24 20:10:06.771
  << Timeline
------------------------------
SS
------------------------------
• [77.608 seconds]
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:08:56.032
  May 10 20:08:56.032: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename sched-preemption @ 05/10/24 20:08:56.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:08:56.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:08:56.063
  May 10 20:08:56.084: INFO: Waiting up to 1m0s for all nodes to be ready
  E0510 20:08:57.022936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:58.023059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:59.023637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:00.024253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:01.025337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:02.026291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:03.026779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:04.027240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:05.028272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:06.028472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:07.029186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:08.030171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:09.030176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:10.031233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:11.031661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:12.031826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:13.032279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:14.033095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:15.033371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:16.034193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:17.034434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:18.035334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:19.036403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:20.036969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:21.037540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:22.038380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:23.039322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:24.040356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:25.041271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:26.041495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:27.041868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:28.042824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:29.043255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:30.043969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:31.044666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:32.045211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:33.045338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:34.046272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:35.047115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:36.047588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:37.048232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:38.049032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:39.049141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:40.050212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:41.050699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:42.051193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:43.051717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:44.052709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:45.053223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:46.053571      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:47.054384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:48.054688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:49.055158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:50.055168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:51.055205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:52.056038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:53.056259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:54.056980      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:55.057009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:56.057304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:09:56.146: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/10/24 20:09:56.151
  May 10 20:09:56.151: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/10/24 20:09:56.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:09:56.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:09:56.195
  STEP: Finding an available node @ 05/10/24 20:09:56.198
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/10/24 20:09:56.198
  E0510 20:09:57.057981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:58.058775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/10/24 20:09:58.22
  May 10 20:09:58.237: INFO: found a healthy node: ip-172-31-238-87.eu-west-3.compute.internal
  E0510 20:09:59.059152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:00.059504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:01.060203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:02.060911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:03.061752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:04.062562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:10:04.411: INFO: pods created so far: [1 1 1]
  May 10 20:10:04.411: INFO: length of pods created so far: 3
  E0510 20:10:05.062998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:06.063248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:10:06.423: INFO: pods created so far: [2 2 1]
  E0510 20:10:07.063479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:08.064053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:09.064161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:10.065043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:11.065168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:12.065985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:13.066704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:10:13.425: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May 10 20:10:13.470: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-9423" for this suite. @ 05/10/24 20:10:13.619
  STEP: Destroying namespace "sched-preemption-502" for this suite. @ 05/10/24 20:10:13.631
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [3.184 seconds]
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:13.666
  May 10 20:10:13.666: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename field-validation @ 05/10/24 20:10:13.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:13.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:13.695
  May 10 20:10:13.699: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  W0510 20:10:13.699799      22 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc001315420 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0510 20:10:14.067246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:15.067343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:16.068240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0510 20:10:16.273208      22 warnings.go:70] unknown field "alpha"
  W0510 20:10:16.273218      22 warnings.go:70] unknown field "beta"
  W0510 20:10:16.273222      22 warnings.go:70] unknown field "delta"
  W0510 20:10:16.273225      22 warnings.go:70] unknown field "epsilon"
  W0510 20:10:16.273233      22 warnings.go:70] unknown field "gamma"
  May 10 20:10:16.821: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7562" for this suite. @ 05/10/24 20:10:16.842
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [10.854 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:357

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:06.789
  May 10 20:10:06.789: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/10/24 20:10:06.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:06.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:06.827
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 05/10/24 20:10:06.832
  May 10 20:10:06.833: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  May 10 20:10:08.816: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  May 10 20:10:17.603: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5743" for this suite. @ 05/10/24 20:10:17.625
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [2.096 seconds]
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:16.894
  May 10 20:10:16.894: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename containers @ 05/10/24 20:10:16.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:16.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:16.927
  E0510 20:10:17.069125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:18.069704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:10:18.966: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3429" for this suite. @ 05/10/24 20:10:18.977
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
• [5.677 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:194

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:17.663
  May 10 20:10:17.663: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/10/24 20:10:17.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:17.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:17.696
  May 10 20:10:17.702: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/10/24 20:10:19.806
  May 10 20:10:19.806: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=crd-publish-openapi-9510 --namespace=crd-publish-openapi-9510 create -f -'
  May 10 20:10:20.595: INFO: stderr: ""
  May 10 20:10:20.595: INFO: stdout: "e2e-test-crd-publish-openapi-7311-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  May 10 20:10:20.595: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=crd-publish-openapi-9510 --namespace=crd-publish-openapi-9510 delete e2e-test-crd-publish-openapi-7311-crds test-cr'
  May 10 20:10:20.701: INFO: stderr: ""
  May 10 20:10:20.701: INFO: stdout: "e2e-test-crd-publish-openapi-7311-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  May 10 20:10:20.701: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=crd-publish-openapi-9510 --namespace=crd-publish-openapi-9510 apply -f -'
  May 10 20:10:21.410: INFO: stderr: ""
  May 10 20:10:21.410: INFO: stdout: "e2e-test-crd-publish-openapi-7311-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  May 10 20:10:21.410: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=crd-publish-openapi-9510 --namespace=crd-publish-openapi-9510 delete e2e-test-crd-publish-openapi-7311-crds test-cr'
  May 10 20:10:21.491: INFO: stderr: ""
  May 10 20:10:21.491: INFO: stdout: "e2e-test-crd-publish-openapi-7311-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/10/24 20:10:21.491
  May 10 20:10:21.491: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=crd-publish-openapi-9510 explain e2e-test-crd-publish-openapi-7311-crds'
  May 10 20:10:21.656: INFO: stderr: ""
  May 10 20:10:21.656: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-7311-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  May 10 20:10:23.320: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9510" for this suite. @ 05/10/24 20:10:23.332
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [7.129 seconds]
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:19.002
  May 10 20:10:19.002: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename deployment @ 05/10/24 20:10:19.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:19.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:19.028
  May 10 20:10:19.035: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  May 10 20:10:19.052: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0510 20:10:19.070497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:20.071350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:21.071922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:22.072842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:23.073309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:10:24.057: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/10/24 20:10:24.057
  May 10 20:10:24.057: INFO: Creating deployment "test-rolling-update-deployment"
  May 10 20:10:24.066: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  E0510 20:10:24.073772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:10:24.082: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0510 20:10:25.074050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:26.074363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:10:26.090: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  May 10 20:10:26.094: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  May 10 20:10:26.105: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8671",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "989207b1-3da7-45a3-a70d-41ade54d9b3d",
      ResourceVersion: (string) (len=5) "45943",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968624,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-7ddb77f68b\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 10 20:10:26.109: INFO: New ReplicaSet "test-rolling-update-deployment-7ddb77f68b" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8671",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5772dc8c-bbc5-4c87-8b24-b7c6e1500b70",
      ResourceVersion: (string) (len=5) "45933",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968624,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "989207b1-3da7-45a3-a70d-41ade54d9b3d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 38 39 32 30 37  62 31 2d 33 64 61 37 2d  |\"989207b1-3da7-|
              00000120  34 35 61 33 2d 61 37 30  64 2d 34 31 61 64 65 35  |45a3-a70d-41ade5|
              00000130  34 64 39 62 33 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4d9b3d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 10 20:10:26.109: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  May 10 20:10:26.111: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8671",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9313bf63-5568-42e6-8b95-cef566296ef1",
      ResourceVersion: (string) (len=5) "45942",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968619,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "989207b1-3da7-45a3-a70d-41ade54d9b3d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968619,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 39 38 39 32 30 37 62  |"uid\":\"989207b|
              000000b0  31 2d 33 64 61 37 2d 34  35 61 33 2d 61 37 30 64  |1-3da7-45a3-a70d|
              000000c0  2d 34 31 61 64 65 35 34  64 39 62 33 64 5c 22 7d  |-41ade54d9b3d\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 10 20:10:26.115: INFO: Pod "test-rolling-update-deployment-7ddb77f68b-d6zbz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-7ddb77f68b-d6zbz",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-7ddb77f68b-",
      Namespace: (string) (len=15) "deployment-8671",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7e07cedc-ce35-4f87-af72-88dc656b8119",
      ResourceVersion: (string) (len=5) "45932",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968624,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c5d067d51525884f9e9753fd4bab0fc21ac07621919fa0f272d3d927adaaf6eb",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.244.5.155/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.244.5.155/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
          UID: (types.UID) (len=36) "5772dc8c-bbc5-4c87-8b24-b7c6e1500b70",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 37  37 32 64 63 38 63 2d 62  |d\":\"5772dc8c-b|
              00000090  62 63 35 2d 34 63 38 37  2d 38 62 32 34 2d 62 37  |bc5-4c87-8b24-b7|
              000000a0  63 36 65 31 35 30 30 62  37 30 5c 22 7d 22 3a 7b  |c6e1500b70\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 35  2e 31 35 35 5c 22 7d 22  |10.244.5.155\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nxfzm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nxfzm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-238-69.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.238.69",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.244.5.155",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.5.155"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968624,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850968624,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://703ff5450ec00c6c54bdee95a2dd7080fe1863e11bcb0a300bea03a5b94a3b71",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 20:10:26.116: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8671" for this suite. @ 05/10/24 20:10:26.122
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.130 seconds]
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:26.17
  May 10 20:10:26.170: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/10/24 20:10:26.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:26.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:26.201
  STEP: creating @ 05/10/24 20:10:26.204
  STEP: getting @ 05/10/24 20:10:26.23
  STEP: listing in namespace @ 05/10/24 20:10:26.236
  STEP: patching @ 05/10/24 20:10:26.241
  STEP: deleting @ 05/10/24 20:10:26.253
  May 10 20:10:26.272: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-697" for this suite. @ 05/10/24 20:10:26.288
  << Timeline
------------------------------
• [4.255 seconds]
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:99

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:23.346
  May 10 20:10:23.346: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename projected @ 05/10/24 20:10:23.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:23.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:23.368
  STEP: Creating configMap with name projected-configmap-test-volume-map-c6e0e37f-1745-4c25-abeb-4945d0cd387c @ 05/10/24 20:10:23.371
  STEP: Creating a pod to test consume configMaps @ 05/10/24 20:10:23.38
  STEP: Saw pod success @ 05/10/24 20:10:27.421
  May 10 20:10:27.447: INFO: Trying to get logs from node ip-172-31-238-87.eu-west-3.compute.internal pod pod-projected-configmaps-323d392e-d0d6-496f-ae4a-e7746567ff8f container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 20:10:27.493
  May 10 20:10:27.550: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6356" for this suite. @ 05/10/24 20:10:27.566
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [2.301 seconds]
[sig-network] DNS should support configurable pod DNS nameservers [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:26.302
  May 10 20:10:26.302: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename dns @ 05/10/24 20:10:26.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:26.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:26.325
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 05/10/24 20:10:26.328
  May 10 20:10:26.341: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-6632  8e2975af-aced-48e9-a9b2-12352b2935ca 45964 0 2024-05-10 20:10:26 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-05-10 20:10:26 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vxz6m,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vxz6m,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0510 20:10:27.074770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:28.075190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 05/10/24 20:10:28.352
  May 10 20:10:28.352: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-6632 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:10:28.352: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  May 10 20:10:28.353: INFO: ExecWithOptions: Clientset creation
  May 10 20:10:28.353: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-6632/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 05/10/24 20:10:28.478
  May 10 20:10:28.478: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-6632 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:10:28.478: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  May 10 20:10:28.479: INFO: ExecWithOptions: Clientset creation
  May 10 20:10:28.479: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-6632/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 10 20:10:28.558: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  May 10 20:10:28.567: INFO: Deleting pod test-dns-nameservers...
  STEP: Destroying namespace "dns-6632" for this suite. @ 05/10/24 20:10:28.592
  << Timeline
------------------------------
SSSSS
------------------------------
• [0.854 seconds]
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:28.607
  May 10 20:10:28.607: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename certificates @ 05/10/24 20:10:28.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:28.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:28.637
  E0510 20:10:29.075757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting /apis @ 05/10/24 20:10:29.26
  STEP: getting /apis/certificates.k8s.io @ 05/10/24 20:10:29.264
  STEP: getting /apis/certificates.k8s.io/v1 @ 05/10/24 20:10:29.265
  STEP: creating @ 05/10/24 20:10:29.266
  STEP: getting @ 05/10/24 20:10:29.301
  STEP: listing @ 05/10/24 20:10:29.322
  STEP: watching @ 05/10/24 20:10:29.336
  May 10 20:10:29.336: INFO: starting watch
  STEP: patching @ 05/10/24 20:10:29.337
  STEP: updating @ 05/10/24 20:10:29.346
  May 10 20:10:29.352: INFO: waiting for watch events with expected annotations
  May 10 20:10:29.352: INFO: saw patched and updated annotations
  STEP: getting /approval @ 05/10/24 20:10:29.352
  STEP: patching /approval @ 05/10/24 20:10:29.356
  STEP: updating /approval @ 05/10/24 20:10:29.363
  STEP: getting /status @ 05/10/24 20:10:29.371
  STEP: patching /status @ 05/10/24 20:10:29.375
  STEP: updating /status @ 05/10/24 20:10:29.39
  STEP: deleting @ 05/10/24 20:10:29.399
  STEP: deleting a collection @ 05/10/24 20:10:29.415
  May 10 20:10:29.436: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-5852" for this suite. @ 05/10/24 20:10:29.452
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [3.551 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:27.635
  May 10 20:10:27.635: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename webhook @ 05/10/24 20:10:27.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:27.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:27.677
  STEP: Setting up server cert @ 05/10/24 20:10:27.708
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 20:10:27.914
  STEP: Deploying the webhook pod @ 05/10/24 20:10:27.938
  STEP: Wait for the deployment to be ready @ 05/10/24 20:10:27.971
  May 10 20:10:27.985: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 20:10:30.005
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 20:10:30.023
  May 10 20:10:31.024: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 05/10/24 20:10:31.032
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 05/10/24 20:10:31.033
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 05/10/24 20:10:31.033
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 05/10/24 20:10:31.033
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 05/10/24 20:10:31.034
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/10/24 20:10:31.034
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/10/24 20:10:31.036
  May 10 20:10:31.036: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8514" for this suite. @ 05/10/24 20:10:31.129
  STEP: Destroying namespace "webhook-markers-9714" for this suite. @ 05/10/24 20:10:31.161
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [0.052 seconds]
[sig-api-machinery] server version should find the server version [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:40

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:31.194
  May 10 20:10:31.194: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename server-version @ 05/10/24 20:10:31.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:31.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:31.223
  STEP: Request ServerVersion @ 05/10/24 20:10:31.226
  STEP: Confirm major version @ 05/10/24 20:10:31.227
  May 10 20:10:31.227: INFO: Major version: 1
  STEP: Confirm minor version @ 05/10/24 20:10:31.227
  May 10 20:10:31.227: INFO: cleanMinorVersion: 28
  May 10 20:10:31.227: INFO: Minor version: 28
  May 10 20:10:31.227: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-8954" for this suite. @ 05/10/24 20:10:31.234
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [3.336 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:269

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:29.498
  May 10 20:10:29.498: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/10/24 20:10:29.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:29.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:29.517
  May 10 20:10:29.520: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  E0510 20:10:30.075959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:31.076621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:32.079477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:10:32.817: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-317" for this suite. @ 05/10/24 20:10:32.824
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [0.197 seconds]
[sig-instrumentation] Events should delete a collection of events [Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:175

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:32.845
  May 10 20:10:32.845: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename events @ 05/10/24 20:10:32.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:32.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:32.883
  STEP: Create set of events @ 05/10/24 20:10:32.889
  May 10 20:10:32.895: INFO: created test-event-1
  May 10 20:10:32.919: INFO: created test-event-2
  May 10 20:10:32.929: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 05/10/24 20:10:32.929
  STEP: delete collection of events @ 05/10/24 20:10:32.948
  May 10 20:10:32.948: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/10/24 20:10:33.018
  May 10 20:10:33.018: INFO: requesting list of events to confirm quantity
  May 10 20:10:33.022: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-999" for this suite. @ 05/10/24 20:10:33.03
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
• [4.854 seconds]
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:31.296
  May 10 20:10:31.296: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename pods @ 05/10/24 20:10:31.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:31.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:31.372
  STEP: creating the pod @ 05/10/24 20:10:31.376
  STEP: setting up watch @ 05/10/24 20:10:31.376
  STEP: submitting the pod to kubernetes @ 05/10/24 20:10:31.482
  STEP: verifying the pod is in kubernetes @ 05/10/24 20:10:31.51
  STEP: verifying pod creation was observed @ 05/10/24 20:10:31.525
  STEP: deleting the pod gracefully @ 05/10/24 20:10:33.569
  STEP: verifying pod deletion was observed @ 05/10/24 20:10:33.578
  May 10 20:10:36.132: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9670" for this suite. @ 05/10/24 20:10:36.141
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
• [4.158 seconds]
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:194

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:36.164
  May 10 20:10:36.164: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename projected @ 05/10/24 20:10:36.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:36.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:36.197
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 20:10:36.202
  STEP: Saw pod success @ 05/10/24 20:10:40.255
  May 10 20:10:40.261: INFO: Trying to get logs from node ip-172-31-237-27.eu-west-3.compute.internal pod downwardapi-volume-6d02d6f6-99a5-40f3-84c1-8bfec780e401 container client-container: <nil>
  STEP: delete the pod @ 05/10/24 20:10:40.275
  May 10 20:10:40.302: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9786" for this suite. @ 05/10/24 20:10:40.312
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [2.676 seconds]
[sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:78

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:40.342
  May 10 20:10:40.342: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename svcaccounts @ 05/10/24 20:10:40.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:40.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:40.375
  STEP: reading a file in the container @ 05/10/24 20:10:42.406
  May 10 20:10:42.407: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7784 pod-service-account-33eb3760-b142-437c-b298-a1870d1ca7c2 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 05/10/24 20:10:42.588
  May 10 20:10:42.588: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7784 pod-service-account-33eb3760-b142-437c-b298-a1870d1ca7c2 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 05/10/24 20:10:42.779
  May 10 20:10:42.779: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7784 pod-service-account-33eb3760-b142-437c-b298-a1870d1ca7c2 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  May 10 20:10:42.974: INFO: Got root ca configmap in namespace "svcaccounts-7784"
  May 10 20:10:42.985: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7784" for this suite. @ 05/10/24 20:10:42.998
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [4.101 seconds]
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:347

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:43.04
  May 10 20:10:43.040: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename security-context-test @ 05/10/24 20:10:43.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:43.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:43.066
  May 10 20:10:47.107: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9126" for this suite. @ 05/10/24 20:10:47.12
  << Timeline
------------------------------
• [4.139 seconds]
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:107

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:47.145
  May 10 20:10:47.145: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 20:10:47.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:47.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:47.189
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/10/24 20:10:47.193
  STEP: Saw pod success @ 05/10/24 20:10:51.218
  May 10 20:10:51.222: INFO: Trying to get logs from node ip-172-31-237-27.eu-west-3.compute.internal pod pod-e181fdc7-bde1-44c2-89d4-495410a58319 container test-container: <nil>
  STEP: delete the pod @ 05/10/24 20:10:51.238
  May 10 20:10:51.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1318" for this suite. @ 05/10/24 20:10:51.275
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [0.148 seconds]
[sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1781

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:51.294
  May 10 20:10:51.294: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 20:10:51.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:51.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:51.352
  STEP: starting the proxy server @ 05/10/24 20:10:51.356
  May 10 20:10:51.356: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1548064725 --namespace=kubectl-8302 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 05/10/24 20:10:51.405
  May 10 20:10:51.413: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8302" for this suite. @ 05/10/24 20:10:51.428
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
• [35.028 seconds]
[sig-apps] Job should delete a job [Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:485

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:33.057
  May 10 20:10:33.057: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename job @ 05/10/24 20:10:33.059
  E0510 20:10:33.079949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:33.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:33.087
  STEP: Creating a job @ 05/10/24 20:10:33.09
  STEP: Ensuring active pods == parallelism @ 05/10/24 20:10:33.099
  E0510 20:10:34.080618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:35.081331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 05/10/24 20:10:35.106
  STEP: deleting Job.batch foo in namespace job-9166, will wait for the garbage collector to delete the pods @ 05/10/24 20:10:35.106
  May 10 20:10:35.168: INFO: Deleting Job.batch foo took: 7.644015ms
  May 10 20:10:35.269: INFO: Terminating Job.batch foo pods took: 100.609767ms
  E0510 20:10:36.082057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:37.082468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:38.083083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:39.083258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:40.083458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:41.084328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:42.084664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:43.085734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:44.085775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:45.086622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:46.087192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:47.087926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:48.088827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:49.089764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:50.090687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:51.091418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:52.091851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:53.092627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:54.093233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:55.094110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:56.094704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:57.095849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:58.096883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:59.097845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:00.097916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:01.098220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:02.098404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:03.099425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:04.100261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:05.101244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:06.101524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:07.101888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 05/10/24 20:11:08.069
  May 10 20:11:08.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9166" for this suite. @ 05/10/24 20:11:08.079
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [0.045 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:198

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:11:08.092
  May 10 20:11:08.092: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/10/24 20:11:08.092
  E0510 20:11:08.102353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:11:08.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:11:08.113
  STEP: fetching the /apis discovery document @ 05/10/24 20:11:08.117
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 05/10/24 20:11:08.118
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 05/10/24 20:11:08.118
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 05/10/24 20:11:08.118
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 05/10/24 20:11:08.119
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 05/10/24 20:11:08.119
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 05/10/24 20:11:08.12
  May 10 20:11:08.120: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5317" for this suite. @ 05/10/24 20:11:08.126
  << Timeline
------------------------------
SSSS
------------------------------
• [4.146 seconds]
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:11:08.141
  May 10 20:11:08.141: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename secrets @ 05/10/24 20:11:08.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:11:08.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:11:08.164
  STEP: Creating secret with name secret-test-map-3b67b9cc-2516-4df8-9c0d-fabc42296709 @ 05/10/24 20:11:08.172
  STEP: Creating a pod to test consume secrets @ 05/10/24 20:11:08.179
  E0510 20:11:09.102822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:10.102911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:11.103363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:12.104054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 20:11:12.216
  May 10 20:11:12.222: INFO: Trying to get logs from node ip-172-31-238-69.eu-west-3.compute.internal pod pod-secrets-1ee2e5be-39e8-47d8-8285-9df1d86be4e3 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 20:11:12.238
  May 10 20:11:12.269: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3399" for this suite. @ 05/10/24 20:11:12.278
  << Timeline
------------------------------
SSSSSS
------------------------------
• [243.467 seconds]
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:08:02.081
  May 10 20:08:02.081: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename container-probe @ 05/10/24 20:08:02.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:08:02.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:08:02.304
  STEP: Creating pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459 @ 05/10/24 20:08:02.314
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/10/24 20:08:04.364
  May 10 20:08:04.371: INFO: Initial restart count of pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 is 0
  May 10 20:08:04.380: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:08:06.396: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:08:08.411: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:08:10.421: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:08:12.429: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:08:14.435: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:08:16.444: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:08:18.452: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:08:20.462: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:08:22.468: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:08:24.478: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:08:26.484: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:08:28.491: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:08:30.501: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:08:32.507: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:08:34.519: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:08:36.528: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:08:38.535: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:08:40.556: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:08:42.565: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:08:44.571: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:08:46.584: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:08:48.602: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:08:50.609: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:08:52.616: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:08:54.623: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:08:56.632: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:08:58.642: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:09:00.649: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:09:02.655: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:09:04.663: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:09:06.670: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:09:08.677: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:09:10.687: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:09:12.699: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:09:14.710: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:09:16.716: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:09:18.731: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:09:20.738: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:09:22.746: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:09:24.751: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:09:26.758: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:09:28.764: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:09:30.774: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:09:32.780: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:09:34.787: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:09:36.794: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:09:38.803: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:09:40.809: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:09:42.815: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:09:44.827: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:09:46.834: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:09:48.847: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:09:50.854: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:09:52.860: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:09:54.867: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:09:56.873: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:09:58.881: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:10:00.888: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:10:02.895: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:10:04.902: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:10:06.937: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:10:08.946: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:10:10.953: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:10:12.965: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:10:14.981: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:10:16.992: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:10:19.002: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:10:21.019: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:10:23.026: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:10:25.034: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:10:27.047: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:10:29.057: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:10:31.080: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:10:33.088: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:10:35.095: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:10:37.105: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:10:39.112: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:10:41.118: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:10:43.131: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:10:45.139: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:10:47.156: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:10:49.163: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:10:51.173: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:10:53.179: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:10:55.187: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:10:57.194: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:10:59.201: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:11:01.214: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:11:03.222: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:11:05.228: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:11:07.236: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:11:09.244: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:11:11.254: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:11:13.278: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:11:15.285: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:11:17.296: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:11:19.302: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:11:21.308: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:11:23.323: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:11:25.331: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:11:27.340: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:11:29.348: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:11:31.356: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:11:33.363: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:11:35.369: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:11:37.375: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:11:39.383: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:11:41.398: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:11:43.406: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:11:45.414: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:11:47.422: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:11:49.429: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:11:51.436: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:11:53.443: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:11:55.451: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:11:57.459: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:11:59.467: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:12:01.476: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:12:03.483: INFO: Get pod test-grpc-193aa5d1-48bc-46de-a769-9e3605e4bdd3 in namespace container-probe-7459
  May 10 20:12:05.483: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/10/24 20:12:05.497
  STEP: Destroying namespace "container-probe-7459" for this suite. @ 05/10/24 20:12:05.534
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [6.181 seconds]
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:124

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:12:05.605
  May 10 20:12:05.605: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename projected @ 05/10/24 20:12:05.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:12:05.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:12:05.632
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-6c92115f-baf5-43fc-9b36-a61f04f1be47 @ 05/10/24 20:12:05.645
  STEP: Creating the pod @ 05/10/24 20:12:05.653
  STEP: Updating configmap projected-configmap-test-upd-6c92115f-baf5-43fc-9b36-a61f04f1be47 @ 05/10/24 20:12:07.712
  STEP: waiting to observe update in volume @ 05/10/24 20:12:07.72
  May 10 20:12:11.759: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5593" for this suite. @ 05/10/24 20:12:11.768
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.222 seconds]
[sig-node] Lease lease API should be available [Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:72

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:12:11.816
  May 10 20:12:11.816: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename lease-test @ 05/10/24 20:12:11.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:12:11.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:12:11.854
  May 10 20:12:12.015: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-8848" for this suite. @ 05/10/24 20:12:12.024
  << Timeline
------------------------------
SSSSSS
------------------------------
• [2.811 seconds]
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:12:12.049
  May 10 20:12:12.049: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename init-container @ 05/10/24 20:12:12.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:12:12.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:12:12.114
  STEP: creating the pod @ 05/10/24 20:12:12.119
  May 10 20:12:12.119: INFO: PodSpec: initContainers in spec.initContainers
  May 10 20:12:14.830: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4731" for this suite. @ 05/10/24 20:12:14.846
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
• [6.401 seconds]
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:12:14.874
  May 10 20:12:14.874: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename pods @ 05/10/24 20:12:14.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:12:14.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:12:14.933
  STEP: Saw pod success @ 05/10/24 20:12:21.193
  May 10 20:12:21.198: INFO: Trying to get logs from node ip-172-31-238-69.eu-west-3.compute.internal pod client-envvars-f312a3ac-4327-4b26-b100-f463caee4f0f container env3cont: <nil>
  STEP: delete the pod @ 05/10/24 20:12:21.225
  May 10 20:12:21.253: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8764" for this suite. @ 05/10/24 20:12:21.262
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.158 seconds]
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:177

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:12:21.292
  May 10 20:12:21.292: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 20:12:21.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:12:21.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:12:21.334
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/10/24 20:12:21.339
  STEP: Saw pod success @ 05/10/24 20:12:25.379
  May 10 20:12:25.389: INFO: Trying to get logs from node ip-172-31-238-69.eu-west-3.compute.internal pod pod-1989da9b-3325-4888-b77a-2922afd8efbf container test-container: <nil>
  STEP: delete the pod @ 05/10/24 20:12:25.405
  May 10 20:12:25.428: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5940" for this suite. @ 05/10/24 20:12:25.438
  << Timeline
------------------------------
SSSS
------------------------------
• [11.133 seconds]
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:395

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:12:25.457
  May 10 20:12:25.457: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 20:12:25.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:12:25.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:12:25.486
  STEP: Counting existing ResourceQuota @ 05/10/24 20:12:25.49
  STEP: Creating a ResourceQuota @ 05/10/24 20:12:30.502
  STEP: Ensuring resource quota status is calculated @ 05/10/24 20:12:30.51
  STEP: Creating a ReplicationController @ 05/10/24 20:12:32.522
  STEP: Ensuring resource quota status captures replication controller creation @ 05/10/24 20:12:32.541
  STEP: Deleting a ReplicationController @ 05/10/24 20:12:34.546
  STEP: Ensuring resource quota status released usage @ 05/10/24 20:12:34.56
  May 10 20:12:36.567: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-497" for this suite. @ 05/10/24 20:12:36.577
  << Timeline
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
• [0.164 seconds]
[sig-network] Services should test the lifecycle of an Endpoint [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3142

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:12:36.605
  May 10 20:12:36.605: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename services @ 05/10/24 20:12:36.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:12:36.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:12:36.642
  STEP: creating an Endpoint @ 05/10/24 20:12:36.657
  STEP: waiting for available Endpoint @ 05/10/24 20:12:36.666
  STEP: listing all Endpoints @ 05/10/24 20:12:36.667
  STEP: updating the Endpoint @ 05/10/24 20:12:36.675
  STEP: fetching the Endpoint @ 05/10/24 20:12:36.689
  STEP: patching the Endpoint @ 05/10/24 20:12:36.694
  STEP: fetching the Endpoint @ 05/10/24 20:12:36.708
  STEP: deleting the Endpoint by Collection @ 05/10/24 20:12:36.714
  STEP: waiting for Endpoint deletion @ 05/10/24 20:12:36.733
  STEP: fetching the Endpoint @ 05/10/24 20:12:36.735
  May 10 20:12:36.742: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5463" for this suite. @ 05/10/24 20:12:36.751
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
• [0.086 seconds]
[sig-node] PodTemplates should replace a pod template [Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:176

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:12:36.782
  May 10 20:12:36.782: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename podtemplate @ 05/10/24 20:12:36.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:12:36.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:12:36.813
  STEP: Create a pod template @ 05/10/24 20:12:36.817
  STEP: Replace a pod template @ 05/10/24 20:12:36.827
  May 10 20:12:36.842: INFO: Found updated podtemplate annotation: "true"

  May 10 20:12:36.842: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7410" for this suite. @ 05/10/24 20:12:36.852
  << Timeline
------------------------------
SSSSSSSSSSSSSS
------------------------------
• [0.146 seconds]
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:272

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:12:36.878
  May 10 20:12:36.878: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename namespaces @ 05/10/24 20:12:36.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:12:36.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:12:36.91
  STEP: creating a Namespace @ 05/10/24 20:12:36.916
  STEP: patching the Namespace @ 05/10/24 20:12:36.955
  STEP: get the Namespace and ensuring it has the label @ 05/10/24 20:12:36.965
  May 10 20:12:36.978: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2414" for this suite. @ 05/10/24 20:12:36.987
  STEP: Destroying namespace "nspatchtest-0e90a803-365f-4ad7-b485-80f2f814d688-3646" for this suite. @ 05/10/24 20:12:37.001
  << Timeline
------------------------------
SSSS
------------------------------
• [2.319 seconds]
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:12:37.03
  May 10 20:12:37.030: INFO: >>> kubeConfig: /tmp/kubeconfig-374089931
  STEP: Building a namespace api object, basename proxy @ 05/10/24 20:12:37.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:12:37.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:12:37.075
  May 10 20:12:37.081: INFO: Creating pod...
  May 10 20:12:39.119: INFO: Creating service...
  May 10 20:12:39.170: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6617/pods/agnhost/proxy/some/path/with/DELETE
  May 10 20:12:39.185: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  May 10 20:12:39.185: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6617/pods/agnhost/proxy/some/path/with/GET
  May 10 20:12:39.194: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  May 10 20:12:39.194: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6617/pods/agnhost/proxy/some/path/with/HEAD
  May 10 20:12:39.199: INFO: http.Client request:HEAD | StatusCode:200
  May 10 20:12:39.199: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6617/pods/agnhost/proxy/some/path/with/OPTIONS
  May 10 20:12:39.214: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  May 10 20:12:39.214: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6617/pods/agnhost/proxy/some/path/with/PATCH
  May 10 20:12:39.221: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  May 10 20:12:39.221: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6617/pods/agnhost/proxy/some/path/with/POST
  May 10 20:12:39.230: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  May 10 20:12:39.230: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6617/pods/agnhost/proxy/some/path/with/PUT
  May 10 20:12:39.236: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  May 10 20:12:39.236: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6617/services/test-service/proxy/some/path/with/DELETE
  May 10 20:12:39.246: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  May 10 20:12:39.246: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6617/services/test-service/proxy/some/path/with/GET
  May 10 20:12:39.256: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  May 10 20:12:39.256: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6617/services/test-service/proxy/some/path/with/HEAD
  May 10 20:12:39.282: INFO: http.Client request:HEAD | StatusCode:200
  May 10 20:12:39.282: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6617/services/test-service/proxy/some/path/with/OPTIONS
  May 10 20:12:39.292: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  May 10 20:12:39.292: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6617/services/test-service/proxy/some/path/with/PATCH
  May 10 20:12:39.302: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  May 10 20:12:39.302: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6617/services/test-service/proxy/some/path/with/POST
  May 10 20:12:39.312: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  May 10 20:12:39.312: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6617/services/test-service/proxy/some/path/with/PUT
  May 10 20:12:39.322: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  May 10 20:12:39.322: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6617" for this suite. @ 05/10/24 20:12:39.333
  << Timeline
------------------------------
SS
------------------------------
[SynchronizedAfterSuite] PASSED [0.000 seconds]
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:88
------------------------------
• [242.983 seconds]
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:11:12.296
  May 10 20:11:12.296: INFO: >>> kubeConfig: /tmp/kubeconfig-321879523
  STEP: Building a namespace api object, basename container-probe @ 05/10/24 20:11:12.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:11:12.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:11:12.319
  STEP: Creating pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687 @ 05/10/24 20:11:12.323
  E0510 20:11:13.104937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:14.105505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/10/24 20:11:14.367
  May 10 20:11:14.373: INFO: Initial restart count of pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 is 0
  May 10 20:11:14.378: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:11:15.106443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:16.106723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:11:16.386: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:11:17.107394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:18.108194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:11:18.404: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:11:19.108222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:20.109097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:11:20.410: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:11:21.109994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:22.110884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:11:22.415: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:11:23.111907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:24.112763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:11:24.421: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:11:25.113167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:26.113841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:11:26.427: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:11:27.114862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:28.115278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:11:28.434: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:11:29.115320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:30.116290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:11:30.440: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:11:31.116709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:32.117324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:11:32.445: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:11:33.117868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:34.118350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:11:34.450: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:11:35.118811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:36.118918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:11:36.461: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:11:37.119335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:38.120099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:11:38.468: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:11:39.120343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:40.121276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:11:40.473: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:11:41.121628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:42.122308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:11:42.478: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:11:43.123159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:44.123216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:11:44.483: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:11:45.123765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:46.123791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:11:46.492: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:11:47.124270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:48.124825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:11:48.496: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:11:49.125241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:50.126042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:11:50.517: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:11:51.126629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:52.127312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:11:52.522: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:11:53.127609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:54.128569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:11:54.527: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:11:55.129400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:56.130341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:11:56.532: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:11:57.131297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:58.131726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:11:58.539: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:11:59.132382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:00.133471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:12:00.544: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:12:01.133945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:02.134427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:12:02.549: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:12:03.134992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:04.135027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:12:04.560: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:12:05.135375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:06.135787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:12:06.566: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:12:07.135830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:08.136850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:12:08.577: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:12:09.137362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:10.138315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:12:10.583: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:12:11.138370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:12.139187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:12:12.587: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:12:13.139886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:14.140378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:12:14.597: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:12:15.141381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:16.141556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:12:16.605: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:12:17.142146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:18.142847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:12:18.613: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:12:19.143523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:20.144123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:12:20.621: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:12:21.145119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:22.146157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:12:22.631: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:12:23.146765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:24.147362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:12:24.638: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:12:25.147912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:26.148960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:12:26.648: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:12:27.149948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:28.150370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:12:28.658: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:12:29.151339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:30.152118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:12:30.670: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:12:31.152468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:32.153329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:12:32.675: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:12:33.153864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:34.154332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:12:34.681: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:12:35.154628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:36.155663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:12:36.689: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:12:37.155976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:38.156752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:12:38.705: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:12:39.157746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:40.157848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:12:40.713: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:12:41.158837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:42.159335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:12:42.718: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:12:43.159762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:44.160549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:12:44.726: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:12:45.161377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:46.162423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:12:46.734: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:12:47.163077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:48.163114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:12:48.740: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:12:49.163183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:50.163914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:12:50.745: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:12:51.164272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:52.164356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:12:52.750: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:12:53.164832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:54.165407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:12:54.754: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:12:55.166473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:56.166586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:12:56.763: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:12:57.166879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:58.167470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:12:58.771: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:12:59.167819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:13:00.168773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:13:00.775: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:13:01.169097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:13:02.169186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:13:02.779: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:13:03.169378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:13:04.170428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:13:04.786: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:13:05.171205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:13:06.171700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:13:06.792: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:13:07.172123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:13:08.172869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:13:08.797: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:13:09.173741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:13:10.174449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:13:10.802: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:13:11.175412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:13:12.175553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:13:12.810: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:13:13.175885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:13:14.176963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:13:14.820: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:13:15.177128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:13:16.177722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:13:16.824: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:13:17.178740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:13:18.179450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:13:18.842: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:13:19.179852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:13:20.180379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:13:20.848: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:13:21.180878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:13:22.180977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:13:22.852: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:13:23.181851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:13:24.182900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:13:24.857: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:13:25.182961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:13:26.183457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:13:26.866: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:13:27.184548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:13:28.185252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:13:28.872: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:13:29.186166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:13:30.186394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:13:30.876: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:13:31.186745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:13:32.187371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:13:32.882: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:13:33.187538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:13:34.188398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:13:34.887: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:13:35.189382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:13:36.189816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:13:36.894: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:13:37.190769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:13:38.191448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:13:38.908: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:13:39.191510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:13:40.192133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:13:40.913: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:13:41.192748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:13:42.193497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:13:42.918: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:13:43.194116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:13:44.195117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:13:44.922: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:13:45.195472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:13:46.195693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:13:46.926: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:13:47.196459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:13:48.197435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:13:48.933: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:13:49.198492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:13:50.199495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:13:50.938: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:13:51.200208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:13:52.200389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:13:52.943: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:13:53.200878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:13:54.201454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:13:54.950: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:13:55.202153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:13:56.202866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:13:56.955: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:13:57.203505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:13:58.204565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:13:58.960: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:13:59.207716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:00.205714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:00.965: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:14:01.206176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:02.206508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:02.971: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:14:03.206885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:04.207549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:04.982: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:14:05.208392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:06.208892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:06.987: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:14:07.209517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:08.210567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:09.000: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:14:09.211160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:10.211272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:11.005: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:14:11.211393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:12.211447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:13.013: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:14:13.211907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:14.211957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:15.033: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:14:15.212426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:16.212909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:17.039: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:14:17.213516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:18.214046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:19.047: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:14:19.214905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:20.215661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:21.052: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:14:21.216570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:22.217560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:23.057: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:14:23.217662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:24.218624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:25.062: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:14:25.219493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:26.219708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:27.066: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:14:27.220209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:28.220407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:29.071: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:14:29.220927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:30.221236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:31.076: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:14:31.221628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:32.222020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:33.081: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:14:33.222162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:34.222939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:35.086: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:14:35.223877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:36.224009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:37.100: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:14:37.224938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:38.225936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:39.106: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:14:39.226562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:40.226811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:41.113: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:14:41.227545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:42.228303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:43.118: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:14:43.228834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:44.229499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:45.123: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:14:45.229971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:46.230844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:47.131: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:14:47.231744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:48.232567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:49.136: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:14:49.233021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:50.234057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:51.141: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:14:51.234960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:52.235039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:53.146: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:14:53.235146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:54.236125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:55.151: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:14:55.236714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:56.236841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:57.156: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:14:57.237745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:58.237786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:59.171: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:14:59.238851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:00.239833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:15:01.187: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:15:01.239893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:02.239932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:15:03.193: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:15:03.240916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:04.241529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:15:05.201: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:15:05.241778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:06.243463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:15:07.206: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:15:07.244000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:08.244983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:15:09.212: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:15:09.245743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:10.246853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:15:11.217: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:15:11.247107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:12.248111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:15:13.222: INFO: Get pod liveness-4f75e1c2-c8c0-45da-aa4e-3aca43df65f1 in namespace container-probe-7687
  E0510 20:15:13.248892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:14.249840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:15:15.223: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 05/10/24 20:15:15.239
  E0510 20:15:15.250811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "container-probe-7687" for this suite. @ 05/10/24 20:15:15.271
  << Timeline
------------------------------
[SynchronizedAfterSuite] PASSED [0.000 seconds]
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:88
------------------------------
• [300.093 seconds]
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:51.457
  May 10 20:10:51.457: INFO: >>> kubeConfig: /tmp/kubeconfig-1548064725
  STEP: Building a namespace api object, basename cronjob @ 05/10/24 20:10:51.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:51.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:51.49
  STEP: Creating a suspended cronjob @ 05/10/24 20:10:51.494
  STEP: Ensuring no jobs are scheduled @ 05/10/24 20:10:51.501
  STEP: Ensuring no job exists by listing jobs explicitly @ 05/10/24 20:15:51.515
  STEP: Removing cronjob @ 05/10/24 20:15:51.521
  May 10 20:15:51.533: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3406" for this suite. @ 05/10/24 20:15:51.541
  << Timeline
------------------------------
[SynchronizedAfterSuite] PASSED [0.003 seconds]
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:88

  Timeline >>
  May 10 20:15:51.558: INFO: Running AfterSuite actions on node 1
  May 10 20:15:51.558: INFO: Skipping dumping logs from cluster
  << Timeline
------------------------------
[ReportAfterSuite] PASSED [0.111 seconds]
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:157
------------------------------
[ReportAfterSuite] PASSED [0.125 seconds]
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:585
------------------------------

Ran 380 of 7389 Specs in 2085.541 seconds
SUCCESS! -- 380 Passed | 0 Failed | 0 Pending | 7009 Skipped


Ginkgo ran 1 suite in 34m46.238016048s
Test Suite Passed
